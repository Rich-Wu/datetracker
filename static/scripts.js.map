{"version":3,"file":"scripts.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAC8H;AACtC;;AAExF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,UAAU,+DAAa;AAC/B;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,UAAU;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,UAAU;AAC5C;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,oCAAoC,UAAU;AAC9C;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,KAAK,mBAAmB;AACxB,KAAK;AACL;;AAEA;AACA,oBAAoB,gDAAU;AAC9B;AACA;AACA,oBAAoB,kDAAY;AAChC;AACA;AACA,oBAAoB,gDAAU;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAM,CAAC,yDAAO,iBAAiB;AAC9C,gBAAgB,yDAAO,gBAAgB,uCAAU;;AAEjD;AACA,aAAa,yDAAO;AACpB,cAAc,yDAAO;AACrB;AACA,uBAAuB,yDAAO;AAC9B,mBAAmB,yDAAO;AAC1B,oBAAoB,yDAAO;AAC3B,mBAAmB,yDAAO;AAC1B,aAAa,yDAAO;AACpB,YAAY,yDAAO;AACnB;AACA;AACA;AACA;AACA,cAAc,yDAAO;AACrB,eAAe,yDAAO;AACtB;AACA,eAAe,2DAAS,CAAC,yDAAO;AAChC;AACA,gBAAgB,yDAAO;AACvB;AACA,iBAAiB,yDAAO;AACxB,sBAAsB,yDAAO;AAC7B,uBAAuB,yDAAO;AAC9B,uBAAuB,yDAAO;AAC9B,uBAAuB,yDAAO;AAC9B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,yDAAO;;AAEzB;AACA;AACA,cAAc,gEAAc,CAAC,0DAAQ;AACrC,cAAc,+DAAa;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,gEAAgE;AAChE,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,qBAAqB;AACpC,eAAe,8BAA8B;AAC7C,eAAe,uCAAuC;AACtD,eAAe,8BAA8B;AAC7C;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B,QAAQ;AACtC;;AAEA,oBAAoB,uBAAuB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,UAAU;AAC9C;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,oCAAoC,0CAA0C;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,UAAU;AAClD,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA,sCAAsC,UAAU;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,+DAAa;AACnB;AACA;;AAEA;AACA;AACA,MAAM,0DAAQ;AACd,SAAS,+DAAa;AACtB;AACA,MAAM,UAAU,+DAAa;AAC7B;AACA,MAAM;AACN;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,uDAAK,GAAG;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,uDAAK,GAAG;AAC7B;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA,IAAI,sDAAI,uBAAuB;AAC/B;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG,IAAI;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,0DAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,iCAAiC,IAAI,eAAe,kBAAkB;AACtE,iCAAiC;AACjC,iCAAiC;AACjC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC,UAAU;AAClD;AACA;;AAEA;AACA,iDAAiD,UAAU;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI,uDAAK;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA,0CAA0C,UAAU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A;AACA;AACA;;AAEA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,SAAS;AAC3C,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS;AACjD,eAAe,IAAI,IAAI,IAAI,IAAI,IAAI;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,IAAI;AACJ,sBAAsB,uBAAukM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjkB3L,MAAMA,QAAAA,CAAAA;IACXC,WAAc;QACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAAA,EAAAA,CAAAA;QACnB,IAAI,CAACC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACC,SAAS,GAAGC,SAAAA,CAAAA;AACnB;AAKAC,CAAAA,OAAAA,CAAQC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;AAChC,cAAMC,SAAYH,GAAAA,KAAAA,CAAMI,SAAS,CAACF,IAAK;QACvC,MAAMG,QAAAA,GAAWL,MAAMM,QAAQ;AAE/BH,QAAAA,SAAAA,CAAUI,OAAO,CAACC,CAAAA,EAAAA,GAAMA,EAAG;AACzBT,gBAAAA,KAAAA;AACAU,gBAAAA,OAAAA,EAAST,MAAMS,OAAO;AACtBJ,gBAAAA,QAAAA;AACAK,gBAAAA,WAAAA,EAAaC,KAAKC,GAAG,CAACX,IAAOD,GAAAA,KAAAA,CAAMa,KAAK,EAAER,QAAAA,CAAAA;AAC5C;AACF;AAIA,CACAS,QAAW;QACT,IAAI,IAAI,CAACtB,QAAQ,EAAE;AACjB;SACD;QACD,IAAI,CAACG,QAAQ,GAAG,IAAI;AAEpB,YAAI,CAACH,QAAQ,GAAGuB,yDAAgBA,CAACC,IAAI,CAACC,QAAQ,IAAM;AAClD,gBAAI,CAACC,OAAO;YACZ,IAAI,CAAC1B,QAAQ,GAAG,IAAI;YAEpB,IAAI,IAAI,CAACG,QAAQ,EAAE;AACjB,oBAAI,CAACmB,QAAQ;aACd;AACH;AACF;AAIA,CACAI,OAAQjB,CAAAA,IAAAA,GAAOkB,IAAKC,CAAAA,GAAG,EAAE,EAAE;AACzB,YAAIC,SAAY;AAEhB,YAAI,CAAC5B,OAAO,CAACc,OAAO,CAAC,CAACP,OAAOD,KAAU;YACrC,IAAI,CAACC,MAAMsB,OAAO,IAAI,CAACtB,KAAMuB,CAAAA,KAAK,CAACC,MAAM,EAAE;AACzC;aACD;YACD,MAAMD,KAAAA,GAAQvB,MAAMuB,KAAK;YACzB,IAAIE,CAAAA,GAAIF,KAAMC,CAAAA,MAAM,GAAG;AACvB,gBAAIE,OAAO,KAAK;YAChB,IAAIC,IAAAA,CAAAA;YAEJ,MAAOF,CAAAA,IAAK,CAAG,IAAEA,CAAG;gBAClBE,IAAOJ,GAAAA,KAAK,CAACE,CAAE;gBAEf,IAAIE,IAAAA,CAAKC,OAAO,EAAE;AAChB,wBAAID,IAAKE,CAAAA,MAAM,GAAG7B,KAAAA,CAAMM,QAAQ,EAAE;wBAGhCN,KAAMM,CAAAA,QAAQ,GAAGqB,IAAAA,CAAKE,MAAM;qBAC7B;AACDF,oBAAAA,IAAAA,CAAKG,IAAI,CAAC7B,IAAAA,CAAAA,CAAAA;AACVyB,oBAAAA,IAAAA,GAAO,IAAI;iBACN;oBAGLH,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACA,KAAMC,CAAAA,MAAM,GAAG,CAAE;AAClCD,oBAAAA,KAAAA,CAAMQ,GAAG;iBACV;AACH;AAEA,gBAAIL,IAAM;AACR3B,gBAAAA,KAAAA,CAAM2B,IAAI;AACV,oBAAI,CAAC5B,OAAO,CAACC,KAAAA,EAAOC,OAAOC,IAAM;aAClC;YAED,IAAI,CAACsB,KAAMC,CAAAA,MAAM,EAAE;gBACjBxB,KAAMsB,CAAAA,OAAO,GAAG,KAAK;AACrB,oBAAI,CAACxB,OAAO,CAACC,KAAAA,EAAOC,OAAOC,IAAM;gBACjCD,KAAMS,CAAAA,OAAO,GAAG,KAAK;aACtB;AAEDY,YAAAA,SAAAA,IAAaE,MAAMC,MAAM;AAC3B;QAEA,IAAI,CAAC5B,SAAS,GAAGK,IAAAA,CAAAA;AAEjB,YAAIoB,cAAc,CAAG;YACnB,IAAI,CAAC1B,QAAQ,GAAG,KAAK;SACtB;AACH;AAKAqC,CAAAA,SAAAA,CAAUjC,KAAK,EAAE;QACf,MAAMkC,MAAAA,GAAS,IAAI,CAACxC,OAAO;QAC3B,IAAIO,KAAAA,GAAQiC,MAAOC,CAAAA,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;AACvB,YAAI,CAACC,KAAO;YACVA,KAAQ;AACNsB,gBAAAA,OAAAA,EAAS,KAAK;AACdb,gBAAAA,OAAAA,EAAS,IAAI;AACbc,gBAAAA,KAAAA,EAAO,EAAE;gBACTnB,SAAW;AACT+B,oBAAAA,QAAAA,EAAU,EAAE;AACZC,oBAAAA,QAAAA,EAAU,EAAE;AACd;AACF;YACAH,MAAOI,CAAAA,GAAG,CAACtC,KAAOC,EAAAA,KAAAA,CAAAA,CAAAA;SACnB;QACD,OAAOA,KAAAA,CAAAA;AACT;AAMA,CACAsC,OAAOvC,KAAK,EAAEwC,KAAK,EAAEC,EAAE,EAAE;QACvB,IAAI,CAACR,SAAS,CAACjC,KAAAA,CAAAA,CAAOK,SAAS,CAACmC,KAAAA,CAAM,CAACE,IAAI,CAACD,EAAAA,CAAAA,CAAAA;AAC9C;AAMA,CACAE,GAAI3C,CAAAA,KAAK,EAAEwB,KAAK,EAAE;AAChB,YAAI,CAACA,KAAAA,IAAS,CAACA,KAAAA,CAAMC,MAAM,EAAE;AAC3B;SACD;AACD,YAAI,CAACQ,SAAS,CAACjC,OAAOwB,KAAK,CAACkB,IAAI,CAAIlB,GAAAA,KAAAA,CAAAA,CAAAA;AACtC;AAMAoB,CAAAA,GAAAA,CAAI5C,KAAK,EAAE;QACT,OAAO,IAAI,CAACiC,SAAS,CAACjC,OAAOwB,KAAK,CAACC,MAAM,GAAG;AAC9C;AAMAX,CAAAA,KAAAA,CAAMd,KAAK,EAAE;AACX,cAAMC,QAAQ,IAAI,CAACP,OAAO,CAACyC,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;AAC/B,YAAI,CAACC,KAAO;AACV;SACD;QACDA,KAAMsB,CAAAA,OAAO,GAAG,IAAI;QACpBtB,KAAMa,CAAAA,KAAK,GAAGM,IAAAA,CAAKC,GAAG;AACtBpB,QAAAA,KAAAA,CAAMM,QAAQ,GAAGN,KAAAA,CAAMuB,KAAK,CAACqB,MAAM,CAAC,CAACC,GAAKC,EAAAA,GAAAA,GAAQnC,KAAKoC,GAAG,CAACF,GAAKC,EAAAA,GAAAA,CAAIE,SAAS,CAAG;AAChF,YAAI,CAAClC,QAAQ;AACf;AAEAQ,IAAAA,OAAAA,CAAQvB,KAAK,EAAE;AACb,YAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;AAClB,mBAAO,KAAK;SACb;AACD,cAAMK,QAAQ,IAAI,CAACP,OAAO,CAACyC,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QAC/B,IAAI,CAACC,KAAS,KAACA,KAAMsB,CAAAA,OAAO,IAAI,CAACtB,KAAMuB,CAAAA,KAAK,CAACC,MAAM,EAAE;AACnD,mBAAO,KAAK;SACb;AACD,eAAO,IAAI;AACb;AAMAyB,CAAAA,IAAAA,CAAKlD,KAAK,EAAE;AACV,cAAMC,QAAQ,IAAI,CAACP,OAAO,CAACyC,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;AAC/B,YAAI,CAACC,KAAS,KAACA,MAAMuB,KAAK,CAACC,MAAM,EAAE;AACjC;SACD;QACD,MAAMD,KAAAA,GAAQvB,MAAMuB,KAAK;QACzB,IAAIE,CAAAA,GAAIF,KAAMC,CAAAA,MAAM,GAAG;QAEvB,MAAOC,CAAAA,IAAK,CAAG,IAAEA,CAAG;YAClBF,KAAK,CAACE,CAAE,EAACyB,MAAM;AACjB;QACAlD,KAAMuB,CAAAA,KAAK,GAAG,EAAE;AAChB,YAAI,CAACzB,OAAO,CAACC,OAAOC,KAAOmB,EAAAA,IAAAA,CAAKC,GAAG,EAAI;AACzC;AAMA+B,CAAAA,MAAAA,CAAOpD,KAAK,EAAE;AACZ,eAAO,IAAI,CAACN,OAAO,CAAC2D,MAAM,CAACrD,KAAAA,CAAAA,CAAAA;AAC7B;AACF,CAAC;AAGD,eAAe,gBAAgB,IAAIT,QAAW;;ACjN9C,MAAM+D,WAAc;AACpB,MAAMC,aAAgB;AACpBC,IAAAA,OAAAA,CAAAA,CAAQC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;QACxB,OAAOA,MAAAA,GAAS,GAAMD,GAAAA,EAAAA,GAAKD,IAAI;AACjC;AAKC,CACDG,OAAMH,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;QACtB,MAAME,EAAAA,GAAKC,6DAAAA,CAAaL,IAAQH,IAAAA,WAAAA,CAAAA,CAAAA;AAChC,cAAMS,EAAKF,GAAAA,EAAAA,CAAGG,KAAK,IAAIF,6DAAAA,CAAaJ,EAAMJ,IAAAA,WAAAA,CAAAA,CAAAA;QAC1C,OAAOS,EAAAA,IAAMA,EAAGC,CAAAA,KAAK,GACjBD,EAAAA,CAAGE,GAAG,CAACJ,EAAIF,EAAAA,MAAAA,CAAAA,CAAQO,SAAS,KAC5BR,EAAE;AACR;AACAS,IAAAA,MAAAA,CAAAA,CAAOV,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;AACvB,eAAOF,IAAO,GAACC,CAAAA,EAAAA,GAAKD,IAAG,IAAKE,MAAAA,CAAAA;AAC9B;AACF;AAEe,MAAMS,SAAAA,CAAAA;AACnB5E,IAAAA,WAAAA,CAAY6E,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEb,EAAE,CAAE;QACjC,MAAMc,YAAAA,GAAeF,MAAM,CAACC,IAAK;AAEjCb,QAAAA,EAAAA,GAAKe,6DAAQ;AAACJ,YAAAA,GAAAA,CAAIX,EAAE;AAAEA,YAAAA,EAAAA;AAAIc,YAAAA,YAAAA;AAAcH,YAAAA,GAAAA,CAAIZ,IAAI;AAAC;AACjD,cAAMA,OAAOgB,6DAAQ;AAACJ,YAAAA,GAAAA,CAAIZ,IAAI;AAAEe,YAAAA,YAAAA;AAAcd,YAAAA,EAAAA;AAAG;QAEjD,IAAI,CAAC7B,OAAO,GAAG,IAAI;AACnB,YAAI,CAAC6C,GAAG,GAAGL,GAAAA,CAAI5D,EAAE,IAAI8C,aAAa,CAACc,GAAIlE,CAAAA,IAAI,IAAI,OAAOsD,IAAK;QAC3D,IAAI,CAACkB,OAAO,GAAGC,yDAAO,CAACP,IAAIQ,MAAM,CAAC,IAAID,yDAAAA,CAAQE,MAAM;AACpD,YAAI,CAACC,MAAM,GAAGnE,IAAAA,CAAKoE,KAAK,CAAC5D,IAAKC,CAAAA,GAAG,EAAMgD,IAAAA,GAAIY,CAAAA,KAAK,IAAI;QACpD,IAAI,CAAChC,SAAS,GAAG,IAAI,CAACnB,MAAM,GAAGlB,IAAKoE,CAAAA,KAAK,CAACX,GAAAA,CAAI9D,QAAQ;AACtD,YAAI,CAAC2E,KAAK,GAAG,CAAC,CAACb,IAAIc,IAAI;QACvB,IAAI,CAACC,OAAO,GAAGd,MAAAA,CAAAA;QACf,IAAI,CAACe,KAAK,GAAGd,IAAAA,CAAAA;QACb,IAAI,CAACe,KAAK,GAAG7B,IAAAA,CAAAA;QACb,IAAI,CAAC8B,GAAG,GAAG7B,EAAAA,CAAAA;QACX,IAAI,CAAC8B,SAAS,GAAG1F,SAAAA,CAAAA;AACnB;IAEA2F,MAAS;QACP,OAAO,IAAI,CAAC5D,OAAO;AACrB;AAEA6D,IAAAA,MAAAA,CAAOrB,GAAG,EAAEX,EAAE,EAAExD,IAAI,EAAE;QACpB,IAAI,IAAI,CAAC2B,OAAO,EAAE;YAChB,IAAI,CAAC9B,OAAO,CAAC,KAAK;YAElB,MAAMyE,YAAAA,GAAe,IAAI,CAACY,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC;AAC7C,kBAAMM,OAAUzF,GAAAA,IAAAA,GAAO,IAAI,CAAC6E,MAAM;AAClC,kBAAMa,MAAS,OAAI,CAAC3C,SAAS,GAAG0C,OAAAA,CAAAA;YAChC,IAAI,CAACZ,MAAM,GAAG7E,IAAAA,CAAAA;YACd,IAAI,CAAC+C,SAAS,GAAGrC,IAAKoE,CAAAA,KAAK,CAACpE,IAAAA,CAAKoC,GAAG,CAAC4C,MAAQvB,EAAAA,GAAAA,CAAI9D,QAAQ;YACzD,IAAI,CAACuB,MAAM,IAAI6D,OAAAA,CAAAA;AACf,gBAAI,CAACT,KAAK,GAAG,CAAC,CAACb,IAAIc,IAAI;YACvB,IAAI,CAACI,GAAG,GAAGd,6DAAQ;AAACJ,gBAAAA,GAAAA,CAAIX,EAAE;AAAEA,gBAAAA,EAAAA;AAAIc,gBAAAA,YAAAA;AAAcH,gBAAAA,GAAAA,CAAIZ,IAAI;AAAC;YACvD,IAAI,CAAC6B,KAAK,GAAGb,6DAAQ;AAACJ,gBAAAA,GAAAA,CAAIZ,IAAI;AAAEe,gBAAAA,YAAAA;AAAcd,gBAAAA,EAAAA;AAAG;SAClD;AACH;IAEAP,MAAS;QACP,IAAI,IAAI,CAACtB,OAAO,EAAE;AAEhB,gBAAI,CAACE,IAAI,CAACX,IAAAA,CAAKC,GAAG;YAClB,IAAI,CAACQ,OAAO,GAAG,KAAK;YACpB,IAAI,CAAC9B,OAAO,CAAC,KAAK;SACnB;AACH;AAEAgC,IAAAA,IAAAA,CAAK7B,IAAI,EAAE;AACT,cAAMyF,OAAUzF,GAAAA,IAAAA,GAAO,IAAI,CAAC6E,MAAM;QAClC,MAAMxE,QAAAA,GAAW,IAAI,CAAC0C,SAAS;QAC/B,MAAMsB,IAAAA,GAAO,IAAI,CAACc,KAAK;QACvB,MAAM5B,IAAAA,GAAO,IAAI,CAAC6B,KAAK;QACvB,MAAMH,IAAAA,GAAO,IAAI,CAACD,KAAK;QACvB,MAAMxB,EAAAA,GAAK,IAAI,CAAC6B,GAAG;QACnB,IAAI5B,MAAAA,CAAAA;QAEJ,IAAI,CAAC9B,OAAO,GAAG4B,IAAAA,KAASC,OAAOyB,IAAAA,IAASQ,UAAUpF,QAAQ;AAE1D,YAAI,CAAC,IAAI,CAACsB,OAAO,EAAE;AACjB,gBAAI,CAACuD,OAAO,CAACb,IAAAA,CAAK,GAAGb,EAAAA,CAAAA;YACrB,IAAI,CAAC3D,OAAO,CAAC,IAAI;AACjB;SACD;AAED,YAAI4F,UAAU,CAAG;AACf,gBAAI,CAACP,OAAO,CAACb,IAAAA,CAAK,GAAGd,IAAAA,CAAAA;AACrB;SACD;QAEDE,MAAS,GAACgC,UAAUpF,QAAY;AAChCoD,QAAAA,MAAAA,GAASwB,IAAQxB,IAAAA,MAAAA,GAAS,CAAI,OAAIA,SAASA,MAAM;QACjDA,MAAS,OAAI,CAACgB,OAAO,CAAC/D,IAAAA,CAAKC,GAAG,CAAC,CAAGD,EAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAGW,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA;QAE9C,IAAI,CAACyB,OAAO,CAACb,IAAK,IAAG,IAAI,CAACG,GAAG,CAACjB,IAAAA,EAAMC,EAAIC,EAAAA,MAAAA,CAAAA,CAAAA;AAC1C;IAEAkC,IAAO;QACL,MAAMC,QAAAA,GAAW,IAAI,CAACN,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAD;AACtD,eAAO,IAAIO,OAAAA,CAAQ,CAACC,GAAAA,EAAKC,GAAQ;AAC/BH,YAAAA,QAAAA,CAASpD,IAAI,CAAC;AAACsD,gBAAAA,GAAAA;AAAKC,gBAAAA,GAAAA;AAAG;AACzB;AACF;AAEAlG,IAAAA,OAAAA,CAAQmG,QAAQ,EAAE;QAChB,MAAMC,MAAAA,GAASD,QAAW,WAAQ,KAAK;AACvC,cAAMJ,QAAW,OAAI,CAACN,SAAS,IAAI,EAAE;AACrC,YAAK,IAAI9D,CAAI,MAAGA,IAAIoE,QAASrE,CAAAA,MAAM,EAAEC,CAAK;YACxCoE,QAAQ,CAACpE,CAAE,EAACyE,MAAO;AACrB;AACF;AACF;;ACjHe,MAAMC,UAAAA,CAAAA;IACnB5G,WAAYQ,CAAAA,KAAK,EAAEqG,MAAM,CAAE;QACzB,IAAI,CAACC,MAAM,GAAGtG,KAAAA,CAAAA;QACd,IAAI,CAACuG,WAAW,GAAG,IAAI5G,GAAAA,EAAAA,CAAAA;QACvB,IAAI,CAAC6G,SAAS,CAACH,MAAAA,CAAAA,CAAAA;AACjB;AAEAG,IAAAA,SAAAA,CAAUH,MAAM,EAAE;QAChB,IAAI,CAACI,6DAAQA,CAACJ,MAAS;AACrB;SACD;AAED,cAAMK,gBAAmBC,GAAAA,MAAAA,CAAOC,IAAI,CAACC,yDAAQA,CAACC,SAAS;QACvD,MAAMC,aAAAA,GAAgB,IAAI,CAACR,WAAW;AAEtCI,QAAAA,MAAAA,CAAOK,mBAAmB,CAACX,MAAAA,CAAAA,CAAQ7F,OAAO,CAACyG,CAAAA,GAAO;YAChD,MAAM5C,GAAAA,GAAMgC,MAAM,CAACY,GAAI;YACvB,IAAI,CAACR,6DAAQA,CAACpC,GAAM;AAClB;aACD;AACD,kBAAM6B,WAAW,EAAC;YAClB,KAAK,MAAMgB,UAAUR,gBAAkB;AACrCR,gBAAAA,QAAQ,CAACgB,MAAAA,CAAO,GAAG7C,GAAG,CAAC6C,MAAO;AAChC;AAECC,YAAAA,CAAAA,6DAAOA,CAAC9C,GAAI+C,CAAAA,UAAU,CAAK/C,IAAAA,GAAAA,CAAI+C,UAAU,IAAI;AAACH,gBAAAA,GAAAA;AAAI,aAAD,EAAGzG,OAAO,CAAC,CAAC+D,IAAS;AACrE,oBAAIA,SAAS0C,GAAO,KAACF,aAAcnE,CAAAA,GAAG,CAAC2B,IAAO;oBAC5CwC,aAAczE,CAAAA,GAAG,CAACiC,IAAM2B,EAAAA,QAAAA,CAAAA,CAAAA;iBACzB;AACH;AACF;AACF;AAKA,CACAmB,eAAgB/C,CAAAA,MAAM,EAAEgD,MAAM,EAAE;QAC9B,MAAMC,UAAAA,GAAaD,OAAOE,OAAO;QACjC,MAAMA,OAAAA,GAAUC,qBAAqBnD,MAAQiD,EAAAA,UAAAA,CAAAA,CAAAA;AAC7C,YAAI,CAACC,OAAS;AACZ,mBAAO,EAAE;SACV;AAED,cAAME,UAAa,OAAI,CAACC,iBAAiB,CAACH,OAASD,EAAAA,UAAAA,CAAAA,CAAAA;QACnD,IAAIA,UAAAA,CAAWK,OAAO,EAAE;YAItBC,QAASvD,CAAAA,MAAAA,CAAOkD,OAAO,CAACM,WAAW,EAAEP,UAAYQ,CAAAA,CAAAA,IAAI,CAAC,IAAM;AAC1DzD,gBAAAA,MAAAA,CAAOkD,OAAO,GAAGD,UAAAA,CAAAA;AACnB,eAAG,IAAM;AAET;SACD;QAED,OAAOG,UAAAA,CAAAA;AACT;AAIA,CACAC,iBAAkBrD,CAAAA,MAAM,EAAEgD,MAAM,EAAE;QAChC,MAAMP,aAAAA,GAAgB,IAAI,CAACR,WAAW;AACtC,cAAMmB,aAAa,EAAE;QACrB,MAAMnG,OAAAA,GAAU+C,OAAOwD,WAAW,KAAKxD,MAAOwD,CAAAA,WAAW,GAAG,EAAC;QAC7D,MAAME,KAAAA,GAAQrB,MAAOC,CAAAA,IAAI,CAACU,MAAAA,CAAAA,CAAAA;QAC1B,MAAMpH,IAAAA,GAAOkB,KAAKC,GAAG;QACrB,IAAIK,CAAAA,CAAAA;QAEJ,IAAKA,CAAAA,GAAIsG,MAAMvG,MAAM,GAAG,GAAGC,CAAK,OAAG,EAAEA,CAAG;YACtC,MAAM6C,IAAAA,GAAOyD,KAAK,CAACtG,CAAE;AACrB,gBAAI6C,IAAK0D,CAAAA,MAAM,CAAC,OAAO,GAAK;gBAC1B,SAAS;aACV;AAED,gBAAI1D,SAAS,SAAW;AACtBmD,gBAAAA,UAAAA,CAAWhF,IAAI,CAAI,OAAI,CAAC2E,eAAe,CAAC/C,MAAQgD,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;gBAChD,SAAS;aACV;YACD,MAAMY,KAAAA,GAAQZ,MAAM,CAAC/C,IAAK;YAC1B,IAAIuC,SAAAA,GAAYvF,OAAO,CAACgD,IAAK;YAC7B,MAAMF,GAAAA,GAAM0C,aAAc5E,CAAAA,GAAG,CAACoC,IAAAA,CAAAA,CAAAA;AAE9B,gBAAIuC,SAAW;gBACb,IAAIzC,GAAAA,IAAOyC,SAAUrB,CAAAA,MAAM,EAAI;oBAE7BqB,SAAUpB,CAAAA,MAAM,CAACrB,GAAAA,EAAK6D,KAAOhI,EAAAA,IAAAA,CAAAA,CAAAA;oBAC7B,SAAS;iBACJ;AACL4G,oBAAAA,SAAAA,CAAU3D,MAAM;iBACjB;aACF;AACD,gBAAI,CAACkB,GAAAA,IAAO,CAACA,GAAAA,CAAI9D,QAAQ,EAAE;gBAEzB+D,MAAM,CAACC,KAAK,GAAG2D,KAAAA,CAAAA;gBACf,SAAS;aACV;YAED3G,OAAO,CAACgD,KAAK,GAAGuC,SAAAA,GAAY,IAAI1C,SAAUC,CAAAA,GAAAA,EAAKC,QAAQC,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;AAC7DR,YAAAA,UAAAA,CAAWhF,IAAI,CAACoE,SAAAA,CAAAA,CAAAA;AAClB;QACA,OAAOY,UAAAA,CAAAA;AACT;AAQC,CACDhC,MAAOpB,CAAAA,MAAM,EAAEgD,MAAM,EAAE;AACrB,YAAI,IAAI,CAACf,WAAW,CAAC4B,IAAI,KAAK,CAAG;YAE/BxB,MAAOyB,CAAAA,MAAM,CAAC9D,MAAQgD,EAAAA,MAAAA,CAAAA,CAAAA;AACtB;SACD;AAED,cAAMI,UAAa,OAAI,CAACC,iBAAiB,CAACrD,MAAQgD,EAAAA,MAAAA,CAAAA,CAAAA;QAElD,IAAII,UAAAA,CAAWjG,MAAM,EAAE;AACrB4G,YAAAA,QAAAA,CAAS1F,GAAG,CAAC,IAAI,CAAC2D,MAAM,EAAEoB,UAAAA,CAAAA,CAAAA;AAC1B,mBAAO,IAAI;SACZ;AACH;AACF,CAAC;AAED,SAASG,QAASH,CAAAA,UAAU,EAAEN,UAAU,EAAE;AACxC,UAAM7F,UAAU,EAAE;IAClB,MAAMqF,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACQ,UAAAA,CAAAA,CAAAA;AACzB,QAAK,IAAI1F,CAAI,MAAGA,IAAIkF,IAAKnF,CAAAA,MAAM,EAAEC,CAAK;AACpC,cAAM4G,OAAOZ,UAAU,CAACd,IAAI,CAAClF,EAAE,CAAC;QAChC,IAAI4G,IAAAA,IAAQA,IAAK7C,CAAAA,MAAM,EAAI;YACzBlE,OAAQmB,CAAAA,IAAI,CAAC4F,IAAAA,CAAKzC,IAAI;SACvB;AACH;IAEA,OAAOE,OAAAA,CAAQwC,GAAG,CAAChH,OAAAA,CAAAA,CAAAA;AACrB;AAEA,SAASkG,oBAAqBnD,CAAAA,MAAM,EAAEiD,UAAU,EAAE;AAChD,QAAI,CAACA,UAAY;AACf;KACD;IACD,IAAIC,OAAAA,GAAUlD,OAAOkD,OAAO;AAC5B,QAAI,CAACA,OAAS;AACZlD,QAAAA,MAAAA,CAAOkD,OAAO,GAAGD,UAAAA,CAAAA;AACjB;KACD;IACD,IAAIC,OAAAA,CAAQI,OAAO,EAAE;QAGnBtD,MAAOkD,CAAAA,OAAO,GAAGA,OAAUb,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,IAAIZ,OAAS;AAACI,YAAAA,OAAAA,EAAS,KAAK;AAAEE,YAAAA,WAAAA,EAAa,EAAC;AAAC;KACvF;IACD,OAAON,OAAAA,CAAAA;AACT;;ACtJA,SAASgB,SAAAA,CAAUC,KAAK,EAAEC,eAAe,EAAE;AACzC,UAAMC,IAAOF,GAAAA,KAAAA,IAASA,KAAMjB,CAAAA,OAAO,IAAI,EAAC;IACxC,MAAMoB,OAAAA,GAAUD,KAAKC,OAAO;AAC5B,UAAM/H,MAAM8H,IAAK9H,CAAAA,GAAG,KAAKf,SAAAA,GAAY4I,kBAAkB,CAAC;AACxD,UAAM1F,MAAM2F,IAAK3F,CAAAA,GAAG,KAAKlD,SAAAA,GAAY4I,kBAAkB,CAAC;IACxD,OAAO;QACL5H,KAAO8H,EAAAA,OAAAA,GAAU5F,MAAMnC,GAAG;QAC1BgI,GAAKD,EAAAA,OAAAA,GAAU/H,MAAMmC,GAAG;AAC1B;AACF;AAEA,SAAS8F,YAAYC,MAAM,EAAEC,MAAM,EAAEN,eAAe,EAAE;IACpD,IAAIA,eAAAA,KAAoB,KAAK,EAAE;AAC7B,eAAO,KAAK;KACb;IACD,MAAMO,CAAAA,GAAIT,UAAUO,MAAQL,EAAAA,eAAAA,CAAAA,CAAAA;IAC5B,MAAMQ,CAAAA,GAAIV,UAAUQ,MAAQN,EAAAA,eAAAA,CAAAA,CAAAA;IAE5B,OAAO;AACLS,QAAAA,GAAAA,EAAKD,EAAEL,GAAG;AACVO,QAAAA,KAAAA,EAAOH,EAAEJ,GAAG;AACZQ,QAAAA,MAAAA,EAAQH,EAAEpI,KAAK;AACfwI,QAAAA,IAAAA,EAAML,EAAEnI,KAAK;AACf;AACF;AAEA,SAASyI,MAAAA,CAAOrB,KAAK,EAAE;IACrB,IAAIsB,CAAAA,EAAGC,GAAGC,CAAGC,EAAAA,CAAAA,CAAAA;AAEb,QAAIlD,6DAAQA,CAACyB,KAAQ;AACnBsB,QAAAA,CAAAA,GAAItB,MAAMiB,GAAG;AACbM,QAAAA,CAAAA,GAAIvB,MAAMkB,KAAK;AACfM,QAAAA,CAAAA,GAAIxB,MAAMmB,MAAM;AAChBM,QAAAA,CAAAA,GAAIzB,MAAMoB,IAAI;KACT;QACLE,CAAIC,GAAAA,CAAAA,GAAIC,IAAIC,CAAIzB,GAAAA,KAAAA,CAAAA;KACjB;IAED,OAAO;QACLiB,GAAKK,EAAAA,CAAAA;QACLJ,KAAOK,EAAAA,CAAAA;QACPJ,MAAQK,EAAAA,CAAAA;QACRJ,IAAMK,EAAAA,CAAAA;AACNC,QAAAA,QAAAA,EAAU1B,UAAU,KAAK;AAC3B;AACF;AAEA,SAAS2B,uBAAwB7J,CAAAA,KAAK,EAAE8J,aAAa,EAAE;AACrD,UAAMlD,OAAO,EAAE;IACf,MAAMmD,QAAAA,GAAW/J,KAAMgK,CAAAA,sBAAsB,CAACF,aAAAA,CAAAA,CAAAA;AAC9C,QAAIpI,CAAGuI,EAAAA,IAAAA,CAAAA;IAEP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOF,GAAAA,QAAAA,CAAStI,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AACjDkF,QAAAA,IAAAA,CAAKlE,IAAI,CAACqH,QAAQ,CAACrI,CAAAA,CAAE,CAACwI,KAAK;AAC7B;IACA,OAAOtD,IAAAA,CAAAA;AACT;AAEA,SAASuD,UAAAA,CAAWC,KAAK,EAAElC,KAAK,EAAEmC,OAAO,EAAE7C,OAAAA,GAAU,EAAE,EAAE;IACvD,MAAMZ,IAAAA,GAAOwD,MAAMxD,IAAI;IACvB,MAAM0D,UAAAA,GAAa9C,OAAQ+C,CAAAA,IAAI,KAAK;IACpC,IAAI7I,CAAAA,EAAGuI,MAAMO,YAAcC,EAAAA,UAAAA,CAAAA;IAE3B,IAAIvC,KAAAA,KAAU,IAAI,EAAE;AAClB;KACD;IAED,IAAKxG,CAAAA,GAAI,GAAGuI,IAAOrD,GAAAA,IAAAA,CAAKnF,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QAC7C8I,YAAe,IAAC5D,IAAI,CAAClF,CAAE;AACvB,YAAI8I,iBAAiBH,OAAS;YAC5B,IAAI7C,OAAAA,CAAQe,GAAG,EAAE;gBACf,SAAS;aACV;YACD,MAAM;SACP;QACDkC,UAAaL,GAAAA,KAAAA,CAAM9C,MAAM,CAACkD,YAAa;QACvC,IAAIE,6DAAAA,CAASD,UAAgBH,CAAAA,KAAAA,UAAepC,IAAAA,KAAAA,KAAU,KAAKyC,6DAAKzC,CAAAA,KAAAA,CAAAA,KAAWyC,6DAAKF,CAAAA,UAAAA,CAAW,CAAI;YAC7FvC,KAASuC,IAAAA,UAAAA,CAAAA;SACV;AACH;IACA,OAAOvC,KAAAA,CAAAA;AACT;AAEA,SAAS0C,wBAAyBC,CAAAA,IAAI,EAAEC,IAAI,EAAE;AAC5C,UAAM,EAACC,MAAAA,GAAQC,MAAAA,GAAO,GAAGF,IAAAA,CAAAA;AACzB,UAAMG,WAAWF,MAAOG,CAAAA,IAAI,KAAK,MAAM,MAAM,GAAG;AAChD,UAAMC,WAAWH,MAAOE,CAAAA,IAAI,KAAK,MAAM,MAAM,GAAG;IAChD,MAAMtE,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACiE,IAAAA,CAAAA,CAAAA;AACzB,UAAMO,KAAQ,OAAIC,KAAMzE,CAAAA,IAAAA,CAAKnF,MAAM;AACnC,QAAIC,GAAGuI,IAAMhD,EAAAA,GAAAA,CAAAA;IACb,IAAKvF,CAAAA,GAAI,GAAGuI,IAAOrD,GAAAA,IAAAA,CAAKnF,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QAC7CuF,GAAML,GAAAA,IAAI,CAAClF,CAAE;QACb0J,KAAK,CAAC1J,EAAE,GAAG;AACT,aAACuJ,WAAWhE,GAAAA;AACZ,aAACkE,QAAS,GAAEN,IAAI,CAAC5D,GAAI;AACvB;AACF;IACA,OAAOmE,KAAAA,CAAAA;AACT;AAEA,SAASE,SAAU7C,CAAAA,KAAK,EAAEqC,IAAI,EAAE;AAC9B,UAAMS,OAAU9C,GAAAA,KAAAA,IAASA,KAAMjB,CAAAA,OAAO,CAAC+D,OAAO;AAC9C,WAAOA,OAAYA,IAAAA,OAAAA,KAAYzL,SAAagL,IAAAA,IAAAA,CAAKV,KAAK,KAAKtK,SAAAA,CAAAA;AAC7D;AAEA,SAAS0L,YAAYC,UAAU,EAAEC,UAAU,EAAEZ,IAAI,EAAE;AACjD,WAAO,CAAC,EAAEW,UAAAA,CAAWE,EAAE,CAAC,CAAC,EAAED,UAAWC,CAAAA,EAAE,CAAC,CAAC,EAAEb,IAAKV,CAAAA,KAAK,IAAIU,IAAK3K,CAAAA,IAAI,CAAC,CAAC;AACvE;AAEA,SAASyL,aAAAA,CAAcnD,KAAK,EAAE;IAC5B,MAAM,EAAC5H,GAAG,GAAEmC,GAAG,GAAE6I,UAAU,GAAEC,UAAU,GAAC,GAAGrD,KAAAA,CAAMmD,aAAa;IAC9D,OAAO;QACL/K,GAAKgL,EAAAA,UAAAA,GAAahL,GAAMkL,GAAAA,MAAAA,CAAOC,iBAAiB;QAChDhJ,GAAK8I,EAAAA,UAAAA,GAAa9I,GAAM+I,GAAAA,MAAAA,CAAOE,iBAAiB;AAClD;AACF;AAEA,SAASC,iBAAiBC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;IACtD,MAAMC,QAAAA,GAAWH,MAAM,CAACC,QAAS,MAAKD,MAAM,CAACC,QAAAA,CAAS,GAAG,EAAC;IAC1D,OAAOE,QAAQ,CAACD,UAAAA,CAAW,KAAKC,QAAQ,CAACD,UAAAA,CAAW,GAAG,EAAC;AAC1D;AAEA,SAASE,mBAAAA,CAAoBnC,KAAK,EAAEY,MAAM,EAAEwB,QAAQ,EAAErM,IAAI,EAAE;AAC1D,SAAK,MAAM2K,IAAQE,IAAAA,MAAAA,CAAOyB,uBAAuB,CAACtM,IAAAA,CAAAA,CAAMyI,OAAO,EAAI;AACjE,cAAMV,KAAQkC,GAAAA,KAAK,CAACU,IAAAA,CAAKZ,KAAK,CAAC;AAC/B,YAAI,QAAahC,IAAAA,KAAAA,GAAQ,KAAO,CAACsE,QAAAA,IAAYtE,QAAQ,CAAI;AACvD,mBAAO4C,KAAKZ,KAAK;SAClB;AACH;AAEA,WAAO,IAAI;AACb;AAEA,SAASwC,YAAaC,CAAAA,UAAU,EAAEC,MAAM,EAAE;AACxC,UAAM,EAAC5M,KAAK,GAAE6M,WAAa/B,EAAAA,IAAAA,GAAK,GAAG6B,UAAAA,CAAAA;IACnC,MAAMR,MAAAA,GAASnM,KAAM8M,CAAAA,OAAO,KAAK9M,KAAM8M,CAAAA,OAAO,GAAG,EAAC;IAClD,MAAM,EAAC/B,SAAQC,MAAAA,GAAQd,KAAOM,EAAAA,YAAAA,GAAa,GAAGM,IAAAA,CAAAA;IAC9C,MAAMiC,KAAAA,GAAQhC,OAAOG,IAAI;IACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI;IACzB,MAAMjE,GAAAA,GAAMuE,WAAYT,CAAAA,MAAAA,EAAQC,MAAQF,EAAAA,IAAAA,CAAAA,CAAAA;IACxC,MAAMb,IAAAA,GAAO2C,OAAOnL,MAAM;IAC1B,IAAI2I,KAAAA,CAAAA;AAEJ,QAAK,IAAI1I,CAAI,MAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;QAC7B,MAAME,IAAAA,GAAOgL,MAAM,CAAClL,CAAE;QACtB,MAAM,EAAC,CAACqL,KAAAA,GAAQ7C,KAAAA,GAAO,CAAC8C,KAAM,GAAE9E,KAAK,GAAC,GAAGtG,IAAAA,CAAAA;QACzC,MAAMqL,UAAAA,GAAarL,KAAKkL,OAAO,KAAKlL,IAAKkL,CAAAA,OAAO,GAAG,EAAC;AACpD1C,QAAAA,KAAAA,GAAQ6C,UAAU,CAACD,KAAAA,CAAM,GAAGd,gBAAAA,CAAiBC,QAAQlF,GAAKiD,EAAAA,KAAAA,CAAAA,CAAAA;QAC1DE,KAAK,CAACI,aAAa,GAAGtC,KAAAA,CAAAA;QAEtBkC,KAAM8C,CAAAA,IAAI,GAAGX,mBAAoBnC,CAAAA,KAAAA,EAAOY,QAAQ,IAAI,EAAEF,KAAK3K,IAAI;QAC/DiK,KAAM+C,CAAAA,OAAO,GAAGZ,mBAAoBnC,CAAAA,KAAAA,EAAOY,QAAQ,KAAK,EAAEF,KAAK3K,IAAI;QAEnE,MAAMiN,YAAAA,GAAehD,MAAMiD,aAAa,KAAKjD,KAAMiD,CAAAA,aAAa,GAAG,EAAC;QACpED,YAAY,CAAC5C,aAAa,GAAGtC,KAAAA,CAAAA;AAC/B;AACF;AAEA,SAASoF,eAAgBtN,CAAAA,KAAK,EAAEkL,IAAI,EAAE;IACpC,MAAMqC,MAAAA,GAASvN,MAAMuN,MAAM;AAC3B,WAAO5G,MAAOC,CAAAA,IAAI,CAAC2G,MAAAA,CAAAA,CAAQC,MAAM,CAACvG,CAAAA,GAAOsG,GAAAA,MAAM,CAACtG,GAAI,EAACiE,IAAI,KAAKA,MAAMuC,KAAK;AAC3E;AAEA,SAASC,oBAAqBC,CAAAA,MAAM,EAAEzD,KAAK,EAAE;AAC3C,WAAO0D,6DAAaA,CAACD,MACnB;AACElI,QAAAA,MAAAA,EAAQ,KAAK;QACboI,OAAS/N,EAAAA,SAAAA;QACT0K,YAAcN,EAAAA,KAAAA;AACdA,QAAAA,KAAAA;QACAK,IAAM;QACNpK,IAAM;AACR;AAEJ;AAEA,SAAS2N,kBAAkBH,MAAM,EAAEzD,KAAK,EAAE6D,OAAO,EAAE;AACjD,WAAOH,6DAAaA,CAACD,MAAQ;AAC3BlI,QAAAA,MAAAA,EAAQ,KAAK;QACbuI,SAAW9D,EAAAA,KAAAA;QACX0C,MAAQ9M,EAAAA,SAAAA;QACRmO,GAAKnO,EAAAA,SAAAA;AACLiO,QAAAA,OAAAA;AACA7D,QAAAA,KAAAA;QACAK,IAAM;QACNpK,IAAM;AACR;AACF;AAEA,SAAS+N,WAAYpD,CAAAA,IAAI,EAAEtJ,KAAK,EAAE;AAEhC,UAAMgJ,YAAeM,GAAAA,IAAAA,CAAK6B,UAAU,CAACzC,KAAK;AAC1C,UAAMgB,OAAOJ,IAAKE,CAAAA,MAAM,IAAIF,IAAKE,CAAAA,MAAM,CAACE,IAAI;AAC5C,QAAI,CAACA,IAAM;AACT;KACD;IAED1J,KAAQA,GAAAA,KAAAA,IAASsJ,KAAKqD,OAAO;IAC7B,KAAK,MAAMvB,UAAUpL,KAAO;QAC1B,MAAM2K,MAAAA,GAASS,OAAOE,OAAO;AAC7B,YAAI,CAACX,MAAAA,IAAUA,MAAM,CAACjB,IAAK,MAAKpL,SAAaqM,IAAAA,MAAM,CAACjB,IAAAA,CAAK,CAACV,YAAAA,CAAa,KAAK1K,SAAW;AACrF;SACD;AACD,eAAOqM,MAAM,CAACjB,IAAK,EAACV,YAAa;AACjC,YAAI2B,MAAM,CAACjB,IAAK,EAACmC,aAAa,KAAKvN,SAAAA,IAAaqM,MAAM,CAACjB,KAAK,CAACmC,aAAa,CAAC7C,YAAAA,CAAa,KAAK1K,SAAW;AACtG,mBAAOqM,MAAM,CAACjB,IAAAA,CAAK,CAACmC,aAAa,CAAC7C,YAAa;SAChD;AACH;AACF;AAEA,MAAM4D,kBAAqB,IAAC7D,IAASA,GAAAA,IAAAA,KAAS,WAAWA,IAAS;AAClE,MAAM8D,gBAAAA,GAAmB,CAACC,MAAAA,EAAQC,MAAWA,GAAAA,MAAAA,GAASD,MAAS3H,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,EAAC,EAAGkG,MAAO;AACxF,MAAME,WAAc,IAACC,QAAU3D,EAAAA,IAAAA,EAAM9K,KAAUyO,GAAAA,QAAAA,IAAY,CAAC3D,IAAAA,CAAK4D,MAAM,IAAI5D,IAAK6D,CAAAA,QAAQ,IACnF;QAAC/H,IAAMiD,EAAAA,uBAAAA,CAAwB7J,OAAO,IAAI;AAAGsH,QAAAA,MAAAA,EAAQ,IAAI;AAAA;AAE/C,MAAMsH,iBAAAA,CAAAA;AAKnB,QAAO/H,QAAW,KAAG;AAKrB,QAAOgI,kBAAqB,OAAI,CAAC;AAKjC,QAAOC,eAAkB,OAAI,CAAC;AAK9B,CACAtP,WAAYQ,CAAAA,KAAK,EAAEwK,YAAY,CAAE;QAC/B,IAAI,CAACxK,KAAK,GAAGA,KAAAA,CAAAA;AACb,YAAI,CAAC+O,IAAI,GAAG/O,KAAAA,CAAMgP,GAAG;QACrB,IAAI,CAAC9E,KAAK,GAAGM,YAAAA,CAAAA;QACb,IAAI,CAACyE,eAAe,GAAG,EAAC;AACxB,YAAI,CAACpC,WAAW,GAAG,IAAI,CAACqC,OAAO;AAC/B,YAAI,CAACC,KAAK,GAAG,IAAI,CAACtC,WAAW,CAAC1M,IAAI;QAClC,IAAI,CAACqH,OAAO,GAAG1H,SAAAA,CAAAA;AACf,SACA,IAAI,CAACsP,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACC,KAAK,GAAGvP,SAAAA,CAAAA;QACb,IAAI,CAACwP,WAAW,GAAGxP,SAAAA,CAAAA;QACnB,IAAI,CAACyP,cAAc,GAAGzP,SAAAA,CAAAA;QACtB,IAAI,CAAC0P,UAAU,GAAG1P,SAAAA,CAAAA;QAClB,IAAI,CAAC2P,UAAU,GAAG3P,SAAAA,CAAAA;QAClB,IAAI,CAAC4P,mBAAmB,GAAG,KAAK;QAChC,IAAI,CAACC,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACC,QAAQ,GAAG9P,SAAAA,CAAAA;QAChB,IAAI,CAAC+P,SAAS,GAAG,EAAE;AACnB,YAAI,CAAChB,kBAAkB,GAAG,WAAWA,kBAAkB;AACvD,YAAI,CAACC,eAAe,GAAG,WAAWA,eAAe;AAEjD,YAAI,CAACgB,UAAU;AACjB;IAEAA,UAAa;QACX,MAAMhF,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,YAAI,CAACrG,SAAS;AACd,YAAI,CAACuJ,UAAU;AACfjF,QAAAA,IAAAA,CAAK6D,QAAQ,GAAGrD,SAAUR,CAAAA,IAAAA,CAAKE,MAAM,EAAEF,IAAAA,CAAAA,CAAAA;AACvC,YAAI,CAACkF,WAAW;AAEhB,YAAI,IAAI,CAACxI,OAAO,CAACyI,IAAI,IAAI,CAAC,IAAI,CAACjQ,KAAK,CAACkQ,eAAe,CAAC,QAAW;AAC9DC,YAAAA,OAAAA,CAAQC,IAAI,CAAC;SACd;AACH;AAEAC,IAAAA,WAAAA,CAAY7F,YAAY,EAAE;AACxB,YAAI,IAAI,CAACN,KAAK,KAAKM,YAAc;YAC/B0D,WAAY,KAAI,CAACrB,WAAW;SAC7B;QACD,IAAI,CAAC3C,KAAK,GAAGM,YAAAA,CAAAA;AACf;IAEAuF,UAAa;QACX,MAAM/P,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM8K,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMgB,OAAAA,GAAU,IAAI,CAACyC,UAAU;AAE/B,cAAMC,QAAW,IAACrF,IAAMjC,EAAAA,CAAAA,EAAGC,CAAGO,EAAAA,CAAAA,GAAMyB,IAAS,WAAMjC,CAAIiC,GAAAA,IAAAA,KAAS,GAAMzB,GAAAA,CAAAA,GAAIP,CAAC;QAE3E,MAAMsH,GAAAA,GAAM1F,KAAK2F,OAAO,GAAGC,6DAAcA,CAAC7C,OAAQ4C,CAAAA,OAAO,EAAEnD,eAAAA,CAAgBtN,KAAO;QAClF,MAAM2Q,GAAAA,GAAM7F,KAAK8F,OAAO,GAAGF,6DAAcA,CAAC7C,OAAQ+C,CAAAA,OAAO,EAAEtD,eAAAA,CAAgBtN,KAAO;QAClF,MAAM6Q,GAAAA,GAAM/F,KAAKgG,OAAO,GAAGJ,6DAAcA,CAAC7C,OAAQiD,CAAAA,OAAO,EAAExD,eAAAA,CAAgBtN,KAAO;QAClF,MAAM+Q,SAAAA,GAAYjG,KAAKiG,SAAS;AAChC,cAAMC,MAAMlG,IAAKmG,CAAAA,OAAO,GAAGV,QAASQ,CAAAA,SAAAA,EAAWP,KAAKG,GAAKE,EAAAA,GAAAA,CAAAA,CAAAA;AACzD,cAAMK,MAAMpG,IAAKqG,CAAAA,OAAO,GAAGZ,QAASQ,CAAAA,SAAAA,EAAWJ,KAAKH,GAAKK,EAAAA,GAAAA,CAAAA,CAAAA;AACzD/F,QAAAA,IAAAA,CAAK/B,MAAM,GAAG,IAAI,CAACqI,aAAa,CAACZ,GAAAA,CAAAA,CAAAA;AACjC1F,QAAAA,IAAAA,CAAK9B,MAAM,GAAG,IAAI,CAACoI,aAAa,CAACT,GAAAA,CAAAA,CAAAA;AACjC7F,QAAAA,IAAAA,CAAKuG,MAAM,GAAG,IAAI,CAACD,aAAa,CAACP,GAAAA,CAAAA,CAAAA;AACjC/F,QAAAA,IAAAA,CAAKC,MAAM,GAAG,IAAI,CAACqG,aAAa,CAACJ,GAAAA,CAAAA,CAAAA;AACjClG,QAAAA,IAAAA,CAAKE,MAAM,GAAG,IAAI,CAACoG,aAAa,CAACF,GAAAA,CAAAA,CAAAA;AACnC;IAEAZ,UAAa;QACX,OAAO,IAAI,CAACtQ,KAAK,CAAC6K,IAAI,CAACyG,QAAQ,CAAC,IAAI,CAACpH,KAAK,CAAC;AAC7C;IAEAgF,OAAU;QACR,OAAO,IAAI,CAAClP,KAAK,CAACuR,cAAc,CAAC,IAAI,CAACrH,KAAK;AAC7C;AAMAkH,CAAAA,aAAAA,CAAcI,OAAO,EAAE;AACrB,eAAO,IAAI,CAACxR,KAAK,CAACuN,MAAM,CAACiE,OAAQ;AACnC;AAKAC,CAAAA,cAAAA,CAAehJ,KAAK,EAAE;QACpB,MAAMqC,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,OAAOpE,KAAAA,KAAUqC,KAAKC,MAAM,GACxBD,KAAKE,MAAM,GACXF,KAAKC,MAAM;AACjB;IAEA2G,KAAQ;QACN,IAAI,CAACvQ,OAAO,CAAC;AACf;AAIA,CACAwQ,QAAW;QACT,MAAM7G,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,IAAI,IAAI,CAACwC,KAAK,EAAE;AACduC,YAAAA,6DAAAA,CAAoB,IAAI,CAACvC,KAAK,EAAE,IAAI;SACrC;QACD,IAAIvE,IAAAA,CAAK6D,QAAQ,EAAE;YACjBT,WAAYpD,CAAAA,IAAAA,CAAAA,CAAAA;SACb;AACH;AAIA,CACA+G,UAAa;QACX,MAAMhE,OAAAA,GAAU,IAAI,CAACyC,UAAU;QAC/B,MAAMzF,IAAAA,GAAOgD,QAAQhD,IAAI,KAAKgD,OAAQhD,CAAAA,IAAI,GAAG,EAAE,CAAD;QAC9C,MAAMwE,KAAAA,GAAQ,IAAI,CAACA,KAAK;AAMxB,YAAI5I,6DAAQA,CAACoE,IAAO;YAClB,MAAMC,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,gBAAI,CAACwC,KAAK,GAAGzE,wBAAAA,CAAyBC,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;SACvC,UAAIuE,UAAUxE,IAAM;AACzB,gBAAIwE,KAAO;AAETuC,gBAAAA,6DAAAA,CAAoBvC,OAAO,IAAI;gBAE/B,MAAMvE,IAAAA,GAAO,IAAI,CAAC+B,WAAW;gBAC7BqB,WAAYpD,CAAAA,IAAAA,CAAAA,CAAAA;gBACZA,IAAKqD,CAAAA,OAAO,GAAG,EAAE;aAClB;AACD,gBAAItD,IAAQlE,IAAAA,MAAAA,CAAOmL,YAAY,CAACjH,IAAO;AACrCkH,gBAAAA,6DAAAA,CAAkBlH,MAAM,IAAI;aAC7B;YACD,IAAI,CAACgF,SAAS,GAAG,EAAE;YACnB,IAAI,CAACR,KAAK,GAAGxE,IAAAA,CAAAA;SACd;AACH;IAEAmF,WAAc;QACZ,MAAMlF,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAE7B,YAAI,CAACgF,UAAU;QAEf,IAAI,IAAI,CAAChD,kBAAkB,EAAE;AAC3B/D,YAAAA,IAAAA,CAAK+C,OAAO,GAAG,IAAI,IAAI,CAACgB,kBAAkB;SAC3C;AACH;AAEAmD,IAAAA,qBAAAA,CAAsBC,gBAAgB,EAAE;QACtC,MAAMnH,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMgB,OAAAA,GAAU,IAAI,CAACyC,UAAU;AAC/B,YAAI4B,eAAe,KAAK;AAExB,YAAI,CAACL,UAAU;QAGf,MAAMM,UAAAA,GAAarH,KAAK6D,QAAQ;AAChC7D,QAAAA,IAAAA,CAAK6D,QAAQ,GAAGrD,SAAUR,CAAAA,IAAAA,CAAKE,MAAM,EAAEF,IAAAA,CAAAA,CAAAA;AAGvC,YAAIA,IAAKV,CAAAA,KAAK,KAAKyD,OAAAA,CAAQzD,KAAK,EAAE;AAChC8H,YAAAA,YAAAA,GAAe,IAAI;YAEnBhE,WAAYpD,CAAAA,IAAAA,CAAAA,CAAAA;YACZA,IAAKV,CAAAA,KAAK,GAAGyD,OAAAA,CAAQzD,KAAK;SAC3B;QAID,IAAI,CAACgI,eAAe,CAACH,gBAAAA,CAAAA,CAAAA;AAGrB,YAAIC,YAAgBC,IAAAA,UAAAA,KAAerH,IAAK6D,CAAAA,QAAQ,EAAE;YAChDjC,YAAa,KAAI,EAAE5B,IAAAA,CAAKqD,OAAO;SAChC;AACH;AAKA,CACA3H,SAAY;AACV,cAAMH,MAAS,OAAI,CAACrG,KAAK,CAACqG,MAAM;AAChC,cAAMgM,YAAYhM,MAAOiM,CAAAA,gBAAgB,CAAC,IAAI,CAACnD,KAAK;QACpD,MAAMoD,MAAAA,GAASlM,OAAOmM,eAAe,CAAC,IAAI,CAAClC,UAAU,EAAI+B,EAAAA,SAAAA,EAAW,IAAI;QACxE,IAAI,CAAC7K,OAAO,GAAGnB,MAAAA,CAAOoM,cAAc,CAACF,MAAAA,EAAQ,IAAI,CAACG,UAAU;AAC5D,YAAI,CAACtD,QAAQ,GAAG,IAAI,CAAC5H,OAAO,CAACmL,OAAO;QACpC,IAAI,CAAC1D,eAAe,GAAG,EAAC;AAC1B;AAKA,CACA2D,KAAM9R,CAAAA,KAAK,EAAE+R,KAAK,EAAE;QAClB,MAAM,EAAChG,aAAa/B,IAAI,GAAEuE,OAAOxE,IAAI,GAAC,GAAG,IAAI;AAC7C,cAAM,EAACE,MAAAA,GAAQ4D,QAAAA,GAAS,GAAG7D,IAAAA,CAAAA;QAC3B,MAAMiC,KAAAA,GAAQhC,OAAOG,IAAI;QAEzB,IAAI4H,MAAAA,GAAShS,KAAU,UAAK+R,KAAUhI,KAAAA,IAAAA,CAAKpJ,MAAM,GAAG,IAAI,GAAGqJ,IAAAA,CAAKiI,OAAO;AACvE,YAAIC,OAAOlS,KAAQ,QAAKgK,KAAKqD,OAAO,CAACrN,QAAQ,CAAE;AAC/C,YAAIY,GAAGqB,GAAK6J,EAAAA,MAAAA,CAAAA;AAEZ,YAAI,IAAI,CAACwC,QAAQ,KAAK,KAAK,EAAE;AAC3BtE,YAAAA,IAAAA,CAAKqD,OAAO,GAAGtD,IAAAA,CAAAA;YACfC,IAAKiI,CAAAA,OAAO,GAAG,IAAI;YACnBnG,MAAS/B,GAAAA,IAAAA,CAAAA;SACJ;AACL,gBAAI1D,6DAAQ0D,CAAAA,IAAI,CAAC/J,KAAAA,CAAM,CAAG;AACxB8L,gBAAAA,MAAAA,GAAS,IAAI,CAACqG,cAAc,CAACnI,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAClD,mBAAO,IAAIpM,6DAAAA,CAASoE,IAAI,CAAC/J,MAAM,CAAG;AAChC8L,gBAAAA,MAAAA,GAAS,IAAI,CAACsG,eAAe,CAACpI,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;aAC5C;AACLjG,gBAAAA,MAAAA,GAAS,IAAI,CAACuG,kBAAkB,CAACrI,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;aACrD;AAED,kBAAMO,0BAA6B,OAAMrQ,GAAG,CAACgK,MAAM,KAAK,IAAI,IAAKiG,IAAAA,IAAQjQ,GAAG,CAACgK,KAAAA,CAAM,GAAGiG,IAAI,CAACjG,KAAM;AACjG,gBAAKrL,CAAI,MAAGA,CAAImR,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;gBAC1BoJ,IAAKqD,CAAAA,OAAO,CAACzM,CAAIZ,GAAAA,KAAAA,CAAM,GAAGiC,GAAM6J,GAAAA,MAAM,CAAClL,CAAE;AACzC,oBAAIoR,MAAQ;AACV,wBAAIM,0BAA8B;AAChCN,wBAAAA,MAAAA,GAAS,KAAK;qBACf;oBACDE,IAAOjQ,GAAAA,GAAAA,CAAAA;iBACR;AACH;AACA+H,YAAAA,IAAAA,CAAKiI,OAAO,GAAGD,MAAAA,CAAAA;SAChB;AAED,YAAInE,QAAU;AACZjC,YAAAA,YAAAA,CAAa,IAAI,EAAEE,MAAAA,CAAAA,CAAAA;SACpB;AACH;AAaAuG,CAAAA,kBAAAA,CAAmBrI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AAC3C,cAAM,EAAC9H,MAAAA,GAAQC,MAAAA,GAAO,GAAGF,IAAAA,CAAAA;QACzB,MAAMiC,KAAAA,GAAQhC,OAAOG,IAAI;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI;QACzB,MAAMmI,MAAAA,GAAStI,OAAOuI,SAAS;AAC/B,cAAMC,cAAcxI,MAAWC,KAAAA,MAAAA,CAAAA;QAC/B,MAAM4B,MAAAA,GAAS,IAAIvB,KAAMwH,CAAAA,KAAAA,CAAAA,CAAAA;AACzB,YAAInR,GAAGuI,IAAMC,EAAAA,KAAAA,CAAAA;QAEb,IAAKxI,CAAAA,GAAI,GAAGuI,IAAO4I,GAAAA,KAAK,EAAEnR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AACvCwI,YAAAA,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;YACZ8L,MAAM,CAAClL,EAAE,GAAG;gBACV,CAACqL,KAAAA,GAAQwG,WAAexI,IAAAA,MAAAA,CAAO6H,KAAK,CAACS,MAAM,CAACnJ,KAAAA,CAAM,EAAEA,KAAAA,CAAAA;gBACpD,CAAC8C,KAAAA,GAAQhC,MAAO4H,CAAAA,KAAK,CAAC/H,IAAI,CAACX,MAAM,EAAEA,KAAAA,CAAAA;AACrC;AACF;QACA,OAAO0C,MAAAA,CAAAA;AACT;AAaAqG,CAAAA,cAAAA,CAAenI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACvC,cAAM,EAAC9J,MAAAA,GAAQC,MAAAA,GAAO,GAAG8B,IAAAA,CAAAA;QACzB,MAAM8B,MAAAA,GAAS,IAAIvB,KAAMwH,CAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAInR,CAAAA,EAAGuI,MAAMC,KAAOtI,EAAAA,IAAAA,CAAAA;QAEpB,IAAKF,CAAAA,GAAI,GAAGuI,IAAO4I,GAAAA,KAAK,EAAEnR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AACvCwI,YAAAA,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;YACZc,IAAOiJ,GAAAA,IAAI,CAACX,KAAM;YAClB0C,MAAM,CAAClL,EAAE,GAAG;AACVuH,gBAAAA,CAAAA,EAAGF,OAAO6J,KAAK,CAAChR,IAAI,CAAC,EAAE,EAAEsI,KAAAA,CAAAA;AACzBhB,gBAAAA,CAAAA,EAAGF,OAAO4J,KAAK,CAAChR,IAAI,CAAC,EAAE,EAAEsI,KAAAA,CAAAA;AAC3B;AACF;QACA,OAAO0C,MAAAA,CAAAA;AACT;AAaAsG,CAAAA,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACxC,cAAM,EAAC9J,MAAAA,GAAQC,MAAAA,GAAO,GAAG8B,IAAAA,CAAAA;QACzB,MAAM,EAAC0I,QAAW,QAAKC,QAAAA,EAAW,MAAI,GAAG,IAAI,CAACrE,QAAQ;QACtD,MAAMxC,MAAAA,GAAS,IAAIvB,KAAMwH,CAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAInR,CAAAA,EAAGuI,MAAMC,KAAOtI,EAAAA,IAAAA,CAAAA;QAEpB,IAAKF,CAAAA,GAAI,GAAGuI,IAAO4I,GAAAA,KAAK,EAAEnR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AACvCwI,YAAAA,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;YACZc,IAAOiJ,GAAAA,IAAI,CAACX,KAAM;YAClB0C,MAAM,CAAClL,EAAE,GAAG;AACVuH,gBAAAA,CAAAA,EAAGF,MAAO6J,CAAAA,KAAK,CAACc,6DAAAA,CAAiB9R,MAAM4R,QAAWtJ,CAAAA,EAAAA,KAAAA,CAAAA;AAClDhB,gBAAAA,CAAAA,EAAGF,MAAO4J,CAAAA,KAAK,CAACc,6DAAAA,CAAiB9R,MAAM6R,QAAWvJ,CAAAA,EAAAA,KAAAA,CAAAA;AACpD;AACF;QACA,OAAO0C,MAAAA,CAAAA;AACT;AAKA+G,CAAAA,SAAAA,CAAUzJ,KAAK,EAAE;AACf,eAAO,IAAI,CAAC2C,WAAW,CAACsB,OAAO,CAACjE,KAAM;AACxC;AAKA0J,CAAAA,cAAAA,CAAe1J,KAAK,EAAE;AACpB,eAAO,IAAI,CAAC2C,WAAW,CAAChC,IAAI,CAACX,KAAM;AACrC;AAIA,CACAC,WAAW1B,KAAK,EAAEmE,MAAM,EAAErC,IAAI,EAAE;QAC9B,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM8K,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,cAAM3E,KAAQ0E,GAAAA,MAAM,CAACnE,KAAAA,CAAMyC,IAAI,CAAC;AAChC,cAAMd,KAAQ;YACZxD,IAAMiD,EAAAA,uBAAAA,CAAwB7J,OAAO,IAAI;AACzCsH,YAAAA,MAAAA,EAAQsF,OAAOE,OAAO,CAACrE,MAAMyC,IAAI,CAAC,CAACmC,aAAa;AAClD;AACA,eAAOlD,UAAWC,CAAAA,KAAAA,EAAOlC,KAAO4C,EAAAA,IAAAA,CAAKZ,KAAK,EAAE;AAACK,YAAAA,IAAAA;AAAI;AACnD;AAKAsJ,CAAAA,qBAAAA,CAAsBC,KAAK,EAAErL,KAAK,EAAEmE,MAAM,EAAExC,KAAK,EAAE;AACjD,cAAM2J,WAAcnH,GAAAA,MAAM,CAACnE,KAAAA,CAAMyC,IAAI,CAAC;AACtC,YAAIhD,KAAQ6L,GAAAA,WAAAA,KAAgB,IAAI,GAAGC,MAAMD,WAAW;AACpD,cAAMzM,SAAS8C,KAASwC,IAAAA,MAAAA,CAAOE,OAAO,CAACrE,KAAAA,CAAMyC,IAAI,CAAC;AAClD,YAAId,SAAS9C,MAAQ;AACnB8C,YAAAA,KAAAA,CAAM9C,MAAM,GAAGA,MAAAA,CAAAA;AACfY,YAAAA,KAAAA,GAAQiC,WAAWC,KAAO2J,EAAAA,WAAAA,EAAa,IAAI,CAAClH,WAAW,CAAC3C,KAAK;SAC9D;AACD4J,QAAAA,KAAAA,CAAMjT,GAAG,GAAGD,IAAAA,CAAKC,GAAG,CAACiT,KAAAA,CAAMjT,GAAG,EAAEqH,KAAAA,CAAAA,CAAAA;AAChC4L,QAAAA,KAAAA,CAAM9Q,GAAG,GAAGpC,IAAAA,CAAKoC,GAAG,CAAC8Q,KAAAA,CAAM9Q,GAAG,EAAEkF,KAAAA,CAAAA,CAAAA;AAClC;AAIA,CACA+L,SAAUxL,CAAAA,KAAK,EAAEgG,QAAQ,EAAE;QACzB,MAAM3D,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMsB,OAAAA,GAAUrD,KAAKqD,OAAO;AAC5B,cAAM2E,SAAShI,IAAKiI,CAAAA,OAAO,IAAItK,KAAAA,KAAUqC,KAAKC,MAAM;QACpD,MAAMd,IAAAA,GAAOkE,QAAQ1M,MAAM;AAC3B,cAAMyS,UAAa,OAAI,CAACzC,cAAc,CAAChJ,KAAAA,CAAAA,CAAAA;AACvC,cAAM2B,QAAQoE,WAAYC,CAAAA,QAAAA,EAAU3D,IAAM,MAAI,CAAC9K,KAAK;AACpD,cAAM8T,KAAQ;AAACjT,YAAAA,GAAAA,EAAKkL,OAAOE,iBAAiB;AAAEjJ,YAAAA,GAAAA,EAAK+I,OAAOC,iBAAiB;AAAA;QAC3E,MAAM,EAACnL,KAAKsT,QAAQ,GAAEnR,KAAKoR,QAAQ,GAAC,GAAGxI,aAAcsI,CAAAA,UAAAA,CAAAA,CAAAA;AACrD,YAAIxS,CAAGkL,EAAAA,MAAAA,CAAAA;AAEP,iBAASyH,KAAQ;YACfzH,MAASuB,GAAAA,OAAO,CAACzM,CAAE;AACnB,kBAAM+I,UAAamC,GAAAA,MAAM,CAACsH,UAAAA,CAAWhJ,IAAI,CAAC;YAC1C,OAAO,CAACR,6DAASkC,CAAAA,MAAM,CAACnE,KAAAA,CAAMyC,IAAI,CAAC,KAAKiJ,QAAW1J,GAAAA,UAAAA,IAAc2J,QAAW3J,GAAAA,UAAAA,CAAAA;AAC9E;AAEA,YAAK/I,CAAI,MAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AACzB,gBAAI2S,KAAS;gBACX,SAAS;aACV;AACD,gBAAI,CAACR,qBAAqB,CAACC,KAAAA,EAAOrL,OAAOmE,MAAQxC,EAAAA,KAAAA,CAAAA,CAAAA;AACjD,gBAAI0I,MAAQ;gBAEV,MAAM;aACP;AACH;AACA,YAAIA,MAAQ;AAEV,gBAAKpR,IAAIuI,IAAO,MAAGvI,CAAK,OAAG,EAAEA,CAAG;AAC9B,oBAAI2S,KAAS;oBACX,SAAS;iBACV;AACD,oBAAI,CAACR,qBAAqB,CAACC,KAAAA,EAAOrL,OAAOmE,MAAQxC,EAAAA,KAAAA,CAAAA,CAAAA;gBACjD,MAAM;AACR;SACD;QACD,OAAO0J,KAAAA,CAAAA;AACT;AAEAQ,IAAAA,kBAAAA,CAAmB7L,KAAK,EAAE;AACxB,cAAMmE,MAAS,OAAI,CAACC,WAAW,CAACsB,OAAO;AACvC,cAAM7G,SAAS,EAAE;AACjB,YAAI5F,GAAGuI,IAAM/B,EAAAA,KAAAA,CAAAA;QAEb,IAAKxG,CAAAA,GAAI,GAAGuI,IAAO2C,GAAAA,MAAAA,CAAOnL,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AAC/CwG,YAAAA,KAAAA,GAAQ0E,MAAM,CAAClL,CAAAA,CAAE,CAAC+G,KAAAA,CAAMyC,IAAI,CAAC;AAC7B,gBAAIR,6DAAAA,CAASxC,KAAQ;AACnBZ,gBAAAA,MAAAA,CAAO5E,IAAI,CAACwF,KAAAA,CAAAA,CAAAA;aACb;AACH;QACA,OAAOZ,MAAAA,CAAAA;AACT;AAKA,CACAiN,cAAiB;AACf,eAAO,KAAK;AACd;AAKAC,CAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;QACtB,MAAMY,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM9B,MAAAA,GAASD,KAAKC,MAAM;QAC1B,MAAMC,MAAAA,GAASF,KAAKE,MAAM;AAC1B,cAAM4B,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;QAC9B,OAAO;YACLuK,KAAO1J,EAAAA,MAAAA,GAAS,EAAKA,GAAAA,MAAAA,CAAO2J,gBAAgB,CAAC9H,MAAM,CAAC7B,MAAOG,CAAAA,IAAI,CAAC,IAAI,EAAE;YACtEhD,KAAO8C,EAAAA,MAAAA,GAAS,EAAKA,GAAAA,MAAAA,CAAO0J,gBAAgB,CAAC9H,MAAM,CAAC5B,MAAOE,CAAAA,IAAI,CAAC,IAAI,EAAE;AACxE;AACF;AAKA/J,CAAAA,OAAAA,CAAQoJ,IAAI,EAAE;QACZ,MAAMO,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,IAAI,CAACnH,MAAM,CAAC6E,IAAQ;AACpBO,QAAAA,IAAAA,CAAK6J,KAAK,GAAGpL,MAAAA,CAAOmH,6DAAcA,CAAC,IAAI,CAAClJ,OAAO,CAACoN,IAAI,EAAE9L,WAAYgC,CAAAA,IAAAA,CAAK/B,MAAM,EAAE+B,IAAAA,CAAK9B,MAAM,EAAE,IAAI,CAACuL,cAAc;AACjH;AAKA7O,CAAAA,MAAAA,CAAO6E,IAAI,EAAE,EAAC;IAEd5I,IAAO;QACL,MAAMqN,GAAAA,GAAM,IAAI,CAACD,IAAI;QACrB,MAAM/O,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM8K,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,cAAMgI,QAAW/J,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE;QAChC,MAAMiK,IAAAA,GAAO9U,MAAM+U,SAAS;AAC5B,cAAMtP,SAAS,EAAE;AACjB,cAAM3E,KAAQ,OAAI,CAAC0O,UAAU,IAAI;AACjC,cAAMqD,QAAQ,IAAI,CAACpD,UAAU,IAAKoF,QAAAA,CAASpT,MAAM,GAAGX,KAAAA,CAAAA;AACpD,cAAMkU,uBAA0B,OAAI,CAACxN,OAAO,CAACwN,uBAAuB;QACpE,IAAItT,CAAAA,CAAAA;QAEJ,IAAIoJ,IAAAA,CAAK+C,OAAO,EAAE;AAChB/C,YAAAA,IAAAA,CAAK+C,OAAO,CAAClM,IAAI,CAACqN,GAAAA,EAAK8F,MAAMhU,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;SACrC;AAED,YAAKnR,IAAIZ,KAAOY,EAAAA,CAAAA,GAAIZ,KAAQ+R,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;YACtC,MAAMqM,OAAAA,GAAU8G,QAAQ,CAACnT,CAAE;YAC3B,IAAIqM,OAAAA,CAAQW,MAAM,EAAE;gBAClB,SAAS;aACV;YACD,IAAIX,OAAAA,CAAQtI,MAAM,IAAIuP,uBAAyB;AAC7CvP,gBAAAA,MAAAA,CAAO/C,IAAI,CAACqL,OAAAA,CAAAA,CAAAA;aACP;gBACLA,OAAQpM,CAAAA,IAAI,CAACqN,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;aACnB;AACH;AAEA,YAAKpT,IAAI,CAAGA,EAAAA,CAAAA,GAAI+D,OAAOhE,MAAM,EAAE,EAAEC,CAAG;AAClC+D,YAAAA,MAAM,CAAC/D,CAAAA,CAAE,CAACC,IAAI,CAACqN,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;AACtB;AACF;AAQA,CACAG,QAAS/K,CAAAA,KAAK,EAAEzE,MAAM,EAAE;QACtB,MAAM8E,IAAAA,GAAO9E,MAAS,cAAW,SAAS;AAC1C,eAAOyE,UAAUpK,SAAa,QAAI,CAAC+M,WAAW,CAACgB,OAAO,GAClD,IAAI,CAACqH,4BAA4B,CAAC3K,QAClC,IAAI,CAAC4K,yBAAyB,CAACjL,KAAAA,IAAS,GAAGK,IAAK;AACtD;AAIA,CACAmI,WAAWxI,KAAK,EAAEzE,MAAM,EAAE8E,IAAI,EAAE;QAC9B,MAAMsD,OAAAA,GAAU,IAAI,CAACyC,UAAU;QAC/B,IAAI8E,OAAAA,CAAAA;QACJ,IAAIlL,KAAAA,IAAS,CAAKA,IAAAA,KAAAA,GAAQ,IAAI,CAAC2C,WAAW,CAAChC,IAAI,CAACpJ,MAAM,EAAE;AACtD,kBAAMsM,UAAU,IAAI,CAAClB,WAAW,CAAChC,IAAI,CAACX,KAAM;AAC5CkL,YAAAA,OAAAA,GAAUrH,OAAQ6B,CAAAA,QAAQ,KACvB7B,OAAQ6B,CAAAA,QAAQ,GAAG9B,iBAAAA,CAAkB,IAAI,CAAC4E,UAAU,IAAIxI,OAAO6D,OAAO;AACzEqH,YAAAA,OAAAA,CAAQxI,MAAM,GAAG,IAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;AAChCkL,YAAAA,OAAAA,CAAQnH,GAAG,GAAGJ,OAAQhD,CAAAA,IAAI,CAACX,KAAM;AACjCkL,YAAAA,OAAAA,CAAQlL,KAAK,GAAGkL,OAAQpH,CAAAA,SAAS,GAAG9D,KAAAA,CAAAA;SAC/B;AACLkL,YAAAA,OAAAA,GAAU,IAAI,CAACxF,QAAQ,KACpB,IAAI,CAACA,QAAQ,GAAGlC,qBAAqB,IAAI,CAAC1N,KAAK,CAAC0S,UAAU,IAAI,IAAI,CAACxI,KAAK;AAC3EkL,YAAAA,OAAAA,CAAQvH,OAAO,GAAGA,OAAAA,CAAAA;AAClBuH,YAAAA,OAAAA,CAAQlL,KAAK,GAAGkL,OAAAA,CAAQ5K,YAAY,GAAG,IAAI,CAACN,KAAK;SAClD;QAEDkL,OAAQ3P,CAAAA,MAAM,GAAG,CAAC,CAACA,MAAAA,CAAAA;AACnB2P,QAAAA,OAAAA,CAAQ7K,IAAI,GAAGA,IAAAA,CAAAA;QACf,OAAO6K,OAAAA,CAAAA;AACT;AAMAF,CAAAA,4BAAAA,CAA6B3K,IAAI,EAAE;QACjC,OAAO,IAAI,CAAC8K,sBAAsB,CAAC,IAAI,CAACxG,kBAAkB,CAAClD,EAAE,EAAEpB,IAAAA,CAAAA,CAAAA;AACjE;AAMA,CACA4K,yBAA0BjL,CAAAA,KAAK,EAAEK,IAAI,EAAE;QACrC,OAAO,IAAI,CAAC8K,sBAAsB,CAAC,IAAI,CAACvG,eAAe,CAACnD,EAAE,EAAEpB,IAAML,EAAAA,KAAAA,CAAAA,CAAAA;AACpE;AAIA,CACAmL,uBAAuBC,WAAW,EAAE/K,OAAO,SAAS,EAAEL,KAAK,EAAE;AAC3D,cAAMzE,SAAS8E,IAAS;QACxB,MAAMgL,KAAAA,GAAQ,IAAI,CAACtG,eAAe;QAClC,MAAMuG,QAAAA,GAAWF,cAAc,GAAM/K,GAAAA,IAAAA,CAAAA;QACrC,MAAM+D,MAAAA,GAASiH,KAAK,CAACC,QAAS;AAC9B,cAAMC,OAAU,OAAI,CAAC/F,mBAAmB,IAAIgG,6DAAQxL,CAAAA,KAAAA,CAAAA,CAAAA;AACpD,YAAIoE,MAAQ;AACV,mBAAOD,iBAAiBC,MAAQmH,EAAAA,OAAAA,CAAAA,CAAAA;SACjC;AACD,cAAMpP,MAAS,OAAI,CAACrG,KAAK,CAACqG,MAAM;AAChC,cAAMgM,YAAYhM,MAAOsP,CAAAA,uBAAuB,CAAC,IAAI,CAACxG,KAAK,EAAEmG,WAAAA,CAAAA,CAAAA;AAC7D,cAAMM,WAAWnQ,MAAS;YAAC,CAAC,EAAE6P,WAAY,MAAK,CAAC;AAAE;AAASA,YAAAA,WAAAA;AAAa;SAAG,GAAG;AAACA,YAAAA,WAAAA;AAAa;AAAG;AAC/F,cAAM/C,SAASlM,MAAOmM,CAAAA,eAAe,CAAC,IAAI,CAAClC,UAAU,EAAI+B,EAAAA,SAAAA,CAAAA,CAAAA;AACzD,cAAMwD,QAAQlP,MAAOC,CAAAA,IAAI,CAACC,yDAASgO,CAAAA,QAAQ,CAACS,WAAY;AAGxD,cAAMF,UAAU,IAAM,IAAI,CAAC1C,UAAU,CAACxI,OAAOzE,MAAQ8E,EAAAA,IAAAA,CAAAA,CAAAA;AACrD,cAAMjD,SAASjB,MAAOyP,CAAAA,mBAAmB,CAACvD,MAAAA,EAAQsD,OAAOT,OAASQ,EAAAA,QAAAA,CAAAA,CAAAA;QAElE,IAAItO,MAAAA,CAAOM,OAAO,EAAE;AAGlBN,YAAAA,MAAAA,CAAOM,OAAO,GAAG6N,OAAAA,CAAAA;AAKjBF,YAAAA,KAAK,CAACC,QAAS,IAAG7O,OAAOoP,MAAM,CAAC1H,iBAAiB/G,MAAQmO,EAAAA,OAAAA,CAAAA,CAAAA,CAAAA;SAC1D;QAED,OAAOnO,MAAAA,CAAAA;AACT;AAKA,CACA0O,mBAAmB9L,KAAK,EAAE+L,UAAU,EAAExQ,MAAM,EAAE;QAC5C,MAAMzF,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMuV,KAAAA,GAAQ,IAAI,CAACtG,eAAe;AAClC,cAAMuG,QAAW,IAAC,UAAU,EAAES,WAAW,CAAC;QAC1C,MAAM3H,MAAAA,GAASiH,KAAK,CAACC,QAAS;AAC9B,YAAIlH,MAAQ;YACV,OAAOA,MAAAA,CAAAA;SACR;QACD,IAAI9G,OAAAA,CAAAA;AACJ,YAAIxH,MAAMwH,OAAO,CAACV,SAAS,KAAK,KAAK,EAAE;AACrC,kBAAMT,MAAS,OAAI,CAACrG,KAAK,CAACqG,MAAM;AAChC,kBAAMgM,YAAYhM,MAAO6P,CAAAA,yBAAyB,CAAC,IAAI,CAAC/G,KAAK,EAAE8G,UAAAA,CAAAA,CAAAA;AAC/D,kBAAM1D,SAASlM,MAAOmM,CAAAA,eAAe,CAAC,IAAI,CAAClC,UAAU,EAAI+B,EAAAA,SAAAA,CAAAA,CAAAA;YACzD7K,OAAUnB,GAAAA,MAAAA,CAAOoM,cAAc,CAACF,MAAAA,EAAQ,IAAI,CAACG,UAAU,CAACxI,KAAAA,EAAOzE,MAAQwQ,EAAAA,UAAAA,CAAAA,CAAAA,CAAAA;SACxE;AACD,cAAMvO,aAAa,IAAItB,UAAAA,CAAWpG,KAAOwH,EAAAA,OAAAA,IAAWA,QAAQE,UAAU;QACtE,IAAIF,OAAAA,IAAWA,OAAQ2O,CAAAA,UAAU,EAAE;AACjCZ,YAAAA,KAAK,CAACC,QAAAA,CAAS,GAAG7O,MAAAA,CAAOoP,MAAM,CAACrO,UAAAA,CAAAA,CAAAA;SACjC;QACD,OAAOA,UAAAA,CAAAA;AACT;AAMA0O,CAAAA,gBAAAA,CAAiB5O,OAAO,EAAE;QACxB,IAAI,CAACA,OAAQI,CAAAA,OAAO,EAAE;AACpB;SACD;AACD,eAAO,IAAI,CAAC2H,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG5I,MAAOyB,CAAAA,MAAM,CAAC,IAAIZ,OAAO;AAChF;AAKA,CACA6O,cAAe9L,CAAAA,IAAI,EAAE+L,aAAa,EAAE;QAClC,OAAO,CAACA,iBAAiBlI,kBAAmB7D,CAAAA,IAAAA,CAAAA,IAAS,IAAI,CAACvK,KAAK,CAACuW,mBAAmB;AACrF;AAIC,CACDC,iBAAkB1V,CAAAA,KAAK,EAAEyJ,IAAI,EAAE;AAC7B,cAAMkM,SAAY,OAAI,CAACtB,yBAAyB,CAACrU,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACxD,MAAMmM,uBAAAA,GAA0B,IAAI,CAACnH,cAAc;AACnD,cAAM+G,aAAgB,OAAI,CAACF,gBAAgB,CAACK,SAAAA,CAAAA,CAAAA;AAC5C,cAAMJ,iBAAiB,IAAI,CAACA,cAAc,CAAC9L,IAAAA,EAAM+L,kBAAmBA,aAAkBI,KAAAA,uBAAAA,CAAAA;AACtF,YAAI,CAACC,mBAAmB,CAACL,aAAAA,EAAe/L,IAAMkM,EAAAA,SAAAA,CAAAA,CAAAA;QAC9C,OAAO;AAACH,YAAAA,aAAAA;AAAeD,YAAAA,cAAAA;AAAc;AACvC;AAMAO,CAAAA,aAAAA,CAAc7I,OAAO,EAAE7D,KAAK,EAAE9C,UAAU,EAAEmD,IAAI,EAAE;AAC9C,YAAI6D,mBAAmB7D,IAAO;YAC5B5D,MAAOyB,CAAAA,MAAM,CAAC2F,OAAS3G,EAAAA,UAAAA,CAAAA,CAAAA;SAClB;AACL,gBAAI,CAAC4O,kBAAkB,CAAC9L,OAAOK,IAAM7E,CAAAA,CAAAA,MAAM,CAACqI,OAAS3G,EAAAA,UAAAA,CAAAA,CAAAA;SACtD;AACH;AAKA,CACAuP,oBAAoBL,aAAa,EAAE/L,IAAI,EAAEhD,UAAU,EAAE;QACnD,IAAI+O,aAAAA,IAAiB,CAAClI,kBAAAA,CAAmB7D,IAAO;AAC9C,gBAAI,CAACyL,kBAAkB,CAAClW,WAAWyK,IAAM7E,CAAAA,CAAAA,MAAM,CAAC4Q,aAAe/O,EAAAA,UAAAA,CAAAA,CAAAA;SAChE;AACH;AAKAsP,CAAAA,SAAAA,CAAU9I,OAAO,EAAE7D,KAAK,EAAEK,IAAI,EAAE9E,MAAM,EAAE;AACtCsI,QAAAA,OAAAA,CAAQtI,MAAM,GAAGA,MAAAA,CAAAA;AACjB,cAAM+B,OAAU,OAAI,CAACyN,QAAQ,CAAC/K,KAAOzE,EAAAA,MAAAA,CAAAA,CAAAA;QACrC,IAAI,CAACuQ,kBAAkB,CAAC9L,KAAAA,EAAOK,MAAM9E,MAAQC,CAAAA,CAAAA,MAAM,CAACqI,OAAS;AAG3DvG,YAAAA,OAAAA,EAAS,CAAE/B,MAAAA,IAAU,IAAI,CAAC2Q,gBAAgB,CAAC5O,OAAaA,CAAAA,IAAAA,OAAAA;AAC1D;AACF;AAEAsP,IAAAA,gBAAAA,CAAiB/I,OAAO,EAAEvD,YAAY,EAAEN,KAAK,EAAE;AAC7C,YAAI,CAAC2M,SAAS,CAAC9I,OAAS7D,EAAAA,KAAAA,EAAO,UAAU,KAAK;AAChD;AAEA6M,IAAAA,aAAAA,CAAchJ,OAAO,EAAEvD,YAAY,EAAEN,KAAK,EAAE;AAC1C,YAAI,CAAC2M,SAAS,CAAC9I,OAAS7D,EAAAA,KAAAA,EAAO,UAAU,IAAI;AAC/C;AAIA,CACA8M,wBAA2B;AACzB,cAAMjJ,OAAU,OAAI,CAAClB,WAAW,CAACgB,OAAO;AAExC,YAAIE,OAAS;AACX,gBAAI,CAAC8I,SAAS,CAAC9I,OAASjO,EAAAA,SAAAA,EAAW,UAAU,KAAK;SACnD;AACH;AAIA,CACAmX,qBAAwB;AACtB,cAAMlJ,OAAU,OAAI,CAAClB,WAAW,CAACgB,OAAO;AAExC,YAAIE,OAAS;AACX,gBAAI,CAAC8I,SAAS,CAAC9I,OAASjO,EAAAA,SAAAA,EAAW,UAAU,IAAI;SAClD;AACH;AAKAsS,CAAAA,eAAAA,CAAgBH,gBAAgB,EAAE;QAChC,MAAMpH,IAAAA,GAAO,IAAI,CAACwE,KAAK;AACvB,cAAMwF,QAAW,OAAI,CAAChI,WAAW,CAAChC,IAAI;QAGtC,KAAK,MAAM,CAAC1E,MAAQ+Q,EAAAA,IAAAA,EAAMC,KAAK,IAAI,IAAI,CAACtH,SAAS,CAAE;YACjD,IAAI,CAAC1J,MAAO,EAAC+Q,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;AACrB;QACA,IAAI,CAACtH,SAAS,GAAG,EAAE;QAEnB,MAAMuH,OAAAA,GAAUvC,SAASpT,MAAM;QAC/B,MAAM4V,OAAAA,GAAUxM,KAAKpJ,MAAM;AAC3B,cAAMoR,KAAQjS,GAAAA,IAAAA,CAAKC,GAAG,CAACwW,OAASD,EAAAA,OAAAA,CAAAA,CAAAA;AAEhC,YAAIvE,KAAO;YAKT,IAAI,CAACD,KAAK,CAAC,CAAGC,EAAAA,KAAAA,CAAAA,CAAAA;SACf;AAED,YAAIwE,UAAUD,OAAS;AACrB,gBAAI,CAACE,eAAe,CAACF,OAAAA,EAASC,UAAUD,OAASnF,EAAAA,gBAAAA,CAAAA,CAAAA;SAC5C,UAAIoF,UAAUD,OAAS;AAC5B,gBAAI,CAACG,eAAe,CAACF,OAAAA,EAASD,OAAUC,GAAAA,OAAAA,CAAAA,CAAAA;SACzC;AACH;AAIA,CACAC,gBAAgBxW,KAAK,EAAE+R,KAAK,EAAEZ,gBAAAA,GAAmB,IAAI,EAAE;QACrD,MAAMnH,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMhC,IAAAA,GAAOC,KAAKD,IAAI;AACtB,cAAMhC,MAAM/H,KAAQ+R,GAAAA,KAAAA,CAAAA;QACpB,IAAInR,CAAAA,CAAAA;QAEJ,MAAM8V,IAAAA,GAAO,CAACC,GAAQ;AACpBA,YAAAA,GAAAA,CAAIhW,MAAM,IAAIoR,KAAAA,CAAAA;AACd,gBAAKnR,IAAI+V,GAAIhW,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAKmH,KAAKnH,CAAK;AACtC+V,gBAAAA,GAAG,CAAC/V,CAAE,IAAG+V,GAAG,CAAC/V,IAAImR,KAAM;AACzB;AACF;QACA2E,IAAK3M,CAAAA,IAAAA,CAAAA,CAAAA;AAEL,YAAKnJ,CAAIZ,GAAAA,KAAAA,EAAOY,CAAImH,GAAAA,GAAAA,EAAK,EAAEnH,CAAG;AAC5BmJ,YAAAA,IAAI,CAACnJ,CAAE,IAAG,IAAI,IAAI,CAACoN,eAAe;AACpC;QAEA,IAAI,IAAI,CAACM,QAAQ,EAAE;AACjBoI,YAAAA,IAAAA,CAAK1M,KAAKqD,OAAO;SAClB;QACD,IAAI,CAACyE,KAAK,CAAC9R,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAElB,YAAIZ,gBAAkB;AACpB,gBAAI,CAACyF,cAAc,CAAC7M,IAAAA,EAAM/J,OAAO+R,KAAO;SACzC;AACH;IAEA6E,cAAe3J,CAAAA,OAAO,EAAEjN,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE,EAAC;AAI7C,CACAgN,eAAgBzW,CAAAA,KAAK,EAAE+R,KAAK,EAAE;QAC5B,MAAM/H,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,IAAI,IAAI,CAACuC,QAAQ,EAAE;AACjB,kBAAMuI,UAAU7M,IAAKqD,CAAAA,OAAO,CAACyJ,MAAM,CAAC9W,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;YAC3C,IAAI/H,IAAAA,CAAK6D,QAAQ,EAAE;AACjBT,gBAAAA,WAAAA,CAAYpD,IAAM6M,EAAAA,OAAAA,CAAAA,CAAAA;aACnB;SACF;AACD7M,QAAAA,IAAAA,CAAKD,IAAI,CAAC+M,MAAM,CAAC9W,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAC1B;AAKAgF,CAAAA,KAAAA,CAAMC,IAAI,EAAE;QACV,IAAI,IAAI,CAAC1I,QAAQ,EAAE;AACjB,gBAAI,CAACS,SAAS,CAACnN,IAAI,CAACoV,IAAAA,CAAAA,CAAAA;SACf;AACL,kBAAM,CAAC3R,MAAAA,EAAQ+Q,IAAMC,EAAAA,IAAAA,CAAK,GAAGW,IAAAA,CAAAA;YAC7B,IAAI,CAAC3R,MAAO,EAAC+Q,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;SACpB;AACD,YAAI,CAACnX,KAAK,CAAC+X,YAAY,CAACrV,IAAI,CAAC;AAAC,gBAAI,CAACwH,KAAK;AAAK4N,YAAAA,GAAAA,IAAAA;AAAK;AACpD;IAEAE,WAAc;QACZ,MAAMnF,KAAAA,GAAQoF,UAAUxW,MAAM;QAC9B,IAAI,CAACoW,KAAK,CAAC;AAAC;AAAmB,gBAAI,CAACvH,UAAU,GAAGzF,IAAI,CAACpJ,MAAM,GAAGoR,KAAAA;AAAOA,YAAAA,KAAAA;AAAM;AAC9E;IAEAqF,UAAa;QACX,IAAI,CAACL,KAAK,CAAC;AAAC;AAAmB,gBAAI,CAAChL,WAAW,CAAChC,IAAI,CAACpJ,MAAM,GAAG;AAAG;AAAE;AACrE;IAEA0W,YAAe;QACb,IAAI,CAACN,KAAK,CAAC;AAAC;AAAmB;AAAG;AAAE;AACtC;IAEAO,aAActX,CAAAA,KAAK,EAAE+R,KAAK,EAAE;AAC1B,YAAIA,KAAO;YACT,IAAI,CAACgF,KAAK,CAAC;AAAC;AAAmB/W,gBAAAA,KAAAA;AAAO+R,gBAAAA,KAAAA;AAAM;SAC7C;QACD,MAAMwF,QAAAA,GAAWJ,SAAUxW,CAAAA,MAAM,GAAG;AACpC,YAAI4W,QAAU;YACZ,IAAI,CAACR,KAAK,CAAC;AAAC;AAAmB/W,gBAAAA,KAAAA;AAAOuX,gBAAAA,QAAAA;AAAS;SAChD;AACH;IAEAC,cAAiB;QACf,IAAI,CAACT,KAAK,CAAC;AAAC;AAAmB;AAAGI,YAAAA,SAAAA,CAAUxW,MAAM;AAAC;AACrD;AACF;;ACtiCA,SAAS8W,iBAAkB9P,CAAAA,KAAK,EAAEtI,IAAI,EAAE;AACtC,QAAI,CAACsI,KAAAA,CAAM+P,MAAM,CAACC,IAAI,EAAE;QACtB,MAAMC,YAAAA,GAAejQ,KAAMgE,CAAAA,uBAAuB,CAACtM,IAAAA,CAAAA,CAAAA;AACnD,YAAImH,SAAS,EAAE;QAEf,IAAK,IAAI5F,IAAI,CAAGuI,EAAAA,IAAAA,GAAOyO,aAAajX,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAMvI,CAAK;YACzD4F,MAASA,GAAAA,MAAAA,CAAOqR,MAAM,CAACD,YAAY,CAAChX,EAAE,CAACiL,UAAU,CAAC2H,kBAAkB,CAAC7L,KAAAA,CAAAA,CAAAA,CAAAA;AACvE;QACAA,KAAM+P,CAAAA,MAAM,CAACC,IAAI,GAAGG,6DAAAA,CAAatR,MAAOuR,CAAAA,IAAI,CAAC,CAACC,CAAGpP,EAAAA,CAAAA,GAAMoP,CAAIpP,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;KAC5D;IACD,OAAOjB,KAAAA,CAAM+P,MAAM,CAACC,IAAI;AAC1B;AAMA,UAASM,oBAAqBjO,CAAAA,IAAI,EAAE;IAClC,MAAMrC,KAAAA,GAAQqC,KAAKC,MAAM;AACzB,UAAMzD,MAASiR,GAAAA,iBAAAA,CAAkB9P,KAAOqC,EAAAA,IAAAA,CAAK3K,IAAI;IACjD,IAAIU,GAAAA,GAAM4H,MAAMuQ,OAAO;IACvB,IAAItX,CAAAA,EAAGuI,MAAMgP,IAAMjG,EAAAA,IAAAA,CAAAA;AACnB,UAAMkG,mBAAmB,IAAM;AAC7B,YAAID,IAAS,cAASA,IAAS,MAAC,KAAO;AAErC;SACD;AACD,YAAIvD,6DAAOA,CAAC1C,IAAO;YAEjBnS,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAACA,GAAAA,EAAKD,KAAKuY,GAAG,CAACF,OAAOjG,IAASnS,CAAAA,IAAAA,GAAAA,CAAAA,CAAAA;SAC9C;QACDmS,IAAOiG,GAAAA,IAAAA,CAAAA;AACT;IAEA,IAAKvX,CAAAA,GAAI,GAAGuI,IAAO3C,GAAAA,MAAAA,CAAO7F,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AAC/CuX,QAAAA,IAAAA,GAAOxQ,KAAM2Q,CAAAA,gBAAgB,CAAC9R,MAAM,CAAC5F,CAAE;AACvCwX,QAAAA,gBAAAA,EAAAA,CAAAA;AACF;IAEAlG,IAAOlT,GAAAA,SAAAA,CAAAA;IACP,IAAK4B,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAOxB,KAAM4Q,CAAAA,KAAK,CAAC5X,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QACpDuX,IAAOxQ,GAAAA,KAAAA,CAAM6Q,eAAe,CAAC5X,CAAAA,CAAAA,CAAAA;AAC7BwX,QAAAA,gBAAAA,EAAAA,CAAAA;AACF;IAEA,OAAOrY,GAAAA,CAAAA;AACT;AAQA,UAAS0Y,yBAAyBrP,KAAK,EAAEsP,KAAK,EAAEhS,OAAO,EAAEiS,UAAU,EAAE;IACnE,MAAMC,SAAAA,GAAYlS,QAAQmS,YAAY;AACtC,QAAIxR,IAAMyR,EAAAA,KAAAA,CAAAA;AAEV,QAAIC,6DAAaA,CAACH,SAAY;AAC5BvR,QAAAA,IAAAA,GAAOqR,KAAM3Y,CAAAA,GAAG,GAAG2G,OAAAA,CAAQsS,kBAAkB;AAC7CF,QAAAA,KAAAA,GAAQpS,QAAQuS,aAAa;KACxB;AAIL5R,QAAAA,IAAAA,GAAOuR,SAAYD,GAAAA,UAAAA,CAAAA;QACnBG,KAAQ;KACT;IAED,OAAO;AACLI,QAAAA,KAAAA,EAAO7R,IAAOsR,GAAAA,UAAAA;AACdG,QAAAA,KAAAA;AACA9Y,QAAAA,KAAAA,EAAO0Y,KAAMS,CAAAA,MAAM,CAAC/P,KAAAA,CAAM,GAAI/B,IAAO;AACvC;AACF;AAQA,UAAS+R,0BAA0BhQ,KAAK,EAAEsP,KAAK,EAAEhS,OAAO,EAAEiS,UAAU,EAAE;IACpE,MAAMQ,MAAAA,GAAST,MAAMS,MAAM;IAC3B,MAAMhB,IAAAA,GAAOgB,MAAM,CAAC/P,KAAM;IAC1B,IAAI8I,IAAAA,GAAO9I,QAAQ,CAAI+P,GAAAA,MAAM,CAAC/P,KAAQ,KAAE,GAAG,IAAI;IAC/C,IAAIiQ,IAAAA,GAAOjQ,KAAQ+P,GAAAA,MAAAA,CAAOxY,MAAM,GAAG,CAAIwY,GAAAA,MAAM,CAAC/P,KAAAA,GAAQ,CAAE,IAAG,IAAI;IAC/D,MAAMkQ,OAAAA,GAAU5S,QAAQsS,kBAAkB;IAE1C,IAAI9G,IAAAA,KAAS,IAAI,EAAE;AAGjBA,QAAAA,IAAAA,GAAOiG,IAAQkB,IAAAA,IAAS,SAAI,GAAGX,KAAAA,CAAM3Q,GAAG,GAAG2Q,KAAM1Y,CAAAA,KAAK,GAAGqZ,IAAAA,GAAOlB,IAAI,CAAD;KACpE;IAED,IAAIkB,IAAAA,KAAS,IAAI,EAAE;AAEjBA,QAAAA,IAAAA,GAAOlB,OAAOA,IAAOjG,GAAAA,IAAAA,CAAAA;KACtB;IAED,MAAMlS,KAAAA,GAAQmY,IAAO,GAACA,CAAAA,IAAAA,GAAOrY,IAAKC,CAAAA,GAAG,CAACmS,IAAAA,EAAMmH,IAAI,KAAK,CAAIC,GAAAA,OAAAA,CAAAA;AACzD,UAAMjS,OAAOvH,IAAKuY,CAAAA,GAAG,CAACgB,IAAAA,GAAOnH,QAAQ,CAAIoH,GAAAA,OAAAA,CAAAA;IAEzC,OAAO;AACLJ,QAAAA,KAAAA,EAAO7R,IAAOsR,GAAAA,UAAAA;AACdG,QAAAA,KAAAA,EAAOpS,QAAQuS,aAAa;AAC5BjZ,QAAAA,KAAAA;AACF;AACF;AAEA,SAASuZ,aAAAA,CAAcC,KAAK,EAAE1Y,IAAI,EAAEoJ,MAAM,EAAEtJ,CAAC,EAAE;AAC7C,UAAM6Y,aAAavP,MAAO4H,CAAAA,KAAK,CAAC0H,KAAK,CAAC,EAAE,EAAE5Y,CAAAA,CAAAA,CAAAA;AAC1C,UAAM8Y,WAAWxP,MAAO4H,CAAAA,KAAK,CAAC0H,KAAK,CAAC,EAAE,EAAE5Y,CAAAA,CAAAA,CAAAA;AACxC,UAAMb,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAAC0Z,UAAYC,EAAAA,QAAAA,CAAAA,CAAAA;AACjC,UAAMxX,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACuX,UAAYC,EAAAA,QAAAA,CAAAA,CAAAA;AACjC,QAAIC,QAAW5Z,GAAAA,GAAAA,CAAAA;AACf,QAAI6Z,MAAS1X,GAAAA,GAAAA,CAAAA;AAEb,QAAIpC,KAAKuY,GAAG,CAACtY,OAAOD,IAAKuY,CAAAA,GAAG,CAACnW,GAAM;QACjCyX,QAAWzX,GAAAA,GAAAA,CAAAA;QACX0X,MAAS7Z,GAAAA,GAAAA,CAAAA;KACV;AAIDe,IAAAA,IAAI,CAACoJ,MAAAA,CAAOE,IAAI,CAAC,GAAGwP,MAAAA,CAAAA;AAEpB9Y,IAAAA,IAAAA,CAAK+Y,OAAO,GAAG;AACbF,QAAAA,QAAAA;AACAC,QAAAA,MAAAA;QACA5Z,KAAOyZ,EAAAA,UAAAA;QACP1R,GAAK2R,EAAAA,QAAAA;AACL3Z,QAAAA,GAAAA;AACAmC,QAAAA,GAAAA;AACF;AACF;AAEA,SAAS4X,UAAAA,CAAWN,KAAK,EAAE1Y,IAAI,EAAEoJ,MAAM,EAAEtJ,CAAC,EAAE;AAC1C,QAAIyF,6DAAOA,CAACmT,KAAQ;QAClBD,aAAcC,CAAAA,KAAAA,EAAO1Y,MAAMoJ,MAAQtJ,EAAAA,CAAAA,CAAAA,CAAAA;KAC9B;QACLE,IAAI,CAACoJ,OAAOE,IAAI,CAAC,GAAGF,MAAO4H,CAAAA,KAAK,CAAC0H,KAAO5Y,EAAAA,CAAAA,CAAAA,CAAAA;KACzC;IACD,OAAOE,IAAAA,CAAAA;AACT;AAEA,SAASiZ,qBAAAA,CAAsB/P,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;IACvD,MAAM9H,MAAAA,GAASD,KAAKC,MAAM;IAC1B,MAAMC,MAAAA,GAASF,KAAKE,MAAM;IAC1B,MAAMqI,MAAAA,GAAStI,OAAOuI,SAAS;AAC/B,UAAMC,cAAcxI,MAAWC,KAAAA,MAAAA,CAAAA;AAC/B,UAAM4B,SAAS,EAAE;IACjB,IAAIlL,CAAAA,EAAGuI,MAAMrI,IAAM0Y,EAAAA,KAAAA,CAAAA;IAEnB,IAAK5Y,CAAAA,GAAIZ,OAAOmJ,IAAOnJ,GAAAA,KAAAA,GAAQ+R,KAAK,EAAEnR,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QACnD4Y,KAAQzP,GAAAA,IAAI,CAACnJ,CAAE;AACfE,QAAAA,IAAAA,GAAO,EAAC;AACRA,QAAAA,IAAI,CAACmJ,MAAAA,CAAOG,IAAI,CAAC,GAAGqI,WAAAA,IAAexI,MAAO6H,CAAAA,KAAK,CAACS,MAAM,CAAC3R,CAAAA,CAAE,EAAEA,CAAAA,CAAAA,CAAAA;AAC3DkL,QAAAA,MAAAA,CAAOlK,IAAI,CAACkY,UAAWN,CAAAA,KAAAA,EAAO1Y,MAAMoJ,MAAQtJ,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC9C;IACA,OAAOkL,MAAAA,CAAAA;AACT;AAEA,SAASkO,UAAAA,CAAWC,MAAM,EAAE;AAC1B,WAAOA,UAAUA,MAAON,CAAAA,QAAQ,KAAK3a,SAAaib,IAAAA,MAAAA,CAAOL,MAAM,KAAK5a,SAAAA,CAAAA;AACtE;AAEA,SAASkb,QAAQ7S,IAAI,EAAE6C,MAAM,EAAEiQ,UAAU,EAAE;AACzC,QAAI9S,SAAS,CAAG;AACd,eAAOwC,6DAAKxC,CAAAA,IAAAA,CAAAA,CAAAA;KACb;AACD,WAAO,CAAC6C,MAAAA,CAAOkQ,YAAY,EAAK,OAAI,CAAC,MAAMlQ,OAAOnK,GAAG,IAAIoa,aAAa,CAAI,IAAC,CAAC,CAAD;AAC7E;AAEA,SAASE,WAAAA,CAAY/T,UAAU,EAAE;IAC/B,IAAIwB,OAAAA,EAAS9H,KAAO+H,EAAAA,GAAAA,EAAKM,GAAKE,EAAAA,MAAAA,CAAAA;IAC9B,IAAIjC,UAAAA,CAAWgU,UAAU,EAAE;AACzBxS,QAAAA,OAAAA,GAAUxB,UAAWiU,CAAAA,IAAI,GAAGjU,UAAAA,CAAW6B,CAAC;QACxCnI,KAAQ;QACR+H,GAAM;KACD;AACLD,QAAAA,OAAAA,GAAUxB,UAAWiU,CAAAA,IAAI,GAAGjU,UAAAA,CAAW8B,CAAC;QACxCpI,KAAQ;QACR+H,GAAM;KACP;AACD,QAAID,OAAS;QACXO,GAAM;QACNE,MAAS;KACJ;QACLF,GAAM;QACNE,MAAS;KACV;IACD,OAAO;AAACvI,QAAAA,KAAAA;AAAO+H,QAAAA,GAAAA;AAAKD,QAAAA,OAAAA;AAASO,QAAAA,GAAAA;AAAKE,QAAAA,MAAAA;AAAM;AAC1C;AAEA,SAASiS,gBAAAA,CAAiBlU,UAAU,EAAEI,OAAO,EAAE4C,KAAK,EAAEF,KAAK,EAAE;IAC3D,IAAIqR,IAAAA,GAAO/T,QAAQgU,aAAa;AAChC,UAAMxV,MAAM,EAAC;AAEb,QAAI,CAACuV,IAAM;AACTnU,QAAAA,UAAAA,CAAWoU,aAAa,GAAGxV,GAAAA,CAAAA;AAC3B;KACD;IAED,IAAIuV,IAAAA,KAAS,IAAI,EAAE;AACjBnU,QAAAA,UAAAA,CAAWoU,aAAa,GAAG;AAACrS,YAAAA,GAAAA,EAAK,IAAI;AAAEC,YAAAA,KAAAA,EAAO,IAAI;AAAEC,YAAAA,MAAAA,EAAQ,IAAI;AAAEC,YAAAA,IAAAA,EAAM,IAAI;AAAA;AAC5E;KACD;AAED,UAAM,EAACxI,KAAAA,GAAO+H,GAAAA,GAAKD,OAAAA,GAASO,GAAAA,GAAKE,MAAAA,GAAO,GAAG8R,WAAY/T,CAAAA,UAAAA,CAAAA,CAAAA;IAEvD,IAAImU,IAAAA,KAAS,YAAYnR,KAAO;QAC9BhD,UAAWqU,CAAAA,kBAAkB,GAAG,IAAI;AACpC,YAAI,CAACrR,KAAAA,CAAM8C,IAAI,IAAI,OAAOhD,KAAO;YAC/BqR,IAAOpS,GAAAA,GAAAA,CAAAA;SACF,UAAI,CAACiB,KAAAA,CAAM+C,OAAO,IAAI,OAAOjD,KAAO;YACzCqR,IAAOlS,GAAAA,MAAAA,CAAAA;SACF;AACLrD,YAAAA,GAAG,CAAC0V,SAAUrS,CAAAA,MAAAA,EAAQvI,OAAO+H,GAAKD,EAAAA,OAAAA,CAAAA,CAAS,GAAG,IAAI;YAClD2S,IAAOpS,GAAAA,GAAAA,CAAAA;SACR;KACF;AAEDnD,IAAAA,GAAG,CAAC0V,SAAUH,CAAAA,IAAAA,EAAMza,OAAO+H,GAAKD,EAAAA,OAAAA,CAAAA,CAAS,GAAG,IAAI;AAChDxB,IAAAA,UAAAA,CAAWoU,aAAa,GAAGxV,GAAAA,CAAAA;AAC7B;AAEA,SAAS0V,SAAAA,CAAUH,IAAI,EAAEzC,CAAC,EAAEpP,CAAC,EAAEd,OAAO,EAAE;AACtC,QAAIA,OAAS;QACX2S,IAAOI,GAAAA,IAAAA,CAAKJ,MAAMzC,CAAGpP,EAAAA,CAAAA,CAAAA,CAAAA;QACrB6R,IAAOK,GAAAA,QAAAA,CAASL,MAAM7R,CAAGoP,EAAAA,CAAAA,CAAAA,CAAAA;KACpB;QACLyC,IAAOK,GAAAA,QAAAA,CAASL,MAAMzC,CAAGpP,EAAAA,CAAAA,CAAAA,CAAAA;KAC1B;IACD,OAAO6R,IAAAA,CAAAA;AACT;AAEA,SAASI,KAAKE,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAE;AAC1B,WAAOF,SAASC,EAAKC,GAAAA,EAAAA,GAAKF,IAASE,KAAAA,EAAAA,GAAKD,KAAKD,IAAI;AACnD;AAEA,SAASD,SAASI,CAAC,EAAElb,KAAK,EAAE+H,GAAG,EAAE;AAC/B,WAAOmT,MAAM,OAAUlb,GAAAA,KAAAA,GAAQkb,CAAM,aAAQnT,MAAMmT,CAAC;AACtD;AAEA,SAASC,gBAAAA,CAAiB7U,UAAU,EAAE,EAAC8U,gBAAc,EAAEtC,KAAK,EAAE;IAC5DxS,UAAW8U,CAAAA,aAAa,GAAGA,aAAkB,cACzCtC,UAAU,CAAI,UAAO,CAAC,GACtBsC,aAAa;AACnB;AAEe,MAAMC,aAAsBvN,SAAAA,iBAAAA,CAAAA;AAEzC,WAAOjD,KAAK,KAAM;AAIjB,CACD,OAAO9E,QAAW;AAChBgI,QAAAA,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB;QAEjBgL,kBAAoB;QACpBC,aAAe;AACfqC,QAAAA,OAAAA,EAAS,IAAI;QAEb1U,UAAY;YACV2U,OAAS;gBACPlc,IAAM;gBACNiH,UAAY;AAAC;AAAK;AAAK;AAAQ;AAAS;AAAS;AACnD;AACF;KACA;AAID,CACD,OAAOkV,SAAY;QACjB/O,MAAQ;YACNgP,OAAS;gBACPpc,IAAM;AACNqc,gBAAAA,MAAAA,EAAQ,IAAI;gBACZC,IAAM;AACJD,oBAAAA,MAAAA,EAAQ,IAAI;AACd;AACF;YACAE,OAAS;gBACPvc,IAAM;AACNwc,gBAAAA,WAAAA,EAAa,IAAI;AACnB;AACF;KACA;AAQFxJ,CAAAA,kBAAAA,CAAmBrI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;QAC3C,OAAOgI,qBAAAA,CAAsB/P,IAAMD,EAAAA,IAAAA,EAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAClD;AAOAI,CAAAA,cAAAA,CAAenI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;QACvC,OAAOgI,qBAAAA,CAAsB/P,IAAMD,EAAAA,IAAAA,EAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAClD;AAOAK,CAAAA,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACxC,cAAM,EAAC9H,MAAAA,GAAQC,MAAAA,GAAO,GAAGF,IAAAA,CAAAA;QACzB,MAAM,EAAC0I,QAAW,QAAKC,QAAAA,EAAW,MAAI,GAAG,IAAI,CAACrE,QAAQ;AACtD,cAAMnE,WAAWF,MAAOG,CAAAA,IAAI,KAAK,MAAMsI,WAAWC,QAAQ;AAC1D,cAAMtI,WAAWH,MAAOE,CAAAA,IAAI,KAAK,MAAMsI,WAAWC,QAAQ;AAC1D,cAAM7G,SAAS,EAAE;QACjB,IAAIlL,CAAAA,EAAGuI,MAAMrI,IAAMgb,EAAAA,GAAAA,CAAAA;QACnB,IAAKlb,CAAAA,GAAIZ,OAAOmJ,IAAOnJ,GAAAA,KAAAA,GAAQ+R,KAAK,EAAEnR,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YACnDkb,GAAM/R,GAAAA,IAAI,CAACnJ,CAAE;AACbE,YAAAA,IAAAA,GAAO,EAAC;YACRA,IAAI,CAACmJ,MAAOG,CAAAA,IAAI,CAAC,GAAGH,OAAO6H,KAAK,CAACc,6DAAiBkJ,CAAAA,GAAAA,EAAK3R,QAAWvJ,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAClEkL,YAAAA,MAAAA,CAAOlK,IAAI,CAACkY,UAAAA,CAAWlH,6DAAgBA,CAACkJ,GAAKzR,EAAAA,QAAAA,CAAAA,EAAWvJ,MAAMoJ,MAAQtJ,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACxE;QACA,OAAOkL,MAAAA,CAAAA;AACT;AAKAiH,CAAAA,qBAAAA,CAAsBC,KAAK,EAAErL,KAAK,EAAEmE,MAAM,EAAExC,KAAK,EAAE;AACjD,aAAK,CAACyJ,qBAAqB,CAACC,KAAAA,EAAOrL,OAAOmE,MAAQxC,EAAAA,KAAAA,CAAAA,CAAAA;QAClD,MAAM2Q,MAAAA,GAASnO,OAAO+N,OAAO;AAC7B,YAAII,UAAUtS,KAAU,SAAI,CAACoE,WAAW,CAAC7B,MAAM,EAAE;YAE/C8I,KAAMjT,CAAAA,GAAG,GAAGD,IAAKC,CAAAA,GAAG,CAACiT,KAAMjT,CAAAA,GAAG,EAAEka,MAAAA,CAAOla,GAAG;YAC1CiT,KAAM9Q,CAAAA,GAAG,GAAGpC,IAAKoC,CAAAA,GAAG,CAAC8Q,KAAM9Q,CAAAA,GAAG,EAAE+X,MAAAA,CAAO/X,GAAG;SAC3C;AACH;AAKA,CACAuR,cAAiB;QACf,OAAO;AACT;AAKAC,CAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;QACtB,MAAMY,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,cAAM,EAAC9B,MAAAA,GAAQC,MAAAA,GAAO,GAAGF,IAAAA,CAAAA;AACzB,cAAM8B,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;QAC9B,MAAM6Q,MAAAA,GAASnO,OAAO+N,OAAO;QAC7B,MAAMzS,KAAAA,GAAQ4S,WAAWC,MACrB,UAAMA,OAAOja,KAAK,GAAG,OAAOia,MAAOlS,CAAAA,GAAG,GAAG,GACzC,QAAKmC,OAAO0J,gBAAgB,CAAC9H,MAAM,CAAC5B,MAAAA,CAAOE,IAAI,CAAC,CAAC;QAErD,OAAO;YACLuJ,KAAO,OAAK1J,OAAO2J,gBAAgB,CAAC9H,MAAM,CAAC7B,MAAAA,CAAOG,IAAI,CAAC;AACvDhD,YAAAA,KAAAA;AACF;AACF;IAEA4H,UAAa;QACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI;AAE/B,aAAK,CAACI,UAAU;QAEhB,MAAMhF,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B/B,QAAAA,IAAAA,CAAKV,KAAK,GAAG,IAAI,CAACkG,UAAU,GAAGlG,KAAK;AACtC;AAEA1E,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMO,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,IAAI,CAAC6K,cAAc,CAAC5M,IAAKD,CAAAA,IAAI,EAAE,GAAGC,IAAKD,CAAAA,IAAI,CAACpJ,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;AACtD;AAEAmN,IAAAA,cAAAA,CAAemF,IAAI,EAAE/b,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACvC,cAAMmH,QAAQnH,IAAS;QACvB,MAAM,EAACL,KAAK,GAAE2C,WAAa,IAAC7B,SAAO,GAAC,GAAG,IAAI;QAC3C,MAAMqQ,IAAAA,GAAOrQ,OAAO8R,YAAY;QAChC,MAAM1B,UAAAA,GAAapQ,OAAOkQ,YAAY;QACtC,MAAM1B,KAAAA,GAAQ,IAAI,CAACuD,SAAS;QAC5B,MAAM,EAACzG,aAAa,GAAED,cAAc,GAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC1V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;AAEtE,YAAK,IAAI7I,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQ+R,OAAOnR,CAAK;AAC1C,kBAAMkL,MAAS,OAAI,CAAC+G,SAAS,CAACjS,CAAAA,CAAAA,CAAAA;YAC9B,MAAMsb,OAAAA,GAAUtL,SAASmI,6DAAcjN,CAAAA,MAAM,CAAC5B,MAAOE,CAAAA,IAAI,CAAC,CAAI;AAACmQ,gBAAAA,IAAAA;gBAAM4B,IAAM5B,EAAAA,IAAAA;AAAI,gBAAI,IAAI,CAAC6B,wBAAwB,CAACxb,CAAE;AACnH,kBAAMyb,OAAU,OAAI,CAACC,wBAAwB,CAAC1b,CAAG8X,EAAAA,KAAAA,CAAAA,CAAAA;AACjD,kBAAMpP,KAAQ,GAACwC,CAAAA,MAAAA,CAAOE,OAAO,IAAI,EAAC,EAAG9B,MAAOE,CAAAA,IAAI,CAAC;AAEjD,kBAAM9D,UAAa;AACjBgU,gBAAAA,UAAAA;AACAC,gBAAAA,IAAAA,EAAM2B,QAAQ3B,IAAI;AAClBI,gBAAAA,kBAAAA,EAAoB,CAACrR,KAAAA,IAAS0Q,UAAWlO,CAAAA,MAAAA,CAAO+N,OAAO,KAAMzQ,KAAUE,KAAAA,KAAAA,CAAM8C,IAAI,IAAIhD,KAAUE,KAAAA,KAAAA,CAAM+C,OAAO;AAC5GlE,gBAAAA,CAAAA,EAAGmS,UAAa4B,GAAAA,OAAAA,CAAQC,IAAI,GAAGE,QAAQE,MAAM;AAC7CnU,gBAAAA,CAAAA,EAAGkS,UAAa+B,GAAAA,OAAAA,CAAQE,MAAM,GAAGL,QAAQC,IAAI;gBAC7CK,MAAQlC,EAAAA,UAAAA,GAAa+B,QAAQhV,IAAI,GAAGvH,KAAKuY,GAAG,CAAC6D,OAAQ7U,CAAAA,IAAI,CAAC;gBAC1DoV,KAAOnC,EAAAA,UAAAA,GAAaxa,KAAKuY,GAAG,CAAC6D,QAAQ7U,IAAI,IAAIgV,QAAQhV,IAAI;AAC3D;AAEA,gBAAIkO,cAAgB;AAClBjP,gBAAAA,UAAAA,CAAWI,OAAO,GAAG8O,aAAiB,QAAI,CAACnB,yBAAyB,CAACzT,CAAGmb,EAAAA,IAAI,CAACnb,CAAE,EAAC+D,MAAM,GAAG,WAAW8E,IAAI;aACzG;YACD,MAAM/C,OAAAA,GAAUJ,WAAWI,OAAO,IAAIqV,IAAI,CAACnb,CAAAA,CAAE,CAAC8F,OAAO;YACrD8T,gBAAiBlU,CAAAA,UAAAA,EAAYI,SAAS4C,KAAOF,EAAAA,KAAAA,CAAAA,CAAAA;YAC7C+R,gBAAiB7U,CAAAA,UAAAA,EAAYI,OAASgS,EAAAA,KAAAA,CAAMI,KAAK;YACjD,IAAI,CAAChD,aAAa,CAACiG,IAAI,CAACnb,CAAE,GAAEA,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;AAC7C;AACF;AAQA,CACAiT,UAAWC,CAAAA,IAAI,EAAEzP,SAAS,EAAE;AAC1B,cAAM,EAACjD,MAAM,GAAC,GAAG,IAAI,CAAC8B,WAAW;AACjC,cAAM9C,WAAWgB,MAAO0B,CAAAA,uBAAuB,CAAC,IAAI,CAAC0C,KAAK,EACvD3B,MAAM,CAAC1C,CAAAA,IAAQA,GAAAA,IAAAA,CAAK6B,UAAU,CAACnF,OAAO,CAAC4U,OAAO;AACjD,cAAM7Q,OAAUR,GAAAA,MAAAA,CAAOvD,OAAO,CAAC+D,OAAO;AACtC,cAAMY,SAAS,EAAE;QAEjB,MAAMuR,QAAAA,GAAW,CAAC5S,IAAS;AACzB,kBAAM8B,MAAS9B,GAAAA,IAAAA,CAAK6B,UAAU,CAACgH,SAAS,CAAC3F,SAAAA,CAAAA,CAAAA;YACzC,MAAM2P,GAAAA,GAAM/Q,UAAUA,MAAM,CAAC9B,KAAKE,MAAM,CAACE,IAAI,CAAC;YAE9C,IAAI2O,6DAAAA,CAAc8D,GAAQC,CAAAA,IAAAA,KAAAA,CAAMD,GAAM;AACpC,uBAAO,IAAI;aACZ;AACH;QAEA,KAAK,MAAM7S,QAAQf,QAAU;YAC3B,IAAIiE,SAAAA,KAAclO,SAAa4d,IAAAA,QAAAA,CAAS5S,IAAO;gBAC7C,SAAS;aACV;AAOD,gBAAIS,YAAY,KAAK,IAAIY,MAAO0R,CAAAA,OAAO,CAAC/S,IAAKV,CAAAA,KAAK,CAAM,MAAC,KAC1DmB,OAAYzL,KAAAA,SAAAA,IAAagL,IAAKV,CAAAA,KAAK,KAAKtK,SAAY;gBACjDqM,MAAOzJ,CAAAA,IAAI,CAACoI,IAAAA,CAAKV,KAAK;aACvB;YACD,IAAIU,IAAAA,CAAKZ,KAAK,KAAKuT,IAAM;gBACvB,MAAM;aACP;AACH;QAKA,IAAI,CAACtR,MAAO1K,CAAAA,MAAM,EAAE;AAClB0K,YAAAA,MAAAA,CAAOzJ,IAAI,CAAC5C,SAAAA,CAAAA,CAAAA;SACb;QAED,OAAOqM,MAAAA,CAAAA;AACT;AAMA2R,CAAAA,cAAAA,CAAe5T,KAAK,EAAE;AACpB,eAAO,IAAI,CAACsT,UAAU,CAAC1d,SAAAA,EAAWoK,OAAOzI,MAAM;AACjD;AASA,CACAsc,eAAevT,YAAY,EAAEwT,IAAI,EAAEhQ,SAAS,EAAE;AAC5C,cAAM7B,MAAS,OAAI,CAACqR,UAAU,CAAChT,YAAcwD,EAAAA,SAAAA,CAAAA,CAAAA;QAC7C,MAAM9D,KAAAA,GAAQ,IAAC8T,KAASle,SACpBqM,GAAAA,MAAAA,CAAO0R,OAAO,CAACG,IACf,KAAC,CAAC;QAEN,OAAQ9T,UAAU,CAAC,IACfiC,OAAO1K,MAAM,GAAG,IAChByI,KAAK;AACX;AAIA,CACA6S,SAAY;QACV,MAAMpU,IAAAA,GAAO,IAAI,CAACnB,OAAO;QACzB,MAAMsD,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM9B,MAAAA,GAASD,KAAKC,MAAM;AAC1B,cAAMkP,SAAS,EAAE;AACjB,YAAIvY,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAKvI,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAOa,IAAKD,CAAAA,IAAI,CAACpJ,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AAClDuY,YAAAA,MAAAA,CAAOvX,IAAI,CAACqI,MAAOqO,CAAAA,gBAAgB,CAAC,IAAI,CAACzF,SAAS,CAACjS,CAAE,EAACqJ,MAAOG,CAAAA,IAAI,CAAC,EAAExJ,CAAAA,CAAAA,CAAAA,CAAAA;AACtE;QAEA,MAAMiY,YAAAA,GAAehR,KAAKgR,YAAY;QACtC,MAAM9Y,GAAAA,GAAM8Y,gBAAgBZ,oBAAqBjO,CAAAA,IAAAA,CAAAA,CAAAA;QAEjD,OAAO;AACLjK,YAAAA,GAAAA;AACAoZ,YAAAA,MAAAA;AACAnZ,YAAAA,KAAAA,EAAOiK,OAAOkT,WAAW;AACzBpV,YAAAA,GAAAA,EAAKkC,OAAOmT,SAAS;YACrBzE,UAAY,MAAI,CAACqE,cAAc;YAC/BrV,KAAOsC,EAAAA,MAAAA;AACPqR,YAAAA,OAAAA,EAASzT,KAAKyT,OAAO;AAErBxC,YAAAA,KAAAA,EAAOD,eAAe,CAAIhR,GAAAA,IAAAA,CAAKmR,kBAAkB,GAAGnR,KAAKoR,aAAa;AACxE;AACF;AAMAmD,CAAAA,wBAAAA,CAAyBhT,KAAK,EAAE;QAC9B,MAAM,EAAC2C,aAAa,EAAC7B,MAAAA,GAAQ2D,QAAQ,GAAEzE,KAAOM,EAAAA,YAAAA,GAAa,GAAEhD,OAAS,IAAC6T,MAAM8C,SAAS,GAAEC,eAAa,GAAC,GAAG,IAAI;AAC7G,cAAMnD,aAAakD,SAAa;AAChC,cAAMvR,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;QAC9B,MAAM6Q,MAAAA,GAASnO,OAAO+N,OAAO;AAC7B,cAAM0D,WAAWvD,UAAWC,CAAAA,MAAAA,CAAAA,CAAAA;AAC5B,YAAI7S,KAAQ0E,GAAAA,MAAM,CAAC5B,MAAAA,CAAOE,IAAI,CAAC;AAC/B,YAAIpK,KAAQ;QACZ,IAAIW,MAAAA,GAASkN,WAAW,IAAI,CAACxE,UAAU,CAACa,MAAAA,EAAQ4B,MAAQ+B,EAAAA,QAAAA,CAAAA,GAAYzG,KAAK;AACzE,YAAI+U,IAAM9U,EAAAA,IAAAA,CAAAA;AAEV,YAAI1G,WAAWyG,KAAO;AACpBpH,YAAAA,KAAAA,GAAQW,MAASyG,GAAAA,KAAAA,CAAAA;YACjBzG,MAASyG,GAAAA,KAAAA,CAAAA;SACV;AAED,YAAImW,QAAU;AACZnW,YAAAA,KAAAA,GAAQ6S,OAAON,QAAQ;AACvBhZ,YAAAA,MAAAA,GAASsZ,MAAOL,CAAAA,MAAM,GAAGK,MAAAA,CAAON,QAAQ;AAExC,gBAAIvS,UAAU,CAAKyC,IAAAA,6DAAAA,CAAKzC,WAAWyC,6DAAKoQ,CAAAA,MAAAA,CAAOL,MAAM,CAAG;gBACtD5Z,KAAQ;aACT;YACDA,KAASoH,IAAAA,KAAAA,CAAAA;SACV;AAED,cAAMqS,aAAa,CAACV,6DAAAA,CAAcsE,cAAc,CAACE,QAAAA,GAAWF,YAAYrd,KAAK;QAC7E,IAAIua,IAAAA,GAAOrQ,MAAOoO,CAAAA,gBAAgB,CAACmB,UAAAA,CAAAA,CAAAA;AAEnC,YAAI,IAAI,CAACva,KAAK,CAACse,iBAAiB,CAACpU,KAAQ;YACvC+S,IAAOjS,GAAAA,MAAAA,CAAOoO,gBAAgB,CAACtY,KAAQW,GAAAA,MAAAA,CAAAA,CAAAA;SAClC;YAELwb,IAAO5B,GAAAA,IAAAA,CAAAA;SACR;AAEDlT,QAAAA,IAAAA,GAAO8U,IAAO5B,GAAAA,IAAAA,CAAAA;AAEd,YAAIza,IAAKuY,CAAAA,GAAG,CAAChR,IAAAA,CAAAA,GAAQiW,YAAc;YACjCjW,IAAO6S,GAAAA,OAAAA,CAAQ7S,IAAM6C,EAAAA,MAAAA,EAAQiQ,UAAcmD,CAAAA,GAAAA,YAAAA,CAAAA;AAC3C,gBAAIlW,UAAU+S,UAAY;AACxBI,gBAAAA,IAAAA,IAAQlT,IAAO;aAChB;YACD,MAAMoW,UAAAA,GAAavT,MAAOwT,CAAAA,kBAAkB,CAAC;YAC7C,MAAMC,QAAAA,GAAWzT,MAAOwT,CAAAA,kBAAkB,CAAC;AAC3C,kBAAM3d,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAAC0d,UAAYE,EAAAA,QAAAA,CAAAA,CAAAA;AACjC,kBAAMzb,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACub,UAAYE,EAAAA,QAAAA,CAAAA,CAAAA;AACjCpD,YAAAA,IAAAA,GAAOza,KAAKoC,GAAG,CAACpC,KAAKC,GAAG,CAACwa,MAAMrY,GAAMnC,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA;AACrCoc,YAAAA,IAAAA,GAAO5B,IAAOlT,GAAAA,IAAAA,CAAAA;YAEd,IAAIwG,QAAAA,IAAY,CAAC0P,QAAU;AAEzBzR,gBAAAA,MAAAA,CAAOE,OAAO,CAAC9B,MAAAA,CAAOE,IAAI,CAAC,CAACmC,aAAa,CAAC7C,YAAa,IAAGQ,OAAO0T,gBAAgB,CAACzB,IAAQjS,CAAAA,GAAAA,MAAAA,CAAO0T,gBAAgB,CAACrD,IAAAA,CAAAA,CAAAA;aACnH;SACF;AAED,YAAIA,IAASrQ,KAAAA,MAAAA,CAAOoO,gBAAgB,CAAC6B,UAAa;AAChD,kBAAM0D,WAAWhU,6DAAKxC,CAAAA,IAAAA,CAAAA,GAAQ6C,MAAO4T,CAAAA,oBAAoB,CAAC3D,UAAc;YACxEI,IAAQsD,IAAAA,QAAAA,CAAAA;YACRxW,IAAQwW,IAAAA,QAAAA,CAAAA;SACT;QAED,OAAO;AACLxW,YAAAA,IAAAA;AACAkT,YAAAA,IAAAA;AACA4B,YAAAA,IAAAA;AACAI,YAAAA,MAAAA,EAAQJ,OAAO9U,IAAO;AACxB;AACF;AAIA,CACAiV,wBAAyBlT,CAAAA,KAAK,EAAEsP,KAAK,EAAE;QACrC,MAAM/Q,KAAAA,GAAQ+Q,MAAM/Q,KAAK;QACzB,MAAMjB,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAMkW,QAAAA,GAAWlW,QAAQkW,QAAQ;AACjC,cAAMmB,eAAkBnO,GAAAA,6DAAAA,CAAelJ,OAAQqX,CAAAA,eAAe,EAAEC,QAAAA,CAAAA,CAAAA;AAChE,YAAIzB,MAAQlV,EAAAA,IAAAA,CAAAA;QACZ,IAAIqR,KAAAA,CAAM4C,OAAO,EAAE;YACjB,MAAM3C,UAAAA,GAAaiE,WAAW,IAAI,CAACI,cAAc,CAAC5T,KAAAA,CAAAA,GAASsP,MAAMC,UAAU;AAC3E,kBAAM3F,KAAQtM,GAAAA,OAAAA,CAAQmS,YAAY,KAAK,SACnCO,yBAA0BhQ,CAAAA,KAAAA,EAAOsP,KAAOhS,EAAAA,OAAAA,EAASiS,UACjDF,CAAAA,GAAAA,wBAAAA,CAAyBrP,KAAOsP,EAAAA,KAAAA,EAAOhS,SAASiS,UAAW;AAE/D,kBAAMsF,aAAa,IAAI,CAAChB,cAAc,CAAC,IAAI,CAAC7T,KAAK,EAAE,IAAI,CAAC2C,WAAW,CAACzC,KAAK,EAAEsT,QAAAA,GAAWxT,QAAQpK,SAAS;YACvGud,MAASvJ,GAAAA,KAAAA,CAAMhT,KAAK,GAAIgT,KAAAA,CAAMkG,KAAK,GAAG+E,UAAAA,GAAejL,KAAMkG,CAAAA,KAAK,GAAG;YACnE7R,IAAOvH,GAAAA,IAAAA,CAAKC,GAAG,CAACge,eAAAA,EAAiB/K,MAAMkG,KAAK,GAAGlG,MAAM8F,KAAK;SACrD;AAELyD,YAAAA,MAAAA,GAAS5U,KAAM2Q,CAAAA,gBAAgB,CAAC,IAAI,CAACzF,SAAS,CAACzJ,KAAAA,CAAM,CAACzB,KAAAA,CAAMyC,IAAI,CAAC,EAAEhB,KAAAA,CAAAA,CAAAA;YACnE/B,IAAOvH,GAAAA,IAAAA,CAAKC,GAAG,CAACge,eAAAA,EAAiBrF,MAAM3Y,GAAG,GAAG2Y,MAAMI,KAAK;SACzD;QAED,OAAO;AACLyB,YAAAA,IAAAA,EAAMgC,SAASlV,IAAO;AACtB8U,YAAAA,IAAAA,EAAMI,SAASlV,IAAO;AACtBkV,YAAAA,MAAAA;AACAlV,YAAAA,IAAAA;AACF;AACF;IAEAxG,IAAO;QACL,MAAMmJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM7B,MAAAA,GAASF,KAAKE,MAAM;QAC1B,MAAMgU,KAAAA,GAAQlU,KAAKD,IAAI;QACvB,MAAMZ,IAAAA,GAAO+U,MAAMvd,MAAM;AACzB,YAAIC,CAAI;QAER,MAAOA,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AACpB,gBAAI,IAAI,CAACiS,SAAS,CAACjS,CAAE,EAACsJ,OAAOE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC8T,KAAK,CAACtd,CAAE,EAACgN,MAAM,EAAE;AAC/DsQ,gBAAAA,KAAK,CAACtd,CAAE,EAACC,IAAI,CAAC,IAAI,CAACoN,IAAI;aACxB;AACH;AACF;AAEF;;AC5oBe,MAAMkQ,gBAAyBrQ,SAAAA,iBAAAA,CAAAA;AAE5C,WAAOjD,KAAK,QAAS;AAIpB,CACD,OAAO9E,QAAW;AAChBgI,QAAAA,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB;QAEjBpH,UAAY;YACV2U,OAAS;gBACPlc,IAAM;gBACNiH,UAAY;AAAC;AAAK;AAAK;AAAe;AAAS;AACjD;AACF;KACA;AAID,CACD,OAAOkV,SAAY;QACjB/O,MAAQ;YACNtE,CAAG;gBACD9I,IAAM;AACR;YACA+I,CAAG;gBACD/I,IAAM;AACR;AACF;KACA;IAEF2P,UAAa;QACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI;AAC/B,aAAK,CAACI,UAAU;AAClB;AAMAqD,CAAAA,kBAAAA,CAAmBrI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AAC3C,cAAMjG,SAAS,KAAK,CAACuG,kBAAkB,CAACrI,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAC3D,YAAK,IAAInR,CAAI,MAAGA,IAAIkL,MAAOnL,CAAAA,MAAM,EAAEC,CAAK;YACtCkL,MAAM,CAAClL,CAAE,EAACiZ,OAAO,GAAG,IAAI,CAACxF,yBAAyB,CAACzT,CAAIZ,GAAAA,KAAAA,CAAAA,CAAOoe,MAAM;AACtE;QACA,OAAOtS,MAAAA,CAAAA;AACT;AAMAqG,CAAAA,cAAAA,CAAenI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACvC,cAAMjG,SAAS,KAAK,CAACqG,cAAc,CAACnI,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AACvD,YAAK,IAAInR,CAAI,MAAGA,IAAIkL,MAAOnL,CAAAA,MAAM,EAAEC,CAAK;AACtC,kBAAME,IAAOiJ,GAAAA,IAAI,CAAC/J,KAAAA,GAAQY,CAAE;AAC5BkL,YAAAA,MAAM,CAAClL,CAAE,EAACiZ,OAAO,GAAGjK,6DAAcA,CAAC9O,IAAI,CAAC,CAAE,GAAE,IAAI,CAACuT,yBAAyB,CAACzT,CAAAA,GAAIZ,OAAOoe,MAAM;AAC9F;QACA,OAAOtS,MAAAA,CAAAA;AACT;AAMAsG,CAAAA,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACxC,cAAMjG,SAAS,KAAK,CAACsG,eAAe,CAACpI,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AACxD,YAAK,IAAInR,CAAI,MAAGA,IAAIkL,MAAOnL,CAAAA,MAAM,EAAEC,CAAK;AACtC,kBAAME,IAAOiJ,GAAAA,IAAI,CAAC/J,KAAAA,GAAQY,CAAE;YAC5BkL,MAAM,CAAClL,EAAE,CAACiZ,OAAO,GAAGjK,6DAAe9O,CAAAA,IAAAA,IAAQA,KAAK6H,CAAC,IAAI,CAAC7H,IAAK6H,CAAAA,CAAC,EAAE,IAAI,CAAC0L,yBAAyB,CAACzT,CAAAA,GAAIZ,OAAOoe,MAAM;AAChH;QACA,OAAOtS,MAAAA,CAAAA;AACT;AAIA,CACA2H,cAAiB;AACf,cAAM1J,IAAO,OAAI,CAACgC,WAAW,CAAChC,IAAI;AAElC,YAAI7H,GAAM;QACV,IAAK,IAAItB,IAAImJ,IAAKpJ,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,IAAEA,CAAG;AACzCsB,YAAAA,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAK6H,IAAI,CAACnJ,CAAAA,CAAE,CAACyG,IAAI,CAAC,IAAI,CAACgN,yBAAyB,CAACzT,CAAM;AACxE;AACA,eAAOsB,MAAM,CAAKA,IAAAA,GAAAA,CAAAA;AACpB;AAKAwR,CAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;QACtB,MAAMY,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMwG,MAAAA,GAAS,IAAI,CAACrT,KAAK,CAAC6K,IAAI,CAACwI,MAAM,IAAI,EAAE;AAC3C,cAAM,EAACtK,MAAAA,GAAQC,MAAAA,GAAO,GAAG8B,IAAAA,CAAAA;AACzB,cAAM8B,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;AAC9B,cAAMjB,CAAIF,GAAAA,MAAAA,CAAO2L,gBAAgB,CAAC9H,OAAO3D,CAAC;AAC1C,cAAMC,CAAIF,GAAAA,MAAAA,CAAO0L,gBAAgB,CAAC9H,OAAO1D,CAAC;QAC1C,MAAMO,CAAAA,GAAImD,OAAO+N,OAAO;QAExB,OAAO;YACLlG,KAAOpB,EAAAA,MAAM,CAACnJ,KAAAA,CAAM,IAAI;YACxBhC,KAAO,QAAMe,CAAI,UAAOC,CAAKO,IAAAA,IAAI,IAAOA,GAAAA,CAAAA,GAAI,EAAC,CAAK;AACpD;AACF;AAEA/D,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;AACX,cAAM4U,MAAS,OAAI,CAACtS,WAAW,CAAChC,IAAI;AAGpC,YAAI,CAAC6M,cAAc,CAACyH,QAAQ,CAAGA,EAAAA,MAAAA,CAAO1d,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;AAChD;AAEAmN,IAAAA,cAAAA,CAAeyH,MAAM,EAAEre,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACzC,cAAMmH,QAAQnH,IAAS;QACvB,MAAM,EAACQ,SAAQC,MAAAA,GAAO,GAAG,IAAI,CAAC6B,WAAW;QACzC,MAAM,EAACyJ,aAAa,GAAED,cAAc,GAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC1V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACtE,MAAMwC,KAAAA,GAAQhC,OAAOG,IAAI;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI;AAEzB,YAAK,IAAIxJ,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQ+R,OAAOnR,CAAK;YAC1C,MAAM0d,KAAAA,GAAQD,MAAM,CAACzd,CAAE;AACvB,kBAAMkL,SAAS,CAAC8E,KAAAA,IAAS,IAAI,CAACiC,SAAS,CAACjS,CAAAA,CAAAA,CAAAA;AACxC,kBAAM0F,aAAa,EAAC;AACpB,kBAAMiY,SAASjY,UAAU,CAAC2F,KAAM,IAAG2E,QAAQ3G,MAAOyT,CAAAA,kBAAkB,CAAC,OAAOzT,OAAOqO,gBAAgB,CAACxM,MAAM,CAACG,MAAM,CAAC;AAClH,kBAAMuS,MAASlY,GAAAA,UAAU,CAAC4F,KAAAA,CAAM,GAAG0E,KAAQ1G,GAAAA,MAAAA,CAAO8R,YAAY,KAAK9R,OAAOoO,gBAAgB,CAACxM,MAAM,CAACI,MAAM,CAAC;AAEzG5F,YAAAA,UAAAA,CAAWmY,IAAI,GAAG3B,KAAMyB,CAAAA,MAAAA,CAAAA,IAAWzB,KAAM0B,CAAAA,MAAAA,CAAAA,CAAAA;AAEzC,gBAAIjJ,cAAgB;AAClBjP,gBAAAA,UAAAA,CAAWI,OAAO,GAAG8O,aAAiB,QAAI,CAACnB,yBAAyB,CAACzT,CAAAA,EAAG0d,KAAM3Z,CAAAA,MAAM,GAAG,WAAW8E,IAAI;AAEtG,oBAAImH,KAAO;oBACTtK,UAAWI,CAAAA,OAAO,CAAC0X,MAAM,GAAG;iBAC7B;aACF;AAED,gBAAI,CAACtI,aAAa,CAACwI,KAAAA,EAAO1d,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;AAC3C;AACF;AAMA,CACA4K,yBAA0BjL,CAAAA,KAAK,EAAEK,IAAI,EAAE;AACrC,cAAMqC,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;AAC9B,YAAI5C,MAAS,QAAK,CAAC6N,yBAAyB,CAACjL,KAAOK,EAAAA,IAAAA,CAAAA,CAAAA;QAGpD,IAAIjD,MAAAA,CAAOM,OAAO,EAAE;AAClBN,YAAAA,MAAAA,GAASX,MAAOyB,CAAAA,MAAM,CAAC,IAAId,MAAQ;AAACM,gBAAAA,OAAAA,EAAS,KAAK;AAAA;SACnD;QAGD,MAAMsX,MAAAA,GAAS5X,OAAO4X,MAAM;AAC5B,YAAI3U,SAAS,QAAU;AACrBjD,YAAAA,MAAAA,CAAO4X,MAAM,GAAG;SACjB;AACD5X,QAAAA,MAAAA,CAAO4X,MAAM,IAAIxO,6DAAAA,CAAe9D,MAAUA,IAAAA,MAAAA,CAAO+N,OAAO,EAAEuE,MAAAA,CAAAA,CAAAA;QAE1D,OAAO5X,MAAAA,CAAAA;AACT;AACF;;AC/JA,SAASkY,iBAAkBC,CAAAA,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAE;AAC1D,QAAIC,MAAS;AACb,QAAIC,MAAS;AACb,QAAIC,OAAU;AACd,QAAIC,OAAU;AAEd,QAAIL,gBAAgBM,yDAAK;AACvB,cAAMC,UAAaR,GAAAA,QAAAA,CAAAA;AACnB,cAAMS,WAAWD,UAAaP,GAAAA,aAAAA,CAAAA;QAC9B,MAAMS,MAAAA,GAASvf,IAAKwf,CAAAA,GAAG,CAACH,UAAAA,CAAAA,CAAAA;QACxB,MAAMI,MAAAA,GAASzf,IAAK0f,CAAAA,GAAG,CAACL,UAAAA,CAAAA,CAAAA;QACxB,MAAMM,IAAAA,GAAO3f,IAAKwf,CAAAA,GAAG,CAACF,QAAAA,CAAAA,CAAAA;QACtB,MAAMM,IAAAA,GAAO5f,IAAK0f,CAAAA,GAAG,CAACJ,QAAAA,CAAAA,CAAAA;QACtB,MAAMO,OAAAA,GAAU,CAACC,KAAO5H,EAAAA,CAAAA,EAAGpP,IAAMiX,6DAAcD,CAAAA,KAAAA,EAAOT,YAAYC,QAAU,MAAI,IAAI,CAAItf,GAAAA,IAAAA,CAAKoC,GAAG,CAAC8V,CAAAA,EAAGA,IAAI6G,MAAQjW,EAAAA,CAAAA,EAAGA,IAAIiW,MAAO;QAC9H,MAAMiB,OAAAA,GAAU,CAACF,KAAO5H,EAAAA,CAAAA,EAAGpP,IAAMiX,6DAAcD,CAAAA,KAAAA,EAAOT,YAAYC,QAAU,MAAI,IAAI,CAAC,IAAItf,KAAKC,GAAG,CAACiY,GAAGA,CAAI6G,GAAAA,MAAAA,EAAQjW,CAAGA,EAAAA,CAAAA,GAAIiW,MAAO;QAC/H,MAAMkB,IAAAA,GAAOJ,OAAQ,IAAGN,MAAQI,EAAAA,IAAAA,CAAAA,CAAAA;QAChC,MAAMO,IAAAA,GAAOL,OAAQM,CAAAA,yDAAAA,EAASV,MAAQG,EAAAA,IAAAA,CAAAA,CAAAA;QACtC,MAAMQ,IAAAA,GAAOJ,OAAQK,CAAAA,yDAAAA,EAAId,MAAQI,EAAAA,IAAAA,CAAAA,CAAAA;AACjC,cAAMW,IAAON,GAAAA,OAAAA,CAAQK,yDAAKF,GAAAA,yDAAAA,EAASV,MAAQG,EAAAA,IAAAA,CAAAA,CAAAA;AAC3CZ,QAAAA,MAAAA,GAAS,CAACiB,IAAOG,GAAAA,IAAG,IAAK;AACzBnB,QAAAA,MAAAA,GAAS,CAACiB,IAAOI,GAAAA,IAAG,IAAK;AACzBpB,QAAAA,OAAAA,GAAU,EAAEe,IAAOG,GAAAA,IAAG,CAAK;AAC3BjB,QAAAA,OAAAA,GAAU,EAAEe,IAAOI,GAAAA,IAAG,CAAK;KAC5B;IACD,OAAO;AAACtB,QAAAA,MAAAA;AAAQC,QAAAA,MAAAA;AAAQC,QAAAA,OAAAA;AAASC,QAAAA,OAAAA;AAAO;AAC1C;AAEe,MAAMoB,kBAA2BvS,SAAAA,iBAAAA,CAAAA;AAE9C,WAAOjD,KAAK,UAAW;AAItB,CACD,OAAO9E,QAAW;AAChBgI,QAAAA,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB;QACjBhI,SAAW;AAETsa,YAAAA,aAAAA,EAAe,IAAI;AAEnBC,YAAAA,YAAAA,EAAc,KAAK;AACrB;QACA3Z,UAAY;YACV2U,OAAS;gBACPlc,IAAM;gBACNiH,UAAY;AAAC;AAAiB;AAAY;AAAe;AAAe;AAAc;AAAK;AAAK;AAAU;AAAe;AAAU;AACrI;AACF;QAEAuY,MAAQ;QAGRF,QAAU;QAGVC,aAAe;QAGfR,MAAQ;QAGRoC,OAAS;QAETvQ,SAAW;KACX;AAEF,WAAOwQ,WAAc;QACnBC,WAAa,GAACxD,OAASA,IAAS;AAChCyD,QAAAA,UAAAA,EAAY,CAACzD,IAAAA,GAASA,IAAS,kBAAa,CAACA,IAAAA,CAAK0D,UAAU,CAAC,YAAiB,MAAC1D,IAAK0D,CAAAA,UAAU,CAAC;KAC/F;AAID,CACD,OAAOpF,SAAY;QACjBqF,WAAa;QAGbC,OAAS;YACPC,MAAQ;gBACNxO,MAAQ;AACNyO,oBAAAA,cAAAA,CAAAA,CAAe9hB,KAAK,EAAE;wBACpB,MAAM6K,IAAAA,GAAO7K,MAAM6K,IAAI;wBACvB,IAAIA,IAAAA,CAAKwI,MAAM,CAAC5R,MAAM,IAAIoJ,IAAKyG,CAAAA,QAAQ,CAAC7P,MAAM,EAAE;AAC9C,kCAAM,EAAC4R,MAAAA,EAAQ,EAAC0O,UAAAA,GAAYne,KAAAA,GAAM,GAAC,GAAG5D,KAAM6hB,CAAAA,MAAM,CAACra,OAAO;AAE1D,mCAAOqD,KAAKwI,MAAM,CAAC2O,GAAG,CAAC,CAACvN,OAAO/S,CAAM;gCACnC,MAAMoJ,IAAAA,GAAO9K,KAAMuR,CAAAA,cAAc,CAAC;AAClC,sCAAM0Q,KAAQnX,GAAAA,IAAAA,CAAK6B,UAAU,CAACsI,QAAQ,CAACvT,CAAAA,CAAAA,CAAAA;gCAEvC,OAAO;oCACLwgB,IAAMzN,EAAAA,KAAAA;AACN0N,oCAAAA,SAAAA,EAAWF,MAAMG,eAAe;AAChCC,oCAAAA,WAAAA,EAAaJ,MAAMK,WAAW;oCAC9BC,SAAW3e,EAAAA,KAAAA;AACX4e,oCAAAA,SAAAA,EAAWP,MAAMQ,WAAW;oCAC5BV,UAAYA,EAAAA,UAAAA;oCACZrT,MAAQ,GAAC1O,KAAMse,CAAAA,iBAAiB,CAAC5c,CAAAA,CAAAA;oCAGjCwI,KAAOxI,EAAAA,CAAAA;AACT;AACF;yBACD;AACD,+BAAO,EAAE;AACX;AACF;AAEAghB,gBAAAA,OAAAA,CAAAA,CAAQC,CAAC,EAAEC,UAAU,EAAEf,MAAM,EAAE;AAC7BA,oBAAAA,MAAAA,CAAO7hB,KAAK,CAAC6iB,oBAAoB,CAACD,WAAW1Y,KAAK;oBAClD2X,MAAO7hB,CAAAA,KAAK,CAAC0F,MAAM;AACrB;AACF;AACF;KACA;IAEFlG,WAAYQ,CAAAA,KAAK,EAAEwK,YAAY,CAAE;AAC/B,aAAK,CAACxK,KAAOwK,EAAAA,YAAAA,CAAAA,CAAAA;QAEb,IAAI,CAACkF,mBAAmB,GAAG,IAAI;QAC/B,IAAI,CAACoT,WAAW,GAAGhjB,SAAAA,CAAAA;QACnB,IAAI,CAACijB,WAAW,GAAGjjB,SAAAA,CAAAA;QACnB,IAAI,CAACggB,OAAO,GAAGhgB,SAAAA,CAAAA;QACf,IAAI,CAACigB,OAAO,GAAGjgB,SAAAA,CAAAA;AACjB;AAEAiQ,IAAAA,UAAAA,GAAa,EAAC;AAId,CACA6C,KAAM9R,CAAAA,KAAK,EAAE+R,KAAK,EAAE;AAClB,cAAMhI,IAAO,OAAI,CAACyF,UAAU,GAAGzF,IAAI;QACnC,MAAMC,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAE7B,YAAI,IAAI,CAACuC,QAAQ,KAAK,KAAK,EAAE;AAC3BtE,YAAAA,IAAAA,CAAKqD,OAAO,GAAGtD,IAAAA,CAAAA;SACV;AACL,gBAAImY,SAAS,CAACthB,CAAAA,GAAM,CAACmJ,IAAI,CAACnJ,CAAE;AAE5B,gBAAI+E,6DAASoE,CAAAA,IAAI,CAAC/J,KAAAA,CAAM,CAAG;AACzB,sBAAM,EAACmG,GAAM,YAAQ,GAAG,IAAI,CAACmI,QAAQ;AACrC4T,gBAAAA,MAAAA,GAAS,CAACthB,CAAM,IAACgS,6DAAgBA,CAAC7I,IAAI,CAACnJ,EAAE,EAAEuF,GAAAA,CAAAA,CAAAA;aAC5C;AAED,gBAAIvF,CAAGuI,EAAAA,IAAAA,CAAAA;YACP,IAAKvI,CAAAA,GAAIZ,OAAOmJ,IAAOnJ,GAAAA,KAAAA,GAAQ+R,KAAK,EAAEnR,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AACnDoJ,gBAAAA,IAAAA,CAAKqD,OAAO,CAACzM,CAAE,IAAGshB,MAAOthB,CAAAA,CAAAA,CAAAA,CAAAA;AAC3B;SACD;AACH;AAIA,CACAuhB,YAAe;AACb,eAAOC,6DAASA,CAAC,IAAI,CAAC1b,OAAO,CAACiY,QAAQ,GAAG;AAC3C;AAIA,CACA0D,iBAAoB;AAClB,eAAOD,6DAAU,KAAI,CAAC1b,OAAO,CAACkY,aAAa;AAC7C;AAKA,CACA0D,mBAAsB;AACpB,YAAIviB,GAAMmf,GAAAA,yDAAAA,CAAAA;AACV,YAAIhd,MAAM,CAACgd,yDAAAA,CAAAA;AAEX,YAAK,IAAIte,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI,IAAI,CAAC1B,KAAK,CAAC6K,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,EAAE,EAAEC,CAAG;AACxD,gBAAI,IAAI,CAAC1B,KAAK,CAACqjB,gBAAgB,CAAC3hB,MAAM,IAAI,CAAC1B,KAAK,CAACuR,cAAc,CAAC7P,CAAGvB,CAAAA,CAAAA,IAAI,KAAK,IAAI,CAACgP,KAAK,EAAE;gBACtF,MAAMxC,UAAAA,GAAa,IAAI,CAAC3M,KAAK,CAACuR,cAAc,CAAC7P,GAAGiL,UAAU;gBAC1D,MAAM8S,QAAAA,GAAW9S,WAAWsW,YAAY;gBACxC,MAAMvD,aAAAA,GAAgB/S,WAAWwW,iBAAiB;gBAElDtiB,GAAMD,GAAAA,IAAAA,CAAKC,GAAG,CAACA,GAAK4e,EAAAA,QAAAA,CAAAA,CAAAA;AACpBzc,gBAAAA,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAKyc,QAAWC,GAAAA,aAAAA,CAAAA,CAAAA;aAChC;AACH;QAEA,OAAO;YACLD,QAAU5e,EAAAA,GAAAA;AACV6e,YAAAA,aAAAA,EAAe1c,GAAMnC,GAAAA,GAAAA;AACvB;AACF;AAKA6E,CAAAA,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM,EAAC+U,SAAS,GAAC,GAAG/U,KAAAA,CAAAA;QACpB,MAAM8K,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMyW,IAAAA,GAAOxY,KAAKD,IAAI;AACtB,cAAMyW,OAAU,OAAI,CAACiC,iBAAiB,KAAK,IAAI,CAACC,YAAY,CAACF,IAAQ,QAAI,CAAC9b,OAAO,CAAC8Z,OAAO;AACzF,cAAMmC,UAAU7iB,IAAKoC,CAAAA,GAAG,CAAEpC,CAAAA,IAAKC,CAAAA,GAAG,CAACkU,SAAAA,CAAUwI,KAAK,EAAExI,SAAAA,CAAUuI,MAAM,CAAIgE,GAAAA,OAAM,IAAK,CAAG;QACtF,MAAM3B,MAAAA,GAAS/e,IAAKC,CAAAA,GAAG,CAAC6iB,6DAAAA,CAAa,IAAI,CAAClc,OAAO,CAACmY,MAAM,EAAE8D,OAAU;AACpE,cAAME,cAAc,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC1Z,KAAK;QAKlD,MAAM,EAACwV,gBAAeD,QAAAA,GAAS,GAAG,IAAI,CAAC2D,mBAAmB;AAC1D,cAAM,EAACxD,MAAAA,GAAQC,MAAAA,GAAQC,OAAAA,GAASC,OAAAA,GAAQ,GAAGP,iBAAkBC,CAAAA,QAAAA,EAAUC,aAAeC,EAAAA,MAAAA,CAAAA,CAAAA;AACtF,cAAMkE,WAAW,CAAC9O,UAAUwI,KAAK,GAAG+D,OAAM,IAAK1B,MAAAA,CAAAA;AAC/C,cAAMkE,YAAY,CAAC/O,UAAUuI,MAAM,GAAGgE,OAAM,IAAKzB,MAAAA,CAAAA;QACjD,MAAMkE,SAAAA,GAAYnjB,KAAKoC,GAAG,CAACpC,KAAKC,GAAG,CAACgjB,QAAUC,EAAAA,SAAAA,CAAAA,GAAa,CAAG;AAC9D,cAAMf,cAAciB,6DAAY,KAAI,CAACxc,OAAO,CAAC0X,MAAM,EAAE6E,SAAAA,CAAAA,CAAAA;AACrD,cAAMjB,WAAcliB,GAAAA,IAAAA,CAAKoC,GAAG,CAAC+f,cAAcpD,MAAQ;QACnD,MAAMsE,YAAAA,GAAe,CAAClB,WAAAA,GAAcD,WAAU,IAAK,IAAI,CAACoB,6BAA6B;QACrF,IAAI,CAACpE,OAAO,GAAGA,OAAUiD,GAAAA,WAAAA,CAAAA;QACzB,IAAI,CAAChD,OAAO,GAAGA,OAAUgD,GAAAA,WAAAA,CAAAA;AAEzBjY,QAAAA,IAAAA,CAAKqZ,KAAK,GAAG,IAAI,CAACC,cAAc;QAEhC,IAAI,CAACrB,WAAW,GAAGA,WAAckB,GAAAA,YAAAA,GAAe,IAAI,CAACI,oBAAoB,CAAC,IAAI,CAACna,KAAK;QACpF,IAAI,CAAC4Y,WAAW,GAAGliB,IAAKoC,CAAAA,GAAG,CAAC,IAAI,CAAC+f,WAAW,GAAGkB,YAAAA,GAAeN,WAAa;AAE3E,YAAI,CAACjM,cAAc,CAAC4L,MAAM,CAAGA,EAAAA,IAAAA,CAAK7hB,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;AAC5C;AAIC,CACD+Z,cAAe5iB,CAAAA,CAAC,EAAEgQ,KAAK,EAAE;QACvB,MAAM/I,IAAAA,GAAO,IAAI,CAACnB,OAAO;QACzB,MAAMsD,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM6S,aAAAA,GAAgB,IAAI,CAACyD,iBAAiB;AAC5C,YAAI,KAACzR,IAAS/I,IAAK7B,CAAAA,SAAS,CAACsa,aAAa,IAAK,CAAC,IAAI,CAACphB,KAAK,CAACse,iBAAiB,CAAC5c,CAAMoJ,CAAAA,IAAAA,IAAAA,CAAKqD,OAAO,CAACzM,CAAE,MAAK,IAAI,IAAIoJ,IAAKD,CAAAA,IAAI,CAACnJ,CAAAA,CAAE,CAACgN,MAAM,EAAE;YAClI,OAAO;SACR;QACD,OAAO,IAAI,CAAC6V,sBAAsB,CAACzZ,KAAKqD,OAAO,CAACzM,CAAE,IAAGge,aAAgBM,GAAAA,yDAAAA,CAAAA,CAAAA;AACvE;AAEAtI,IAAAA,cAAAA,CAAe4L,IAAI,EAAExiB,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACvC,cAAMmH,QAAQnH,IAAS;QACvB,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM+U,SAAAA,GAAY/U,MAAM+U,SAAS;QACjC,MAAMpM,IAAAA,GAAO3I,MAAMwH,OAAO;QAC1B,MAAMgd,aAAAA,GAAgB7b,KAAK7B,SAAS;QACpC,MAAM2d,OAAAA,GAAU,CAAC1P,SAAAA,CAAUzL,IAAI,GAAGyL,SAAAA,CAAU3L,KAAI,IAAK;QACrD,MAAMsb,OAAAA,GAAU,CAAC3P,SAAAA,CAAU5L,GAAG,GAAG4L,SAAAA,CAAU1L,MAAK,IAAK;QACrD,MAAMgY,YAAAA,GAAe3P,KAAS8S,IAAAA,aAAAA,CAAcnD,YAAY;AACxD,cAAMyB,WAAczB,GAAAA,YAAAA,GAAe,CAAI,OAAI,CAACyB,WAAW;AACvD,cAAMC,WAAc1B,GAAAA,YAAAA,GAAe,CAAI,OAAI,CAAC0B,WAAW;QACvD,MAAM,EAACzM,aAAa,GAAED,cAAc,GAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC1V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACtE,IAAI0V,UAAAA,GAAa,IAAI,CAACgD,YAAY;QAClC,IAAIvhB,CAAAA,CAAAA;AAEJ,YAAKA,CAAI,MAAGA,CAAIZ,GAAAA,KAAAA,EAAO,EAAEY,CAAG;AAC1Bue,YAAAA,UAAAA,IAAc,IAAI,CAACqE,cAAc,CAAC5iB,CAAGgQ,EAAAA,KAAAA,CAAAA,CAAAA;AACvC;AAEA,YAAKhQ,IAAIZ,KAAOY,EAAAA,CAAAA,GAAIZ,KAAQ+R,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;AACtC,kBAAMge,aAAgB,OAAI,CAAC4E,cAAc,CAAC5iB,CAAGgQ,EAAAA,KAAAA,CAAAA,CAAAA;YAC7C,MAAMiT,GAAAA,GAAMrB,IAAI,CAAC5hB,CAAE;AACnB,kBAAM0F,UAAa;gBACjB6B,CAAGwb,EAAAA,OAAAA,GAAU,IAAI,CAAC3E,OAAO;gBACzB5W,CAAGwb,EAAAA,OAAAA,GAAU,IAAI,CAAC3E,OAAO;AACzBE,gBAAAA,UAAAA;AACAC,gBAAAA,QAAAA,EAAUD,UAAaP,GAAAA,aAAAA;AACvBA,gBAAAA,aAAAA;AACAqD,gBAAAA,WAAAA;AACAD,gBAAAA,WAAAA;AACF;AACA,gBAAIzM,cAAgB;AAClBjP,gBAAAA,UAAAA,CAAWI,OAAO,GAAG8O,aAAiB,QAAI,CAACnB,yBAAyB,CAACzT,CAAAA,EAAGijB,GAAIlf,CAAAA,MAAM,GAAG,WAAW8E,IAAI;aACrG;YACD0V,UAAcP,IAAAA,aAAAA,CAAAA;AAEd,gBAAI,CAAC9I,aAAa,CAAC+N,GAAAA,EAAKjjB,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;AACzC;AACF;IAEA6Z,cAAiB;QACf,MAAMtZ,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM+X,QAAAA,GAAW9Z,KAAKD,IAAI;AAC1B,YAAIsZ,KAAQ;QACZ,IAAIziB,CAAAA,CAAAA;AAEJ,YAAKA,IAAI,CAAGA,EAAAA,CAAAA,GAAIkjB,QAASnjB,CAAAA,MAAM,EAAEC,CAAK;AACpC,kBAAMwG,KAAQ4C,GAAAA,IAAAA,CAAKqD,OAAO,CAACzM,CAAE;AAC7B,gBAAIwG,UAAU,IAAI,IAAI,CAAC0V,KAAM1V,CAAAA,KAAAA,CAAAA,IAAU,IAAI,CAAClI,KAAK,CAACse,iBAAiB,CAAC5c,MAAM,CAACkjB,QAAQ,CAACljB,CAAE,EAACgN,MAAM,EAAE;gBAC7FyV,KAASvjB,IAAAA,IAAAA,CAAKuY,GAAG,CAACjR,KAAAA,CAAAA,CAAAA;aACnB;AACH;QAEA,OAAOic,KAAAA,CAAAA;AACT;AAEAI,IAAAA,sBAAAA,CAAuBrc,KAAK,EAAE;AAC5B,cAAMic,KAAQ,OAAI,CAACtX,WAAW,CAACsX,KAAK;AACpC,YAAIA,KAAQ,QAAK,CAACvG,KAAAA,CAAM1V,KAAQ;AAC9B,mBAAO8X,yDAAGA,IAAIpf,IAAAA,CAAKuY,GAAG,CAACjR,SAASic,KAAI;SACrC;QACD,OAAO;AACT;AAEA3P,IAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;QACtB,MAAMY,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM7M,KAAAA,GAAQ,IAAI,CAACA,KAAK;AACxB,cAAMqT,SAASrT,KAAM6K,CAAAA,IAAI,CAACwI,MAAM,IAAI,EAAE;QACtC,MAAMnL,KAAAA,GAAQ2c,6DAAa/Z,CAAAA,IAAAA,CAAKqD,OAAO,CAACjE,MAAM,EAAElK,KAAAA,CAAMwH,OAAO,CAACsd,MAAM;QAEpE,OAAO;YACLrQ,KAAOpB,EAAAA,MAAM,CAACnJ,KAAAA,CAAM,IAAI;AACxBhC,YAAAA,KAAAA;AACF;AACF;AAEAqb,IAAAA,iBAAAA,CAAkBD,IAAI,EAAE;AACtB,YAAItgB,GAAM;QACV,MAAMhD,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,IAAI0B,CAAAA,EAAGuI,IAAMa,EAAAA,IAAAA,EAAM6B,UAAYnF,EAAAA,OAAAA,CAAAA;AAE/B,YAAI,CAAC8b,IAAM;AAET,gBAAK5hB,CAAI,MAAGuI,IAAOjK,GAAAA,KAAAA,CAAM6K,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;gBAC5D,IAAI1B,KAAAA,CAAMqjB,gBAAgB,CAAC3hB,CAAI;oBAC7BoJ,IAAO9K,GAAAA,KAAAA,CAAMuR,cAAc,CAAC7P,CAAAA,CAAAA,CAAAA;AAC5B4hB,oBAAAA,IAAAA,GAAOxY,KAAKD,IAAI;AAChB8B,oBAAAA,UAAAA,GAAa7B,KAAK6B,UAAU;oBAC5B,MAAM;iBACP;AACH;SACD;AAED,YAAI,CAAC2W,IAAM;YACT,OAAO;SACR;QAED,IAAK5hB,CAAAA,GAAI,GAAGuI,IAAOqZ,GAAAA,IAAAA,CAAK7hB,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC7C8F,OAAUmF,GAAAA,UAAAA,CAAWwI,yBAAyB,CAACzT,CAAAA,CAAAA,CAAAA;YAC/C,IAAI8F,OAAAA,CAAQud,WAAW,KAAK,OAAS;gBACnC/hB,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACA,GAAKwE,EAAAA,OAAAA,CAAQib,WAAW,IAAI,GAAGjb,OAAQwd,CAAAA,gBAAgB,IAAI;aAC3E;AACH;QACA,OAAOhiB,GAAAA,CAAAA;AACT;AAEAwgB,IAAAA,YAAAA,CAAaF,IAAI,EAAE;AACjB,YAAItgB,GAAM;QAEV,IAAK,IAAItB,CAAI,MAAGuI,IAAOqZ,GAAAA,IAAAA,CAAK7hB,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AACjD,kBAAM8F,OAAU,OAAI,CAAC2N,yBAAyB,CAACzT,CAAAA,CAAAA,CAAAA;YAC/CsB,GAAMpC,GAAAA,IAAAA,CAAKoC,GAAG,CAACA,GAAKwE,EAAAA,OAAAA,CAAQgV,MAAM,IAAI,GAAGhV,OAAQyd,CAAAA,WAAW,IAAI;AAClE;QACA,OAAOjiB,GAAAA,CAAAA;AACT;AAMAqhB,CAAAA,oBAAAA,CAAqB7Z,YAAY,EAAE;AACjC,YAAI0a,gBAAmB;AAEvB,YAAK,IAAIxjB,CAAI,MAAGA,CAAI8I,GAAAA,YAAAA,EAAc,EAAE9I,CAAG;AACrC,gBAAI,IAAI,CAAC1B,KAAK,CAACqjB,gBAAgB,CAAC3hB,CAAI;gBAClCwjB,gBAAoB,QAAI,CAACtB,cAAc,CAACliB,CAAAA,CAAAA,CAAAA;aACzC;AACH;QAEA,OAAOwjB,gBAAAA,CAAAA;AACT;AAKAtB,CAAAA,cAAAA,CAAepZ,YAAY,EAAE;AAC3B,eAAO5J,KAAKoC,GAAG,CAAC0N,6DAAe,KAAI,CAAC1Q,KAAK,CAAC6K,IAAI,CAACyG,QAAQ,CAAC9G,YAAAA,CAAa,CAAC2a,MAAM,EAAE,CAAI;AACpF;AAKA,CACAjB,6BAAgC;AAC9B,eAAO,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAACrkB,KAAK,CAAC6K,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,CAAK;AACvE;AACF;;ACtYe,MAAM2jB,cAAuBxW,SAAAA,iBAAAA,CAAAA;AAE1C,WAAOjD,KAAK,MAAO;AAIlB,CACD,OAAO9E,QAAW;QAChBgI,kBAAoB;QACpBC,eAAiB;AAEjBuW,QAAAA,QAAAA,EAAU,IAAI;AACdC,QAAAA,QAAAA,EAAU,KAAK;KACf;AAID,CACD,OAAOhJ,SAAY;QACjB/O,MAAQ;YACNgP,OAAS;gBACPpc,IAAM;AACR;YACAuc,OAAS;gBACPvc,IAAM;AACR;AACF;KACA;IAEF2P,UAAa;QACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI;QAC/B,IAAI,CAACC,kBAAkB,GAAG,IAAI;AAC9B,aAAK,CAACG,UAAU;AAClB;AAEApK,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMO,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM,EAACgB,OAAS0X,EAAAA,IAAAA,GAAM1a,IAAAA,EAAMsU,MAAS,KAAE,GAAEqG,QAAQ,GAAC,GAAG1a,IAAAA,CAAAA;AAErD,cAAM2a,kBAAqB,OAAI,CAACzlB,KAAK,CAACuW,mBAAmB;QACzD,IAAI,EAACzV,QAAO+R,KAAAA,GAAM,GAAG6S,6DAAAA,CAAiC5a,MAAMqU,MAAQsG,EAAAA,kBAAAA,CAAAA,CAAAA;QAEpE,IAAI,CAACjW,UAAU,GAAG1O,KAAAA,CAAAA;QAClB,IAAI,CAAC2O,UAAU,GAAGoD,KAAAA,CAAAA;AAElB,YAAI8S,6DAAmBA,CAAC7a,IAAO;YAC7BhK,KAAQ;AACR+R,YAAAA,KAAAA,GAAQsM,OAAO1d,MAAM;SACtB;AAGD8jB,QAAAA,IAAAA,CAAKjf,MAAM,GAAG,IAAI,CAACtG,KAAK;AACxBulB,QAAAA,IAAAA,CAAKK,aAAa,GAAG,IAAI,CAAC1b,KAAK;AAC/Bqb,QAAAA,IAAAA,CAAKM,UAAU,GAAG,CAAC,CAACL,SAASK,UAAU;AACvCN,QAAAA,IAAAA,CAAKpG,MAAM,GAAGA,MAAAA,CAAAA;AAEd,cAAM3X,OAAU,OAAI,CAAC0N,4BAA4B,CAAC3K,IAAAA,CAAAA,CAAAA;AAClD,YAAI,CAAC,IAAI,CAAC/C,OAAO,CAAC6d,QAAQ,EAAE;AAC1B7d,YAAAA,OAAAA,CAAQib,WAAW,GAAG;SACvB;AACDjb,QAAAA,OAAAA,CAAQse,OAAO,GAAG,IAAI,CAACte,OAAO,CAACse,OAAO;AACtC,YAAI,CAAClP,aAAa,CAAC2O,IAAAA,EAAMzlB,SAAW;AAClCimB,YAAAA,QAAAA,EAAU,CAACN,kBAAAA;AACXje,YAAAA,OAAAA;SACC+C,EAAAA,IAAAA,CAAAA,CAAAA;AAGH,YAAI,CAACmN,cAAc,CAACyH,MAAAA,EAAQre,OAAO+R,KAAOtI,EAAAA,IAAAA,CAAAA,CAAAA;AAC5C;AAEAmN,IAAAA,cAAAA,CAAeyH,MAAM,EAAEre,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACzC,cAAMmH,QAAQnH,IAAS;AACvB,cAAM,EAACQ,MAAAA,GAAQC,MAAAA,GAAQ2D,QAAAA,GAAU6W,QAAAA,GAAS,GAAG,IAAI,CAAC3Y,WAAW;QAC7D,MAAM,EAACyJ,aAAa,GAAED,cAAc,GAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC1V,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;QACtE,MAAMwC,KAAAA,GAAQhC,OAAOG,IAAI;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI;QACzB,MAAM,EAACoa,WAAUQ,OAAAA,GAAQ,GAAG,IAAI,CAACte,OAAO;AACxC,cAAMwe,YAAeC,GAAAA,6DAAAA,CAASX,QAAYA,CAAAA,GAAAA,QAAAA,GAAWvZ,OAAOE,iBAAiB;QAC7E,MAAMia,YAAAA,GAAe,IAAI,CAAClmB,KAAK,CAACuW,mBAAmB,IAAI7E,SAASnH,IAAS;AACzE,cAAM1B,MAAM/H,KAAQ+R,GAAAA,KAAAA,CAAAA;QACpB,MAAMsT,WAAAA,GAAchH,OAAO1d,MAAM;AACjC,YAAI2kB,aAAatlB,KAAQ,QAAK,IAAI,CAAC6S,SAAS,CAAC7S,KAAQ;AAErD,YAAK,IAAIY,CAAI,MAAGA,CAAIykB,GAAAA,WAAAA,EAAa,EAAEzkB,CAAG;YACpC,MAAM0d,KAAAA,GAAQD,MAAM,CAACzd,CAAE;AACvB,kBAAM0F,UAAa8e,GAAAA,YAAAA,GAAe9G,KAAQ,KAAE;YAE5C,IAAI1d,CAAAA,GAAIZ,KAASY,IAAAA,CAAAA,IAAKmH,GAAK;gBACzBzB,UAAWmY,CAAAA,IAAI,GAAG,IAAI;gBACtB,SAAS;aACV;AAED,kBAAM3S,MAAS,OAAI,CAAC+G,SAAS,CAACjS,CAAAA,CAAAA,CAAAA;AAC9B,kBAAM2kB,QAAWxM,GAAAA,6DAAAA,CAAcjN,MAAM,CAACI,KAAM;YAC5C,MAAMqS,MAAAA,GAASjY,UAAU,CAAC2F,KAAM,IAAGhC,MAAOqO,CAAAA,gBAAgB,CAACxM,MAAM,CAACG,KAAAA,CAAM,EAAErL,CAAAA,CAAAA,CAAAA;YAC1E,MAAM4d,MAAAA,GAASlY,UAAU,CAAC4F,KAAM,IAAG0E,SAAS2U,QAAWrb,GAAAA,MAAAA,CAAO8R,YAAY,KAAK9R,MAAOoO,CAAAA,gBAAgB,CAACzK,QAAW,OAAI,CAACxE,UAAU,CAACa,MAAAA,EAAQ4B,MAAQ+B,EAAAA,QAAAA,CAAAA,GAAY/B,MAAM,CAACI,KAAM,GAAEtL,CAAE;AAE/K0F,YAAAA,UAAAA,CAAWmY,IAAI,GAAG3B,KAAMyB,CAAAA,MAAAA,CAAAA,IAAWzB,MAAM0B,MAAW+G,CAAAA,IAAAA,QAAAA,CAAAA;AACpDjf,YAAAA,UAAAA,CAAWlE,IAAI,GAAGxB,CAAI,QAAK,IAAMyX,CAAAA,GAAG,CAACvM,MAAM,CAACG,KAAM,IAAGqZ,UAAU,CAACrZ,MAAM,CAAKiZ,GAAAA,YAAAA,CAAAA;AAC3E,gBAAIF,OAAS;AACX1e,gBAAAA,UAAAA,CAAWwF,MAAM,GAAGA,MAAAA,CAAAA;AACpBxF,gBAAAA,UAAAA,CAAW6G,GAAG,GAAGuX,QAAS3a,CAAAA,IAAI,CAACnJ,CAAE;aAClC;AAED,gBAAI2U,cAAgB;AAClBjP,gBAAAA,UAAAA,CAAWI,OAAO,GAAG8O,aAAiB,QAAI,CAACnB,yBAAyB,CAACzT,CAAAA,EAAG0d,KAAM3Z,CAAAA,MAAM,GAAG,WAAW8E,IAAI;aACvG;AAED,gBAAI,CAAC2b,YAAc;AACjB,oBAAI,CAACtP,aAAa,CAACwI,KAAAA,EAAO1d,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;aAC1C;YAED6b,UAAaxZ,GAAAA,MAAAA,CAAAA;AACf;AACF;AAIA,CACA2H,cAAiB;QACf,MAAMzJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMgB,OAAAA,GAAU/C,KAAK+C,OAAO;QAC5B,MAAMyY,MAAAA,GAASzY,QAAQrG,OAAO,IAAIqG,QAAQrG,OAAO,CAACib,WAAW,IAAI;AACjE,cAAM5X,IAAOC,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE;QAC5B,IAAI,CAACA,IAAKpJ,CAAAA,MAAM,EAAE;YAChB,OAAO6kB,MAAAA,CAAAA;SACR;QACD,MAAMC,UAAAA,GAAa1b,IAAI,CAAC,CAAE,EAAC1C,IAAI,CAAC,IAAI,CAACgN,yBAAyB,CAAC;AAC/D,cAAMqR,YAAY3b,IAAI,CAACA,IAAKpJ,CAAAA,MAAM,GAAG,CAAE,EAAC0G,IAAI,CAAC,IAAI,CAACgN,yBAAyB,CAACtK,IAAAA,CAAKpJ,MAAM,GAAG;AAC1F,eAAOb,IAAKoC,CAAAA,GAAG,CAACsjB,MAAAA,EAAQC,YAAYC,SAAa;AACnD;IAEA7kB,IAAO;QACL,MAAMmJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B/B,QAAAA,IAAAA,CAAK+C,OAAO,CAAC4Y,mBAAmB,CAAC,IAAI,CAACzmB,KAAK,CAAC+U,SAAS,EAAEjK,IAAKC,CAAAA,MAAM,CAACG,IAAI;AACvE,aAAK,CAACvJ,IAAI;AACZ;AACF;;AC3Ie,MAAM+kB,mBAA4B9X,SAAAA,iBAAAA,CAAAA;AAE/C,WAAOjD,KAAK,WAAY;AAIvB,CACD,OAAO9E,QAAW;QAChBiI,eAAiB;QACjBhI,SAAW;AACTsa,YAAAA,aAAAA,EAAe,IAAI;AACnBC,YAAAA,YAAAA,EAAc,IAAI;AACpB;QACA3Z,UAAY;YACV2U,OAAS;gBACPlc,IAAM;gBACNiH,UAAY;AAAC;AAAK;AAAK;AAAc;AAAY;AAAe;AAAc;AAChF;AACF;QACA2J,SAAW;QACXkP,UAAY;KACZ;AAID,CACD,OAAO3D,SAAY;QACjBqF,WAAa;QAEbC,OAAS;YACPC,MAAQ;gBACNxO,MAAQ;AACNyO,oBAAAA,cAAAA,CAAAA,CAAe9hB,KAAK,EAAE;wBACpB,MAAM6K,IAAAA,GAAO7K,MAAM6K,IAAI;wBACvB,IAAIA,IAAAA,CAAKwI,MAAM,CAAC5R,MAAM,IAAIoJ,IAAKyG,CAAAA,QAAQ,CAAC7P,MAAM,EAAE;AAC9C,kCAAM,EAAC4R,MAAAA,EAAQ,EAAC0O,UAAAA,GAAYne,KAAAA,GAAM,GAAC,GAAG5D,KAAM6hB,CAAAA,MAAM,CAACra,OAAO;AAE1D,mCAAOqD,KAAKwI,MAAM,CAAC2O,GAAG,CAAC,CAACvN,OAAO/S,CAAM;gCACnC,MAAMoJ,IAAAA,GAAO9K,KAAMuR,CAAAA,cAAc,CAAC;AAClC,sCAAM0Q,KAAQnX,GAAAA,IAAAA,CAAK6B,UAAU,CAACsI,QAAQ,CAACvT,CAAAA,CAAAA,CAAAA;gCAEvC,OAAO;oCACLwgB,IAAMzN,EAAAA,KAAAA;AACN0N,oCAAAA,SAAAA,EAAWF,MAAMG,eAAe;AAChCC,oCAAAA,WAAAA,EAAaJ,MAAMK,WAAW;oCAC9BC,SAAW3e,EAAAA,KAAAA;AACX4e,oCAAAA,SAAAA,EAAWP,MAAMQ,WAAW;oCAC5BV,UAAYA,EAAAA,UAAAA;oCACZrT,MAAQ,GAAC1O,KAAMse,CAAAA,iBAAiB,CAAC5c,CAAAA,CAAAA;oCAGjCwI,KAAOxI,EAAAA,CAAAA;AACT;AACF;yBACD;AACD,+BAAO,EAAE;AACX;AACF;AAEAghB,gBAAAA,OAAAA,CAAAA,CAAQC,CAAC,EAAEC,UAAU,EAAEf,MAAM,EAAE;AAC7BA,oBAAAA,MAAAA,CAAO7hB,KAAK,CAAC6iB,oBAAoB,CAACD,WAAW1Y,KAAK;oBAClD2X,MAAO7hB,CAAAA,KAAK,CAAC0F,MAAM;AACrB;AACF;AACF;QAEA6H,MAAQ;YACN9D,CAAG;gBACDtJ,IAAM;gBACNwmB,UAAY;AACVC,oBAAAA,OAAAA,EAAS,KAAK;AAChB;AACAjK,gBAAAA,WAAAA,EAAa,IAAI;gBACjBF,IAAM;AACJoK,oBAAAA,QAAAA,EAAU,IAAI;AAChB;gBACAC,WAAa;AACXF,oBAAAA,OAAAA,EAAS,KAAK;AAChB;gBACA3G,UAAY;AACd;AACF;KACA;IAEFzgB,WAAYQ,CAAAA,KAAK,EAAEwK,YAAY,CAAE;AAC/B,aAAK,CAACxK,KAAOwK,EAAAA,YAAAA,CAAAA,CAAAA;QAEb,IAAI,CAACsY,WAAW,GAAGhjB,SAAAA,CAAAA;QACnB,IAAI,CAACijB,WAAW,GAAGjjB,SAAAA,CAAAA;AACrB;AAEA0U,IAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;QACtB,MAAMY,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM7M,KAAAA,GAAQ,IAAI,CAACA,KAAK;AACxB,cAAMqT,SAASrT,KAAM6K,CAAAA,IAAI,CAACwI,MAAM,IAAI,EAAE;AACtC,cAAMnL,KAAQ2c,GAAAA,6DAAAA,CAAa/Z,IAAKqD,CAAAA,OAAO,CAACjE,KAAAA,CAAM,CAACT,CAAC,EAAEzJ,KAAAA,CAAMwH,OAAO,CAACsd,MAAM;QAEtE,OAAO;YACLrQ,KAAOpB,EAAAA,MAAM,CAACnJ,KAAAA,CAAM,IAAI;AACxBhC,YAAAA,KAAAA;AACF;AACF;AAEAgL,IAAAA,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACxC,eAAOkU,yDAA2BA,CAACC,IAAI,CAAC,IAAI,CAAElc,CAAAA,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AACnE;AAEAnN,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;AACX,cAAM+Y,IAAO,OAAI,CAACzW,WAAW,CAAChC,IAAI;AAElC,YAAI,CAACoc,aAAa;AAClB,YAAI,CAACvP,cAAc,CAAC4L,MAAM,CAAGA,EAAAA,IAAAA,CAAK7hB,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;AAC5C;AAIC,CACD0J,SAAY;QACV,MAAMnJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,cAAMiH,KAAQ;AAACjT,YAAAA,GAAAA,EAAKkL,OAAOE,iBAAiB;AAAEjJ,YAAAA,GAAAA,EAAK+I,OAAOC,iBAAiB;AAAA;AAE3ElB,QAAAA,IAAAA,CAAKD,IAAI,CAACrK,OAAO,CAAC,CAACuN,SAAS7D,KAAU;AACpC,kBAAM0C,SAAS,IAAI,CAAC+G,SAAS,CAACzJ,OAAOT,CAAC;YAEtC,IAAI,CAACmU,MAAMhR,MAAW,SAAI,CAAC5M,KAAK,CAACse,iBAAiB,CAACpU,KAAQ;gBACzD,IAAI0C,MAAAA,GAASkH,KAAMjT,CAAAA,GAAG,EAAE;AACtBiT,oBAAAA,KAAAA,CAAMjT,GAAG,GAAG+L,MAAAA,CAAAA;iBACb;gBAED,IAAIA,MAAAA,GAASkH,KAAM9Q,CAAAA,GAAG,EAAE;AACtB8Q,oBAAAA,KAAAA,CAAM9Q,GAAG,GAAG4J,MAAAA,CAAAA;iBACb;aACF;AACH;QAEA,OAAOkH,KAAAA,CAAAA;AACT;AAIA,CACAmT,aAAgB;QACd,MAAMjnB,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM+U,SAAAA,GAAY/U,MAAM+U,SAAS;QACjC,MAAMpM,IAAAA,GAAO3I,MAAMwH,OAAO;AAC1B,cAAM0f,OAAUtmB,GAAAA,IAAAA,CAAKC,GAAG,CAACkU,UAAU3L,KAAK,GAAG2L,SAAUzL,CAAAA,IAAI,EAAEyL,SAAAA,CAAU1L,MAAM,GAAG0L,UAAU5L,GAAG;AAE3F,cAAM4Z,WAAcniB,GAAAA,IAAAA,CAAKoC,GAAG,CAACkkB,UAAU,CAAG;AAC1C,cAAMpE,WAAcliB,GAAAA,IAAAA,CAAKoC,GAAG,CAAC2F,KAAKwe,gBAAgB,GAAG,WAACpE,GAAc,GAAQpa,GAAAA,IAAAA,CAAKwe,gBAAgB,GAAI,CAAC,EAAE;AACxG,cAAMlD,eAAe,CAAClB,cAAcD,WAAU,IAAK9iB,MAAMonB,sBAAsB;AAE/E,YAAI,CAACrE,WAAW,GAAGA,cAAekB,YAAe,OAAI,CAAC/Z,KAAK;AAC3D,YAAI,CAAC4Y,WAAW,GAAG,IAAI,CAACC,WAAW,GAAGkB,YAAAA,CAAAA;AACxC;AAEAvM,IAAAA,cAAAA,CAAe4L,IAAI,EAAExiB,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACvC,cAAMmH,QAAQnH,IAAS;QACvB,MAAMvK,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM2I,IAAAA,GAAO3I,MAAMwH,OAAO;QAC1B,MAAMgd,aAAAA,GAAgB7b,KAAK7B,SAAS;AACpC,cAAM2B,KAAQ,OAAI,CAACoE,WAAW,CAACwE,MAAM;QACrC,MAAMoT,OAAAA,GAAUhc,MAAM4e,OAAO;QAC7B,MAAM3C,OAAAA,GAAUjc,MAAM6e,OAAO;AAC7B,cAAMC,iBAAoB9e,GAAAA,KAAAA,CAAM+e,aAAa,CAAC,KAAK,GAAMvG,GAAAA,yDAAAA,CAAAA;AACzD,YAAIP,KAAQ6G,GAAAA,iBAAAA,CAAAA;QACZ,IAAI7lB,CAAAA,CAAAA;AAEJ,cAAM+lB,YAAe,SAAM,IAAI,CAACC,oBAAoB;AAEpD,YAAKhmB,CAAI,MAAGA,CAAIZ,GAAAA,KAAAA,EAAO,EAAEY,CAAG;AAC1Bgf,YAAAA,KAAAA,IAAS,IAAI,CAACiH,aAAa,CAACjmB,GAAG6I,IAAMkd,EAAAA,YAAAA,CAAAA,CAAAA;AACvC;AACA,YAAK/lB,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQ+R,OAAOnR,CAAK;YACtC,MAAMijB,GAAAA,GAAMrB,IAAI,CAAC5hB,CAAE;AACnB,gBAAIue,UAAaS,GAAAA,KAAAA,CAAAA;AACjB,gBAAIR,WAAWQ,KAAQ,OAAI,CAACiH,aAAa,CAACjmB,GAAG6I,IAAMkd,EAAAA,YAAAA,CAAAA,CAAAA;AACnD,gBAAI1E,WAAc/iB,GAAAA,KAAAA,CAAMse,iBAAiB,CAAC5c,KAAK+G,KAAMmf,CAAAA,6BAA6B,CAAC,IAAI,CAACjU,SAAS,CAACjS,CAAG+H,CAAAA,CAAAA,CAAC,IAAI,CAAC;YAC3GiX,KAAQR,GAAAA,QAAAA,CAAAA;AAER,gBAAIxO,KAAO;gBACT,IAAI8S,aAAAA,CAAcnD,YAAY,EAAE;oBAC9B0B,WAAc;iBACf;gBACD,IAAIyB,aAAAA,CAAcpD,aAAa,EAAE;AAC/BnB,oBAAAA,UAAAA,GAAaC,QAAWqH,GAAAA,iBAAAA,CAAAA;iBACzB;aACF;AAED,kBAAMngB,UAAa;gBACjB6B,CAAGwb,EAAAA,OAAAA;gBACHvb,CAAGwb,EAAAA,OAAAA;gBACH5B,WAAa;AACbC,gBAAAA,WAAAA;AACA9C,gBAAAA,UAAAA;AACAC,gBAAAA,QAAAA;gBACA1Y,OAAS,MAAI,CAAC2N,yBAAyB,CAACzT,GAAGijB,GAAIlf,CAAAA,MAAM,GAAG,WAAW8E,IAAI;AACzE;AAEA,gBAAI,CAACqM,aAAa,CAAC+N,GAAAA,EAAKjjB,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;AACzC;AACF;IAEAmd,oBAAuB;QACrB,MAAM5c,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,YAAIgG,KAAQ;AAEZ/H,QAAAA,IAAAA,CAAKD,IAAI,CAACrK,OAAO,CAAC,CAACuN,SAAS7D,KAAU;AACpC,gBAAI,CAAC0T,KAAAA,CAAM,IAAI,CAACjK,SAAS,CAACzJ,KAAAA,CAAAA,CAAOT,CAAC,KAAK,IAAI,CAACzJ,KAAK,CAACse,iBAAiB,CAACpU,KAAQ;AAC1E2I,gBAAAA,KAAAA,EAAAA,CAAAA;aACD;AACH;QAEA,OAAOA,KAAAA,CAAAA;AACT;AAIA,CACA8U,cAAczd,KAAK,EAAEK,IAAI,EAAEkd,YAAY,EAAE;AACvC,eAAO,IAAI,CAACznB,KAAK,CAACse,iBAAiB,CAACpU,KAChCgZ,CAAAA,GAAAA,6DAAAA,CAAU,IAAI,CAAC/N,yBAAyB,CAACjL,KAAAA,EAAOK,MAAMmW,KAAK,IAAI+G,gBAC/D,CAAC;AACP;AACF;;AC/Ne,MAAMI,aAAsB1G,SAAAA,kBAAAA,CAAAA;AAEzC,WAAOxV,KAAK,KAAM;AAIjB,CACD,OAAO9E,QAAW;QAEhB8Y,MAAQ;QAGRF,QAAU;QAGVC,aAAe;QAGfR,MAAQ;KACR;AACJ;;ACpBe,MAAM4I,eAAwBlZ,SAAAA,iBAAAA,CAAAA;AAE3C,WAAOjD,KAAK,OAAQ;AAInB,CACD,OAAO9E,QAAW;QAChBgI,kBAAoB;QACpBC,eAAiB;QACjBiC,SAAW;AACXsU,QAAAA,QAAAA,EAAU,IAAI;QACdxQ,QAAU;YACR0Q,IAAM;gBACJtV,IAAM;AACR;AACF;KACA;AAID,CACD,OAAOqM,SAAY;QACjBqF,WAAa;QAEbpU,MAAQ;YACN9D,CAAG;gBACDtJ,IAAM;AACR;AACF;KACA;AAKFqU,CAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;AACtB,cAAMc,MAAS,OAAI,CAAC6B,WAAW,CAAC7B,MAAM;AACtC,cAAM4B,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;QAE9B,OAAO;AACLuK,YAAAA,KAAAA,EAAOzJ,MAAOsI,CAAAA,SAAS,EAAE,CAACpJ,KAAM;YAChChC,KAAO,OAAK8C,OAAO0J,gBAAgB,CAAC9H,MAAM,CAAC5B,MAAAA,CAAOE,IAAI,CAAC;AACzD;AACF;AAEAgI,IAAAA,eAAAA,CAAgBpI,IAAI,EAAED,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE;AACxC,eAAOkU,yDAA2BA,CAACC,IAAI,CAAC,IAAI,CAAElc,CAAAA,IAAAA,EAAMD,MAAM/J,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AACnE;AAEAnN,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMO,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAM0Y,IAAAA,GAAOza,KAAK+C,OAAO;AACzB,cAAMsR,MAASrU,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE;AAC9B,cAAMwI,MAASvI,GAAAA,IAAAA,CAAKC,MAAM,CAACuI,SAAS;AAGpCiS,QAAAA,IAAAA,CAAKpG,MAAM,GAAGA,MAAAA,CAAAA;AAEd,YAAI5U,SAAS,QAAU;AACrB,kBAAM/C,OAAU,OAAI,CAAC0N,4BAA4B,CAAC3K,IAAAA,CAAAA,CAAAA;AAClD,gBAAI,CAAC,IAAI,CAAC/C,OAAO,CAAC6d,QAAQ,EAAE;AAC1B7d,gBAAAA,OAAAA,CAAQib,WAAW,GAAG;aACvB;AAED,kBAAMrb,UAAa;AACjBlC,gBAAAA,KAAAA,EAAO,IAAI;AACX6iB,gBAAAA,SAAAA,EAAW1U,MAAO5R,CAAAA,MAAM,KAAK0d,MAAAA,CAAO1d,MAAM;AAC1C+F,gBAAAA,OAAAA;AACF;AAEA,gBAAI,CAACoP,aAAa,CAAC2O,IAAAA,EAAMzlB,WAAWsH,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;SACjD;AAGD,YAAI,CAACmN,cAAc,CAACyH,QAAQ,CAAGA,EAAAA,MAAAA,CAAO1d,MAAM,EAAE8I,IAAAA,CAAAA,CAAAA;AAChD;AAEAmN,IAAAA,cAAAA,CAAeyH,MAAM,EAAEre,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACzC,cAAM9B,KAAQ,OAAI,CAACoE,WAAW,CAACwE,MAAM;AACrC,cAAMK,QAAQnH,IAAS;AAEvB,YAAK,IAAI7I,CAAIZ,GAAAA,KAAAA,EAAOY,CAAIZ,GAAAA,KAAAA,GAAQ+R,OAAOnR,CAAK;YAC1C,MAAM0d,KAAAA,GAAQD,MAAM,CAACzd,CAAE;YACvB,MAAM8F,OAAAA,GAAU,IAAI,CAAC2N,yBAAyB,CAACzT,GAAG0d,KAAM3Z,CAAAA,MAAM,GAAG,WAAW8E,IAAI;YAChF,MAAMyd,aAAAA,GAAgBvf,KAAMwf,CAAAA,wBAAwB,CAACvmB,CAAAA,EAAG,IAAI,CAACiS,SAAS,CAACjS,CAAAA,CAAAA,CAAG+H,CAAC;AAE3E,kBAAMR,IAAIyI,KAAQjJ,GAAAA,KAAAA,CAAM4e,OAAO,GAAGW,cAAc/e,CAAC;AACjD,kBAAMC,IAAIwI,KAAQjJ,GAAAA,KAAAA,CAAM6e,OAAO,GAAGU,cAAc9e,CAAC;AAEjD,kBAAM9B,UAAa;AACjB6B,gBAAAA,CAAAA;AACAC,gBAAAA,CAAAA;AACAwX,gBAAAA,KAAAA,EAAOsH,cAActH,KAAK;gBAC1BnB,IAAM3B,EAAAA,KAAAA,CAAM3U,MAAM2U,KAAM1U,CAAAA,CAAAA,CAAAA;AACxB1B,gBAAAA,OAAAA;AACF;AAEA,gBAAI,CAACoP,aAAa,CAACwI,KAAAA,EAAO1d,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;AAC3C;AACF;AACF;;AClGe,MAAM2d,iBAA0BtZ,SAAAA,iBAAAA,CAAAA;AAE7C,WAAOjD,KAAK,SAAU;AAIrB,CACD,OAAO9E,QAAW;AAChBgI,QAAAA,kBAAAA,EAAoB,KAAK;QACzBC,eAAiB;AACjBuW,QAAAA,QAAAA,EAAU,KAAK;AACfpV,QAAAA,IAAAA,EAAM,KAAK;KACX;AAID,CACD,OAAOqM,SAAY;QAEjB6L,WAAa;YACX5d,IAAM;AACR;QAEAgD,MAAQ;YACNtE,CAAG;gBACD9I,IAAM;AACR;YACA+I,CAAG;gBACD/I,IAAM;AACR;AACF;KACA;AAKFqU,CAAAA,gBAAAA,CAAiBtK,KAAK,EAAE;QACtB,MAAMY,IAAAA,GAAO,IAAI,CAAC+B,WAAW;QAC7B,MAAMwG,MAAAA,GAAS,IAAI,CAACrT,KAAK,CAAC6K,IAAI,CAACwI,MAAM,IAAI,EAAE;AAC3C,cAAM,EAACtK,MAAAA,GAAQC,MAAAA,GAAO,GAAG8B,IAAAA,CAAAA;AACzB,cAAM8B,MAAS,OAAI,CAAC+G,SAAS,CAACzJ,KAAAA,CAAAA,CAAAA;AAC9B,cAAMjB,CAAIF,GAAAA,MAAAA,CAAO2L,gBAAgB,CAAC9H,OAAO3D,CAAC;AAC1C,cAAMC,CAAIF,GAAAA,MAAAA,CAAO0L,gBAAgB,CAAC9H,OAAO1D,CAAC;QAE1C,OAAO;YACLuL,KAAOpB,EAAAA,MAAM,CAACnJ,KAAAA,CAAM,IAAI;YACxBhC,KAAO,QAAMe,CAAI,UAAOC,CAAI;AAC9B;AACF;AAEAxD,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMO,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,cAAM,EAAChC,IAAMsU,EAAAA,MAAAA,GAAS,EAAE,GAAC,GAAGrU,IAAAA,CAAAA;AAE5B,cAAM2a,kBAAqB,OAAI,CAACzlB,KAAK,CAACuW,mBAAmB;QACzD,IAAI,EAACzV,QAAO+R,KAAAA,GAAM,GAAG6S,6DAAAA,CAAiC5a,MAAMqU,MAAQsG,EAAAA,kBAAAA,CAAAA,CAAAA;QAEpE,IAAI,CAACjW,UAAU,GAAG1O,KAAAA,CAAAA;QAClB,IAAI,CAAC2O,UAAU,GAAGoD,KAAAA,CAAAA;AAElB,YAAI8S,6DAAmBA,CAAC7a,IAAO;YAC7BhK,KAAQ;AACR+R,YAAAA,KAAAA,GAAQsM,OAAO1d,MAAM;SACtB;AAED,YAAI,IAAI,CAAC+F,OAAO,CAAC6d,QAAQ,EAAE;AAGzB,gBAAI,CAAC,IAAI,CAACxW,kBAAkB,EAAE;AAC5B,oBAAI,CAACmB,WAAW;aACjB;AACD,kBAAM,EAACnC,OAAS0X,EAAAA,IAAAA,GAAMC,QAAAA,GAAS,GAAG1a,IAAAA,CAAAA;AAGlCya,YAAAA,IAAAA,CAAKjf,MAAM,GAAG,IAAI,CAACtG,KAAK;AACxBulB,YAAAA,IAAAA,CAAKK,aAAa,GAAG,IAAI,CAAC1b,KAAK;AAC/Bqb,YAAAA,IAAAA,CAAKM,UAAU,GAAG,CAAC,CAACL,SAASK,UAAU;AACvCN,YAAAA,IAAAA,CAAKpG,MAAM,GAAGA,MAAAA,CAAAA;AAEd,kBAAM3X,OAAU,OAAI,CAAC0N,4BAA4B,CAAC3K,IAAAA,CAAAA,CAAAA;AAClD/C,YAAAA,OAAAA,CAAQse,OAAO,GAAG,IAAI,CAACte,OAAO,CAACse,OAAO;AACtC,gBAAI,CAAClP,aAAa,CAAC2O,IAAAA,EAAMzlB,SAAW;AAClCimB,gBAAAA,QAAAA,EAAU,CAACN,kBAAAA;AACXje,gBAAAA,OAAAA;aACC+C,EAAAA,IAAAA,CAAAA,CAAAA;AACL,eAAO,IAAI,IAAI,CAACsE,kBAAkB,EAAE;AAElC,mBAAO/D,KAAK+C,OAAO;YACnB,IAAI,CAACgB,kBAAkB,GAAG,KAAK;SAChC;AAGD,YAAI,CAAC6I,cAAc,CAACyH,MAAAA,EAAQre,OAAO+R,KAAOtI,EAAAA,IAAAA,CAAAA,CAAAA;AAC5C;IAEAyF,WAAc;AACZ,cAAM,EAACqV,QAAQ,GAAC,GAAG,IAAI,CAAC7d,OAAO;AAE/B,YAAI,CAAC,IAAI,CAACqH,kBAAkB,IAAIwW,QAAU;YACxC,IAAI,CAACxW,kBAAkB,GAAG,IAAI,CAAC7O,KAAK,CAACooB,QAAQ,CAACC,UAAU,CAAC;SAC1D;AAED,aAAK,CAACrY,WAAW;AACnB;AAEA0H,IAAAA,cAAAA,CAAeyH,MAAM,EAAEre,KAAK,EAAE+R,KAAK,EAAEtI,IAAI,EAAE;AACzC,cAAMmH,QAAQnH,IAAS;AACvB,cAAM,EAACQ,MAAAA,GAAQC,MAAAA,GAAQ2D,QAAAA,GAAU6W,QAAAA,GAAS,GAAG,IAAI,CAAC3Y,WAAW;AAC7D,cAAM4J,SAAY,OAAI,CAACtB,yBAAyB,CAACrU,KAAOyJ,EAAAA,IAAAA,CAAAA,CAAAA;AACxD,cAAM+L,aAAgB,OAAI,CAACF,gBAAgB,CAACK,SAAAA,CAAAA,CAAAA;AAC5C,cAAMJ,cAAiB,OAAI,CAACA,cAAc,CAAC9L,IAAM+L,EAAAA,aAAAA,CAAAA,CAAAA;QACjD,MAAMvJ,KAAAA,GAAQhC,OAAOG,IAAI;QACzB,MAAM8B,KAAAA,GAAQhC,OAAOE,IAAI;QACzB,MAAM,EAACoa,WAAUQ,OAAAA,GAAQ,GAAG,IAAI,CAACte,OAAO;AACxC,cAAMwe,YAAeC,GAAAA,6DAAAA,CAASX,QAAYA,CAAAA,GAAAA,QAAAA,GAAWvZ,OAAOE,iBAAiB;QAC7E,MAAMia,YAAAA,GAAe,IAAI,CAAClmB,KAAK,CAACuW,mBAAmB,IAAI7E,SAASnH,IAAS;AACzE,YAAI6b,aAAatlB,KAAQ,QAAK,IAAI,CAAC6S,SAAS,CAAC7S,KAAQ;AAErD,YAAK,IAAIY,CAAIZ,GAAAA,KAAAA,EAAOY,IAAIZ,KAAQ+R,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;YAC1C,MAAM0d,KAAAA,GAAQD,MAAM,CAACzd,CAAE;AACvB,kBAAMkL,MAAS,OAAI,CAAC+G,SAAS,CAACjS,CAAAA,CAAAA,CAAAA;AAC9B,kBAAM0F,UAAa8e,GAAAA,YAAAA,GAAe9G,KAAQ,KAAE;AAC5C,kBAAMiH,QAAWxM,GAAAA,6DAAAA,CAAcjN,MAAM,CAACI,KAAM;YAC5C,MAAMqS,MAAAA,GAASjY,UAAU,CAAC2F,KAAM,IAAGhC,MAAOqO,CAAAA,gBAAgB,CAACxM,MAAM,CAACG,KAAAA,CAAM,EAAErL,CAAAA,CAAAA,CAAAA;YAC1E,MAAM4d,MAAAA,GAASlY,UAAU,CAAC4F,KAAM,IAAG0E,SAAS2U,QAAWrb,GAAAA,MAAAA,CAAO8R,YAAY,KAAK9R,MAAOoO,CAAAA,gBAAgB,CAACzK,QAAW,OAAI,CAACxE,UAAU,CAACa,MAAAA,EAAQ4B,MAAQ+B,EAAAA,QAAAA,CAAAA,GAAY/B,MAAM,CAACI,KAAM,GAAEtL,CAAE;AAE/K0F,YAAAA,UAAAA,CAAWmY,IAAI,GAAG3B,KAAMyB,CAAAA,MAAAA,CAAAA,IAAWzB,MAAM0B,MAAW+G,CAAAA,IAAAA,QAAAA,CAAAA;AACpDjf,YAAAA,UAAAA,CAAWlE,IAAI,GAAGxB,CAAI,QAAK,IAAMyX,CAAAA,GAAG,CAACvM,MAAM,CAACG,KAAM,IAAGqZ,UAAU,CAACrZ,MAAM,CAAKiZ,GAAAA,YAAAA,CAAAA;AAC3E,gBAAIF,OAAS;AACX1e,gBAAAA,UAAAA,CAAWwF,MAAM,GAAGA,MAAAA,CAAAA;AACpBxF,gBAAAA,UAAAA,CAAW6G,GAAG,GAAGuX,QAAS3a,CAAAA,IAAI,CAACnJ,CAAE;aAClC;AAED,gBAAI2U,cAAgB;AAClBjP,gBAAAA,UAAAA,CAAWI,OAAO,GAAG8O,aAAiB,QAAI,CAACnB,yBAAyB,CAACzT,CAAAA,EAAG0d,KAAM3Z,CAAAA,MAAM,GAAG,WAAW8E,IAAI;aACvG;AAED,gBAAI,CAAC2b,YAAc;AACjB,oBAAI,CAACtP,aAAa,CAACwI,KAAAA,EAAO1d,GAAG0F,UAAYmD,EAAAA,IAAAA,CAAAA,CAAAA;aAC1C;YAED6b,UAAaxZ,GAAAA,MAAAA,CAAAA;AACf;AAEA,YAAI,CAAC+J,mBAAmB,CAACL,aAAAA,EAAe/L,IAAMkM,EAAAA,SAAAA,CAAAA,CAAAA;AAChD;AAIA,CACAlC,cAAiB;QACf,MAAMzJ,IAAAA,GAAO,IAAI,CAAC+B,WAAW;AAC7B,cAAMhC,IAAOC,GAAAA,IAAAA,CAAKD,IAAI,IAAI,EAAE;AAE5B,YAAI,CAAC,IAAI,CAACrD,OAAO,CAAC6d,QAAQ,EAAE;AAC1B,gBAAIriB,GAAM;YACV,IAAK,IAAItB,IAAImJ,IAAKpJ,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,IAAEA,CAAG;AACzCsB,gBAAAA,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAK6H,IAAI,CAACnJ,CAAAA,CAAE,CAACyG,IAAI,CAAC,IAAI,CAACgN,yBAAyB,CAACzT,CAAM;AACxE;AACA,mBAAOsB,MAAM,CAAKA,IAAAA,GAAAA,CAAAA;SACnB;QAED,MAAM6K,OAAAA,GAAU/C,KAAK+C,OAAO;QAC5B,MAAMyY,MAAAA,GAASzY,QAAQrG,OAAO,IAAIqG,QAAQrG,OAAO,CAACib,WAAW,IAAI;QAEjE,IAAI,CAAC5X,IAAKpJ,CAAAA,MAAM,EAAE;YAChB,OAAO6kB,MAAAA,CAAAA;SACR;QAED,MAAMC,UAAAA,GAAa1b,IAAI,CAAC,CAAE,EAAC1C,IAAI,CAAC,IAAI,CAACgN,yBAAyB,CAAC;AAC/D,cAAMqR,YAAY3b,IAAI,CAACA,IAAKpJ,CAAAA,MAAM,GAAG,CAAE,EAAC0G,IAAI,CAAC,IAAI,CAACgN,yBAAyB,CAACtK,IAAAA,CAAKpJ,MAAM,GAAG;AAC1F,eAAOb,IAAKoC,CAAAA,GAAG,CAACsjB,MAAAA,EAAQC,YAAYC,SAAa;AACnD;AACF;;;;;;;;;;;;;;AClLA;;;;AAIC,IA4DD,SAAS8B,QAAwB;IAC/B,MAAM,IAAIC,MAAM,iFAAmF;AACrG;AAEA;;;;;AAKC,IACD,MAAMC,eAAAA,CAAAA;AAEJ;;;;;;;;;MAUA,OAAOC,QACLC,CAAAA,OAAiD,EACjD;AACA/hB,QAAAA,MAAAA,CAAOyB,MAAM,CAACogB,eAAgBG,CAAAA,SAAS,EAAED,OAAAA,CAAAA,CAAAA;AAC3C;IAESlhB,OAAmB;AAE5BhI,IAAAA,WAAAA,CAAYgI,OAAkB,CAAE;AAC9B,YAAI,CAACA,OAAO,GAAGA,OAAAA,IAAW,EAAC;AAC7B;;AAGAohB,IAAAA,IAAAA,GAAO,EAAC;IAERC,OAAkC;QAChC,OAAOP,QAAAA,EAAAA,CAAAA;AACT;IAEA1V,KAAuB;QACrB,OAAO0V,QAAAA,EAAAA,CAAAA;AACT;IAEAQ,MAAiB;QACf,OAAOR,QAAAA,EAAAA,CAAAA;AACT;IAEA3lB,GAAc;QACZ,OAAO2lB,QAAAA,EAAAA,CAAAA;AACT;IAEAS,IAAe;QACb,OAAOT,QAAAA,EAAAA,CAAAA;AACT;IAEAU,OAAkB;QAChB,OAAOV,QAAAA,EAAAA,CAAAA;AACT;IAEAW,KAAgB;QACd,OAAOX,QAAAA,EAAAA,CAAAA;AACT;AACF;AAEA,eAAe;IACbY,KAAOV,EAAAA,eAAAA;AACT,CAAE;;AC/GF,SAASW,aAAaC,OAAO,EAAEle,IAAI,EAAEhD,KAAK,EAAEmhB,SAAS,EAAE;AACrD,UAAM,EAAC1c,UAAU,GAAE9B,OAAMkI,OAAAA,GAAQ,GAAGqW,OAAAA,CAAAA;AACpC,UAAMre,MAAS4B,GAAAA,UAAAA,CAAWE,WAAW,CAAC9B,MAAM;IAC5C,IAAIA,MAAAA,IAAUG,IAASH,KAAAA,MAAAA,CAAOG,IAAI,IAAIA,SAAS,GAAO6H,IAAAA,OAAAA,IAAWlI,IAAKpJ,CAAAA,MAAM,EAAE;AAC5E,cAAM6nB,YAAeve,GAAAA,MAAAA,CAAOwe,cAAc,GAAGC,yDAAaA,GAAGC,yDAAY;AACzE,YAAI,CAACJ,SAAW;YACd,OAAOC,YAAAA,CAAaze,MAAMK,IAAMhD,EAAAA,KAAAA,CAAAA,CAAAA;SAC3B,UAAIyE,UAAW4C,CAAAA,cAAc,EAAE;YAIpC,MAAMma,EAAAA,GAAK7e,IAAI,CAAC,CAAE;YAClB,MAAMiJ,KAAAA,GAAQ,OAAO4V,EAAGC,CAAAA,QAAQ,KAAK,UAAcD,IAAAA,EAAAA,CAAGC,QAAQ,CAACze,IAAAA,CAAAA,CAAAA;AAC/D,gBAAI4I,KAAO;AACT,sBAAMhT,KAAQwoB,GAAAA,YAAAA,CAAaze,IAAMK,EAAAA,IAAAA,EAAMhD,KAAQ4L,GAAAA,KAAAA,CAAAA,CAAAA;AAC/C,sBAAMjL,GAAMygB,GAAAA,YAAAA,CAAaze,IAAMK,EAAAA,IAAAA,EAAMhD,KAAQ4L,GAAAA,KAAAA,CAAAA,CAAAA;gBAC7C,OAAO;AAAC8V,oBAAAA,EAAAA,EAAI9oB,MAAM8oB,EAAE;AAAEC,oBAAAA,EAAAA,EAAIhhB,IAAIghB,EAAE;AAAA;aACjC;SACF;KACF;IAED,OAAO;QAACD,EAAI;QAAGC,EAAIhf,EAAAA,IAAAA,CAAKpJ,MAAM,GAAG;AAAC;AACpC;AAUA,UAASqoB,wBAAyB9pB,CAAAA,KAAK,EAAEkL,IAAI,EAAE6e,QAAQ,EAAEC,OAAO,EAAEX,SAAS,EAAE;IAC3E,MAAMtf,QAAAA,GAAW/J,MAAMiqB,4BAA4B;IACnD,MAAM/hB,KAAAA,GAAQ6hB,QAAQ,CAAC7e,IAAK;IAC5B,IAAK,IAAIxJ,CAAI,MAAGuI,IAAOF,GAAAA,QAAAA,CAAStI,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QACrD,MAAM,EAACwI,QAAOW,IAAAA,GAAK,GAAGd,QAAQ,CAACrI,CAAE;AACjC,cAAM,EAACkoB,EAAAA,GAAIC,EAAAA,GAAG,GAAGV,YAAapf,CAAAA,QAAQ,CAACrI,CAAAA,CAAE,EAAEwJ,IAAAA,EAAMhD,KAAOmhB,EAAAA,SAAAA,CAAAA,CAAAA;AACxD,YAAK,IAAIa,CAAIN,GAAAA,EAAAA,EAAIM,CAAKL,IAAAA,EAAAA,EAAI,EAAEK,CAAG;YAC7B,MAAMnc,OAAAA,GAAUlD,IAAI,CAACqf,CAAE;YACvB,IAAI,CAACnc,OAAQwR,CAAAA,IAAI,EAAE;AACjByK,gBAAAA,OAAAA,CAAQjc,SAAS7D,KAAOggB,EAAAA,CAAAA,CAAAA,CAAAA;aACzB;AACH;AACF;AACF;AAOA,UAASC,wBAAyBjf,CAAAA,IAAI,EAAE;AACtC,UAAMkf,IAAOlf,GAAAA,IAAAA,CAAK2S,OAAO,CAAC,SAAS,CAAC;AACpC,UAAMwM,IAAOnf,GAAAA,IAAAA,CAAK2S,OAAO,CAAC,SAAS,CAAC;AAEpC,WAAO,SAASyM,GAAG,EAAEC,GAAG,EAAE;QACxB,MAAMC,MAAAA,GAASJ,IAAOxpB,GAAAA,IAAAA,CAAKuY,GAAG,CAACmR,GAAIrhB,CAAAA,CAAC,GAAGshB,GAAAA,CAAIthB,CAAC,IAAI,CAAC;QACjD,MAAMwhB,MAAAA,GAASJ,IAAOzpB,GAAAA,IAAAA,CAAKuY,GAAG,CAACmR,GAAIphB,CAAAA,CAAC,GAAGqhB,GAAAA,CAAIrhB,CAAC,IAAI,CAAC;QACjD,OAAOtI,IAAAA,CAAK8pB,IAAI,CAAC9pB,IAAK+pB,CAAAA,GAAG,CAACH,MAAAA,EAAQ,CAAK5pB,CAAAA,GAAAA,IAAAA,CAAK+pB,GAAG,CAACF,MAAQ;AAC1D;AACF;AAWA,UAASG,iBAAkB5qB,CAAAA,KAAK,EAAE+pB,QAAQ,EAAE7e,IAAI,EAAE2f,gBAAgB,EAAEC,gBAAgB,EAAE;AACpF,UAAMtpB,QAAQ,EAAE;AAEhB,QAAI,CAACspB,gBAAoB,KAAC9qB,KAAM+qB,CAAAA,aAAa,CAAChB,QAAW;QACvD,OAAOvoB,KAAAA,CAAAA;KACR;AAED,UAAMwpB,iBAAiB,SAASjd,OAAO,EAAEvD,YAAY,EAAEN,KAAK,EAAE;QAC5D,IAAI,CAAC4gB,oBAAoB,CAACG,6DAAAA,CAAeld,SAAS/N,KAAM+U,CAAAA,SAAS,EAAE,CAAI;AACrE;SACD;QACD,IAAIhH,OAAAA,CAAQmd,OAAO,CAACnB,QAAAA,CAAS9gB,CAAC,EAAE8gB,QAAAA,CAAS7gB,CAAC,EAAE2hB,gBAAmB;AAC7DrpB,YAAAA,KAAAA,CAAMkB,IAAI,CAAC;AAACqL,gBAAAA,OAAAA;AAASvD,gBAAAA,YAAAA;AAAcN,gBAAAA,KAAAA;AAAK;SACzC;AACH;AAEA4f,IAAAA,wBAAAA,CAAyB9pB,KAAOkL,EAAAA,IAAAA,EAAM6e,QAAUiB,EAAAA,cAAAA,EAAgB,IAAI;IACpE,OAAOxpB,KAAAA,CAAAA;AACT;AAUA,UAAS2pB,sBAAsBnrB,KAAK,EAAE+pB,QAAQ,EAAE7e,IAAI,EAAE2f,gBAAgB,EAAE;AACtE,QAAIrpB,QAAQ,EAAE;AAEd,aAASwpB,eAAejd,OAAO,EAAEvD,YAAY,EAAEN,KAAK,EAAE;QACpD,MAAM,EAAC+V,aAAYC,QAAAA,GAAS,GAAGnS,OAAAA,CAAQqd,QAAQ,CAAC;AAAC;AAAc;SAAW,EAAEP,gBAAAA,CAAAA,CAAAA;AAC5E,cAAM,EAACnK,KAAAA,GAAM,GAAG2K,6DAAiBA,CAACtd,OAAS;AAAC9E,YAAAA,CAAAA,EAAG8gB,SAAS9gB,CAAC;AAAEC,YAAAA,CAAAA,EAAG6gB,SAAS7gB,CAAC;AAAA;QAExE,IAAIyX,6DAAAA,CAAcD,KAAOT,EAAAA,UAAAA,EAAYC,QAAW;AAC9C1e,YAAAA,KAAAA,CAAMkB,IAAI,CAAC;AAACqL,gBAAAA,OAAAA;AAASvD,gBAAAA,YAAAA;AAAcN,gBAAAA,KAAAA;AAAK;SACzC;AACH;IAEA4f,wBAAyB9pB,CAAAA,KAAAA,EAAOkL,MAAM6e,QAAUiB,EAAAA,cAAAA,CAAAA,CAAAA;IAChD,OAAOxpB,KAAAA,CAAAA;AACT;AAWC,CACD,SAAS8pB,wBAAAA,CAAyBtrB,KAAK,EAAE+pB,QAAQ,EAAE7e,IAAI,EAAEme,SAAS,EAAEwB,gBAAgB,EAAEC,gBAAgB,EAAE;AACtG,QAAItpB,QAAQ,EAAE;AACd,UAAM+pB,iBAAiBpB,wBAAyBjf,CAAAA,IAAAA,CAAAA,CAAAA;IAChD,IAAIsgB,WAAAA,GAAczf,OAAOE,iBAAiB;AAE1C,aAAS+e,eAAejd,OAAO,EAAEvD,YAAY,EAAEN,KAAK,EAAE;QACpD,MAAMghB,OAAAA,GAAUnd,QAAQmd,OAAO,CAACnB,SAAS9gB,CAAC,EAAE8gB,QAAS7gB,CAAAA,CAAC,EAAE2hB,gBAAAA,CAAAA,CAAAA;QACxD,IAAIxB,SAAAA,IAAa,CAAC6B,OAAS;AACzB;SACD;QAED,MAAM7N,MAAAA,GAAStP,OAAQ0d,CAAAA,cAAc,CAACZ,gBAAAA,CAAAA,CAAAA;AACtC,cAAMa,cAAc,CAAC,CAACZ,gBAAoB9qB,IAAAA,KAAAA,CAAM+qB,aAAa,CAAC1N,MAAAA,CAAAA,CAAAA;QAC9D,IAAI,CAACqO,WAAe,KAACR,OAAS;AAC5B;SACD;QAED,MAAMS,QAAAA,GAAWJ,eAAexB,QAAU1M,EAAAA,MAAAA,CAAAA,CAAAA;AAC1C,YAAIsO,WAAWH,WAAa;YAC1BhqB,KAAQ;AAAC;AAACuM,oBAAAA,OAAAA;AAASvD,oBAAAA,YAAAA;AAAcN,oBAAAA,KAAAA;AAAK;AAAE;YACxCshB,WAAcG,GAAAA,QAAAA,CAAAA;SACT,UAAIA,aAAaH,WAAa;AAEnChqB,YAAAA,KAAAA,CAAMkB,IAAI,CAAC;AAACqL,gBAAAA,OAAAA;AAASvD,gBAAAA,YAAAA;AAAcN,gBAAAA,KAAAA;AAAK;SACzC;AACH;IAEA4f,wBAAyB9pB,CAAAA,KAAAA,EAAOkL,MAAM6e,QAAUiB,EAAAA,cAAAA,CAAAA,CAAAA;IAChD,OAAOxpB,KAAAA,CAAAA;AACT;AAWC,CACD,SAASoqB,eAAAA,CAAgB5rB,KAAK,EAAE+pB,QAAQ,EAAE7e,IAAI,EAAEme,SAAS,EAAEwB,gBAAgB,EAAEC,gBAAgB,EAAE;AAC7F,QAAI,CAACA,gBAAoB,KAAC9qB,KAAM+qB,CAAAA,aAAa,CAAChB,QAAW;AACvD,eAAO,EAAE;KACV;AAED,WAAO7e,IAAS,YAAO,CAACme,SAAAA,GACpB8B,sBAAsBnrB,KAAO+pB,EAAAA,QAAAA,EAAU7e,IAAM2f,EAAAA,gBAAAA,CAAAA,GAC7CS,yBAAyBtrB,KAAO+pB,EAAAA,QAAAA,EAAU7e,IAAMme,EAAAA,SAAAA,EAAWwB,kBAAkBC,gBAAiB;AACpG;AAWA,UAASe,YAAa7rB,CAAAA,KAAK,EAAE+pB,QAAQ,EAAE7e,IAAI,EAAEme,SAAS,EAAEwB,gBAAgB,EAAE;AACxE,UAAMrpB,QAAQ,EAAE;AAChB,UAAMsqB,WAAc5gB,GAAAA,IAAAA,KAAS,GAAM,gBAAa,UAAU;AAC1D,QAAI6gB,iBAAiB,KAAK;AAE1BjC,IAAAA,wBAAAA,CAAyB9pB,OAAOkL,IAAM6e,EAAAA,QAAAA,EAAU,CAAChc,OAAAA,EAASvD,cAAcN,KAAU;QAChF,IAAI6D,OAAO,CAAC+d,WAAY,EAAC/B,QAAQ,CAAC7e,IAAAA,CAAK,EAAE2f,gBAAmB;AAC1DrpB,YAAAA,KAAAA,CAAMkB,IAAI,CAAC;AAACqL,gBAAAA,OAAAA;AAASvD,gBAAAA,YAAAA;AAAcN,gBAAAA,KAAAA;AAAK;YACxC6hB,cAAiBA,GAAAA,cAAAA,IAAkBhe,QAAQmd,OAAO,CAACnB,SAAS9gB,CAAC,EAAE8gB,QAAS7gB,CAAAA,CAAC,EAAE2hB,gBAAAA,CAAAA,CAAAA;SAC5E;AACH;IAIA,IAAIxB,SAAAA,IAAa,CAAC0C,cAAgB;AAChC,eAAO,EAAE;KACV;IACD,OAAOvqB,KAAAA,CAAAA;AACT;AAKC,CACD,kBAAe;AAEbsoB,IAAAA,wBAAAA;IAGAkC,KAAO;AAYL9hB,CAAAA,KAAAA,CAAAA,CAAMlK,KAAK,EAAE2iB,CAAC,EAAEnb,OAAO,EAAEqjB,gBAAgB,EAAE;YACzC,MAAMd,QAAAA,GAAWkC,6DAAmBA,CAACtJ,CAAG3iB,EAAAA,KAAAA,CAAAA,CAAAA;YAExC,MAAMkL,IAAAA,GAAO1D,OAAQ0D,CAAAA,IAAI,IAAI;AAC7B,kBAAM4f,gBAAmBtjB,GAAAA,OAAAA,CAAQsjB,gBAAgB,IAAI,KAAK;AAC1D,kBAAMtpB,QAAQgG,OAAQ6hB,CAAAA,SAAS,GAC3BuB,iBAAAA,CAAkB5qB,OAAO+pB,QAAU7e,EAAAA,IAAAA,EAAM2f,gBAAkBC,EAAAA,gBAAAA,CAAAA,GAC3Dc,gBAAgB5rB,KAAO+pB,EAAAA,QAAAA,EAAU7e,MAAM,KAAK,EAAE2f,kBAAkBC,gBAAiB;AACrF,kBAAMjW,WAAW,EAAE;YAEnB,IAAI,CAACrT,KAAMC,CAAAA,MAAM,EAAE;AACjB,uBAAO,EAAE;aACV;AAEDzB,YAAAA,KAAAA,CAAMiqB,4BAA4B,GAAGzpB,OAAO,CAAC,CAACsK,IAAS;AACrD,sBAAMZ,KAAQ1I,GAAAA,KAAK,CAAC,EAAE,CAAC0I,KAAK;AAC5B,sBAAM6D,OAAUjD,GAAAA,IAAAA,CAAKD,IAAI,CAACX,KAAM;AAGhC,oBAAI6D,OAAW,KAACA,OAAQwR,CAAAA,IAAI,EAAE;AAC5B1K,oBAAAA,QAAAA,CAASnS,IAAI,CAAC;AAACqL,wBAAAA,OAAAA;AAASvD,wBAAAA,YAAAA,EAAcM,KAAKZ,KAAK;AAAEA,wBAAAA,KAAAA;AAAK;iBACxD;AACH;YAEA,OAAO2K,QAAAA,CAAAA;AACT;AAYAhH,CAAAA,OAAAA,CAAAA,CAAQ7N,KAAK,EAAE2iB,CAAC,EAAEnb,OAAO,EAAEqjB,gBAAgB,EAAE;YAC3C,MAAMd,QAAAA,GAAWkC,6DAAmBA,CAACtJ,CAAG3iB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,MAAMkL,IAAAA,GAAO1D,OAAQ0D,CAAAA,IAAI,IAAI;AAC7B,kBAAM4f,gBAAmBtjB,GAAAA,OAAAA,CAAQsjB,gBAAgB,IAAI,KAAK;AAC1D,gBAAItpB,QAAQgG,OAAQ6hB,CAAAA,SAAS,GACzBuB,iBAAAA,CAAkB5qB,OAAO+pB,QAAU7e,EAAAA,IAAAA,EAAM2f,gBAAkBC,EAAAA,gBAAAA,CAAAA,GAC7Dc,gBAAgB5rB,KAAO+pB,EAAAA,QAAAA,EAAU7e,MAAM,KAAK,EAAE2f,kBAAkBC,gBAAiB;YAEnF,IAAItpB,KAAAA,CAAMC,MAAM,GAAG,CAAG;AACpB,sBAAM+I,YAAehJ,GAAAA,KAAK,CAAC,EAAE,CAACgJ,YAAY;AAC1C,sBAAMK,IAAO7K,GAAAA,KAAAA,CAAMuR,cAAc,CAAC/G,cAAcK,IAAI;AACpDrJ,gBAAAA,KAAAA,GAAQ,EAAE;gBACV,IAAK,IAAIE,IAAI,CAAGA,EAAAA,CAAAA,GAAImJ,KAAKpJ,MAAM,EAAE,EAAEC,CAAG;AACpCF,oBAAAA,KAAAA,CAAMkB,IAAI,CAAC;wBAACqL,OAASlD,EAAAA,IAAI,CAACnJ,CAAE;AAAE8I,wBAAAA,YAAAA;wBAAcN,KAAOxI,EAAAA,CAAAA;AAAC;AACtD;aACD;YAED,OAAOF,KAAAA,CAAAA;AACT;AAYA4d,CAAAA,KAAAA,CAAAA,CAAMpf,KAAK,EAAE2iB,CAAC,EAAEnb,OAAO,EAAEqjB,gBAAgB,EAAE;YACzC,MAAMd,QAAAA,GAAWkC,6DAAmBA,CAACtJ,CAAG3iB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,MAAMkL,IAAAA,GAAO1D,OAAQ0D,CAAAA,IAAI,IAAI;AAC7B,kBAAM4f,gBAAmBtjB,GAAAA,OAAAA,CAAQsjB,gBAAgB,IAAI,KAAK;AAC1D,mBAAOF,iBAAkB5qB,CAAAA,KAAAA,EAAO+pB,QAAU7e,EAAAA,IAAAA,EAAM2f,gBAAkBC,EAAAA,gBAAAA,CAAAA,CAAAA;AACpE;AAWAoB,CAAAA,OAAAA,CAAAA,CAAQlsB,KAAK,EAAE2iB,CAAC,EAAEnb,OAAO,EAAEqjB,gBAAgB,EAAE;YAC3C,MAAMd,QAAAA,GAAWkC,6DAAmBA,CAACtJ,CAAG3iB,EAAAA,KAAAA,CAAAA,CAAAA;YACxC,MAAMkL,IAAAA,GAAO1D,OAAQ0D,CAAAA,IAAI,IAAI;AAC7B,kBAAM4f,gBAAmBtjB,GAAAA,OAAAA,CAAQsjB,gBAAgB,IAAI,KAAK;AAC1D,mBAAOc,gBAAgB5rB,KAAO+pB,EAAAA,QAAAA,EAAU7e,MAAM1D,OAAQ6hB,CAAAA,SAAS,EAAEwB,gBAAkBC,EAAAA,gBAAAA,CAAAA,CAAAA;AACrF;AAWA7hB,CAAAA,CAAAA,CAAAA,CAAEjJ,KAAK,EAAE2iB,CAAC,EAAEnb,OAAO,EAAEqjB,gBAAgB,EAAE;YACrC,MAAMd,QAAAA,GAAWkC,6DAAmBA,CAACtJ,CAAG3iB,EAAAA,KAAAA,CAAAA,CAAAA;AACxC,mBAAO6rB,aAAa7rB,KAAO+pB,EAAAA,QAAAA,EAAU,GAAKviB,EAAAA,OAAAA,CAAQ6hB,SAAS,EAAEwB,gBAAAA,CAAAA,CAAAA;AAC/D;AAWA3hB,CAAAA,CAAAA,CAAAA,CAAElJ,KAAK,EAAE2iB,CAAC,EAAEnb,OAAO,EAAEqjB,gBAAgB,EAAE;YACrC,MAAMd,QAAAA,GAAWkC,6DAAmBA,CAACtJ,CAAG3iB,EAAAA,KAAAA,CAAAA,CAAAA;AACxC,mBAAO6rB,aAAa7rB,KAAO+pB,EAAAA,QAAAA,EAAU,GAAKviB,EAAAA,OAAAA,CAAQ6hB,SAAS,EAAEwB,gBAAAA,CAAAA,CAAAA;AAC/D;AACF;AACF,CAAE;;ACvWF,MAAMsB,gBAAmB;AAAC;AAAQ;AAAO;AAAS;AAAS;AAE3D,SAASC,gBAAiBC,CAAAA,KAAK,EAAEtC,QAAQ,EAAE;AACzC,WAAOsC,MAAM7e,MAAM,CAACwO,CAAAA,CAAKA,GAAAA,CAAAA,CAAEsQ,GAAG,KAAKvC,QAAAA,CAAAA,CAAAA;AACrC;AAEA,SAASwC,2BAA4BF,CAAAA,KAAK,EAAEnhB,IAAI,EAAE;AAChD,WAAOmhB,MAAM7e,MAAM,CAACwO,CAAAA,CAAAA,GAAKmQ,iBAAiBtO,OAAO,CAAC7B,CAAEsQ,CAAAA,GAAG,MAAM,CAAC,KAAKtQ,EAAEwQ,GAAG,CAACthB,IAAI,KAAKA,IAAAA,CAAAA,CAAAA;AACpF;AAEA,SAASuhB,YAAaJ,CAAAA,KAAK,EAAEzjB,OAAO,EAAE;AACpC,WAAOyjB,KAAMxT,CAAAA,IAAI,CAAC,CAACC,GAAGpP,CAAM;QAC1B,MAAMgjB,EAAAA,GAAK9jB,OAAUc,GAAAA,CAAAA,GAAIoP,CAAC;QAC1B,MAAMgD,EAAAA,GAAKlT,OAAUkQ,GAAAA,CAAAA,GAAIpP,CAAC;AAC1B,eAAOgjB,GAAGvH,MAAM,KAAKrJ,EAAGqJ,CAAAA,MAAM,GAC5BuH,EAAGxiB,CAAAA,KAAK,GAAG4R,EAAAA,CAAG5R,KAAK,GACnBwiB,EAAAA,CAAGvH,MAAM,GAAGrJ,GAAGqJ,MAAM;AACzB;AACF;AAEA,SAASwH,SAAAA,CAAUC,KAAK,EAAE;AACxB,UAAMC,cAAc,EAAE;AACtB,QAAInrB,CAAGuI,EAAAA,IAAAA,EAAMuiB,GAAKF,EAAAA,GAAAA,EAAKliB,KAAO0iB,EAAAA,WAAAA,CAAAA;AAE9B,QAAKprB,CAAI,MAAGuI,IAAO,GAAC2iB,CAAAA,KAAS,MAAE,EAAEnrB,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;QACtD8qB,GAAMI,GAAAA,KAAK,CAAClrB,CAAE;AACb,WAACqoB,QAAAA,EAAUuC,GAAG,GAAE9kB,SAAS,EAAC4C,KAAAA,GAAO0iB,WAAAA,EAAc,CAAC,GAAC,GAAC,GAAGN,GAAE;AACxDK,QAAAA,WAAAA,CAAYnqB,IAAI,CAAC;YACfwH,KAAOxI,EAAAA,CAAAA;AACP8qB,YAAAA,GAAAA;AACAF,YAAAA,GAAAA;AACAlR,YAAAA,UAAAA,EAAYoR,IAAItR,YAAY;AAC5BiK,YAAAA,MAAAA,EAAQqH,IAAIrH,MAAM;AAClB/a,YAAAA,KAAAA,EAAOA,SAAUkiB,GAAMliB,GAAAA,KAAAA;AACvB0iB,YAAAA,WAAAA;AACF;AACF;IACA,OAAOD,WAAAA,CAAAA;AACT;AAEA,SAASE,WAAAA,CAAYC,OAAO,EAAE;AAC5B,UAAM7gB,SAAS,EAAC;IAChB,KAAK,MAAM8gB,QAAQD,OAAS;AAC1B,cAAM,EAAC5iB,KAAK,GAAEkiB,MAAKQ,WAAAA,GAAY,GAAGG,IAAAA,CAAAA;AAClC,YAAI,CAAC7iB,KAAS,KAAC+hB,gBAAiBe,CAAAA,QAAQ,CAACZ,GAAM;YAC7C,SAAS;SACV;QACD,MAAMa,MAAAA,GAAShhB,MAAM,CAAC/B,KAAAA,CAAM,KAAK+B,MAAM,CAAC/B,KAAAA,CAAM,GAAG;YAACyI,KAAO;YAAGua,MAAQ;YAAGjI,MAAQ;YAAGhd,IAAM;SAAC;AACzFglB,QAAAA,MAAAA,CAAOta,KAAK;AACZsa,QAAAA,MAAAA,CAAOhI,MAAM,IAAI2H,WAAAA,CAAAA;AACnB;IACA,OAAO3gB,MAAAA,CAAAA;AACT;AAIE,CACF,SAASkhB,aAAAA,CAAcL,OAAO,EAAEM,MAAM,EAAE;AACtC,UAAMnhB,SAAS4gB,WAAYC,CAAAA,OAAAA,CAAAA,CAAAA;AAC3B,UAAM,EAACO,YAAAA,GAAcC,aAAAA,GAAc,GAAGF,MAAAA,CAAAA;AACtC,QAAI5rB,GAAGuI,IAAMwjB,EAAAA,MAAAA,CAAAA;IACb,IAAK/rB,CAAAA,GAAI,GAAGuI,IAAO+iB,GAAAA,OAAAA,CAAQvrB,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QAChD+rB,MAAST,GAAAA,OAAO,CAACtrB,CAAE;AACnB,cAAM,EAACgsB,QAAAA,GAAS,GAAGD,OAAOjB,GAAG;AAC7B,cAAMpiB,KAAQ+B,GAAAA,MAAM,CAACshB,MAAAA,CAAOrjB,KAAK,CAAC;AAClC,cAAMzG,SAASyG,KAASqjB,IAAAA,MAAAA,CAAOX,WAAW,GAAG1iB,MAAM+a,MAAM;QACzD,IAAIsI,MAAAA,CAAOrS,UAAU,EAAE;AACrBqS,YAAAA,MAAAA,CAAOlQ,KAAK,GAAG5Z,MAAAA,GAASA,SAAS4pB,YAAeG,GAAAA,QAAAA,IAAYJ,OAAOK,cAAc;AACjFF,YAAAA,MAAAA,CAAOnQ,MAAM,GAAGkQ,aAAAA,CAAAA;SACX;AACLC,YAAAA,MAAAA,CAAOlQ,KAAK,GAAGgQ,YAAAA,CAAAA;AACfE,YAAAA,MAAAA,CAAOnQ,MAAM,GAAG3Z,MAAAA,GAASA,SAAS6pB,aAAgBE,GAAAA,QAAAA,IAAYJ,OAAOM,eAAe;SACrF;AACH;IACA,OAAOzhB,MAAAA,CAAAA;AACT;AAEA,SAAS0hB,gBAAAA,CAAiBjB,KAAK,EAAE;AAC/B,UAAMC,cAAcF,SAAUC,CAAAA,KAAAA,CAAAA,CAAAA;AAC9B,UAAMc,QAAWjB,GAAAA,YAAAA,CAAaI,WAAYrf,CAAAA,MAAM,CAACyf,CAAAA,IAAQA,GAAAA,IAAAA,CAAKT,GAAG,CAACkB,QAAQ,GAAG,IAAI;AACjF,UAAMpkB,IAAOmjB,GAAAA,YAAAA,CAAaL,gBAAiBS,CAAAA,WAAAA,EAAa,SAAS,IAAI;IACrE,MAAMzjB,KAAAA,GAAQqjB,YAAaL,CAAAA,gBAAAA,CAAiBS,WAAa;AACzD,UAAM1jB,GAAMsjB,GAAAA,YAAAA,CAAaL,gBAAiBS,CAAAA,WAAAA,EAAa,QAAQ,IAAI;IACnE,MAAMxjB,MAAAA,GAASojB,YAAaL,CAAAA,gBAAAA,CAAiBS,WAAa;IAC1D,MAAMiB,gBAAAA,GAAmBvB,4BAA4BM,WAAa;IAClE,MAAMkB,cAAAA,GAAiBxB,4BAA4BM,WAAa;IAEhE,OAAO;AACLa,QAAAA,QAAAA;QACAM,UAAY1kB,EAAAA,IAAAA,CAAKqP,MAAM,CAACxP,GAAAA,CAAAA;QACxB8kB,cAAgB7kB,EAAAA,KAAAA,CAAMuP,MAAM,CAACoV,cAAAA,CAAAA,CAAgBpV,MAAM,CAACtP,MAAAA,CAAAA,CAAQsP,MAAM,CAACmV,gBAAAA,CAAAA;AACnE/Y,QAAAA,SAAAA,EAAWqX,iBAAiBS,WAAa;AACzCqB,QAAAA,QAAAA,EAAU5kB,IAAKqP,CAAAA,MAAM,CAACvP,KAAAA,CAAAA,CAAOuP,MAAM,CAACoV,cAAAA,CAAAA;AACpC3S,QAAAA,UAAAA,EAAYjS,GAAIwP,CAAAA,MAAM,CAACtP,MAAAA,CAAAA,CAAQsP,MAAM,CAACmV,gBAAAA,CAAAA;AACxC;AACF;AAEA,SAASK,cAAAA,CAAeC,UAAU,EAAErZ,SAAS,EAAE+D,CAAC,EAAEpP,CAAC,EAAE;IACnD,OAAO9I,IAAAA,CAAKoC,GAAG,CAACorB,UAAU,CAACtV,CAAE,GAAE/D,SAAS,CAAC+D,CAAAA,CAAE,IAAIlY,IAAKoC,CAAAA,GAAG,CAACorB,UAAU,CAAC1kB,EAAE,EAAEqL,SAAS,CAACrL,CAAE;AACrF;AAEA,SAAS2kB,gBAAiBD,CAAAA,UAAU,EAAEE,UAAU,EAAE;IAChDF,UAAWjlB,CAAAA,GAAG,GAAGvI,IAAKoC,CAAAA,GAAG,CAACorB,UAAWjlB,CAAAA,GAAG,EAAEmlB,UAAAA,CAAWnlB,GAAG;IACxDilB,UAAW9kB,CAAAA,IAAI,GAAG1I,IAAKoC,CAAAA,GAAG,CAACorB,UAAW9kB,CAAAA,IAAI,EAAEglB,UAAAA,CAAWhlB,IAAI;IAC3D8kB,UAAW/kB,CAAAA,MAAM,GAAGzI,IAAKoC,CAAAA,GAAG,CAACorB,UAAW/kB,CAAAA,MAAM,EAAEilB,UAAAA,CAAWjlB,MAAM;IACjE+kB,UAAWhlB,CAAAA,KAAK,GAAGxI,IAAKoC,CAAAA,GAAG,CAACorB,UAAWhlB,CAAAA,KAAK,EAAEklB,UAAAA,CAAWllB,KAAK;AAChE;AAEA,SAASmlB,UAAAA,CAAWxZ,SAAS,EAAEuY,MAAM,EAAEG,MAAM,EAAEthB,MAAM,EAAE;AACrD,UAAM,EAACmgB,GAAAA,GAAKE,GAAAA,GAAI,GAAGiB,MAAAA,CAAAA;IACnB,MAAMW,UAAAA,GAAarZ,UAAUqZ,UAAU;IAGvC,IAAI,CAAC3nB,6DAAQA,CAAC6lB,GAAM;QAClB,IAAImB,MAAAA,CAAOtlB,IAAI,EAAE;AAEf4M,YAAAA,SAAS,CAACuX,GAAAA,CAAI,IAAImB,MAAAA,CAAOtlB,IAAI;SAC9B;AACD,cAAMiC,QAAQ+B,MAAM,CAACshB,MAAOrjB,CAAAA,KAAK,CAAC,IAAI;YAACjC,IAAM;YAAG0K,KAAO;AAAC;AACxDzI,QAAAA,KAAAA,CAAMjC,IAAI,GAAGvH,IAAKoC,CAAAA,GAAG,CAACoH,KAAMjC,CAAAA,IAAI,EAAEslB,MAAAA,CAAOrS,UAAU,GAAGoR,GAAAA,CAAIlP,MAAM,GAAGkP,IAAIjP,KAAK;AAC5EkQ,QAAAA,MAAAA,CAAOtlB,IAAI,GAAGiC,KAAAA,CAAMjC,IAAI,GAAGiC,MAAMyI,KAAK;AACtCkC,QAAAA,SAAS,CAACuX,GAAAA,CAAI,IAAImB,MAAAA,CAAOtlB,IAAI;KAC9B;IAED,IAAIqkB,GAAAA,CAAIgC,UAAU,EAAE;QAClBH,gBAAiBD,CAAAA,UAAAA,EAAY5B,IAAIgC,UAAU;KAC5C;IAED,MAAMC,QAAAA,GAAW7tB,IAAKoC,CAAAA,GAAG,CAAC,GAAGsqB,MAAOoB,CAAAA,UAAU,GAAGP,cAAAA,CAAeC,UAAYrZ,EAAAA,SAAAA,EAAW,MAAQ;IAC/F,MAAM4Z,SAAAA,GAAY/tB,IAAKoC,CAAAA,GAAG,CAAC,GAAGsqB,MAAOsB,CAAAA,WAAW,GAAGT,cAAAA,CAAeC,UAAYrZ,EAAAA,SAAAA,EAAW,KAAO;IAChG,MAAM8Z,YAAAA,GAAeJ,QAAa1Z,KAAAA,SAAAA,CAAU+Z,CAAC;IAC7C,MAAMC,aAAAA,GAAgBJ,SAAc5Z,KAAAA,SAAAA,CAAUia,CAAC;AAC/Cja,IAAAA,SAAAA,CAAU+Z,CAAC,GAAGL,QAAAA,CAAAA;AACd1Z,IAAAA,SAAAA,CAAUia,CAAC,GAAGL,SAAAA,CAAAA;IAGd,OAAOlB,MAAAA,CAAOrS,UAAU,GACpB;QAAC6T,IAAMJ,EAAAA,YAAAA;QAAcK,KAAOH,EAAAA,aAAAA;KAC5B;QAACE,IAAMF,EAAAA,aAAAA;QAAeG,KAAOL,EAAAA,YAAAA;KAAa;AAChD;AAEA,SAASM,gBAAAA,CAAiBpa,SAAS,EAAE;IACnC,MAAMqZ,UAAAA,GAAarZ,UAAUqZ,UAAU;IAEvC,SAASgB,SAAAA,CAAU9C,GAAG,EAAE;QACtB,MAAM+C,MAAAA,GAASzuB,IAAKoC,CAAAA,GAAG,CAACorB,UAAU,CAAC9B,GAAAA,CAAI,GAAGvX,SAAS,CAACuX,GAAAA,CAAI,EAAE;QAC1DvX,SAAS,CAACuX,IAAI,IAAI+C,MAAAA,CAAAA;QAClB,OAAOA,MAAAA,CAAAA;AACT;IACAta,SAAU7L,CAAAA,CAAC,IAAIkmB,SAAU;IACzBra,SAAU9L,CAAAA,CAAC,IAAImmB,SAAU;IACzBA,SAAU;IACVA,SAAU;AACZ;AAEA,SAASE,UAAWlU,CAAAA,UAAU,EAAErG,SAAS,EAAE;IACzC,MAAMqZ,UAAAA,GAAarZ,UAAUqZ,UAAU;IAEvC,SAASmB,kBAAAA,CAAmBC,SAAS,EAAE;AACrC,cAAMC,MAAS;YAACnmB,IAAM;YAAGH,GAAK;YAAGC,KAAO;YAAGC,MAAQ;AAAC;QACpDmmB,SAAUhvB,CAAAA,OAAO,CAAC,CAAC8rB,GAAQ;AACzBmD,YAAAA,MAAM,CAACnD,GAAAA,CAAI,GAAG1rB,IAAAA,CAAKoC,GAAG,CAAC+R,SAAS,CAACuX,GAAI,GAAE8B,UAAU,CAAC9B,GAAI;AACxD;QACA,OAAOmD,MAAAA,CAAAA;AACT;AAEA,WAAOrU,aACHmU,kBAAmB;AAAC;AAAQ;AAAQ,SACpCA,kBAAmB;AAAC;AAAO;KAAS,CAAC;AAC3C;AAEA,SAASG,QAAAA,CAAS9C,KAAK,EAAE7X,SAAS,EAAEuY,MAAM,EAAEnhB,MAAM,EAAE;AAClD,UAAMwjB,aAAa,EAAE;AACrB,QAAIjuB,CAAGuI,EAAAA,IAAAA,EAAMwjB,MAAQjB,EAAAA,GAAAA,EAAKoD,KAAOC,EAAAA,OAAAA,CAAAA;AAEjC,QAAKnuB,CAAI,MAAGuI,IAAO2iB,GAAAA,KAAAA,CAAMnrB,MAAM,EAAEmuB,KAAQ,IAAC,EAAEluB,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QACzD+rB,MAASb,GAAAA,KAAK,CAAClrB,CAAE;AACjB8qB,QAAAA,GAAAA,GAAMiB,OAAOjB,GAAG;AAEhBA,QAAAA,GAAAA,CAAI9mB,MAAM,CACR+nB,MAAAA,CAAOlQ,KAAK,IAAIxI,UAAU+Z,CAAC,EAC3BrB,MAAOnQ,CAAAA,MAAM,IAAIvI,SAAUia,CAAAA,CAAC,EAC5BM,UAAW7B,CAAAA,MAAAA,CAAOrS,UAAU,EAAErG,SAAAA,CAAAA,CAAAA,CAAAA;QAEhC,MAAM,EAACka,OAAMC,KAAAA,GAAM,GAAGX,UAAAA,CAAWxZ,SAAWuY,EAAAA,MAAAA,EAAQG,MAAQthB,EAAAA,MAAAA,CAAAA,CAAAA;QAI5DyjB,KAASX,IAAAA,IAAAA,IAAQU,WAAWluB,MAAM;AAGlCouB,QAAAA,OAAAA,GAAUA,OAAWX,IAAAA,KAAAA,CAAAA;QAErB,IAAI,CAAC1C,GAAIkB,CAAAA,QAAQ,EAAE;AACjBiC,YAAAA,UAAAA,CAAWjtB,IAAI,CAAC+qB,MAAAA,CAAAA,CAAAA;SACjB;AACH;AAEA,WAAOmC,KAASF,IAAAA,QAAAA,CAASC,UAAY5a,EAAAA,SAAAA,EAAWuY,QAAQnhB,MAAW0jB,CAAAA,IAAAA,OAAAA,CAAAA;AACrE;AAEA,SAASC,UAAAA,CAAWtD,GAAG,EAAEljB,IAAI,EAAEH,GAAG,EAAEoU,KAAK,EAAED,MAAM,EAAE;AACjDkP,IAAAA,GAAAA,CAAIrjB,GAAG,GAAGA,GAAAA,CAAAA;AACVqjB,IAAAA,GAAAA,CAAIljB,IAAI,GAAGA,IAAAA,CAAAA;IACXkjB,GAAIpjB,CAAAA,KAAK,GAAGE,IAAOiU,GAAAA,KAAAA,CAAAA;IACnBiP,GAAInjB,CAAAA,MAAM,GAAGF,GAAMmU,GAAAA,MAAAA,CAAAA;AACnBkP,IAAAA,GAAAA,CAAIjP,KAAK,GAAGA,KAAAA,CAAAA;AACZiP,IAAAA,GAAAA,CAAIlP,MAAM,GAAGA,MAAAA,CAAAA;AACf;AAEA,SAASyS,UAAAA,CAAWnD,KAAK,EAAE7X,SAAS,EAAEuY,MAAM,EAAEnhB,MAAM,EAAE;IACpD,MAAM6jB,WAAAA,GAAc1C,OAAO2C,OAAO;AAClC,QAAI,EAAChnB,CAAAA,GAAGC,CAAAA,GAAE,GAAG6L,SAAAA,CAAAA;IAEb,KAAK,MAAM0Y,UAAUb,KAAO;QAC1B,MAAMJ,GAAAA,GAAMiB,OAAOjB,GAAG;AACtB,cAAMpiB,QAAQ+B,MAAM,CAACshB,MAAOrjB,CAAAA,KAAK,CAAC,IAAI;YAACyI,KAAO;YAAGua,MAAQ;YAAGjI,MAAQ;AAAC;AACrE,cAAMA,SAAS,MAACsI,CAAOX,WAAW,GAAG1iB,KAAAA,CAAM+a,MAAM,IAAK;QACtD,IAAIsI,MAAAA,CAAOrS,UAAU,EAAE;YACrB,MAAMmC,KAAAA,GAAQxI,SAAU+Z,CAAAA,CAAC,GAAG3J,MAAAA,CAAAA;AAC5B,kBAAM7H,MAASlT,GAAAA,KAAAA,CAAMjC,IAAI,IAAIqkB,IAAIlP,MAAM;YACvC,IAAI5H,6DAAAA,CAAQtL,KAAMtJ,CAAAA,KAAK,CAAG;AACxBoI,gBAAAA,CAAAA,GAAIkB,MAAMtJ,KAAK;aAChB;YACD,IAAI0rB,GAAAA,CAAIkB,QAAQ,EAAE;AAChBoC,gBAAAA,UAAAA,CAAWtD,GAAKwD,EAAAA,WAAAA,CAAY1mB,IAAI,EAAEJ,CAAGokB,EAAAA,MAAAA,CAAOoB,UAAU,GAAGsB,WAAY5mB,CAAAA,KAAK,GAAG4mB,WAAAA,CAAY1mB,IAAI,EAAEgU,MAAAA,CAAAA,CAAAA;aAC1F;gBACLwS,UAAWtD,CAAAA,GAAAA,EAAKzX,UAAUzL,IAAI,GAAGc,MAAMgjB,MAAM,EAAElkB,GAAGqU,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;aAC1D;AACDlT,YAAAA,KAAAA,CAAMtJ,KAAK,GAAGoI,CAAAA,CAAAA;AACdkB,YAAAA,KAAAA,CAAMgjB,MAAM,IAAI7P,KAAAA,CAAAA;AAChBrU,YAAAA,CAAAA,GAAIsjB,IAAInjB,MAAM;SACT;YACL,MAAMiU,MAAAA,GAASvI,SAAUia,CAAAA,CAAC,GAAG7J,MAAAA,CAAAA;AAC7B,kBAAM5H,KAAQnT,GAAAA,KAAAA,CAAMjC,IAAI,IAAIqkB,IAAIjP,KAAK;YACrC,IAAI7H,6DAAAA,CAAQtL,KAAMtJ,CAAAA,KAAK,CAAG;AACxBmI,gBAAAA,CAAAA,GAAImB,MAAMtJ,KAAK;aAChB;YACD,IAAI0rB,GAAAA,CAAIkB,QAAQ,EAAE;AAChBoC,gBAAAA,UAAAA,CAAWtD,GAAKvjB,EAAAA,CAAAA,EAAG+mB,WAAY7mB,CAAAA,GAAG,EAAEoU,KAAAA,EAAO+P,MAAOsB,CAAAA,WAAW,GAAGoB,WAAAA,CAAY3mB,MAAM,GAAG2mB,YAAY7mB,GAAG;aAC/F;gBACL2mB,UAAWtD,CAAAA,GAAAA,EAAKvjB,GAAG8L,SAAU5L,CAAAA,GAAG,GAAGiB,KAAMgjB,CAAAA,MAAM,EAAE7P,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;aACzD;AACDlT,YAAAA,KAAAA,CAAMtJ,KAAK,GAAGmI,CAAAA,CAAAA;AACdmB,YAAAA,KAAAA,CAAMgjB,MAAM,IAAI9P,MAAAA,CAAAA;AAChBrU,YAAAA,CAAAA,GAAIujB,IAAIpjB,KAAK;SACd;AACH;AAEA2L,IAAAA,SAAAA,CAAU9L,CAAC,GAAGA,CAAAA,CAAAA;AACd8L,IAAAA,SAAAA,CAAU7L,CAAC,GAAGA,CAAAA,CAAAA;AAChB;AAwBA,cAAe;AAOb,CACAgnB,MAAOlwB,CAAAA,CAAAA,KAAK,EAAE4B,IAAI,EAAE;QAClB,IAAI,CAAC5B,KAAM4sB,CAAAA,KAAK,EAAE;YAChB5sB,KAAM4sB,CAAAA,KAAK,GAAG,EAAE;SACjB;AAGDhrB,QAAAA,IAAAA,CAAK8rB,QAAQ,GAAG9rB,IAAK8rB,CAAAA,QAAQ,IAAI,KAAK;AACtC9rB,QAAAA,IAAAA,CAAKmoB,QAAQ,GAAGnoB,IAAKmoB,CAAAA,QAAQ,IAAI;AACjCnoB,QAAAA,IAAAA,CAAKujB,MAAM,GAAGvjB,IAAKujB,CAAAA,MAAM,IAAI;AAE7BvjB,QAAAA,IAAAA,CAAKuuB,OAAO,GAAGvuB,IAAKuuB,CAAAA,OAAO,IAAI,WAAW;YACxC,OAAO;AAAC;oBACNC,CAAG;AACHzuB,oBAAAA,IAAAA,CAAAA,CAAKoT,SAAS,EAAE;AACdnT,wBAAAA,IAAAA,CAAKD,IAAI,CAACoT,SAAAA,CAAAA,CAAAA;AACZ;AACF;AAAE;AACJ;QAEA/U,KAAM4sB,CAAAA,KAAK,CAAClqB,IAAI,CAACd,IAAAA,CAAAA,CAAAA;AACnB;AAMA,CACAyuB,SAAUrwB,CAAAA,CAAAA,KAAK,EAAEswB,UAAU,EAAE;QAC3B,MAAMpmB,KAAAA,GAAQlK,KAAM4sB,CAAAA,KAAK,GAAG5sB,KAAAA,CAAM4sB,KAAK,CAAC/O,OAAO,CAACyS,UAAc,KAAC,CAAC;QAChE,IAAIpmB,KAAAA,KAAU,CAAC,CAAG;AAChBlK,YAAAA,KAAAA,CAAM4sB,KAAK,CAAChV,MAAM,CAAC1N,KAAO;SAC3B;AACH;AAOA,CACA1D,WAAUxG,KAAK,EAAE4B,IAAI,EAAE4F,OAAO,EAAE;QAC9B5F,IAAK8rB,CAAAA,QAAQ,GAAGlmB,OAAAA,CAAQkmB,QAAQ;QAChC9rB,IAAKmoB,CAAAA,QAAQ,GAAGviB,OAAAA,CAAQuiB,QAAQ;QAChCnoB,IAAKujB,CAAAA,MAAM,GAAG3d,OAAAA,CAAQ2d,MAAM;AAC9B;AAUAzf,CAAAA,MAAAA,CAAAA,CAAO1F,KAAK,EAAEud,KAAK,EAAED,MAAM,EAAEiT,UAAU,EAAE;AACvC,YAAI,CAACvwB,KAAO;AACV;SACD;AAED,cAAMiwB,UAAUO,6DAAUxwB,CAAAA,KAAAA,CAAMwH,OAAO,CAACimB,MAAM,CAACwC,OAAO;AACtD,cAAMtC,iBAAiB/sB,IAAKoC,CAAAA,GAAG,CAACua,KAAQ0S,GAAAA,OAAAA,CAAQ1S,KAAK,EAAE;AACvD,cAAMqQ,kBAAkBhtB,IAAKoC,CAAAA,GAAG,CAACsa,MAAS2S,GAAAA,OAAAA,CAAQ3S,MAAM,EAAE;QAC1D,MAAMsP,KAAAA,GAAQiB,gBAAiB7tB,CAAAA,KAAAA,CAAM4sB,KAAK;QAC1C,MAAM6D,aAAAA,GAAgB7D,MAAMsB,QAAQ;QACpC,MAAMwC,eAAAA,GAAkB9D,MAAMxR,UAAU;AAIxCuV,QAAAA,6DAAAA,CAAK3wB,KAAM4sB,CAAAA,KAAK,EAAEJ,CAAAA,GAAO;AACvB,gBAAI,OAAOA,GAAAA,CAAIoE,YAAY,KAAK,UAAY;AAC1CpE,gBAAAA,GAAAA,CAAIoE,YAAY;aACjB;AACH;QA6BA,MAAMC,uBAAAA,GAA0BJ,aAAc5tB,CAAAA,MAAM,CAAC,CAACshB,OAAO8I,IAC3DA,GAAAA,IAAAA,CAAKT,GAAG,CAAChlB,OAAO,IAAIylB,KAAKT,GAAG,CAAChlB,OAAO,CAACof,OAAO,KAAK,KAAK,GAAGzC,KAAQA,GAAAA,KAAAA,GAAQ,CAAC,EAAE,CAAM;QAEpF,MAAMmJ,MAAAA,GAAS3mB,MAAOoP,CAAAA,MAAM,CAAC;YAC3B2Y,UAAYnR,EAAAA,KAAAA;YACZqR,WAAatR,EAAAA,MAAAA;AACb2S,YAAAA,OAAAA;AACAtC,YAAAA,cAAAA;AACAC,YAAAA,eAAAA;AACAL,YAAAA,YAAAA,EAAcI,iBAAiB,CAAIkD,GAAAA,uBAAAA;AACnCrD,YAAAA,aAAAA,EAAeI,eAAkB;AACnC;AACA,cAAMQ,UAAaznB,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,EAAI6nB,EAAAA,OAAAA,CAAAA,CAAAA;AACrC5B,QAAAA,gBAAAA,CAAiBD,YAAYoC,6DAAUD,CAAAA,UAAAA,CAAAA,CAAAA,CAAAA;QACvC,MAAMxb,SAAAA,GAAYpO,MAAOyB,CAAAA,MAAM,CAAC;AAC9BgmB,YAAAA,UAAAA;YACAU,CAAGnB,EAAAA,cAAAA;YACHqB,CAAGpB,EAAAA,eAAAA;AACH3kB,YAAAA,CAAAA,EAAGgnB,QAAQ3mB,IAAI;AACfJ,YAAAA,CAAAA,EAAG+mB,QAAQ9mB,GAAG;SACb8mB,EAAAA,OAAAA,CAAAA,CAAAA;AAEH,cAAM9jB,MAASkhB,GAAAA,aAAAA,CAAcoD,aAAc9X,CAAAA,MAAM,CAAC+X,eAAkBpD,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA;AAGpEoC,QAAAA,QAAAA,CAAS9C,KAAMc,CAAAA,QAAQ,EAAE3Y,SAAAA,EAAWuY,MAAQnhB,EAAAA,MAAAA,CAAAA,CAAAA;QAG5CujB,QAASe,CAAAA,aAAAA,EAAe1b,WAAWuY,MAAQnhB,EAAAA,MAAAA,CAAAA,CAAAA;AAG3C,YAAIujB,QAASgB,CAAAA,eAAAA,EAAiB3b,SAAWuY,EAAAA,MAAAA,EAAQnhB,MAAS;YAExDujB,QAASe,CAAAA,aAAAA,EAAe1b,WAAWuY,MAAQnhB,EAAAA,MAAAA,CAAAA,CAAAA;SAC5C;QAEDgjB,gBAAiBpa,CAAAA,SAAAA,CAAAA,CAAAA;AAGjBgb,QAAAA,UAAAA,CAAWnD,KAAMoB,CAAAA,UAAU,EAAEjZ,SAAAA,EAAWuY,MAAQnhB,EAAAA,MAAAA,CAAAA,CAAAA;QAGhD4I,SAAU9L,CAAAA,CAAC,IAAI8L,SAAAA,CAAU+Z,CAAC;QAC1B/Z,SAAU7L,CAAAA,CAAC,IAAI6L,SAAAA,CAAUia,CAAC;AAE1Be,QAAAA,UAAAA,CAAWnD,KAAMqB,CAAAA,cAAc,EAAElZ,SAAAA,EAAWuY,MAAQnhB,EAAAA,MAAAA,CAAAA,CAAAA;AAEpDnM,QAAAA,KAAAA,CAAM+U,SAAS,GAAG;AAChBzL,YAAAA,IAAAA,EAAMyL,UAAUzL,IAAI;AACpBH,YAAAA,GAAAA,EAAK4L,UAAU5L,GAAG;AAClBC,YAAAA,KAAAA,EAAO2L,SAAUzL,CAAAA,IAAI,GAAGyL,SAAAA,CAAU+Z,CAAC;AACnCzlB,YAAAA,MAAAA,EAAQ0L,SAAU5L,CAAAA,GAAG,GAAG4L,SAAAA,CAAUia,CAAC;AACnC1R,YAAAA,MAAAA,EAAQvI,UAAUia,CAAC;AACnBzR,YAAAA,KAAAA,EAAOxI,UAAU+Z,CAAC;AACpB;AAGA6B,QAAAA,6DAAAA,CAAK/D,KAAM7X,CAAAA,SAAS,EAAE,CAAC0Y,MAAW;YAChC,MAAMjB,GAAAA,GAAMiB,OAAOjB,GAAG;AACtB7lB,YAAAA,MAAAA,CAAOyB,MAAM,CAACokB,GAAKxsB,EAAAA,KAAAA,CAAM+U,SAAS;AAClCyX,YAAAA,GAAAA,CAAI9mB,MAAM,CAACqP,SAAAA,CAAU+Z,CAAC,EAAE/Z,SAAAA,CAAUia,CAAC,EAAE;gBAAC1lB,IAAM;gBAAGH,GAAK;gBAAGC,KAAO;gBAAGC,MAAQ;AAAC;AAC5E;AACF;AACF,CAAE;;AC9ba,MAAMynB,YAAAA,CAAAA;AAMnB,CACAC,cAAeC,CAAAA,MAAM,EAAErP,WAAW,EAAE,EAAC;AAQrCsP,CAAAA,cAAAA,CAAe7b,OAAO,EAAE;AACtB,eAAO,KAAK;AACd;AAQA,CACA8b,iBAAiBlxB,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE,EAAC;AAOzC,CACAC,oBAAoBpxB,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE,EAAC;AAI5C,CACAE,mBAAsB;QACpB,OAAO;AACT;AASAC,CAAAA,cAAAA,CAAevjB,OAAO,EAAEwP,KAAK,EAAED,MAAM,EAAEqE,WAAW,EAAE;AAClDpE,QAAAA,KAAAA,GAAQ3c,KAAKoC,GAAG,CAAC,CAAGua,EAAAA,KAAAA,IAASxP,QAAQwP,KAAK;QAC1CD,MAASA,GAAAA,MAAAA,IAAUvP,QAAQuP,MAAM;QACjC,OAAO;AACLC,YAAAA,KAAAA;YACAD,MAAQ1c,EAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAG2e,EAAAA,WAAAA,GAAc/gB,KAAKoE,KAAK,CAACuY,KAAQoE,GAAAA,WAAAA,CAAAA,GAAerE,MAAM;AAC5E;AACF;AAMAiU,CAAAA,UAAAA,CAAWP,MAAM,EAAE;AACjB,eAAO,IAAI;AACb;AAMAQ,CAAAA,YAAAA,CAAanrB,MAAM,EAAE;AAErB;AACF;;ACtEe,MAAMorB,aAAsBX,SAAAA,YAAAA,CAAAA;AACzCC,IAAAA,cAAAA,CAAenvB,IAAI,EAAE;QAInB,OAAOA,IAAAA,IAAQA,KAAK8Q,UAAU,IAAI9Q,KAAK8Q,UAAU,CAAC,SAAS,IAAI;AACjE;AACA8e,IAAAA,YAAAA,CAAanrB,MAAM,EAAE;AACnBA,QAAAA,MAAAA,CAAOmB,OAAO,CAACV,SAAS,GAAG,KAAK;AAClC;AACF;;ACTA,MAAM4qB,WAAc;AAMnB,CACD,MAAMC,WAAc;IAClBC,UAAY;IACZC,SAAW;IACXC,QAAU;IACVC,YAAc;IACdC,WAAa;IACbC,WAAa;IACbC,SAAW;IACXC,YAAc;IACdC,UAAY;AACd;AAEA,MAAMC,gBAAgBnqB,CAAAA,KAAAA,GAASA,KAAU,SAAI,IAAIA,KAAU;AAO1D,CACD,SAASoqB,UAAAA,CAAWtB,MAAM,EAAErP,WAAW,EAAE;IACvC,MAAMM,KAAAA,GAAQ+O,OAAO/O,KAAK;IAI1B,MAAMsQ,YAAAA,GAAevB,MAAOwB,CAAAA,YAAY,CAAC;IACzC,MAAMC,WAAAA,GAAczB,MAAOwB,CAAAA,YAAY,CAAC;IAGxCxB,MAAM,CAACU,YAAY,GAAG;QACpBhxB,OAAS;YACP4c,MAAQiV,EAAAA,YAAAA;YACRhV,KAAOkV,EAAAA,WAAAA;YACPxQ,KAAO;AACL2E,gBAAAA,OAAAA,EAAS3E,MAAM2E,OAAO;AACtBtJ,gBAAAA,MAAAA,EAAQ2E,MAAM3E,MAAM;AACpBC,gBAAAA,KAAAA,EAAO0E,MAAM1E,KAAK;AACpB;AACF;AACF;AAKA0E,IAAAA,KAAAA,CAAM2E,OAAO,GAAG3E,KAAM2E,CAAAA,OAAO,IAAI;AAEjC3E,IAAAA,KAAAA,CAAMyQ,SAAS,GAAGzQ,KAAMyQ,CAAAA,SAAS,IAAI;AAErC,QAAIL,cAAcI,WAAc;QAC9B,MAAME,YAAAA,GAAeC,6DAAYA,CAAC5B,MAAQ;AAC1C,YAAI2B,iBAAiB7yB,SAAW;AAC9BkxB,YAAAA,MAAAA,CAAOzT,KAAK,GAAGoV,YAAAA,CAAAA;SAChB;KACF;AAED,QAAIN,cAAcE,YAAe;AAC/B,YAAIvB,MAAO/O,CAAAA,KAAK,CAAC3E,MAAM,KAAK,EAAI;AAI9B0T,YAAAA,MAAAA,CAAO1T,MAAM,GAAG0T,MAAAA,CAAOzT,KAAK,IAAIoE,eAAe;SAC1C;YACL,MAAMkR,aAAAA,GAAgBD,6DAAYA,CAAC5B,MAAQ;AAC3C,gBAAI6B,kBAAkB/yB,SAAW;AAC/BkxB,gBAAAA,MAAAA,CAAO1T,MAAM,GAAGuV,aAAAA,CAAAA;aACjB;SACF;KACF;IAED,OAAO7B,MAAAA,CAAAA;AACT;AAIA,MAAM8B,uBAAuBC,yDAA+B;AAACC,IAAAA,OAAAA,EAAS,IAAI;AAAA,IAAI,KAAK;AAEnF,SAASC,YAAYC,IAAI,EAAE/yB,IAAI,EAAEgxB,QAAQ,EAAE;AACzC,QAAI+B,IAAM;QACRA,IAAKhC,CAAAA,gBAAgB,CAAC/wB,IAAAA,EAAMgxB,QAAU2B,EAAAA,oBAAAA,CAAAA,CAAAA;KACvC;AACH;AAEA,SAASK,eAAenzB,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE;IAC7C,IAAInxB,KAAAA,IAASA,KAAMgxB,CAAAA,MAAM,EAAE;AACzBhxB,QAAAA,KAAAA,CAAMgxB,MAAM,CAACI,mBAAmB,CAACjxB,MAAMgxB,QAAU2B,EAAAA,oBAAAA,CAAAA,CAAAA;KAClD;AACH;AAEA,SAASM,eAAgB5wB,CAAAA,KAAK,EAAExC,KAAK,EAAE;IACrC,MAAMG,IAAAA,GAAOwxB,WAAW,CAACnvB,KAAAA,CAAMrC,IAAI,CAAC,IAAIqC,MAAMrC,IAAI;AAClD,UAAM,EAAC8I,CAAC,GAAEC,IAAE,GAAG+iB,6DAAmBA,CAACzpB,KAAOxC,EAAAA,KAAAA,CAAAA,CAAAA;IAC1C,OAAO;AACLG,QAAAA,IAAAA;AACAH,QAAAA,KAAAA;QACAqzB,MAAQ7wB,EAAAA,KAAAA;QACRyG,CAAGA,EAAAA,CAAAA,KAAMnJ,SAAYmJ,GAAAA,CAAAA,GAAI,IAAI;QAC7BC,CAAGA,EAAAA,CAAAA,KAAMpJ,SAAYoJ,GAAAA,CAAAA,GAAI,IAAI;AAC/B;AACF;AAEA,SAASoqB,gBAAiBC,CAAAA,QAAQ,EAAEvC,MAAM,EAAE;IAC1C,KAAK,MAAMkC,QAAQK,QAAU;AAC3B,YAAIL,IAASlC,KAAAA,MAAAA,IAAUkC,IAAKM,CAAAA,QAAQ,CAACxC,MAAS;AAC5C,mBAAO,IAAI;SACZ;AACH;AACF;AAEA,SAASyC,qBAAqBzzB,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAShxB,MAAMgxB,MAAM;AAC3B,UAAM0C,QAAW,OAAIC,gBAAiBC,CAAAA,CAAAA,OAAW;AAC/C,YAAIC,UAAU,KAAK;QACnB,KAAK,MAAMvZ,SAASsZ,OAAS;AAC3BC,YAAAA,OAAAA,GAAUA,OAAWP,IAAAA,gBAAAA,CAAiBhZ,KAAMwZ,CAAAA,UAAU,EAAE9C,MAAAA,CAAAA,CAAAA;AACxD6C,YAAAA,OAAAA,GAAUA,OAAW,KAACP,gBAAiBhZ,CAAAA,KAAAA,CAAMyZ,YAAY,EAAE/C,MAAAA,CAAAA,CAAAA;AAC7D;AACA,YAAI6C,OAAS;AACX1C,YAAAA,QAAAA,EAAAA,CAAAA;SACD;AACH;IACAuC,QAASM,CAAAA,OAAO,CAACC,QAAU;AAACC,QAAAA,SAAAA,EAAW,IAAI;AAAEC,QAAAA,OAAAA,EAAS,IAAI;AAAA;IAC1D,OAAOT,QAAAA,CAAAA;AACT;AAEA,SAASU,qBAAqBp0B,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAShxB,MAAMgxB,MAAM;AAC3B,UAAM0C,QAAW,OAAIC,gBAAiBC,CAAAA,CAAAA,OAAW;AAC/C,YAAIC,UAAU,KAAK;QACnB,KAAK,MAAMvZ,SAASsZ,OAAS;AAC3BC,YAAAA,OAAAA,GAAUA,OAAWP,IAAAA,gBAAAA,CAAiBhZ,KAAMyZ,CAAAA,YAAY,EAAE/C,MAAAA,CAAAA,CAAAA;AAC1D6C,YAAAA,OAAAA,GAAUA,OAAW,KAACP,gBAAiBhZ,CAAAA,KAAAA,CAAMwZ,UAAU,EAAE9C,MAAAA,CAAAA,CAAAA;AAC3D;AACA,YAAI6C,OAAS;AACX1C,YAAAA,QAAAA,EAAAA,CAAAA;SACD;AACH;IACAuC,QAASM,CAAAA,OAAO,CAACC,QAAU;AAACC,QAAAA,SAAAA,EAAW,IAAI;AAAEC,QAAAA,OAAAA,EAAS,IAAI;AAAA;IAC1D,OAAOT,QAAAA,CAAAA;AACT;AAEA,MAAMW,qBAAqB,IAAI10B,GAAAA,EAAAA,CAAAA;AAC/B,IAAI20B,mBAAsB;AAE1B,SAASC,cAAiB;IACxB,MAAMC,GAAAA,GAAMtzB,OAAOuzB,gBAAgB;AACnC,QAAID,QAAQF,mBAAqB;AAC/B;KACD;IACDA,mBAAsBE,GAAAA,GAAAA,CAAAA;AACtBH,IAAAA,kBAAAA,CAAmB7zB,OAAO,CAAC,CAACk0B,MAAAA,EAAQ10B,KAAU;QAC5C,IAAIA,KAAAA,CAAM20B,uBAAuB,KAAKH,GAAK;AACzCE,YAAAA,MAAAA,EAAAA,CAAAA;SACD;AACH;AACF;AAEA,SAASE,6BAA8B50B,CAAAA,KAAK,EAAE00B,MAAM,EAAE;IACpD,IAAI,CAACL,kBAAmBlsB,CAAAA,IAAI,EAAE;QAC5BjH,MAAOgwB,CAAAA,gBAAgB,CAAC,QAAUqD,EAAAA,cAAAA,CAAAA,CAAAA;KACnC;IACDF,kBAAmB/xB,CAAAA,GAAG,CAACtC,KAAO00B,EAAAA,MAAAA,CAAAA,CAAAA;AAChC;AAEA,SAASG,+BAAAA,CAAgC70B,KAAK,EAAE;AAC9Cq0B,IAAAA,kBAAAA,CAAmBhxB,MAAM,CAACrD,KAAAA,CAAAA,CAAAA;IAC1B,IAAI,CAACq0B,kBAAmBlsB,CAAAA,IAAI,EAAE;QAC5BjH,MAAOkwB,CAAAA,mBAAmB,CAAC,QAAUmD,EAAAA,cAAAA,CAAAA,CAAAA;KACtC;AACH;AAEA,SAASO,qBAAqB90B,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAShxB,MAAMgxB,MAAM;IAC3B,MAAM+D,SAAAA,GAAY/D,UAAUgE,6DAAehE,CAAAA,MAAAA,CAAAA,CAAAA;AAC3C,QAAI,CAAC+D,SAAW;AACd;KACD;AACD,UAAML,MAASO,GAAAA,6DAAAA,CAAU,CAAC1X,KAAAA,EAAOD,MAAW;QAC1C,MAAMwR,CAAAA,GAAIiG,UAAUG,WAAW;AAC/B/D,QAAAA,QAAAA,CAAS5T,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;QAChB,IAAIwR,CAAAA,GAAIiG,SAAUG,CAAAA,WAAW,EAAE;AAQ7B/D,YAAAA,QAAAA,EAAAA,CAAAA;SACD;KACAjwB,EAAAA,MAAAA,CAAAA,CAAAA;AAGH,UAAMwyB,QAAW,OAAIyB,cAAevB,CAAAA,CAAAA,OAAW;QAC7C,MAAMtZ,KAAAA,GAAQsZ,OAAO,CAAC,CAAE;AACxB,cAAMrW,KAAQjD,GAAAA,KAAAA,CAAM8a,WAAW,CAAC7X,KAAK;AACrC,cAAMD,MAAShD,GAAAA,KAAAA,CAAM8a,WAAW,CAAC9X,MAAM;QAIvC,IAAIC,KAAAA,KAAU,CAAKD,IAAAA,MAAAA,KAAW,CAAG;AAC/B;SACD;AACDoX,QAAAA,MAAAA,CAAOnX,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;AAChB;AACAoW,IAAAA,QAAAA,CAASM,OAAO,CAACe,SAAAA,CAAAA,CAAAA;AACjBH,IAAAA,6BAAAA,CAA8B50B,KAAO00B,EAAAA,MAAAA,CAAAA,CAAAA;IAErC,OAAOhB,QAAAA,CAAAA;AACT;AAEA,SAAS2B,gBAAgBr1B,KAAK,EAAEG,IAAI,EAAEuzB,QAAQ,EAAE;AAC9C,QAAIA,QAAU;AACZA,QAAAA,QAAAA,CAAS4B,UAAU;KACpB;AACD,QAAIn1B,SAAS,QAAU;QACrB00B,+BAAgC70B,CAAAA,KAAAA,CAAAA,CAAAA;KACjC;AACH;AAEA,SAASu1B,qBAAqBv1B,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE;IACnD,MAAMH,MAAAA,GAAShxB,MAAMgxB,MAAM;IAC3B,MAAMwE,KAAAA,GAAQP,6DAAU,EAACzyB,KAAU;AAIjC,YAAIxC,KAAMgP,CAAAA,GAAG,KAAK,IAAI,EAAE;AACtBmiB,YAAAA,QAAAA,CAASiC,gBAAgB5wB,KAAOxC,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;SACjC;KACAA,EAAAA,KAAAA,CAAAA,CAAAA;AAEHizB,IAAAA,WAAAA,CAAYjC,QAAQ7wB,IAAMq1B,EAAAA,KAAAA,CAAAA,CAAAA;IAE1B,OAAOA,KAAAA,CAAAA;AACT;AAMA,CAAe,MAAMC,WAAoB3E,SAAAA,YAAAA,CAAAA;AAMvC,CACAC,cAAeC,CAAAA,MAAM,EAAErP,WAAW,EAAE;AAIlC,cAAMvM,UAAU4b,MAAUA,IAAAA,MAAAA,CAAOte,UAAU,IAAIse,MAAAA,CAAOte,UAAU,CAAC;AASjE,YAAI0C,OAAWA,IAAAA,OAAAA,CAAQ4b,MAAM,KAAKA,MAAQ;AAGxCsB,YAAAA,UAAAA,CAAWtB,MAAQrP,EAAAA,WAAAA,CAAAA,CAAAA;YACnB,OAAOvM,OAAAA,CAAAA;SACR;AAED,eAAO,IAAI;AACb;AAKA6b,CAAAA,cAAAA,CAAe7b,OAAO,EAAE;QACtB,MAAM4b,MAAAA,GAAS5b,QAAQ4b,MAAM;AAC7B,YAAI,CAACA,MAAM,CAACU,WAAAA,CAAY,EAAE;AACxB,mBAAO,KAAK;SACb;AAED,cAAMhxB,OAAUswB,GAAAA,MAAM,CAACU,WAAAA,CAAY,CAAChxB,OAAO;AAC3C;AAAC;AAAU;SAAQ,CAACF,OAAO,CAAC,CAAC+D,IAAS;YACpC,MAAM2D,KAAAA,GAAQxH,OAAO,CAAC6D,IAAK;AAC3B,gBAAIsV,6DAAaA,CAAC3R,KAAQ;AACxB8oB,gBAAAA,MAAAA,CAAO0E,eAAe,CAACnxB,IAAAA,CAAAA,CAAAA;aAClB;gBACLysB,MAAO2E,CAAAA,YAAY,CAACpxB,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;aAC3B;AACH;AAEA,cAAM+Z,KAAQvhB,GAAAA,OAAAA,CAAQuhB,KAAK,IAAI,EAAC;AAChCtb,QAAAA,MAAAA,CAAOC,IAAI,CAACqb,KAAAA,CAAAA,CAAOzhB,OAAO,CAAC,CAACyG,GAAQ;AAClC+pB,YAAAA,MAAAA,CAAO/O,KAAK,CAAChb,GAAAA,CAAI,GAAGgb,KAAK,CAAChb,GAAI;AAChC;QAOA+pB,MAAOzT,CAAAA,KAAK,GAAGyT,MAAAA,CAAOzT,KAAK;QAE3B,OAAOyT,MAAM,CAACU,WAAY;AAC1B,eAAO,IAAI;AACb;AAOA,CACAR,iBAAiBlxB,KAAK,EAAEG,IAAI,EAAEgxB,QAAQ,EAAE;QAEtC,IAAI,CAACC,mBAAmB,CAACpxB,KAAOG,EAAAA,IAAAA,CAAAA,CAAAA;QAEhC,MAAMy1B,OAAAA,GAAU51B,MAAM61B,QAAQ,KAAK71B,KAAM61B,CAAAA,QAAQ,GAAG,EAAC;AACrD,cAAMC,QAAW;YACfC,MAAQtC,EAAAA,oBAAAA;YACRuC,MAAQ5B,EAAAA,oBAAAA;YACRM,MAAQI,EAAAA,oBAAAA;AACV;AACA,cAAM9K,OAAU8L,GAAAA,QAAQ,CAAC31B,IAAAA,CAAK,IAAIo1B,oBAAAA,CAAAA;AAClCK,QAAAA,OAAO,CAACz1B,IAAAA,CAAK,GAAG6pB,OAAAA,CAAQhqB,OAAOG,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA;AACvC;AAMA,CACAC,mBAAoBpxB,CAAAA,KAAK,EAAEG,IAAI,EAAE;QAC/B,MAAMy1B,OAAAA,GAAU51B,MAAM61B,QAAQ,KAAK71B,KAAM61B,CAAAA,QAAQ,GAAG,EAAC;QACrD,MAAML,KAAAA,GAAQI,OAAO,CAACz1B,IAAK;AAE3B,YAAI,CAACq1B,KAAO;AACV;SACD;AAED,cAAMM,QAAW;YACfC,MAAQV,EAAAA,eAAAA;YACRW,MAAQX,EAAAA,eAAAA;YACRX,MAAQW,EAAAA,eAAAA;AACV;AACA,cAAMrL,OAAU8L,GAAAA,QAAQ,CAAC31B,IAAAA,CAAK,IAAIgzB,cAAAA,CAAAA;AAClCnJ,QAAAA,OAAAA,CAAQhqB,OAAOG,IAAMq1B,EAAAA,KAAAA,CAAAA,CAAAA;QACrBI,OAAO,CAACz1B,KAAK,GAAGL,SAAAA,CAAAA;AAClB;IAEAuxB,mBAAsB;AACpB,eAAOnwB,OAAOuzB,gBAAgB;AAChC;AAQAnD,CAAAA,cAAAA,CAAeN,MAAM,EAAEzT,KAAK,EAAED,MAAM,EAAEqE,WAAW,EAAE;QACjD,OAAO2P,6DAAAA,CAAeN,MAAQzT,EAAAA,KAAAA,EAAOD,MAAQqE,EAAAA,WAAAA,CAAAA,CAAAA;AAC/C;AAKA4P,CAAAA,UAAAA,CAAWP,MAAM,EAAE;QACjB,MAAM+D,SAAAA,GAAY/D,UAAUgE,6DAAehE,CAAAA,MAAAA,CAAAA,CAAAA;AAC3C,eAAO,CAAC,EAAE+D,SAAaA,IAAAA,SAAAA,CAAUkB,WAAW,CAAD;AAC7C;AACF;;AC/XO,SAASC,eAAgBlF,CAAAA,MAAM,EAAE;AACtC,QAAI,CAACmF,6DAAsB,aAAOC,eAAoB,oBAAepF,kBAAkBoF,eAAkB;QACvG,OAAO3E,aAAAA,CAAAA;KACR;IACD,OAAOgE,WAAAA,CAAAA;AACT;;ACLe,MAAMY,OAAAA,CAAAA;IAEnB,OAAOxvB,QAAAA,GAAW,EAAG;AACrB,WAAOyvB,gBAAgBx2B,SAAU;IAEjCmJ,CAAU;IACVC,CAAU;AACVzD,IAAAA,MAAAA,GAAS,KAAK,CAAC;IACf+B,OAAW;IACXM,WAAwC;AAExCyuB,IAAAA,eAAAA,CAAgB1L,gBAAyB,EAAS;QAChD,MAAM,EAAC5hB,IAAGC,CAAAA,GAAE,GAAG,IAAI,CAACkiB,QAAQ,CAAC;AAAC;AAAK;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACzC,OAAO;AAAC5hB,YAAAA,CAAAA;AAAGC,YAAAA,CAAAA;AAAC;AACd;IAEAstB,QAAW;QACT,OAAOvQ,6DAAAA,CAAS,IAAI,CAAChd,CAAC,KAAKgd,6DAAS,KAAI,CAAC/c,CAAC;AAC5C;IASAkiB,QAASpjB,CAAAA,KAAe,EAAEyuB,KAAe,EAAoC;QAC3E,MAAMx2B,KAAAA,GAAQ,IAAI,CAAC6H,WAAW;QAC9B,IAAI,CAAC2uB,KAAS,KAACx2B,KAAO;;AAEpB,mBAAO,IAAI;SACZ;AACD,cAAMy2B,MAA+B,EAAC;QACtC1uB,KAAMxH,CAAAA,OAAO,CAAC,CAAC+D,IAAS;YACtBmyB,GAAG,CAACnyB,KAAK,GAAGtE,KAAK,CAACsE,IAAK,KAAItE,KAAK,CAACsE,IAAAA,CAAK,CAACkB,MAAM,KAAKxF,KAAK,CAACsE,IAAAA,CAAK,CAACgB,GAAG,GAAG,IAAI,CAAChB,IAAe;AAC1F;QACA,OAAOmyB,GAAAA,CAAAA;AACT;AACF;;AC5BO,SAASC,QAAAA,CAASluB,KAAK,EAAE4Q,KAAK,EAAE;AACrC,UAAMud,QAAWnuB,GAAAA,KAAAA,CAAMjB,OAAO,CAAC6R,KAAK;AACpC,UAAMwd,qBAAqBC,iBAAkBruB,CAAAA,KAAAA,CAAAA,CAAAA;AAC7C,UAAMsuB,aAAan2B,IAAKC,CAAAA,GAAG,CAAC+1B,QAASI,CAAAA,aAAa,IAAIH,kBAAoBA,EAAAA,kBAAAA,CAAAA,CAAAA;IAC1E,MAAMI,YAAAA,GAAeL,SAASM,KAAK,CAACC,OAAO,GAAGC,eAAAA,CAAgB/d,SAAS,EAAE;IACzE,MAAMge,eAAAA,GAAkBJ,aAAax1B,MAAM;IAC3C,MAAM61B,KAAAA,GAAQL,YAAY,CAAC,CAAE;AAC7B,UAAMxZ,IAAOwZ,GAAAA,YAAY,CAACI,eAAAA,GAAkB,CAAE;AAC9C,UAAME,WAAW,EAAE;AAGnB,QAAIF,kBAAkBN,UAAY;QAChCS,UAAWne,CAAAA,KAAAA,EAAOke,QAAUN,EAAAA,YAAAA,EAAcI,eAAkBN,GAAAA,UAAAA,CAAAA,CAAAA;QAC5D,OAAOQ,QAAAA,CAAAA;KACR;IAED,MAAMjW,OAAAA,GAAUmW,gBAAiBR,CAAAA,YAAAA,EAAc5d,KAAO0d,EAAAA,UAAAA,CAAAA,CAAAA;AAEtD,QAAIM,kBAAkB,CAAG;AACvB,YAAI31B,CAAGuI,EAAAA,IAAAA,CAAAA;AACP,cAAMytB,eAAkBL,GAAAA,eAAAA,GAAkB,CAAIz2B,GAAAA,IAAAA,CAAK+2B,KAAK,CAAEla,CAAAA,IAAAA,GAAO6Z,KAAI,KAAMD,eAAkB,SAAM,IAAI;QACvG9X,IAAKlG,CAAAA,KAAAA,EAAOke,UAAUjW,OAASzH,EAAAA,6DAAAA,CAAc6d,mBAAmB,CAAIJ,GAAAA,KAAAA,GAAQI,eAAe,EAAEJ,KAAAA,CAAAA,CAAAA;QAC7F,IAAK51B,CAAAA,GAAI,GAAGuI,IAAOotB,GAAAA,eAAAA,GAAkB,CAAC,EAAE31B,CAAAA,GAAIuI,MAAMvI,CAAK;YACrD6d,IAAKlG,CAAAA,KAAAA,EAAOke,QAAUjW,EAAAA,OAAAA,EAAS2V,YAAY,CAACv1B,EAAE,EAAEu1B,YAAY,CAACv1B,CAAAA,GAAI,CAAE;AACrE;QACA6d,IAAKlG,CAAAA,KAAAA,EAAOke,QAAUjW,EAAAA,OAAAA,EAAS7D,IAAM5D,EAAAA,6DAAAA,CAAc6d,mBAAmBre,KAAM5X,CAAAA,MAAM,GAAGgc,IAAAA,GAAOia,eAAe;QAC3G,OAAOH,QAAAA,CAAAA;KACR;AACDhY,IAAAA,IAAAA,CAAKlG,OAAOke,QAAUjW,EAAAA,OAAAA,CAAAA,CAAAA;IACtB,OAAOiW,QAAAA,CAAAA;AACT,CAAC;AAED,SAAST,iBAAAA,CAAkBruB,KAAK,EAAE;AAChC,UAAM+T,MAAS/T,GAAAA,KAAAA,CAAMjB,OAAO,CAACgV,MAAM;IACnC,MAAMob,UAAAA,GAAanvB,MAAMovB,SAAS;IAClC,MAAMC,QAAAA,GAAWrvB,MAAMuQ,OAAO,GAAG4e,cAAcpb,MAAAA,GAAS,CAAI,IAAC,CAAD;IAC5D,MAAMub,QAAAA,GAAWtvB,KAAMuvB,CAAAA,UAAU,GAAGJ,UAAAA,CAAAA;AACpC,WAAOh3B,KAAKoE,KAAK,CAACpE,IAAKC,CAAAA,GAAG,CAACi3B,QAAUC,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACvC;AAMC,CACD,SAASN,gBAAiBR,CAAAA,YAAY,EAAE5d,KAAK,EAAE0d,UAAU,EAAE;AACzD,UAAMkB,mBAAmBC,cAAejB,CAAAA,YAAAA,CAAAA,CAAAA;IACxC,MAAM3V,OAAAA,GAAUjI,KAAM5X,CAAAA,MAAM,GAAGs1B,UAAAA,CAAAA;AAI/B,QAAI,CAACkB,gBAAkB;QACrB,OAAOr3B,IAAAA,CAAKoC,GAAG,CAACse,OAAS;KAC1B;AAED,UAAM6W,UAAUC,6DAAWH,CAAAA,gBAAAA,CAAAA,CAAAA;IAC3B,IAAK,IAAIv2B,CAAI,MAAGuI,IAAOkuB,GAAAA,OAAAA,CAAQ12B,MAAM,GAAG,GAAGC,CAAIuI,GAAAA,IAAAA,EAAMvI,CAAK;QACxD,MAAMiC,MAAAA,GAASw0B,OAAO,CAACz2B,CAAE;AACzB,YAAIiC,SAAS2d,OAAS;YACpB,OAAO3d,MAAAA,CAAAA;SACR;AACH;IACA,OAAO/C,IAAAA,CAAKoC,GAAG,CAACse,OAAS;AAC3B;AAKA,UAAS8V,eAAgB/d,CAAAA,KAAK,EAAE;AAC9B,UAAMgf,SAAS,EAAE;AACjB,QAAI32B,CAAGuI,EAAAA,IAAAA,CAAAA;IACP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOoP,GAAAA,KAAAA,CAAM5X,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK;AAC9C,YAAI2X,KAAK,CAAC3X,CAAE,EAACw1B,KAAK,EAAE;AAClBmB,YAAAA,MAAAA,CAAO31B,IAAI,CAAChB,CAAAA,CAAAA,CAAAA;SACb;AACH;IACA,OAAO22B,MAAAA,CAAAA;AACT;AAQA,UAASb,WAAWne,KAAK,EAAEke,QAAQ,EAAEN,YAAY,EAAE3V,OAAO,EAAE;AAC1D,QAAIzO,KAAQ;IACZ,IAAIsH,IAAAA,GAAO8c,YAAY,CAAC,CAAE;IAC1B,IAAIv1B,CAAAA,CAAAA;IAEJ4f,OAAU1gB,GAAAA,IAAAA,CAAK03B,IAAI,CAAChX,OAAAA,CAAAA,CAAAA;AACpB,QAAK5f,IAAI,CAAGA,EAAAA,CAAAA,GAAI2X,KAAM5X,CAAAA,MAAM,EAAEC,CAAK;AACjC,YAAIA,MAAMyY,IAAM;AACdod,YAAAA,QAAAA,CAAS70B,IAAI,CAAC2W,KAAK,CAAC3X,CAAE;AACtBmR,YAAAA,KAAAA,EAAAA,CAAAA;YACAsH,IAAO8c,GAAAA,YAAY,CAACpkB,KAAAA,GAAQyO,OAAQ;SACrC;AACH;AACF;AASA,UAAS/B,IAAKlG,CAAAA,KAAK,EAAEke,QAAQ,EAAEjW,OAAO,EAAEiX,UAAU,EAAEC,QAAQ,EAAE;IAC5D,MAAM13B,KAAAA,GAAQ4P,6DAAcA,CAAC6nB,UAAY;IACzC,MAAM1vB,GAAAA,GAAMjI,IAAKC,CAAAA,GAAG,CAAC6P,6DAAAA,CAAe8nB,UAAUnf,KAAM5X,CAAAA,MAAM,CAAG4X,EAAAA,KAAAA,CAAM5X,MAAM;AACzE,QAAIoR,KAAQ;AACZ,QAAIpR,QAAQC,CAAGyY,EAAAA,IAAAA,CAAAA;IAEfmH,OAAU1gB,GAAAA,IAAAA,CAAK03B,IAAI,CAAChX,OAAAA,CAAAA,CAAAA;AACpB,QAAIkX,QAAU;AACZ/2B,QAAAA,MAAAA,GAAS+2B,QAAWD,GAAAA,UAAAA,CAAAA;AACpBjX,QAAAA,OAAAA,GAAU7f,MAASb,GAAAA,IAAAA,CAAKoE,KAAK,CAACvD,MAAS6f,GAAAA,OAAAA,CAAAA,CAAAA;KACxC;IAEDnH,IAAOrZ,GAAAA,KAAAA,CAAAA;AAEP,UAAOqZ,OAAO,CAAG;AACftH,QAAAA,KAAAA,EAAAA,CAAAA;AACAsH,QAAAA,IAAAA,GAAOvZ,IAAK+2B,CAAAA,KAAK,CAAC72B,KAAAA,GAAQ+R,KAAQyO,GAAAA,OAAAA,CAAAA,CAAAA;AACpC;IAEA,IAAK5f,CAAAA,GAAId,KAAKoC,GAAG,CAAClC,OAAO,CAAIY,CAAAA,EAAAA,CAAAA,GAAImH,KAAKnH,CAAK;AACzC,YAAIA,MAAMyY,IAAM;AACdod,YAAAA,QAAAA,CAAS70B,IAAI,CAAC2W,KAAK,CAAC3X,CAAE;AACtBmR,YAAAA,KAAAA,EAAAA,CAAAA;AACAsH,YAAAA,IAAAA,GAAOvZ,IAAK+2B,CAAAA,KAAK,CAAC72B,KAAAA,GAAQ+R,KAAQyO,GAAAA,OAAAA,CAAAA,CAAAA;SACnC;AACH;AACF;AAMA,UAAS4W,cAAezgB,CAAAA,GAAG,EAAE;IAC3B,MAAMghB,GAAAA,GAAMhhB,IAAIhW,MAAM;AACtB,QAAIC,CAAGqnB,EAAAA,IAAAA,CAAAA;AAEP,QAAI0P,MAAM,CAAG;AACX,eAAO,KAAK;KACb;IAED,IAAK1P,IAAAA,GAAOtR,GAAG,CAAC,CAAE,GAAE/V,CAAI,IAAC,EAAEA,CAAAA,GAAI+2B,GAAK,IAAE/2B,CAAG;QACvC,IAAI+V,GAAG,CAAC/V,CAAE,IAAG+V,GAAG,CAAC/V,CAAAA,GAAI,CAAE,MAAKqnB,IAAM;AAChC,mBAAO,KAAK;SACb;AACH;IACA,OAAOA,IAAAA,CAAAA;AACT;;ACjKA,MAAM2P,YAAAA,GAAe,CAACC,KAAUA,GAAAA,KAAAA,KAAU,SAAS,OAAUA,GAAAA,KAAAA,KAAU,OAAU,YAASA,KAAK;AAC/F,MAAMC,iBAAiB,CAACnwB,KAAAA,EAAO8S,MAAMiB,MAAWjB,GAAAA,IAAAA,KAAS,SAASA,IAAS,cAAS9S,KAAK,CAAC8S,KAAK,GAAGiB,MAAAA,GAAS/T,KAAK,CAAC8S,IAAAA,CAAK,GAAGiB,MAAM;AAC/H,MAAMqc,aAAAA,GAAgB,CAACC,WAAa9B,EAAAA,aAAAA,GAAkBp2B,KAAKC,GAAG,CAACm2B,iBAAiB8B,WAAaA,EAAAA,WAAAA,CAAAA,CAAAA;AAW5F,CACD,SAASC,MAAAA,CAAOthB,GAAG,EAAEuhB,QAAQ,EAAE;AAC7B,UAAMX,SAAS,EAAE;IACjB,MAAMY,SAAAA,GAAYxhB,GAAIhW,CAAAA,MAAM,GAAGu3B,QAAAA,CAAAA;IAC/B,MAAMP,GAAAA,GAAMhhB,IAAIhW,MAAM;AACtB,QAAIC,CAAI;IAER,MAAOA,CAAAA,GAAI+2B,GAAK/2B,EAAAA,CAAAA,IAAKu3B,SAAW;AAC9BZ,QAAAA,MAAAA,CAAO31B,IAAI,CAAC+U,GAAG,CAAC7W,IAAKoE,CAAAA,KAAK,CAACtD,CAAG;AAChC;IACA,OAAO22B,MAAAA,CAAAA;AACT;AAMC,CACD,SAASa,mBAAoBzwB,CAAAA,KAAK,EAAEyB,KAAK,EAAEivB,eAAe,EAAE;AAC1D,UAAM13B,MAASgH,GAAAA,KAAAA,CAAM4Q,KAAK,CAAC5X,MAAM;AACjC,UAAM23B,UAAax4B,GAAAA,IAAAA,CAAKC,GAAG,CAACqJ,OAAOzI,MAAS;IAC5C,MAAMX,KAAAA,GAAQ2H,MAAMwV,WAAW;IAC/B,MAAMpV,GAAAA,GAAMJ,MAAMyV,SAAS;IAC3B,MAAMmb,OAAAA,GAAU;IAChB,IAAIC,SAAAA,GAAY7wB,KAAM6Q,CAAAA,eAAe,CAAC8f,UAAAA,CAAAA,CAAAA;IACtC,IAAI5c,MAAAA,CAAAA;AAEJ,QAAI2c,eAAiB;AACnB,YAAI13B,WAAW,CAAG;AAChB+a,YAAAA,MAAAA,GAAS5b,IAAKoC,CAAAA,GAAG,CAACs2B,SAAAA,GAAYx4B,OAAO+H,GAAMywB,GAAAA,SAAAA,CAAAA,CAAAA;SACtC,UAAIpvB,UAAU,CAAG;AACtBsS,YAAAA,MAAAA,GAAS,CAAC/T,KAAAA,CAAM6Q,eAAe,CAAC,KAAKggB,SAAQ,IAAK;SAC7C;YACL9c,MAAS,GAAC8c,CAAAA,SAAY7wB,GAAAA,KAAAA,CAAM6Q,eAAe,CAAC8f,UAAAA,GAAa,EAAC,IAAK;SAChE;AACDE,QAAAA,SAAAA,IAAaF,UAAalvB,GAAAA,KAAAA,GAAQsS,MAAS,IAACA,MAAM;AAGlD,YAAI8c,SAAYx4B,GAAAA,KAAAA,GAAQu4B,OAAWC,IAAAA,SAAAA,GAAYzwB,MAAMwwB,OAAS;AAC5D;SACD;KACF;IACD,OAAOC,SAAAA,CAAAA;AACT;AAKC,CACD,SAASC,cAAAA,CAAeC,MAAM,EAAE/3B,MAAM,EAAE;IACtCkvB,6DAAK6I,CAAAA,MAAAA,EAAQ,CAACjkB,KAAU;QACtB,MAAMkkB,EAAAA,GAAKlkB,MAAMkkB,EAAE;QACnB,MAAMC,KAAAA,GAAQD,EAAGh4B,CAAAA,MAAM,GAAG;QAC1B,IAAIC,CAAAA,CAAAA;AACJ,YAAIg4B,QAAQj4B,MAAQ;AAClB,gBAAKC,CAAI,MAAGA,CAAIg4B,GAAAA,KAAAA,EAAO,EAAEh4B,CAAG;AAC1B,uBAAO6T,MAAM1K,IAAI,CAAC4uB,EAAE,CAAC/3B,EAAE,CAAC;AAC1B;YACA+3B,EAAG7hB,CAAAA,MAAM,CAAC,CAAG8hB,EAAAA,KAAAA,CAAAA,CAAAA;SACd;AACH;AACF;AAKA,UAASC,iBAAkBnyB,CAAAA,OAAO,EAAE;AAClC,WAAOA,QAAQoyB,SAAS,GAAGpyB,OAAQowB,CAAAA,UAAU,GAAG,CAAC;AACnD;AAIC,CACD,SAASiC,cAAAA,CAAeryB,OAAO,EAAEsyB,QAAQ,EAAE;IACzC,IAAI,CAACtyB,OAAQof,CAAAA,OAAO,EAAE;QACpB,OAAO;KACR;AAED,UAAMmT,IAAOC,GAAAA,8DAAAA,CAAOxyB,OAAQuyB,CAAAA,IAAI,EAAED,QAAAA,CAAAA,CAAAA;IAClC,MAAM7J,OAAAA,GAAUO,6DAAUhpB,CAAAA,OAAAA,CAAQyoB,OAAO;IACzC,MAAMgK,KAAAA,GAAQ9yB,6DAAQK,CAAAA,OAAAA,CAAQ0a,IAAI,IAAI1a,QAAQ0a,IAAI,CAACzgB,MAAM,GAAG,CAAC;AAE7D,WAAO,KAASs4B,GAAAA,IAAAA,CAAKG,UAAU,GAAIjK,QAAQ3S,MAAM;AACnD;AAEA,SAAS6c,kBAAmBxsB,CAAAA,MAAM,EAAElF,KAAK,EAAE;AACzC,WAAOmF,6DAAaA,CAACD,MAAQ;AAC3BlF,QAAAA,KAAAA;QACAtI,IAAM;AACR;AACF;AAEA,SAASi6B,kBAAkBzsB,MAAM,EAAEzD,KAAK,EAAEnI,IAAI,EAAE;AAC9C,WAAO6L,6DAAaA,CAACD,MAAQ;AAC3B5L,QAAAA,IAAAA;AACAmI,QAAAA,KAAAA;QACA/J,IAAM;AACR;AACF;AAEA,SAASk6B,WAAW1B,KAAK,EAAE5O,QAAQ,EAAEnhB,OAAO,EAAE;KAE5C,IAAI8tB,GAAAA,GAAM4D,8DAAmB3B,CAAAA,KAAAA,CAAAA,CAAAA;AAC7B,QAAI,OAAY5O,IAAAA,QAAAA,KAAa,WAAa,CAACnhB,OAAAA,IAAWmhB,aAAa,OAAU;AAC3E2M,QAAAA,GAAAA,GAAMgC,YAAahC,CAAAA,GAAAA,CAAAA,CAAAA;KACpB;IACD,OAAOA,GAAAA,CAAAA;AACT;AAEA,SAAS6D,SAAAA,CAAU9xB,KAAK,EAAE+T,MAAM,EAAEuN,QAAQ,EAAE4O,KAAK,EAAE;IACjD,MAAM,EAACxvB,GAAG,GAAEG,IAAI,GAAED,MAAM,GAAED,KAAK,GAAEpJ,KAAK,GAAC,GAAGyI,KAAAA,CAAAA;AAC1C,UAAM,EAACsM,SAAAA,GAAWxH,MAAAA,GAAO,GAAGvN,KAAAA,CAAAA;AAC5B,QAAIyf,QAAW;AACf,QAAIoE,UAAU2W,MAAQC,EAAAA,MAAAA,CAAAA;AACtB,UAAMnd,SAASjU,MAASF,GAAAA,GAAAA,CAAAA;AACxB,UAAMoU,QAAQnU,KAAQE,GAAAA,IAAAA,CAAAA;IAEtB,IAAIb,KAAAA,CAAMyS,YAAY,EAAI;QACxBsf,MAASE,GAAAA,8DAAAA,CAAe/B,OAAOrvB,IAAMF,EAAAA,KAAAA,CAAAA,CAAAA;AAErC,YAAI3C,6DAAQA,CAACsjB,QAAW;AACtB,kBAAM4Q,iBAAiBh0B,MAAOC,CAAAA,IAAI,CAACmjB,QAAAA,CAAS,CAAC,CAAE;YAC/C,MAAM7hB,KAAAA,GAAQ6hB,QAAQ,CAAC4Q,cAAe;AACtCF,YAAAA,MAAAA,GAASltB,MAAM,CAACotB,cAAAA,CAAe,CAACvhB,gBAAgB,CAAClR,SAASoV,MAASd,GAAAA,MAAAA,CAAAA;SAC9D,UAAIuN,aAAa,QAAU;YAChC0Q,MAAS,GAAC1lB,CAAAA,SAAAA,CAAU1L,MAAM,GAAG0L,UAAU5L,GAAE,IAAK,IAAImU,MAASd,GAAAA,MAAAA,CAAAA;SACtD;YACLie,MAAS7B,GAAAA,cAAAA,CAAenwB,OAAOshB,QAAUvN,EAAAA,MAAAA,CAAAA,CAAAA;SAC1C;AACDqH,QAAAA,QAAAA,GAAWza,KAAQE,GAAAA,IAAAA,CAAAA;KACd;AACL,YAAI7C,6DAAQA,CAACsjB,QAAW;AACtB,kBAAM4Q,iBAAiBh0B,MAAOC,CAAAA,IAAI,CAACmjB,QAAAA,CAAS,CAAC,CAAE;YAC/C,MAAM7hB,KAAAA,GAAQ6hB,QAAQ,CAAC4Q,cAAe;AACtCH,YAAAA,MAAAA,GAASjtB,MAAM,CAACotB,cAAAA,CAAe,CAACvhB,gBAAgB,CAAClR,SAASqV,KAAQf,GAAAA,MAAAA,CAAAA;SAC7D,UAAIuN,aAAa,QAAU;YAChCyQ,MAAS,GAACzlB,CAAAA,SAAAA,CAAUzL,IAAI,GAAGyL,UAAU3L,KAAI,IAAK,IAAImU,KAAQf,GAAAA,MAAAA,CAAAA;SACrD;YACLge,MAAS5B,GAAAA,cAAAA,CAAenwB,OAAOshB,QAAUvN,EAAAA,MAAAA,CAAAA,CAAAA;SAC1C;QACDie,MAASC,GAAAA,8DAAAA,CAAe/B,OAAOtvB,MAAQF,EAAAA,GAAAA,CAAAA,CAAAA;AACvCsW,QAAAA,QAAAA,GAAWsK,QAAa,cAAS,CAAChJ,yDAAAA,GAAUA,yDAAO;KACpD;IACD,OAAO;AAACyZ,QAAAA,MAAAA;AAAQC,QAAAA,MAAAA;AAAQ5W,QAAAA,QAAAA;AAAUpE,QAAAA,QAAAA;AAAQ;AAC5C;AAEe,MAAMmb,KAAcvE,SAAAA,OAAAA,CAAAA;AAGjC72B,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK;AAEL,SACA,IAAI,CAACsH,EAAE,GAAGtH,IAAIsH,EAAE;AAChB,SACA,IAAI,CAACxL,IAAI,GAAGkE,IAAIlE,IAAI;AACpB,SACA,IAAI,CAACqH,OAAO,GAAG1H,SAAAA,CAAAA;AACf,SACA,IAAI,CAACkP,GAAG,GAAG3K,IAAI2K,GAAG;AAClB,SACA,IAAI,CAAChP,KAAK,GAAGqE,IAAIrE,KAAK;AAGtB,SACA,IAAI,CAACmJ,GAAG,GAAGrJ,SAAAA,CAAAA;AACX,SACA,IAAI,CAACuJ,MAAM,GAAGvJ,SAAAA,CAAAA;AACd,SACA,IAAI,CAACwJ,IAAI,GAAGxJ,SAAAA,CAAAA;AACZ,SACA,IAAI,CAACsJ,KAAK,GAAGtJ,SAAAA,CAAAA;AACb,SACA,IAAI,CAACyd,KAAK,GAAGzd,SAAAA,CAAAA;AACb,SACA,IAAI,CAACwd,MAAM,GAAGxd,SAAAA,CAAAA;QACd,IAAI,CAAC+6B,QAAQ,GAAG;YACdvxB,IAAM;YACNF,KAAO;YACPD,GAAK;YACLE,MAAQ;AACV;AACA,SACA,IAAI,CAACwa,QAAQ,GAAG/jB,SAAAA,CAAAA;AAChB,SACA,IAAI,CAACgkB,SAAS,GAAGhkB,SAAAA,CAAAA;AACjB,SACA,IAAI,CAACg7B,UAAU,GAAGh7B,SAAAA,CAAAA;AAClB,SACA,IAAI,CAACi7B,aAAa,GAAGj7B,SAAAA,CAAAA;AACrB,SACA,IAAI,CAACk7B,WAAW,GAAGl7B,SAAAA,CAAAA;AACnB,SACA,IAAI,CAACm7B,YAAY,GAAGn7B,SAAAA,CAAAA;AAGpB,SACA,IAAI,CAACoL,IAAI,GAAGpL,SAAAA,CAAAA;AACZ,SACA,IAAI,CAACo7B,aAAa,GAAGp7B,SAAAA,CAAAA;QACrB,IAAI,CAACe,GAAG,GAAGf,SAAAA,CAAAA;QACX,IAAI,CAACkD,GAAG,GAAGlD,SAAAA,CAAAA;QACX,IAAI,CAACq7B,MAAM,GAAGr7B,SAAAA,CAAAA;AACd,SACA,IAAI,CAACuZ,KAAK,GAAG,EAAE;AACf,SACA,IAAI,CAAC+hB,cAAc,GAAG,IAAI;AAC1B,SACA,IAAI,CAACC,WAAW,GAAG,IAAI;AACvB,SACA,IAAI,CAACC,WAAW,GAAG,IAAI;QACvB,IAAI,CAACtiB,OAAO,GAAG;QACf,IAAI,CAACgf,UAAU,GAAG;QAClB,IAAI,CAACuD,iBAAiB,GAAG,EAAC;AAC1B,SACA,IAAI,CAACtd,WAAW,GAAGne,SAAAA,CAAAA;AACnB,SACA,IAAI,CAACoe,SAAS,GAAGpe,SAAAA,CAAAA;QACjB,IAAI,CAACypB,cAAc,GAAG,KAAK;QAC3B,IAAI,CAACiS,QAAQ,GAAG17B,SAAAA,CAAAA;QAChB,IAAI,CAAC27B,QAAQ,GAAG37B,SAAAA,CAAAA;QAChB,IAAI,CAAC47B,aAAa,GAAG57B,SAAAA,CAAAA;QACrB,IAAI,CAAC67B,aAAa,GAAG77B,SAAAA,CAAAA;QACrB,IAAI,CAAC87B,YAAY,GAAG;QACpB,IAAI,CAACC,YAAY,GAAG;QACpB,IAAI,CAACrjB,MAAM,GAAG,EAAC;QACf,IAAI,CAACsjB,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAAClsB,QAAQ,GAAG9P,SAAAA,CAAAA;AAClB;AAMA8oB,CAAAA,IAAAA,CAAKphB,OAAO,EAAE;QACZ,IAAI,CAACA,OAAO,GAAGA,OAAAA,CAAQu0B,UAAU,CAAC,IAAI,CAACrpB,UAAU;AAEjD,YAAI,CAACxH,IAAI,GAAG1D,OAAAA,CAAQ0D,IAAI;QAGxB,IAAI,CAACuwB,QAAQ,GAAG,IAAI,CAAC7oB,KAAK,CAACpL,QAAQ3G,GAAG;QACtC,IAAI,CAAC26B,QAAQ,GAAG,IAAI,CAAC5oB,KAAK,CAACpL,QAAQxE,GAAG;QACtC,IAAI,CAAC24B,aAAa,GAAG,IAAI,CAAC/oB,KAAK,CAACpL,QAAQw0B,YAAY;QACpD,IAAI,CAACN,aAAa,GAAG,IAAI,CAAC9oB,KAAK,CAACpL,QAAQy0B,YAAY;AACtD;AAOA,CACArpB,KAAM3E,CAAAA,GAAG,EAAE/D,KAAK,EAAE;QAChB,OAAO+D,GAAAA,CAAAA;AACT;AAMA,CACArC,aAAgB;QACd,IAAI,EAAC6vB,QAAQ,GAAED,QAAQ,GAAEG,gBAAeD,aAAAA,GAAc,GAAG,IAAI;QAC7DD,QAAWS,GAAAA,6DAAAA,CAAgBT,QAAU1vB,EAAAA,MAAAA,CAAOE,iBAAiB;QAC7DuvB,QAAWU,GAAAA,6DAAAA,CAAgBV,QAAUzvB,EAAAA,MAAAA,CAAOC,iBAAiB;QAC7D2vB,aAAgBO,GAAAA,6DAAAA,CAAgBP,aAAe5vB,EAAAA,MAAAA,CAAOE,iBAAiB;QACvEyvB,aAAgBQ,GAAAA,6DAAAA,CAAgBR,aAAe3vB,EAAAA,MAAAA,CAAOC,iBAAiB;QACvE,OAAO;AACLnL,YAAAA,GAAAA,EAAKq7B,6DAAeA,CAACT,QAAUE,EAAAA,aAAAA,CAAAA;AAC/B34B,YAAAA,GAAAA,EAAKk5B,6DAAeA,CAACV,QAAUE,EAAAA,aAAAA,CAAAA;AAC/B7vB,YAAAA,UAAAA,EAAYnB,6DAAS+wB,CAAAA,QAAAA,CAAAA;AACrB3vB,YAAAA,UAAAA,EAAYpB,6DAAS8wB,CAAAA,QAAAA,CAAAA;AACvB;AACF;AAQAvnB,CAAAA,SAAAA,CAAUxF,QAAQ,EAAE;AAElB,YAAI,EAAC5N,GAAAA,GAAKmC,GAAAA,GAAK6I,UAAAA,GAAYC,UAAAA,GAAW,GAAG,IAAI,CAACF,aAAa;QAC3D,IAAIkI,KAAAA,CAAAA;AAEJ,YAAIjI,cAAcC,UAAY;YAC5B,OAAO;AAACjL,gBAAAA,GAAAA;AAAKmC,gBAAAA,GAAAA;AAAG;SACjB;QAED,MAAMm5B,KAAAA,GAAQ,IAAI,CAAC1vB,uBAAuB;QAC1C,IAAK,IAAI/K,CAAI,MAAGuI,IAAOkyB,GAAAA,KAAAA,CAAM16B,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAClDoS,KAAQqoB,GAAAA,KAAK,CAACz6B,CAAE,EAACiL,UAAU,CAACsH,SAAS,CAAC,IAAI,EAAExF,QAAAA,CAAAA,CAAAA;AAC5C,gBAAI,CAAC5C,UAAY;AACfhL,gBAAAA,GAAAA,GAAMD,IAAKC,CAAAA,GAAG,CAACA,GAAAA,EAAKiT,MAAMjT,GAAG;aAC9B;AACD,gBAAI,CAACiL,UAAY;AACf9I,gBAAAA,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAK8Q,MAAM9Q,GAAG;aAC9B;AACH;AAGAnC,QAAAA,GAAAA,GAAMiL,UAAcjL,IAAAA,GAAAA,GAAMmC,GAAMA,GAAAA,GAAAA,GAAMnC,GAAG;AACzCmC,QAAAA,GAAAA,GAAM6I,UAAchL,IAAAA,GAAAA,GAAMmC,GAAMnC,GAAAA,GAAAA,GAAMmC,GAAG;QAEzC,OAAO;YACLnC,GAAKq7B,EAAAA,6DAAAA,CAAgBr7B,GAAKq7B,EAAAA,6DAAAA,CAAgBl5B,GAAKnC,EAAAA,GAAAA,CAAAA,CAAAA;YAC/CmC,GAAKk5B,EAAAA,6DAAAA,CAAgBl5B,GAAKk5B,EAAAA,6DAAAA,CAAgBr7B,GAAKmC,EAAAA,GAAAA,CAAAA,CAAAA;AACjD;AACF;AAMA,CACAwrB,UAAa;QACX,OAAO;YACLllB,IAAM,MAAI,CAAC0xB,WAAW,IAAI;YAC1B7xB,GAAK,MAAI,CAAC2xB,UAAU,IAAI;YACxB1xB,KAAO,MAAI,CAAC6xB,YAAY,IAAI;YAC5B5xB,MAAQ,MAAI,CAAC0xB,aAAa,IAAI;AAChC;AACF;AAMA,CACAqB,QAAW;QACT,OAAO,IAAI,CAAC/iB,KAAK;AACnB;AAIA,CACA/F,SAAY;AACV,cAAMzI,IAAO,OAAI,CAAC7K,KAAK,CAAC6K,IAAI;QAC5B,OAAO,IAAI,CAACrD,OAAO,CAAC6L,MAAM,KAAK,IAAI,CAAC6H,YAAY,KAAKrQ,IAAKwxB,CAAAA,OAAO,GAAGxxB,IAAKyxB,CAAAA,OAAO,CAAKzxB,IAAAA,IAAAA,CAAKwI,MAAM,IAAI,EAAE;AACxG;AAIC,CACDkpB,cAAcxnB,SAAY,OAAI,CAAC/U,KAAK,CAAC+U,SAAS,EAAE;AAC9C,cAAMvT,KAAQ,OAAI,CAAC65B,WAAW,KAAK,IAAI,CAACA,WAAW,GAAG,IAAI,CAACmB,kBAAkB,CAACznB,SAAS;QACvF,OAAOvT,KAAAA,CAAAA;AACT;IAGAovB,YAAe;QACb,IAAI,CAACpY,MAAM,GAAG,EAAC;QACf,IAAI,CAACsjB,iBAAiB,GAAG,KAAK;AAChC;IAMAW,YAAe;AACbx7B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACi1B,YAAY,EAAE;YAAC,IAAI;AAAC;AACxC;AASA,CACA/2B,OAAOme,QAAQ,EAAEC,SAAS,EAAE4Y,OAAO,EAAE;QACnC,MAAM,EAAC/f,WAAW,GAAEggB,KAAK,GAAEtjB,KAAOud,EAAAA,QAAAA,GAAS,GAAG,IAAI,CAACpvB,OAAO;QAC1D,MAAMo1B,UAAAA,GAAahG,SAASgG,UAAU;AAGtC,YAAI,CAACH,YAAY;QAGjB,IAAI,CAAC5Y,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACC,SAAS,GAAGA,SAAAA,CAAAA;AACjB,YAAI,CAAC+W,QAAQ,GAAG6B,OAAU/1B,GAAAA,MAAAA,CAAOyB,MAAM,CAAC;YACtCkB,IAAM;YACNF,KAAO;YACPD,GAAK;YACLE,MAAQ;SACPqzB,EAAAA,OAAAA,CAAAA,CAAAA;QAEH,IAAI,CAACrjB,KAAK,GAAG,IAAI;QACjB,IAAI,CAACiiB,WAAW,GAAG,IAAI;QACvB,IAAI,CAACF,cAAc,GAAG,IAAI;QAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;AAGvB,YAAI,CAACwB,mBAAmB;AACxB,YAAI,CAACC,aAAa;AAClB,YAAI,CAACC,kBAAkB;QAEvB,IAAI,CAAC/E,UAAU,GAAG,IAAI,CAAC9c,YAAY,EAC/B,OAAI,CAACqC,KAAK,GAAGmf,OAAAA,CAAQpzB,IAAI,GAAGozB,OAAAA,CAAQtzB,KAAK,GACzC,IAAI,CAACkU,MAAM,GAAGof,OAAQvzB,CAAAA,GAAG,GAAGuzB,OAAAA,CAAQrzB,MAAM;AAG9C,YAAI,CAAC,IAAI,CAACyyB,iBAAiB,EAAE;AAC3B,gBAAI,CAACkB,gBAAgB;AACrB,gBAAI,CAACC,mBAAmB;AACxB,gBAAI,CAACC,eAAe;AACpB,gBAAI,CAAC/B,MAAM,GAAGgC,6DAAU,KAAI,EAAER,KAAOhgB,EAAAA,WAAAA,CAAAA,CAAAA;YACrC,IAAI,CAACmf,iBAAiB,GAAG,IAAI;SAC9B;AAED,YAAI,CAACsB,gBAAgB;AAErB,YAAI,CAAC/jB,KAAK,GAAG,IAAI,CAACgkB,UAAU,MAAM,EAAE;AAGpC,YAAI,CAACC,eAAe;AAIpB,cAAMC,kBAAkBX,UAAa,OAAI,CAACvjB,KAAK,CAAC5X,MAAM;AACtD,YAAI,CAAC+7B,qBAAqB,CAACD,eAAAA,GAAkBxE,MAAO,KAAI,CAAC1f,KAAK,EAAEujB,UAAAA,CAAAA,GAAc,IAAI,CAACvjB,KAAK;AAMxF,YAAI,CAAC7S,SAAS;AAGd,YAAI,CAACi3B,4BAA4B;QACjC,IAAI,CAACC,sBAAsB;AAC3B,YAAI,CAACC,2BAA2B;QAGhC,IAAI/G,QAAAA,CAAShQ,OAAO,KAAKgQ,QAAAA,CAASD,QAAQ,IAAIC,QAASgH,CAAAA,MAAM,KAAK,MAAK,CAAI;YACzE,IAAI,CAACvkB,KAAK,GAAGsd,QAAAA,CAAS,IAAI,EAAE,IAAI,CAACtd,KAAK;YACtC,IAAI,CAACiiB,WAAW,GAAG,IAAI;AACvB,gBAAI,CAACuC,aAAa;SACnB;AAED,YAAIN,eAAiB;AAEnB,gBAAI,CAACC,qBAAqB,CAAC,IAAI,CAACnkB,KAAK;SACtC;AAED,YAAI,CAACykB,SAAS;QACd,IAAI,CAACC,GAAG;AACR,YAAI,CAACC,QAAQ;AAIb,YAAI,CAACC,WAAW;AAClB;AAIA,CACAz3B,SAAY;AACV,YAAI03B,aAAgB,OAAI,CAAC12B,OAAO,CAACoB,OAAO;AACxC,YAAI2V,UAAYE,EAAAA,QAAAA,CAAAA;QAEhB,IAAI,IAAI,CAACvD,YAAY,EAAI;YACvBqD,UAAa,OAAI,CAACjV,IAAI;YACtBmV,QAAW,OAAI,CAACrV,KAAK;SAChB;YACLmV,UAAa,OAAI,CAACpV,GAAG;YACrBsV,QAAW,OAAI,CAACpV,MAAM;AAEtB60B,YAAAA,aAAAA,GAAgB,CAACA,aAAAA,CAAAA;SAClB;QACD,IAAI,CAACjgB,WAAW,GAAGM,UAAAA,CAAAA;QACnB,IAAI,CAACL,SAAS,GAAGO,QAAAA,CAAAA;QACjB,IAAI,CAAC8K,cAAc,GAAG2U,aAAAA,CAAAA;QACtB,IAAI,CAACllB,OAAO,GAAGyF,QAAWF,GAAAA,UAAAA,CAAAA;AAC1B,YAAI,CAAC4f,cAAc,GAAG,IAAI,CAAC32B,OAAO,CAAC42B,aAAa;AAClD;IAEAH,WAAc;AACZh9B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACy2B,WAAW,EAAE;YAAC,IAAI;AAAC;AACvC;IAIApB,mBAAsB;AACpB57B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACq1B,mBAAmB,EAAE;YAAC,IAAI;AAAC;AAC/C;IACAC,aAAgB;QAEd,IAAI,IAAI,CAAC5hB,YAAY,EAAI;AAEvB,gBAAI,CAACqC,KAAK,GAAG,IAAI,CAACsG,QAAQ;YAC1B,IAAI,CAACva,IAAI,GAAG;AACZ,gBAAI,CAACF,KAAK,GAAG,IAAI,CAACmU,KAAK;SAClB;AACL,gBAAI,CAACD,MAAM,GAAG,IAAI,CAACwG,SAAS;YAG5B,IAAI,CAAC3a,GAAG,GAAG;AACX,gBAAI,CAACE,MAAM,GAAG,IAAI,CAACiU,MAAM;SAC1B;QAGD,IAAI,CAAC0d,WAAW,GAAG;QACnB,IAAI,CAACF,UAAU,GAAG;QAClB,IAAI,CAACG,YAAY,GAAG;QACpB,IAAI,CAACF,aAAa,GAAG;AACvB;IACAgC,kBAAqB;AACnB97B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACu1B,kBAAkB,EAAE;YAAC,IAAI;AAAC;AAC9C;AAEAsB,IAAAA,UAAAA,CAAWrgB,IAAI,EAAE;QACf,IAAI,CAAChe,KAAK,CAACs+B,aAAa,CAACtgB,IAAM,MAAI,CAACtL,UAAU;AAC9CzR,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACwW,KAAK,EAAE;YAAC,IAAI;AAAC;AACjC;IAGAgf,gBAAmB;QACjB,IAAI,CAACqB,UAAU,CAAC;AAClB;AACApB,IAAAA,mBAAAA,GAAsB,EAAC;IACvBC,eAAkB;QAChB,IAAI,CAACmB,UAAU,CAAC;AAClB;IAGAjB,gBAAmB;QACjB,IAAI,CAACiB,UAAU,CAAC;AAClB;AAGA,CACAhB,UAAa;AACX,eAAO,EAAE;AACX;IACAC,eAAkB;QAChB,IAAI,CAACe,UAAU,CAAC;AAClB;IAEAE,2BAA8B;AAC5Bt9B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAAC+2B,2BAA2B,EAAE;YAAC,IAAI;AAAC;AACvD;AAKAC,CAAAA,kBAAAA,CAAmBnlB,KAAK,EAAE;AACxB,cAAMud,QAAW,OAAI,CAACpvB,OAAO,CAAC6R,KAAK;AACnC,YAAI3X,GAAGuI,IAAMlI,EAAAA,IAAAA,CAAAA;QACb,IAAKL,CAAAA,GAAI,GAAGuI,IAAOoP,GAAAA,KAAAA,CAAM5X,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK;YAC9CK,IAAOsX,GAAAA,KAAK,CAAC3X,CAAE;AACfK,YAAAA,IAAAA,CAAK0S,KAAK,GAAGxT,6DAAK21B,CAAAA,QAAAA,CAAS6H,QAAQ,EAAE;AAAC18B,gBAAAA,IAAAA,CAAKmG,KAAK;AAAExG,gBAAAA,CAAAA;AAAG2X,gBAAAA,KAAAA;AAAM,eAAE,IAAI;AACnE;AACF;IACAqlB,0BAA6B;AAC3Bz9B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACk3B,0BAA0B,EAAE;YAAC,IAAI;AAAC;AACtD;IAIAjB,4BAA+B;AAC7Bx8B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACi2B,4BAA4B,EAAE;YAAC,IAAI;AAAC;AACxD;IACAC,sBAAyB;QACvB,MAAMl2B,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAMovB,QAAAA,GAAWpvB,QAAQ6R,KAAK;QAC9B,MAAMslB,QAAAA,GAAW9F,aAAc,KAAI,CAACxf,KAAK,CAAC5X,MAAM,EAAE+F,OAAAA,CAAQ6R,KAAK,CAAC2d,aAAa;QAC7E,MAAM4H,WAAAA,GAAchI,QAASgI,CAAAA,WAAW,IAAI;QAC5C,MAAMC,WAAAA,GAAcjI,SAASiI,WAAW;AACxC,YAAI3D,aAAgB0D,GAAAA,WAAAA,CAAAA;AACpB,YAAIE,WAAWhb,SAAWib,EAAAA,gBAAAA,CAAAA;AAE1B,YAAI,CAAC,IAAI,CAACC,UAAU,MAAM,CAACpI,QAAShQ,CAAAA,OAAO,IAAIgY,WAAAA,IAAeC,eAAeF,QAAY,SAAK,CAAC,IAAI,CAACzjB,YAAY,EAAI;YAClH,IAAI,CAACggB,aAAa,GAAG0D,WAAAA,CAAAA;AACrB;SACD;QAED,MAAMK,UAAAA,GAAa,IAAI,CAACC,cAAc;AACtC,cAAMC,aAAgBF,GAAAA,UAAAA,CAAWG,MAAM,CAAC7hB,KAAK;AAC7C,cAAM8hB,cAAiBJ,GAAAA,UAAAA,CAAWK,OAAO,CAAChiB,MAAM;AAIhD,cAAMuG,QAAW0b,GAAAA,6DAAAA,CAAY,IAAI,CAACv/B,KAAK,CAACud,KAAK,GAAG4hB,aAAe,KAAG,IAAI,CAACtb,QAAQ;AAC/Eib,QAAAA,SAAAA,GAAYt3B,OAAQgV,CAAAA,MAAM,GAAG,IAAI,CAACqH,QAAQ,GAAG8a,QAAAA,GAAW9a,QAAY8a,IAAAA,QAAW,KAAE;QAGjF,IAAIQ,aAAAA,GAAgB,IAAIL,SAAW;YACjCA,SAAYjb,GAAAA,QAAAA,IAAY8a,QAAAA,IAAYn3B,OAAAA,CAAQgV,MAAM,GAAG,MAAM,EAAC;YAC5DsH,SAAY,OAAI,CAACA,SAAS,GAAG6V,kBAAkBnyB,OAAQiV,CAAAA,IAAI,IAC3Dma,QAAS3G,CAAAA,OAAO,GAAG4J,cAAeryB,CAAAA,OAAAA,CAAQg4B,KAAK,EAAE,IAAI,CAACx/B,KAAK,CAACwH,OAAO,CAACuyB,IAAI;AACxEgF,YAAAA,gBAAAA,GAAmBn+B,IAAK8pB,CAAAA,IAAI,CAACyU,aAAAA,GAAgBA,gBAAgBE,cAAiBA,GAAAA,cAAAA,CAAAA,CAAAA;AAC9EnE,YAAAA,aAAAA,GAAgBuE,6DAASA,CAAC7+B,IAAKC,CAAAA,GAAG,CAChCD,IAAAA,CAAK8+B,IAAI,CAACH,6DAAAA,CAAY,CAACN,WAAWK,OAAO,CAAChiB,MAAM,GAAG,KAAKwhB,SAAAA,EAAW,CAAC,GAAG,KACvEl+B,IAAK8+B,CAAAA,IAAI,CAACH,6DAAAA,CAAYzb,YAAYib,gBAAkB,GAAC,CAAG,QAAMn+B,KAAK8+B,IAAI,CAACH,6DAAWA,CAACF,cAAiBN,GAAAA,gBAAAA,EAAkB,CAAC,CAAG;AAE7H7D,YAAAA,aAAAA,GAAgBt6B,KAAKoC,GAAG,CAAC47B,aAAah+B,IAAKC,CAAAA,GAAG,CAACg+B,WAAa3D,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;SAC7D;QAED,IAAI,CAACA,aAAa,GAAGA,aAAAA,CAAAA;AACvB;IACAyC,2BAA8B;AAC5B18B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACm2B,2BAA2B,EAAE;YAAC,IAAI;AAAC;AACvD;AACAE,IAAAA,aAAAA,GAAgB,EAAC;IAIjBC,SAAY;AACV78B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACs2B,SAAS,EAAE;YAAC,IAAI;AAAC;AACrC;IACAC,GAAM;AAEJ,cAAM7W,OAAU;YACd3J,KAAO;YACPD,MAAQ;AACV;AAEA,cAAM,EAACtd,KAAK,GAAEwH,OAAS,IAAC6R,OAAOud,QAAQ,GAAE4I,KAAOG,EAAAA,SAAAA,GAAWljB,IAAMmjB,EAAAA,QAAAA,GAAS,GAAC,GAAG,IAAI;QAClF,MAAMhZ,OAAAA,GAAU,IAAI,CAACoY,UAAU;QAC/B,MAAM9jB,YAAAA,GAAe,IAAI,CAACA,YAAY;AAEtC,YAAI0L,OAAS;AACX,kBAAMiZ,cAAchG,cAAe8F,CAAAA,SAAAA,EAAW3/B,KAAMwH,CAAAA,OAAO,CAACuyB,IAAI;AAChE,gBAAI7e,YAAc;AAChBgM,gBAAAA,OAAAA,CAAQ3J,KAAK,GAAG,IAAI,CAACsG,QAAQ;gBAC7BqD,OAAQ5J,CAAAA,MAAM,GAAGqc,iBAAAA,CAAkBiG,QAAYC,CAAAA,GAAAA,WAAAA,CAAAA;aAC1C;AACL3Y,gBAAAA,OAAAA,CAAQ5J,MAAM,GAAG,IAAI,CAACwG,SAAS;gBAC/BoD,OAAQ3J,CAAAA,KAAK,GAAGoc,iBAAAA,CAAkBiG,QAAYC,CAAAA,GAAAA,WAAAA,CAAAA;aAC/C;YAGD,IAAIjJ,QAAAA,CAAShQ,OAAO,IAAI,IAAI,CAACvN,KAAK,CAAC5X,MAAM,EAAE;AACzC,sBAAM,EAAC61B,KAAAA,GAAO7Z,IAAAA,GAAM2hB,MAAAA,GAAQE,OAAAA,GAAQ,GAAG,IAAI,CAACJ,cAAc;gBAC1D,MAAMY,WAAAA,GAAclJ,QAAS3G,CAAAA,OAAO,GAAG;AACvC,sBAAM8P,YAAe7c,GAAAA,6DAAAA,CAAU,IAAI,CAACgY,aAAa;gBACjD,MAAM9a,GAAAA,GAAMxf,IAAKwf,CAAAA,GAAG,CAAC2f,YAAAA,CAAAA,CAAAA;gBACrB,MAAMzf,GAAAA,GAAM1f,IAAK0f,CAAAA,GAAG,CAACyf,YAAAA,CAAAA,CAAAA;AAErB,oBAAI7kB,YAAc;oBAEhB,MAAM8kB,WAAAA,GAAcpJ,QAASqJ,CAAAA,MAAM,GAAG,IAAI3f,GAAM8e,GAAAA,MAAAA,CAAO7hB,KAAK,GAAG6C,GAAMkf,GAAAA,OAAAA,CAAQhiB,MAAM;AACnF4J,oBAAAA,OAAAA,CAAQ5J,MAAM,GAAG1c,IAAKC,CAAAA,GAAG,CAAC,IAAI,CAACijB,SAAS,EAAEoD,OAAAA,CAAQ5J,MAAM,GAAG0iB,WAAcF,GAAAA,WAAAA,CAAAA,CAAAA;iBACpE;oBAGL,MAAMI,UAAAA,GAAatJ,QAASqJ,CAAAA,MAAM,GAAG,IAAI7f,GAAMgf,GAAAA,MAAAA,CAAO7hB,KAAK,GAAG+C,GAAMgf,GAAAA,OAAAA,CAAQhiB,MAAM;AAElF4J,oBAAAA,OAAAA,CAAQ3J,KAAK,GAAG3c,IAAKC,CAAAA,GAAG,CAAC,IAAI,CAACgjB,QAAQ,EAAEqD,OAAAA,CAAQ3J,KAAK,GAAG2iB,UAAaJ,GAAAA,WAAAA,CAAAA,CAAAA;iBACtE;AACD,oBAAI,CAACK,iBAAiB,CAAC7I,KAAAA,EAAO7Z,MAAM6C,GAAKF,EAAAA,GAAAA,CAAAA,CAAAA;aAC1C;SACF;AAED,YAAI,CAACggB,cAAc;AAEnB,YAAIllB,YAAc;YAChB,IAAI,CAACqC,KAAK,GAAG,IAAI,CAACvE,OAAO,GAAGhZ,MAAMud,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvxB,IAAI,GAAG,IAAI,CAACuxB,QAAQ,CAACzxB,KAAK;AAClF,gBAAI,CAACkU,MAAM,GAAG4J,OAAAA,CAAQ5J,MAAM;SACvB;AACL,gBAAI,CAACC,KAAK,GAAG2J,OAAAA,CAAQ3J,KAAK;YAC1B,IAAI,CAACD,MAAM,GAAG,IAAI,CAACtE,OAAO,GAAGhZ,MAAMsd,MAAM,GAAG,IAAI,CAACud,QAAQ,CAAC1xB,GAAG,GAAG,IAAI,CAAC0xB,QAAQ,CAACxxB,MAAM;SACrF;AACH;AAEA82B,IAAAA,iBAAAA,CAAkB7I,KAAK,EAAE7Z,IAAI,EAAE6C,GAAG,EAAEF,GAAG,EAAE;AACvC,cAAM,EAAC/G,KAAAA,EAAO,EAACsf,KAAAA,GAAO1I,OAAO,GAAC,GAAElG,QAAQ,GAAC,GAAG,IAAI,CAACviB,OAAO;AACxD,cAAM64B,SAAY,OAAI,CAACnF,aAAa,KAAK;AACzC,cAAMoF,mBAAmBvW,QAAa,cAAS,IAAI,CAAC7e,IAAI,KAAK;QAE7D,IAAI,IAAI,CAACgQ,YAAY,EAAI;YACvB,MAAMqlB,UAAAA,GAAa,IAAI,CAACjnB,eAAe,CAAC,CAAK,QAAI,CAAChQ,IAAI;AACtD,kBAAMk3B,WAAc,OAAI,CAACp3B,KAAK,GAAG,IAAI,CAACkQ,eAAe,CAAC,IAAI,CAACD,KAAK,CAAC5X,MAAM,GAAG;AAC1E,gBAAIu5B,WAAc;AAClB,gBAAIC,YAAe;AAInB,gBAAIoF,SAAW;AACb,oBAAIC,gBAAkB;oBACpBtF,WAAc5a,GAAAA,GAAAA,GAAMkX,MAAM/Z,KAAK;oBAC/B0d,YAAe3a,GAAAA,GAAAA,GAAM7C,KAAKH,MAAM;iBAC3B;oBACL0d,WAAc1a,GAAAA,GAAAA,GAAMgX,MAAMha,MAAM;oBAChC2d,YAAe7a,GAAAA,GAAAA,GAAM3C,KAAKF,KAAK;iBAChC;aACI,UAAIob,UAAU,OAAS;AAC5BsC,gBAAAA,YAAAA,GAAexd,KAAKF,KAAK;aACpB,UAAIob,UAAU,KAAO;AAC1BqC,gBAAAA,WAAAA,GAAc1D,MAAM/Z,KAAK;aACpB,UAAIob,UAAU,OAAS;gBAC5BqC,WAAc1D,GAAAA,KAAAA,CAAM/Z,KAAK,GAAG;gBAC5B0d,YAAexd,GAAAA,IAAAA,CAAKF,KAAK,GAAG;aAC7B;YAGD,IAAI,CAACyd,WAAW,GAAGp6B,IAAAA,CAAKoC,GAAG,CAAEg4B,CAAAA,WAAAA,GAAcuF,UAAatQ,GAAAA,OAAM,IAAK,IAAI,CAAC1S,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGgjB,UAAS,CAAI;YAC3G,IAAI,CAACtF,YAAY,GAAGr6B,IAAAA,CAAKoC,GAAG,CAAEi4B,CAAAA,YAAAA,GAAeuF,WAAcvQ,GAAAA,OAAM,IAAK,IAAI,CAAC1S,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGijB,WAAU,CAAI;SAC1G;YACL,IAAI1F,UAAAA,GAAard,IAAKH,CAAAA,MAAM,GAAG;YAC/B,IAAIyd,aAAAA,GAAgBzD,KAAMha,CAAAA,MAAM,GAAG;AAEnC,gBAAIqb,UAAU,OAAS;gBACrBmC,UAAa;AACbC,gBAAAA,aAAAA,GAAgBzD,MAAMha,MAAM;aACvB,UAAIqb,UAAU,KAAO;AAC1BmC,gBAAAA,UAAAA,GAAard,KAAKH,MAAM;gBACxByd,aAAgB;aACjB;YAED,IAAI,CAACD,UAAU,GAAGA,UAAa7K,GAAAA,OAAAA,CAAAA;YAC/B,IAAI,CAAC8K,aAAa,GAAGA,aAAgB9K,GAAAA,OAAAA,CAAAA;SACtC;AACH;AAKA,CACAmQ,cAAiB;QACf,IAAI,IAAI,CAACvF,QAAQ,EAAE;AACjB,gBAAI,CAACA,QAAQ,CAACvxB,IAAI,GAAG1I,KAAKoC,GAAG,CAAC,IAAI,CAACg4B,WAAW,EAAE,IAAI,CAACH,QAAQ,CAACvxB,IAAI;AAClE,gBAAI,CAACuxB,QAAQ,CAAC1xB,GAAG,GAAGvI,KAAKoC,GAAG,CAAC,IAAI,CAAC83B,UAAU,EAAE,IAAI,CAACD,QAAQ,CAAC1xB,GAAG;AAC/D,gBAAI,CAAC0xB,QAAQ,CAACzxB,KAAK,GAAGxI,KAAKoC,GAAG,CAAC,IAAI,CAACi4B,YAAY,EAAE,IAAI,CAACJ,QAAQ,CAACzxB,KAAK;AACrE,gBAAI,CAACyxB,QAAQ,CAACxxB,MAAM,GAAGzI,KAAKoC,GAAG,CAAC,IAAI,CAAC+3B,aAAa,EAAE,IAAI,CAACF,QAAQ,CAACxxB,MAAM;SACzE;AACH;IAEA20B,QAAW;AACT/8B,QAAAA,6DAAAA,CAAK,IAAI,CAACuG,OAAO,CAACw2B,QAAQ,EAAE;YAAC,IAAI;AAAC;AACpC;AAKA,CACA9iB,YAAe;QACb,MAAM,EAAChQ,OAAM6e,QAAAA,GAAS,GAAG,IAAI,CAACviB,OAAO;AACrC,eAAOuiB,QAAa,cAASA,QAAa,iBAAY7e,IAAS;AACjE;AAGA,CACAu1B,UAAa;AACX,eAAO,IAAI,CAACj5B,OAAO,CAACkmB,QAAQ;AAC9B;AAMA8P,CAAAA,qBAAAA,CAAsBnkB,KAAK,EAAE;AAC3B,YAAI,CAACklB,2BAA2B;QAEhC,IAAI,CAACC,kBAAkB,CAACnlB,KAAAA,CAAAA,CAAAA;AAGxB,YAAI3X,CAAGuI,EAAAA,IAAAA,CAAAA;QACP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOoP,GAAAA,KAAAA,CAAM5X,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK;AAC9C,gBAAImY,6DAAaA,CAACR,KAAK,CAAC3X,CAAE,EAAC+S,KAAK,CAAG;gBACjC4E,KAAMzB,CAAAA,MAAM,CAAClW,CAAG;AAChBuI,gBAAAA,IAAAA,EAAAA,CAAAA;AACAvI,gBAAAA,CAAAA,EAAAA,CAAAA;aACD;AACH;AAEA,YAAI,CAACg9B,0BAA0B;AACjC;AAKA,CACAQ,cAAiB;QACf,IAAID,UAAAA,GAAa,IAAI,CAAC3D,WAAW;AAEjC,YAAI,CAAC2D,UAAY;AACf,kBAAMrC,aAAa,IAAI,CAACp1B,OAAO,CAAC6R,KAAK,CAACujB,UAAU;YAChD,IAAIvjB,KAAAA,GAAQ,IAAI,CAACA,KAAK;YACtB,IAAIujB,UAAAA,GAAavjB,KAAM5X,CAAAA,MAAM,EAAE;AAC7B4X,gBAAAA,KAAAA,GAAQ0f,OAAO1f,KAAOujB,EAAAA,UAAAA,CAAAA,CAAAA;aACvB;AAED,gBAAI,CAACtB,WAAW,GAAG2D,aAAa,IAAI,CAACyB,kBAAkB,CAACrnB,KAAAA,EAAOA,KAAM5X,CAAAA,MAAM,EAAE,IAAI,CAAC+F,OAAO,CAAC6R,KAAK,CAAC2d,aAAa;SAC9G;QAED,OAAOiI,UAAAA,CAAAA;AACT;AAOA,CACAyB,mBAAmBrnB,KAAK,EAAE5X,MAAM,EAAEu1B,aAAa,EAAE;AAC/C,cAAM,EAAChoB,GAAG,GAAEusB,mBAAmB/B,MAAM,GAAC,GAAG,IAAI;AAC7C,cAAMmH,SAAS,EAAE;AACjB,cAAMC,UAAU,EAAE;AAClB,cAAM3H,YAAYr4B,IAAKoE,CAAAA,KAAK,CAACvD,MAAAA,GAASo3B,cAAcp3B,MAAQu1B,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AAC5D,YAAI6J,eAAkB;AACtB,YAAIC,gBAAmB;QACvB,IAAIp/B,CAAAA,EAAGwoB,GAAG6W,IAAMtsB,EAAAA,KAAAA,EAAOusB,UAAUC,UAAY1rB,EAAAA,KAAAA,EAAO2kB,UAAY3c,EAAAA,KAAAA,EAAOD,MAAQ4jB,EAAAA,WAAAA,CAAAA;AAE/E,YAAKx/B,CAAI,MAAGA,CAAID,GAAAA,MAAAA,EAAQC,KAAKu3B,SAAW;AACtCxkB,YAAAA,KAAAA,GAAQ4E,KAAK,CAAC3X,CAAE,EAAC+S,KAAK;YACtBusB,QAAW,OAAI,CAACG,uBAAuB,CAACz/B,CAAAA,CAAAA,CAAAA;AACxCsN,YAAAA,GAAAA,CAAI+qB,IAAI,GAAGkH,UAAaD,GAAAA,QAAAA,CAASI,MAAM;AACvC7rB,YAAAA,KAAAA,GAAQikB,MAAM,CAACyH,UAAAA,CAAW,GAAGzH,MAAM,CAACyH,WAAW,IAAI;AAACp2B,gBAAAA,IAAAA,EAAM,EAAC;AAAG4uB,gBAAAA,EAAAA,EAAI,EAAE;AAAA;AACpES,YAAAA,UAAAA,GAAa8G,SAAS9G,UAAU;AAChC3c,YAAAA,KAAAA,GAAQD,MAAS;AAEjB,gBAAI,CAACzD,6DAAAA,CAAcpF,KAAU,MAACtN,6DAAOA,CAACsN,KAAQ;gBAC5C8I,KAAQ8jB,GAAAA,6DAAAA,CAAaryB,KAAKuG,KAAM1K,CAAAA,IAAI,EAAE0K,KAAMkkB,CAAAA,EAAE,EAAElc,KAAO9I,EAAAA,KAAAA,CAAAA,CAAAA;gBACvD6I,MAAS4c,GAAAA,UAAAA,CAAAA;aACJ,UAAI/yB,6DAAOA,CAACsN,KAAQ;gBAEzB,IAAKyV,CAAAA,GAAI,GAAG6W,IAAOtsB,GAAAA,KAAAA,CAAMhT,MAAM,EAAEyoB,CAAAA,GAAI6W,IAAM,IAAE7W,CAAG;AAC9CgX,oBAAAA,WAAAA,IAAqCzsB,KAAK,CAACyV,CAAE;AAE7C,wBAAI,CAACrQ,6DAAAA,CAAcqnB,WAAgB,MAAC/5B,6DAAOA,CAAC+5B,WAAc;wBACxD3jB,KAAQ8jB,GAAAA,6DAAAA,CAAaryB,KAAKuG,KAAM1K,CAAAA,IAAI,EAAE0K,KAAMkkB,CAAAA,EAAE,EAAElc,KAAO2jB,EAAAA,WAAAA,CAAAA,CAAAA;wBACvD5jB,MAAU4c,IAAAA,UAAAA,CAAAA;qBACX;AACH;aACD;AACDyG,YAAAA,MAAAA,CAAOj+B,IAAI,CAAC6a,KAAAA,CAAAA,CAAAA;AACZqjB,YAAAA,OAAAA,CAAQl+B,IAAI,CAAC4a,MAAAA,CAAAA,CAAAA;YACbujB,eAAkBjgC,GAAAA,IAAAA,CAAKoC,GAAG,CAACua,KAAOsjB,EAAAA,eAAAA,CAAAA,CAAAA;YAClCC,gBAAmBlgC,GAAAA,IAAAA,CAAKoC,GAAG,CAACsa,MAAQwjB,EAAAA,gBAAAA,CAAAA,CAAAA;AACtC;AACAvH,QAAAA,cAAAA,CAAeC,MAAQ/3B,EAAAA,MAAAA,CAAAA,CAAAA;QAEvB,MAAM29B,MAAAA,GAASuB,MAAO9iB,CAAAA,OAAO,CAACgjB,eAAAA,CAAAA,CAAAA;QAC9B,MAAMvB,OAAAA,GAAUsB,OAAQ/iB,CAAAA,OAAO,CAACijB,gBAAAA,CAAAA,CAAAA;QAEhC,MAAMQ,OAAAA,GAAU,CAACC,GAAAA,IAAS;gBAAChkB,KAAOojB,EAAAA,MAAM,CAACY,GAAAA,CAAI,IAAI;gBAAGjkB,MAAQsjB,EAAAA,OAAO,CAACW,GAAAA,CAAI,IAAI;aAAC;QAE7E,OAAO;AACLjK,YAAAA,KAAAA,EAAOgK,OAAQ;AACf7jB,YAAAA,IAAAA,EAAM6jB,QAAQ7/B,MAAS;AACvB29B,YAAAA,MAAAA,EAAQkC,OAAQlC,CAAAA,MAAAA,CAAAA;AAChBE,YAAAA,OAAAA,EAASgC,OAAQhC,CAAAA,OAAAA,CAAAA;AACjBqB,YAAAA,MAAAA;AACAC,YAAAA,OAAAA;AACF;AACF;AAOAlsB,CAAAA,gBAAAA,CAAiBxM,KAAK,EAAE;QACtB,OAAOA,KAAAA,CAAAA;AACT;AAQA,CACAkR,gBAAiBlR,CAAAA,KAAK,EAAEgC,KAAK,EAAE;QAC7B,OAAO8J,GAAAA,CAAAA;AACT;AAQA0K,CAAAA,gBAAAA,CAAiB8iB,KAAK,EAAE,EAAC;AAQzBloB,CAAAA,eAAAA,CAAgBpP,KAAK,EAAE;QACrB,MAAMmP,KAAAA,GAAQ,IAAI,CAACA,KAAK;AACxB,YAAInP,QAAQ,CAAKA,IAAAA,KAAAA,GAAQmP,KAAM5X,CAAAA,MAAM,GAAG,CAAG;AACzC,mBAAO,IAAI;SACZ;QACD,OAAO,IAAI,CAAC2X,gBAAgB,CAACC,KAAK,CAACnP,KAAAA,CAAM,CAAChC,KAAK;AACjD;AAQAsW,CAAAA,kBAAAA,CAAmBijB,OAAO,EAAE;QAC1B,IAAI,IAAI,CAAClY,cAAc,EAAE;AACvBkY,YAAAA,OAAAA,GAAU,CAAIA,GAAAA,OAAAA,CAAAA;SACf;QAED,MAAMD,KAAAA,GAAQ,IAAI,CAACvjB,WAAW,GAAGwjB,OAAU,OAAI,CAACzoB,OAAO;AACvD,eAAO0oB,6DAAY,KAAI,CAACvD,cAAc,GAAGwD,6DAAAA,CAAY,IAAI,CAAC3hC,KAAK,EAAEwhC,KAAO,OAAKA,KAAK;AACpF;AAMAI,CAAAA,kBAAAA,CAAmBJ,KAAK,EAAE;QACxB,MAAMC,OAAAA,GAAU,CAACD,KAAQ,OAAI,CAACvjB,WAAW,IAAI,IAAI,CAACjF,OAAO;AACzD,eAAO,IAAI,CAACuQ,cAAc,GAAG,IAAIkY,UAAUA,OAAO;AACpD;AAMA,CACA3kB,YAAe;AACb,eAAO,IAAI,CAAC1D,gBAAgB,CAAC,IAAI,CAACyoB,YAAY;AAChD;AAIA,CACAA,YAAe;AACb,cAAM,EAAChhC,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI;QAEvB,OAAOnC,GAAAA,GAAM,CAAKmC,IAAAA,GAAAA,GAAM,CAAIA,GAAAA,GAAAA,GAC1BnC,MAAM,CAAKmC,IAAAA,GAAAA,GAAM,CAAInC,GAAAA,GAAAA,GACrB,CAAC;AACL;AAKA6R,CAAAA,UAAAA,CAAWxI,KAAK,EAAE;AAChB,cAAMmP,KAAQ,OAAI,CAACA,KAAK,IAAI,EAAE;AAE9B,YAAInP,KAAS,SAAKA,KAAQmP,GAAAA,KAAAA,CAAM5X,MAAM,EAAE;YACtC,MAAMM,IAAAA,GAAOsX,KAAK,CAACnP,KAAM;AACzB,mBAAOnI,IAAK6N,CAAAA,QAAQ,KACrB7N,IAAK6N,CAAAA,QAAQ,GAAGwqB,iBAAAA,CAAkB,IAAI,CAAC1nB,UAAU,IAAIxI,OAAOnI,IAAI;SAChE;AACD,eAAO,IAAI,CAAC6N,QAAQ,KACpB,IAAI,CAACA,QAAQ,GAAGuqB,kBAAAA,CAAmB,IAAI,CAACn6B,KAAK,CAAC0S,UAAU,IAAI,IAAI;AAClE;AAKA,CACAmlB,SAAY;AACV,cAAMiK,WAAc,OAAI,CAACt6B,OAAO,CAAC6R,KAAK;AAGtC,cAAM0oB,GAAM7e,GAAAA,6DAAAA,CAAU,IAAI,CAACgY,aAAa;AACxC,cAAM9a,MAAMxf,IAAKuY,CAAAA,GAAG,CAACvY,IAAAA,CAAKwf,GAAG,CAAC2hB,GAAAA,CAAAA,CAAAA,CAAAA;AAC9B,cAAMzhB,MAAM1f,IAAKuY,CAAAA,GAAG,CAACvY,IAAAA,CAAK0f,GAAG,CAACyhB,GAAAA,CAAAA,CAAAA,CAAAA;QAE9B,MAAM9C,UAAAA,GAAa,IAAI,CAACC,cAAc;QACtC,MAAMjP,OAAAA,GAAU6R,WAAYE,CAAAA,eAAe,IAAI;QAC/C,MAAMlT,CAAAA,GAAImQ,aAAaA,UAAWG,CAAAA,MAAM,CAAC7hB,KAAK,GAAG0S,UAAU,CAAC;QAC5D,MAAMjB,CAAAA,GAAIiQ,aAAaA,UAAWK,CAAAA,OAAO,CAAChiB,MAAM,GAAG2S,UAAU,CAAC;QAG9D,OAAO,IAAI,CAAC/U,YAAY,KACpB8T,IAAI5O,GAAM0O,GAAAA,CAAAA,GAAIxO,MAAMwO,CAAI1O,GAAAA,GAAAA,GAAM4O,IAAI1O,GAAG,GACrC0O,IAAI1O,GAAMwO,GAAAA,CAAAA,GAAI1O,MAAM4O,CAAI5O,GAAAA,GAAAA,GAAM0O,IAAIxO,GAAG;AAC3C;AAKA,CACA0e,UAAa;AACX,cAAMpY,OAAU,OAAI,CAACpf,OAAO,CAACof,OAAO;AAEpC,YAAIA,YAAY,MAAQ;AACtB,mBAAO,CAAC,CAACA,OAAAA,CAAAA;SACV;AAED,eAAO,IAAI,CAACna,uBAAuB,GAAGhL,MAAM,GAAG;AACjD;AAKAwgC,CAAAA,qBAAAA,CAAsBltB,SAAS,EAAE;QAC/B,MAAM7J,IAAAA,GAAO,IAAI,CAACA,IAAI;QACtB,MAAMlL,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMwH,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,cAAM,EAACiV,IAAI,GAAEsN,WAAUzD,MAAAA,GAAO,GAAG9e,OAAAA,CAAAA;QACjC,MAAMgV,MAAAA,GAASC,KAAKD,MAAM;QAC1B,MAAMtB,YAAAA,GAAe,IAAI,CAACA,YAAY;QACtC,MAAM7B,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMyf,WAAAA,GAAczf,MAAM5X,MAAM,IAAI+a,MAAS,OAAI,CAAC,CAAD;AACjD,cAAM0lB,KAAKvI,iBAAkBld,CAAAA,IAAAA,CAAAA,CAAAA;AAC7B,cAAMjb,QAAQ,EAAE;AAEhB,cAAM2gC,aAAa7b,MAAOyV,CAAAA,UAAU,CAAC,IAAI,CAACrpB,UAAU;AACpD,cAAM0vB,YAAYD,UAAWvb,CAAAA,OAAO,GAAGub,UAAW5kB,CAAAA,KAAK,GAAG,CAAC;AAC3D,cAAM8kB,gBAAgBD,SAAY;QAClC,MAAME,gBAAAA,GAAmB,SAASd,KAAK,EAAE;YACvC,OAAOG,6DAAAA,CAAY3hC,OAAOwhC,KAAOY,EAAAA,SAAAA,CAAAA,CAAAA;AACnC;QACA,IAAIG,WAAAA,EAAa7gC,GAAG43B,SAAWkJ,EAAAA,gBAAAA,CAAAA;AAC/B,YAAIC,KAAKC,GAAKC,EAAAA,GAAAA,EAAKC,GAAKC,EAAAA,EAAAA,EAAIC,IAAIC,EAAIC,EAAAA,EAAAA,CAAAA;AAEpC,YAAIjZ,aAAa,KAAO;YACtBwY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACj5B,MAAM;YAC1Cq5B,GAAM,OAAI,CAACr5B,MAAM,GAAG64B,EAAAA,CAAAA;AACpBU,YAAAA,GAAAA,GAAML,WAAcF,GAAAA,aAAAA,CAAAA;YACpBS,EAAKR,GAAAA,gBAAAA,CAAiBvtB,SAAU5L,CAAAA,GAAG,CAAIk5B,GAAAA,aAAAA,CAAAA;AACvCW,YAAAA,EAAAA,GAAKjuB,UAAU1L,MAAM;SAChB,UAAI0gB,aAAa,QAAU;YAChCwY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACn5B,GAAG;AACvC25B,YAAAA,EAAAA,GAAK/tB,UAAU5L,GAAG;YAClB65B,EAAKV,GAAAA,gBAAAA,CAAiBvtB,SAAU1L,CAAAA,MAAM,CAAIg5B,GAAAA,aAAAA,CAAAA;AAC1CK,YAAAA,GAAAA,GAAMH,WAAcF,GAAAA,aAAAA,CAAAA;YACpBO,GAAM,OAAI,CAACz5B,GAAG,GAAG+4B,EAAAA,CAAAA;SACZ,UAAInY,aAAa,MAAQ;YAC9BwY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACl5B,KAAK;YACzCq5B,GAAM,OAAI,CAACr5B,KAAK,GAAG84B,EAAAA,CAAAA;AACnBS,YAAAA,GAAAA,GAAMJ,WAAcF,GAAAA,aAAAA,CAAAA;YACpBQ,EAAKP,GAAAA,gBAAAA,CAAiBvtB,SAAUzL,CAAAA,IAAI,CAAI+4B,GAAAA,aAAAA,CAAAA;AACxCU,YAAAA,EAAAA,GAAKhuB,UAAU3L,KAAK;SACf,UAAI2gB,aAAa,OAAS;YAC/BwY,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACh5B,IAAI;AACxCu5B,YAAAA,EAAAA,GAAK9tB,UAAUzL,IAAI;YACnBy5B,EAAKT,GAAAA,gBAAAA,CAAiBvtB,SAAU3L,CAAAA,KAAK,CAAIi5B,GAAAA,aAAAA,CAAAA;AACzCI,YAAAA,GAAAA,GAAMF,WAAcF,GAAAA,aAAAA,CAAAA;YACpBM,GAAM,OAAI,CAACr5B,IAAI,GAAG44B,EAAAA,CAAAA;SACb,UAAIh3B,SAAS,GAAK;AACvB,gBAAI6e,aAAa,QAAU;gBACzBwY,WAAcD,GAAAA,gBAAAA,CAAiB,CAACvtB,SAAU5L,CAAAA,GAAG,GAAG4L,SAAU1L,CAAAA,MAAM,IAAI,CAAI;aACnE,UAAI5C,6DAAQA,CAACsjB,QAAW;AAC7B,sBAAM4Q,iBAAiBh0B,MAAOC,CAAAA,IAAI,CAACmjB,QAAAA,CAAS,CAAC,CAAE;gBAC/C,MAAM7hB,KAAAA,GAAQ6hB,QAAQ,CAAC4Q,cAAe;gBACtC4H,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACtiC,KAAK,CAACuN,MAAM,CAACotB,cAAAA,CAAe,CAACvhB,gBAAgB,CAAClR,KAAAA,CAAAA,CAAAA,CAAAA;aACnF;AAED46B,YAAAA,EAAAA,GAAK/tB,UAAU5L,GAAG;AAClB65B,YAAAA,EAAAA,GAAKjuB,UAAU1L,MAAM;AACrBq5B,YAAAA,GAAAA,GAAMH,WAAcF,GAAAA,aAAAA,CAAAA;AACpBO,YAAAA,GAAAA,GAAMF,GAAMR,GAAAA,EAAAA,CAAAA;SACP,UAAIh3B,SAAS,GAAK;AACvB,gBAAI6e,aAAa,QAAU;gBACzBwY,WAAcD,GAAAA,gBAAAA,CAAiB,CAACvtB,SAAAA,CAAUzL,IAAI,GAAGyL,SAAAA,CAAU3L,KAAI,IAAK;aAC/D,UAAI3C,6DAAQA,CAACsjB,QAAW;AAC7B,sBAAM4Q,iBAAiBh0B,MAAOC,CAAAA,IAAI,CAACmjB,QAAAA,CAAS,CAAC,CAAE;gBAC/C,MAAM7hB,KAAAA,GAAQ6hB,QAAQ,CAAC4Q,cAAe;gBACtC4H,WAAcD,GAAAA,gBAAAA,CAAiB,IAAI,CAACtiC,KAAK,CAACuN,MAAM,CAACotB,cAAAA,CAAe,CAACvhB,gBAAgB,CAAClR,KAAAA,CAAAA,CAAAA,CAAAA;aACnF;AAEDu6B,YAAAA,GAAAA,GAAMF,WAAcF,GAAAA,aAAAA,CAAAA;AACpBM,YAAAA,GAAAA,GAAMF,GAAMP,GAAAA,EAAAA,CAAAA;AACZW,YAAAA,EAAAA,GAAK9tB,UAAUzL,IAAI;AACnBy5B,YAAAA,EAAAA,GAAKhuB,UAAU3L,KAAK;SACrB;AAED,cAAM65B,QAAQvyB,6DAAelJ,CAAAA,OAAAA,CAAQ6R,KAAK,CAAC2d,aAAa,EAAE8B,WAAAA,CAAAA,CAAAA;QAC1D,MAAMoK,IAAAA,GAAOtiC,KAAKoC,GAAG,CAAC,GAAGpC,IAAK03B,CAAAA,IAAI,CAACQ,WAAcmK,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACjD,YAAKvhC,CAAI,MAAGA,CAAIo3B,GAAAA,WAAAA,EAAap3B,KAAKwhC,IAAM;AACtC,kBAAM9tB,OAAU,OAAI,CAAC1C,UAAU,CAAChR,CAAAA,CAAAA,CAAAA;YAChC,MAAMyhC,WAAAA,GAAc1mB,IAAKsf,CAAAA,UAAU,CAAC3mB,OAAAA,CAAAA,CAAAA;YACpC,MAAMguB,iBAAAA,GAAoB9c,MAAOyV,CAAAA,UAAU,CAAC3mB,OAAAA,CAAAA,CAAAA;YAE5C,MAAMoN,SAAAA,GAAY2gB,YAAY3gB,SAAS;YACvC,MAAM6gB,SAAAA,GAAYF,YAAYv/B,KAAK;AACnC,kBAAM0/B,UAAaF,GAAAA,iBAAAA,CAAkBG,IAAI,IAAI,EAAE;YAC/C,MAAMC,gBAAAA,GAAmBJ,kBAAkBK,UAAU;YAErD,MAAM3E,SAAAA,GAAYqE,YAAYrE,SAAS;YACvC,MAAM4E,SAAAA,GAAYP,YAAYO,SAAS;AACvC,kBAAMC,cAAiBR,GAAAA,WAAAA,CAAYQ,cAAc,IAAI,EAAE;YACvD,MAAMC,oBAAAA,GAAuBT,YAAYS,oBAAoB;YAE7DtK,SAAYJ,GAAAA,mBAAAA,CAAoB,IAAI,EAAEx3B,CAAG8a,EAAAA,MAAAA,CAAAA,CAAAA;AAGzC,gBAAI8c,cAAcx5B,SAAW;gBAC3B,SAAS;aACV;YAED0iC,gBAAmBb,GAAAA,6DAAAA,CAAY3hC,OAAOs5B,SAAW9W,EAAAA,SAAAA,CAAAA,CAAAA;AAEjD,gBAAItH,YAAc;gBAChBunB,GAAME,GAAAA,GAAAA,GAAME,KAAKE,EAAKP,GAAAA,gBAAAA,CAAAA;aACjB;gBACLE,GAAME,GAAAA,GAAAA,GAAME,KAAKE,EAAKR,GAAAA,gBAAAA,CAAAA;aACvB;AAEDhhC,YAAAA,KAAAA,CAAMkB,IAAI,CAAC;AACT+/B,gBAAAA,GAAAA;AACAC,gBAAAA,GAAAA;AACAC,gBAAAA,GAAAA;AACAC,gBAAAA,GAAAA;AACAC,gBAAAA,EAAAA;AACAC,gBAAAA,EAAAA;AACAC,gBAAAA,EAAAA;AACAC,gBAAAA,EAAAA;gBACAzlB,KAAOiF,EAAAA,SAAAA;gBACP5e,KAAOy/B,EAAAA,SAAAA;AACPC,gBAAAA,UAAAA;AACAE,gBAAAA,gBAAAA;AACA1E,gBAAAA,SAAAA;AACA4E,gBAAAA,SAAAA;AACAC,gBAAAA,cAAAA;AACAC,gBAAAA,oBAAAA;AACF;AACF;QAEA,IAAI,CAAChI,YAAY,GAAG9C,WAAAA,CAAAA;QACpB,IAAI,CAAC+C,YAAY,GAAG0G,WAAAA,CAAAA;QAEpB,OAAO/gC,KAAAA,CAAAA;AACT;AAKAg7B,CAAAA,kBAAAA,CAAmBznB,SAAS,EAAE;QAC5B,MAAM7J,IAAAA,GAAO,IAAI,CAACA,IAAI;QACtB,MAAM1D,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,cAAM,EAACuiB,QAAQ,GAAE1Q,KAAOyoB,EAAAA,WAAAA,GAAY,GAAGt6B,OAAAA,CAAAA;QACvC,MAAM0T,YAAAA,GAAe,IAAI,CAACA,YAAY;QACtC,MAAM7B,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM,EAACsf,QAAOkL,UAAAA,GAAY5T,OAAO,GAAEgQ,MAAM,GAAC,GAAG6B,WAAAA,CAAAA;QAC7C,MAAMI,EAAAA,GAAKvI,iBAAkBnyB,CAAAA,OAAAA,CAAQiV,IAAI;AACzC,cAAMqnB,iBAAiB5B,EAAKjS,GAAAA,OAAAA,CAAAA;AAC5B,cAAM8T,eAAkB9D,GAAAA,MAAAA,GAAS,CAAChQ,OAAAA,GAAU6T,cAAc;AAC1D,cAAMrkB,QAAW,IAACyD,6DAAU,KAAI,CAACgY,aAAa;AAC9C,cAAM15B,QAAQ,EAAE;QAChB,IAAIE,CAAAA,EAAGuI,IAAMlI,EAAAA,IAAAA,EAAM0S,KAAOxL,EAAAA,CAAAA,EAAGC,GAAG86B,SAAWxC,EAAAA,KAAAA,EAAOzH,IAAMG,EAAAA,UAAAA,EAAY+J,SAAWC,EAAAA,UAAAA,CAAAA;AAC/E,YAAIC,YAAe;AAEnB,YAAIpa,aAAa,KAAO;YACtB7gB,CAAI,OAAI,CAACG,MAAM,GAAG06B,eAAAA,CAAAA;YAClBC,SAAY,OAAI,CAACI,uBAAuB;SACnC,UAAIra,aAAa,QAAU;YAChC7gB,CAAI,OAAI,CAACC,GAAG,GAAG46B,eAAAA,CAAAA;YACfC,SAAY,OAAI,CAACI,uBAAuB;SACnC,UAAIra,aAAa,MAAQ;AAC9B,kBAAM2M,GAAM,OAAI,CAAC2N,uBAAuB,CAACnC,EAAAA,CAAAA,CAAAA;AACzC8B,YAAAA,SAAAA,GAAYtN,IAAIsN,SAAS;AACzB/6B,YAAAA,CAAAA,GAAIytB,IAAIztB,CAAC;SACJ,UAAI8gB,aAAa,OAAS;AAC/B,kBAAM2M,GAAM,OAAI,CAAC2N,uBAAuB,CAACnC,EAAAA,CAAAA,CAAAA;AACzC8B,YAAAA,SAAAA,GAAYtN,IAAIsN,SAAS;AACzB/6B,YAAAA,CAAAA,GAAIytB,IAAIztB,CAAC;SACJ,UAAIiC,SAAS,GAAK;AACvB,gBAAI6e,aAAa,QAAU;gBACzB7gB,CAAI,GAAE6L,CAAAA,SAAU5L,CAAAA,GAAG,GAAG4L,SAAU1L,CAAAA,MAAM,IAAI,CAAKy6B,GAAAA,cAAAA,CAAAA;aAC1C,UAAIr9B,6DAAQA,CAACsjB,QAAW;AAC7B,sBAAM4Q,iBAAiBh0B,MAAOC,CAAAA,IAAI,CAACmjB,QAAAA,CAAS,CAAC,CAAE;gBAC/C,MAAM7hB,KAAAA,GAAQ6hB,QAAQ,CAAC4Q,cAAe;gBACtCzxB,CAAI,OAAI,CAAClJ,KAAK,CAACuN,MAAM,CAACotB,cAAe,EAACvhB,gBAAgB,CAAClR,KAAS47B,CAAAA,GAAAA,cAAAA,CAAAA;aACjE;YACDE,SAAY,OAAI,CAACI,uBAAuB;SACnC,UAAIl5B,SAAS,GAAK;AACvB,gBAAI6e,aAAa,QAAU;gBACzB9gB,CAAI,GAAE8L,CAAAA,SAAUzL,CAAAA,IAAI,GAAGyL,SAAU3L,CAAAA,KAAK,IAAI,CAAK06B,GAAAA,cAAAA,CAAAA;aAC1C,UAAIr9B,6DAAQA,CAACsjB,QAAW;AAC7B,sBAAM4Q,iBAAiBh0B,MAAOC,CAAAA,IAAI,CAACmjB,QAAAA,CAAS,CAAC,CAAE;gBAC/C,MAAM7hB,KAAAA,GAAQ6hB,QAAQ,CAAC4Q,cAAe;gBACtC1xB,CAAI,OAAI,CAACjJ,KAAK,CAACuN,MAAM,CAACotB,cAAAA,CAAe,CAACvhB,gBAAgB,CAAClR,KAAAA,CAAAA,CAAAA;aACxD;AACD87B,YAAAA,SAAAA,GAAY,IAAI,CAACK,uBAAuB,CAACnC,IAAI8B,SAAS;SACvD;AAED,YAAI94B,SAAS,GAAK;AAChB,gBAAIytB,UAAU,OAAS;gBACrBwL,YAAe;aACV,UAAIxL,UAAU,KAAO;gBAC1BwL,YAAe;aAChB;SACF;QAED,MAAMlF,UAAAA,GAAa,IAAI,CAACC,cAAc;QACtC,IAAKx9B,CAAAA,GAAI,GAAGuI,IAAOoP,GAAAA,KAAAA,CAAM5X,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC9CK,IAAOsX,GAAAA,KAAK,CAAC3X,CAAE;AACf+S,YAAAA,KAAAA,GAAQ1S,KAAK0S,KAAK;AAElB,kBAAM0uB,cAAcrB,WAAY/F,CAAAA,UAAU,CAAC,IAAI,CAACrpB,UAAU,CAAChR,CAAAA,CAAAA,CAAAA,CAAAA;AAC3D8/B,YAAAA,KAAAA,GAAQ,IAAI,CAACloB,eAAe,CAAC5X,CAAAA,CAAAA,GAAKogC,YAAYwC,WAAW;YACzDvK,IAAO,OAAI,CAACoH,uBAAuB,CAACz/B,CAAAA,CAAAA,CAAAA;AACpCw4B,YAAAA,UAAAA,GAAaH,KAAKG,UAAU;AAC5B+J,YAAAA,SAAAA,GAAY98B,6DAAQsN,CAAAA,KAAAA,CAAAA,GAASA,KAAMhT,CAAAA,MAAM,GAAG,CAAC;AAC7C,kBAAM8iC,YAAYN,SAAY;YAC9B,MAAMrgC,KAAAA,GAAQu/B,YAAYv/B,KAAK;YAC/B,MAAM4gC,WAAAA,GAAcrB,YAAYsB,eAAe;YAC/C,MAAMC,WAAAA,GAAcvB,YAAYwB,eAAe;AAC/C,gBAAIC,aAAgBZ,GAAAA,SAAAA,CAAAA;AAEpB,gBAAI9oB,YAAc;gBAChBjS,CAAIu4B,GAAAA,KAAAA,CAAAA;AAEJ,oBAAIwC,cAAc,OAAS;oBACzB,IAAItiC,CAAAA,KAAMuI,OAAO,CAAG;wBAClB26B,aAAgB,IAAC,IAAI,CAACp9B,OAAO,CAACoB,OAAO,GAAG,UAAU,MAAM;qBACnD,UAAIlH,MAAM,CAAG;wBAClBkjC,aAAgB,IAAC,IAAI,CAACp9B,OAAO,CAACoB,OAAO,GAAG,SAAS,OAAO;qBACnD;wBACLg8B,aAAgB;qBACjB;iBACF;AAED,oBAAI7a,aAAa,KAAO;oBACtB,IAAI8Z,UAAAA,KAAe,MAAUpkB,IAAAA,QAAAA,KAAa,CAAG;wBAC3CykB,UAAa,IAACD,SAAY/J,GAAAA,UAAAA,GAAaA,UAAa;qBAC/C,UAAI2J,eAAe,QAAU;wBAClCK,UAAa,IAACjF,WAAWK,OAAO,CAAChiB,MAAM,GAAG,IAAIinB,YAAYrK,UAAaA,GAAAA,UAAAA,CAAAA;qBAClE;AACLgK,wBAAAA,UAAAA,GAAa,CAACjF,UAAWK,CAAAA,OAAO,CAAChiB,MAAM,GAAG4c,UAAa;qBACxD;iBACI;oBAEL,IAAI2J,UAAAA,KAAe,MAAUpkB,IAAAA,QAAAA,KAAa,CAAG;AAC3CykB,wBAAAA,UAAAA,GAAahK,UAAa;qBACrB,UAAI2J,eAAe,QAAU;AAClCK,wBAAAA,UAAAA,GAAajF,WAAWK,OAAO,CAAChiB,MAAM,GAAG,IAAIinB,SAAYrK,GAAAA,UAAAA,CAAAA;qBACpD;AACLgK,wBAAAA,UAAAA,GAAajF,UAAWK,CAAAA,OAAO,CAAChiB,MAAM,GAAG2mB,SAAY/J,GAAAA,UAAAA,CAAAA;qBACtD;iBACF;AACD,oBAAI+F,MAAQ;AACViE,oBAAAA,UAAAA,IAAc,CAAC;iBAChB;AACD,oBAAIzkB,QAAa,UAAK,CAAC0jB,WAAAA,CAAY0B,iBAAiB,EAAE;AACpD57B,oBAAAA,CAAAA,IAAK,UAACixB,GAAa,CAAKt5B,GAAAA,IAAAA,CAAK0f,GAAG,CAACb,QAAAA,CAAAA,CAAAA;iBAClC;aACI;gBACLvW,CAAIs4B,GAAAA,KAAAA,CAAAA;AACJ0C,gBAAAA,UAAAA,GAAa,CAAC,CAAID,GAAAA,SAAQ,IAAK/J,UAAa;aAC7C;YAED,IAAI4K,QAAAA,CAAAA;YAEJ,IAAI3B,WAAAA,CAAY0B,iBAAiB,EAAE;gBACjC,MAAME,YAAAA,GAAevU,6DAAU2S,CAAAA,WAAAA,CAAY6B,eAAe;AAC1D,sBAAM1nB,MAAS2hB,GAAAA,UAAAA,CAAW2B,OAAO,CAACl/B,CAAE;AACpC,sBAAM6b,KAAQ0hB,GAAAA,UAAAA,CAAW0B,MAAM,CAACj/B,CAAE;gBAElC,IAAIyH,GAAAA,GAAM+6B,UAAaa,GAAAA,YAAAA,CAAa57B,GAAG;gBACvC,IAAIG,IAAAA,GAAO,CAAIy7B,GAAAA,YAAAA,CAAaz7B,IAAI;gBAEhC,OAAQ66B,YAAAA;oBACR,KAAK;AACHh7B,wBAAAA,GAAAA,IAAOmU,MAAS;wBAChB,MAAM;oBACR,KAAK;wBACHnU,GAAOmU,IAAAA,MAAAA,CAAAA;wBACP,MAAM;AAGR;gBAEA,OAAQ0mB,SAAAA;oBACR,KAAK;AACH16B,wBAAAA,IAAAA,IAAQiU,KAAQ;wBAChB,MAAM;oBACR,KAAK;wBACHjU,IAAQiU,IAAAA,KAAAA,CAAAA;wBACR,MAAM;oBACR,KAAK;wBACH,IAAI7b,CAAAA,KAAMuI,OAAO,CAAG;4BAClBX,IAAQiU,IAAAA,KAAAA,CAAAA;yBACH,UAAI7b,IAAI,CAAG;AAChB4H,4BAAAA,IAAAA,IAAQiU,KAAQ;yBACjB;wBACD,MAAM;AAGR;gBAEAunB,QAAW;AACTx7B,oBAAAA,IAAAA;AACAH,oBAAAA,GAAAA;oBACAoU,KAAOA,EAAAA,KAAAA,GAAQwnB,aAAaxnB,KAAK;oBACjCD,MAAQA,EAAAA,MAAAA,GAASynB,aAAaznB,MAAM;AAEpC1Z,oBAAAA,KAAAA,EAAOu/B,YAAY8B,aAAa;AAClC;aACD;AAEDzjC,YAAAA,KAAAA,CAAMkB,IAAI,CAAC;AACT+R,gBAAAA,KAAAA;AACAslB,gBAAAA,IAAAA;AACAmK,gBAAAA,UAAAA;gBACA18B,OAAS;AACPiY,oBAAAA,QAAAA;AACA7b,oBAAAA,KAAAA;AACA4gC,oBAAAA,WAAAA;AACAE,oBAAAA,WAAAA;oBACAV,SAAWY,EAAAA,aAAAA;AACXT,oBAAAA,YAAAA;oBACAe,WAAa;AAACj8B,wBAAAA,CAAAA;AAAGC,wBAAAA,CAAAA;AAAE;AACnB47B,oBAAAA,QAAAA;AACF;AACF;AACF;QAEA,OAAOtjC,KAAAA,CAAAA;AACT;IAEA4iC,uBAA0B;QACxB,MAAM,EAACra,WAAU1Q,KAAAA,GAAM,GAAG,IAAI,CAAC7R,OAAO;AACtC,cAAMiY,QAAW,IAACyD,6DAAU,KAAI,CAACgY,aAAa;AAE9C,YAAIzb,QAAU;YACZ,OAAOsK,QAAAA,KAAa,KAAQ,YAAS,OAAO;SAC7C;AAED,YAAI4O,KAAQ;QAEZ,IAAItf,KAAAA,CAAMsf,KAAK,KAAK,OAAS;YAC3BA,KAAQ;AACV,eAAO,IAAItf,KAAAA,CAAMsf,KAAK,KAAK,KAAO;YAChCA,KAAQ;AACV,eAAO,IAAItf,KAAAA,CAAMsf,KAAK,KAAK,OAAS;YAClCA,KAAQ;SACT;QAED,OAAOA,KAAAA,CAAAA;AACT;AAEA0L,IAAAA,uBAAAA,CAAwBnC,EAAE,EAAE;AAC1B,cAAM,EAACnY,QAAQ,GAAE1Q,KAAO,IAACwqB,aAAY5D,MAAAA,GAAQhQ,OAAAA,GAAQ,GAAC,GAAG,IAAI,CAACzoB,OAAO;QACrE,MAAMy3B,UAAAA,GAAa,IAAI,CAACC,cAAc;AACtC,cAAM4E,iBAAiB5B,EAAKjS,GAAAA,OAAAA,CAAAA;AAC5B,cAAMmP,MAASH,GAAAA,UAAAA,CAAWG,MAAM,CAAC7hB,KAAK;QAEtC,IAAIymB,SAAAA,CAAAA;QACJ,IAAI/6B,CAAAA,CAAAA;AAEJ,YAAI8gB,aAAa,MAAQ;AACvB,gBAAIkW,MAAQ;gBACVh3B,CAAI,OAAI,CAACG,KAAK,GAAG6mB,OAAAA,CAAAA;AAEjB,oBAAI4T,eAAe,MAAQ;oBACzBG,SAAY;iBACP,UAAIH,eAAe,QAAU;oBAClCG,SAAY;AACZ/6B,oBAAAA,CAAAA,IAAMm2B,MAAS;iBACV;oBACL4E,SAAY;oBACZ/6B,CAAKm2B,IAAAA,MAAAA,CAAAA;iBACN;aACI;gBACLn2B,CAAI,OAAI,CAACG,KAAK,GAAG06B,cAAAA,CAAAA;AAEjB,oBAAID,eAAe,MAAQ;oBACzBG,SAAY;iBACP,UAAIH,eAAe,QAAU;oBAClCG,SAAY;AACZ/6B,oBAAAA,CAAAA,IAAMm2B,MAAS;iBACV;oBACL4E,SAAY;oBACZ/6B,CAAI,OAAI,CAACK,IAAI;iBACd;aACF;SACI,UAAIygB,aAAa,OAAS;AAC/B,gBAAIkW,MAAQ;gBACVh3B,CAAI,OAAI,CAACK,IAAI,GAAG2mB,OAAAA,CAAAA;AAEhB,oBAAI4T,eAAe,MAAQ;oBACzBG,SAAY;iBACP,UAAIH,eAAe,QAAU;oBAClCG,SAAY;AACZ/6B,oBAAAA,CAAAA,IAAMm2B,MAAS;iBACV;oBACL4E,SAAY;oBACZ/6B,CAAKm2B,IAAAA,MAAAA,CAAAA;iBACN;aACI;gBACLn2B,CAAI,OAAI,CAACK,IAAI,GAAGw6B,cAAAA,CAAAA;AAEhB,oBAAID,eAAe,MAAQ;oBACzBG,SAAY;iBACP,UAAIH,eAAe,QAAU;oBAClCG,SAAY;AACZ/6B,oBAAAA,CAAAA,IAAKm2B,MAAS;iBACT;oBACL4E,SAAY;oBACZ/6B,CAAI,OAAI,CAACG,KAAK;iBACf;aACF;SACI;YACL46B,SAAY;SACb;QAED,OAAO;AAACA,YAAAA,SAAAA;AAAW/6B,YAAAA,CAAAA;AAAC;AACtB;AAIA,CACAk8B,iBAAoB;AAClB,YAAI,IAAI,CAAC39B,OAAO,CAAC6R,KAAK,CAAC4mB,MAAM,EAAE;AAC7B;SACD;QAED,MAAMjgC,KAAAA,GAAQ,IAAI,CAACA,KAAK;AACxB,cAAM+pB,QAAW,OAAI,CAACviB,OAAO,CAACuiB,QAAQ;QAEtC,IAAIA,QAAAA,KAAa,MAAUA,IAAAA,QAAAA,KAAa,OAAS;YAC/C,OAAO;gBAAC5gB,GAAK;gBAAGG,IAAM,MAAI,CAACA,IAAI;AAAED,gBAAAA,MAAAA,EAAQrJ,MAAMsd,MAAM;gBAAElU,KAAO,MAAI,CAACA,KAAK;AAAA;SACzE;QAAC,IAAI2gB,QAAAA,KAAa,KAASA,IAAAA,QAAAA,KAAa,QAAU;YACjD,OAAO;gBAAC5gB,GAAK,MAAI,CAACA,GAAG;gBAAEG,IAAM;gBAAGD,MAAQ,MAAI,CAACA,MAAM;AAAED,gBAAAA,KAAAA,EAAOpJ,MAAMud,KAAK;AAAA;SACxE;AACH;AAIC,CACD6nB,cAAiB;AACf,cAAM,EAACp2B,GAAG,GAAExH,SAAS,EAAC4a,eAAAA,GAAgB,GAAE9Y,IAAI,GAAEH,MAAKoU,KAAAA,GAAOD,MAAM,GAAC,GAAG,IAAI;AACxE,YAAI8E,eAAiB;AACnBpT,YAAAA,GAAAA,CAAIq2B,IAAI;AACRr2B,YAAAA,GAAAA,CAAImT,SAAS,GAAGC,eAAAA,CAAAA;AAChBpT,YAAAA,GAAAA,CAAIs2B,QAAQ,CAACh8B,IAAMH,EAAAA,GAAAA,EAAKoU,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;AAC/BtO,YAAAA,GAAAA,CAAIu2B,OAAO;SACZ;AACH;AAEA3mB,IAAAA,oBAAAA,CAAqB1W,KAAK,EAAE;AAC1B,cAAMuU,IAAO,OAAI,CAACjV,OAAO,CAACiV,IAAI;QAC9B,IAAI,CAAC,IAAI,CAACuiB,UAAU,MAAM,CAACviB,IAAAA,CAAKmK,OAAO,EAAE;YACvC,OAAO;SACR;QACD,MAAMvN,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMnP,KAAAA,GAAQmP,MAAMmsB,SAAS,CAACh8B,CAAAA,CAAKA,GAAAA,CAAAA,CAAEtB,KAAK,KAAKA,KAAAA,CAAAA,CAAAA;AAC/C,YAAIgC,SAAS,CAAG;AACd,kBAAMvB,OAAO8T,IAAKsf,CAAAA,UAAU,CAAC,IAAI,CAACrpB,UAAU,CAACxI,KAAAA,CAAAA,CAAAA,CAAAA;AAC7C,mBAAOvB,KAAK6Z,SAAS;SACtB;QACD,OAAO;AACT;AAKAijB,CAAAA,QAAAA,CAAS1wB,SAAS,EAAE;AAClB,cAAM0H,IAAO,OAAI,CAACjV,OAAO,CAACiV,IAAI;QAC9B,MAAMzN,GAAAA,GAAM,IAAI,CAACA,GAAG;AACpB,cAAMxN,KAAQ,OAAI,CAAC45B,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG,IAAI,CAAC6G,qBAAqB,CAACltB,SAAS;AAChG,YAAIrT,CAAGuI,EAAAA,IAAAA,CAAAA;AAEP,cAAMy7B,QAAW,IAACC,EAAIC,EAAAA,EAAAA,EAAI3jB,KAAU;AAClC,gBAAI,CAACA,KAAM1E,CAAAA,KAAK,IAAI,CAAC0E,KAAAA,CAAMre,KAAK,EAAE;AAChC;aACD;AACDoL,YAAAA,GAAAA,CAAIq2B,IAAI;YACRr2B,GAAIwT,CAAAA,SAAS,GAAGP,KAAAA,CAAM1E,KAAK;YAC3BvO,GAAIqT,CAAAA,WAAW,GAAGJ,KAAAA,CAAMre,KAAK;AAC7BoL,YAAAA,GAAAA,CAAI62B,WAAW,CAAC5jB,KAAMqhB,CAAAA,UAAU,IAAI,EAAE;YACtCt0B,GAAI82B,CAAAA,cAAc,GAAG7jB,KAAAA,CAAMuhB,gBAAgB;AAE3Cx0B,YAAAA,GAAAA,CAAI+2B,SAAS;AACb/2B,YAAAA,GAAAA,CAAIg3B,MAAM,CAACL,EAAAA,CAAG18B,CAAC,EAAE08B,GAAGz8B,CAAC;AACrB8F,YAAAA,GAAAA,CAAIi3B,MAAM,CAACL,EAAAA,CAAG38B,CAAC,EAAE28B,GAAG18B,CAAC;AACrB8F,YAAAA,GAAAA,CAAIk3B,MAAM;AACVl3B,YAAAA,GAAAA,CAAIu2B,OAAO;AACb;QAEA,IAAI9oB,IAAAA,CAAKmK,OAAO,EAAE;YAChB,IAAKllB,CAAAA,GAAI,GAAGuI,IAAOzI,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;gBAC9C,MAAME,IAAAA,GAAOJ,KAAK,CAACE,CAAE;gBAErB,IAAI+a,IAAAA,CAAK0pB,eAAe,EAAE;oBACxBT,QACE;AAACz8B,wBAAAA,CAAAA,EAAGrH,KAAKihC,EAAE;AAAE35B,wBAAAA,CAAAA,EAAGtH,KAAKkhC,EAAE;qBACvB;AAAC75B,wBAAAA,CAAAA,EAAGrH,KAAKmhC,EAAE;AAAE75B,wBAAAA,CAAAA,EAAGtH,KAAKohC,EAAE;qBACvBphC,EAAAA,IAAAA,CAAAA,CAAAA;iBAEH;gBAED,IAAI6a,IAAAA,CAAKmd,SAAS,EAAE;oBAClB8L,QACE;AAACz8B,wBAAAA,CAAAA,EAAGrH,KAAK6gC,GAAG;AAAEv5B,wBAAAA,CAAAA,EAAGtH,KAAK8gC,GAAG;qBACzB;AAACz5B,wBAAAA,CAAAA,EAAGrH,KAAK+gC,GAAG;AAAEz5B,wBAAAA,CAAAA,EAAGtH,KAAKghC,GAAG;qBACzB;AACEh/B,wBAAAA,KAAAA,EAAOhC,KAAK8hC,SAAS;AACrBnmB,wBAAAA,KAAAA,EAAO3b,KAAKk9B,SAAS;AACrBwE,wBAAAA,UAAAA,EAAY1hC,KAAK+hC,cAAc;AAC/BH,wBAAAA,gBAAAA,EAAkB5hC,KAAKgiC,oBAAoB;AAC7C;iBAEH;AACH;SACD;AACH;AAIA,CACAwC,UAAa;AACX,cAAM,EAACpmC,KAAAA,GAAOgP,GAAAA,GAAKxH,OAAS,IAAC8e,MAAM,GAAE7J,IAAI,GAAC,GAAC,GAAG,IAAI;AAClD,cAAM0lB,aAAa7b,MAAOyV,CAAAA,UAAU,CAAC,IAAI,CAACrpB,UAAU;AACpD,cAAM0vB,YAAY9b,MAAOM,CAAAA,OAAO,GAAGub,UAAW5kB,CAAAA,KAAK,GAAG,CAAC;AACvD,YAAI,CAAC6kB,SAAW;AACd;SACD;QACD,MAAMiE,aAAAA,GAAgB5pB,KAAKsf,UAAU,CAAC,IAAI,CAACrpB,UAAU,CAAC,IAAI8P,SAAS;QACnE,MAAM+f,WAAAA,GAAc,IAAI,CAAC1G,YAAY;QACrC,IAAIgH,EAAAA,EAAIE,IAAID,EAAIE,EAAAA,EAAAA,CAAAA;QAEhB,IAAI,IAAI,CAAC9nB,YAAY,EAAI;AACvB2nB,YAAAA,EAAAA,GAAKlB,6DAAWA,CAAC3hC,KAAO,MAAI,CAACsJ,IAAI,EAAE84B,aAAaA,SAAY;AAC5DW,YAAAA,EAAAA,GAAKpB,6DAAWA,CAAC3hC,KAAO,MAAI,CAACoJ,KAAK,EAAEi9B,iBAAiBA,aAAgB;AACrEvD,YAAAA,EAAAA,GAAKE,EAAKT,GAAAA,WAAAA,CAAAA;SACL;AACLO,YAAAA,EAAAA,GAAKnB,6DAAWA,CAAC3hC,KAAO,MAAI,CAACmJ,GAAG,EAAEi5B,aAAaA,SAAY;AAC3DY,YAAAA,EAAAA,GAAKrB,6DAAWA,CAAC3hC,KAAO,MAAI,CAACqJ,MAAM,EAAEg9B,iBAAiBA,aAAgB;AACtExD,YAAAA,EAAAA,GAAKE,EAAKR,GAAAA,WAAAA,CAAAA;SACX;AACDvzB,QAAAA,GAAAA,CAAIq2B,IAAI;QACRr2B,GAAIwT,CAAAA,SAAS,GAAG2f,UAAAA,CAAW5kB,KAAK;QAChCvO,GAAIqT,CAAAA,WAAW,GAAG8f,UAAAA,CAAWv+B,KAAK;AAElCoL,QAAAA,GAAAA,CAAI+2B,SAAS;QACb/2B,GAAIg3B,CAAAA,MAAM,CAACnD,EAAIC,EAAAA,EAAAA,CAAAA,CAAAA;QACf9zB,GAAIi3B,CAAAA,MAAM,CAAClD,EAAIC,EAAAA,EAAAA,CAAAA,CAAAA;AACfh0B,QAAAA,GAAAA,CAAIk3B,MAAM;AAEVl3B,QAAAA,GAAAA,CAAIu2B,OAAO;AACb;AAKAe,CAAAA,UAAAA,CAAWvxB,SAAS,EAAE;AACpB,cAAM+sB,WAAc,OAAI,CAACt6B,OAAO,CAAC6R,KAAK;QAEtC,IAAI,CAACyoB,WAAYlb,CAAAA,OAAO,EAAE;AACxB;SACD;QAED,MAAM5X,GAAAA,GAAM,IAAI,CAACA,GAAG;QAEpB,MAAM8F,IAAAA,GAAO,IAAI,CAACqwB,iBAAiB;AACnC,YAAIrwB,IAAM;AACRyxB,YAAAA,6DAAAA,CAASv3B,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;SACf;AAED,cAAMtT,KAAQ,OAAI,CAAC+6B,aAAa,CAACxnB,SAAAA,CAAAA,CAAAA;QACjC,KAAK,MAAMnT,QAAQJ,KAAO;YACxB,MAAMglC,iBAAAA,GAAoB5kC,KAAK4F,OAAO;YACtC,MAAMw5B,QAAAA,GAAWp/B,KAAKm4B,IAAI;YAC1B,MAAMtlB,KAAAA,GAAQ7S,KAAK6S,KAAK;YACxB,MAAMvL,CAAAA,GAAItH,KAAKsiC,UAAU;AACzBuC,YAAAA,6DAAAA,CAAWz3B,GAAKyF,EAAAA,KAAAA,EAAO,CAAGvL,EAAAA,CAAAA,EAAG83B,QAAUwF,EAAAA,iBAAAA,CAAAA,CAAAA;AACzC;AAEA,YAAI1xB,IAAM;YACR4xB,6DAAW13B,CAAAA,GAAAA,CAAAA,CAAAA;SACZ;AACH;AAIA,CACA23B,SAAY;AACV,cAAM,EAAC33B,GAAAA,GAAKxH,OAAAA,EAAS,EAACuiB,QAAQ,GAAEyV,KAAK,GAAE52B,OAAO,GAAC,GAAC,GAAG,IAAI;QAEvD,IAAI,CAAC42B,KAAM5Y,CAAAA,OAAO,EAAE;AAClB;SACD;QAED,MAAMmT,IAAAA,GAAOC,8DAAOwF,CAAAA,KAAAA,CAAMzF,IAAI;QAC9B,MAAM9J,OAAAA,GAAUO,6DAAUgP,CAAAA,KAAAA,CAAMvP,OAAO;QACvC,MAAM0I,KAAAA,GAAQ6G,MAAM7G,KAAK;QACzB,IAAInc,MAAAA,GAASud,IAAKG,CAAAA,UAAU,GAAG;AAE/B,YAAInQ,QAAa,iBAAYA,QAAa,iBAAYtjB,6DAAQA,CAACsjB,QAAW;AACxEvN,YAAAA,MAAAA,IAAUyT,QAAQ5mB,MAAM;YACxB,IAAIlC,6DAAAA,CAAQq4B,KAAMtd,CAAAA,IAAI,CAAG;gBACvB1F,MAAUud,IAAAA,IAAAA,CAAKG,UAAU,IAAIsF,MAAMtd,IAAI,CAACzgB,MAAM,GAAG;aAClD;SACI;AACL+a,YAAAA,MAAAA,IAAUyT,QAAQ9mB,GAAG;SACtB;AAED,cAAM,EAACqxB,MAAAA,GAAQC,MAAAA,GAAQ5W,QAAQ,GAAEpE,QAAQ,GAAC,GAAG8a,SAAAA,CAAU,IAAI,EAAE/d,QAAQuN,QAAU4O,EAAAA,KAAAA,CAAAA,CAAAA;AAE/E8N,QAAAA,6DAAAA,CAAWz3B,KAAKwwB,KAAMtd,CAAAA,IAAI,EAAE,GAAG,GAAG6X,IAAM;AACtCn2B,YAAAA,KAAAA,EAAO47B,MAAM57B,KAAK;AAClBigB,YAAAA,QAAAA;AACApE,YAAAA,QAAAA;YACAukB,SAAW3J,EAAAA,UAAAA,CAAW1B,OAAO5O,QAAUnhB,EAAAA,OAAAA,CAAAA;YACvCu7B,YAAc;YACde,WAAa;AAAC1K,gBAAAA,MAAAA;AAAQC,gBAAAA,MAAAA;AAAO;AAC/B;AACF;AAEA94B,IAAAA,IAAAA,CAAKoT,SAAS,EAAE;AACd,YAAI,CAAC,IAAI,CAACiqB,UAAU,EAAI;AACtB;SACD;AAED,YAAI,CAACoG,cAAc;QACnB,IAAI,CAACK,QAAQ,CAAC1wB,SAAAA,CAAAA,CAAAA;AACd,YAAI,CAACqxB,UAAU;AACf,YAAI,CAACO,SAAS;QACd,IAAI,CAACL,UAAU,CAACvxB,SAAAA,CAAAA,CAAAA;AAClB;AAKA,CACAob,OAAU;QACR,MAAMxnB,IAAAA,GAAO,IAAI,CAACnB,OAAO;QACzB,MAAMo/B,EAAAA,GAAKj+B,KAAK0Q,KAAK,IAAI1Q,KAAK0Q,KAAK,CAAC+W,CAAC,IAAI;QACzC,MAAMyW,EAAAA,GAAKn2B,6DAAe/H,CAAAA,IAAAA,CAAK8T,IAAI,IAAI9T,KAAK8T,IAAI,CAAC2T,CAAC,EAAE,CAAC;QACrD,MAAM0W,EAAAA,GAAKp2B,6DAAcA,CAAC/H,IAAK2d,CAAAA,MAAM,IAAI3d,IAAK2d,CAAAA,MAAM,CAAC8J,CAAC,EAAE;AAExD,YAAI,CAAC,IAAI,CAAC4O,UAAU,EAAM,QAAI,CAACr9B,IAAI,KAAKi5B,KAAAA,CAAMjS,SAAS,CAAChnB,IAAI,EAAE;YAE5D,OAAO;AAAC;oBACNyuB,CAAGwW,EAAAA,EAAAA;AACHjlC,oBAAAA,IAAAA,EAAM,CAACoT,SAAc;wBACnB,IAAI,CAACpT,IAAI,CAACoT,SAAAA,CAAAA,CAAAA;AACZ;AACF;AAAE;SACH;QAED,OAAO;AAAC;gBACNqb,CAAGyW,EAAAA,EAAAA;AACHllC,gBAAAA,IAAAA,EAAM,CAACoT,SAAc;AACnB,wBAAI,CAACqwB,cAAc;oBACnB,IAAI,CAACK,QAAQ,CAAC1wB,SAAAA,CAAAA,CAAAA;AACd,wBAAI,CAAC4xB,SAAS;AAChB;AACF;AAAG;gBACDvW,CAAG0W,EAAAA,EAAAA;AACHnlC,gBAAAA,IAAAA,EAAM,IAAM;AACV,wBAAI,CAACykC,UAAU;AACjB;AACF;AAAG;gBACDhW,CAAGwW,EAAAA,EAAAA;AACHjlC,gBAAAA,IAAAA,EAAM,CAACoT,SAAc;oBACnB,IAAI,CAACuxB,UAAU,CAACvxB,SAAAA,CAAAA,CAAAA;AAClB;AACF;AAAE;AACJ;AAOAtI,CAAAA,uBAAAA,CAAwBtM,IAAI,EAAE;AAC5B,cAAMg8B,KAAQ,OAAI,CAACn8B,KAAK,CAACiqB,4BAA4B;AACrD,cAAM8c,MAAS,OAAI,CAAC77B,IAAI,GAAG;AAC3B,cAAMmtB,SAAS,EAAE;AACjB,YAAI32B,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOkyB,GAAAA,KAAAA,CAAM16B,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC9C,MAAMoJ,IAAAA,GAAOqxB,KAAK,CAACz6B,CAAE;AACrB,gBAAIoJ,IAAI,CAACi8B,MAAO,MAAK,IAAI,CAACp7B,EAAE,KAAK,CAACxL,IAAQ2K,IAAAA,IAAAA,CAAK3K,IAAI,KAAKA,IAAG,CAAI;AAC7Dk4B,gBAAAA,MAAAA,CAAO31B,IAAI,CAACoI,IAAAA,CAAAA,CAAAA;aACb;AACH;QACA,OAAOutB,MAAAA,CAAAA;AACT;AAOA8I,CAAAA,uBAAAA,CAAwBj3B,KAAK,EAAE;AAC7B,cAAMvB,IAAO,OAAI,CAACnB,OAAO,CAAC6R,KAAK,CAAC0iB,UAAU,CAAC,IAAI,CAACrpB,UAAU,CAACxI,KAAAA,CAAAA,CAAAA,CAAAA;QAC3D,OAAO8vB,8DAAAA,CAAOrxB,KAAKoxB,IAAI;AACzB;AAIC,CACDiN,UAAa;AACX,cAAMC,WAAW,IAAI,CAAC9F,uBAAuB,CAAC,GAAGjH,UAAU;AAC3D,eAAO,CAAC,IAAI,CAAChf,YAAY,EAAK,OAAI,CAACqC,KAAK,GAAG,IAAI,CAACD,MAAM,IAAI2pB,QAAAA,CAAAA;AAC5D;AACF;;ACvqDe,MAAMC,aAAAA,CAAAA;AACnB1nC,IAAAA,WAAAA,CAAYW,IAAI,EAAEgnC,KAAK,EAAE1e,QAAQ,CAAE;QACjC,IAAI,CAACtoB,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAACgnC,KAAK,GAAGA,KAAAA,CAAAA;QACb,IAAI,CAAC1e,QAAQ,GAAGA,QAAAA,CAAAA;AAChB,YAAI,CAACjnB,KAAK,GAAGmF,MAAOygC,CAAAA,MAAM,CAAC,IAAI;AACjC;AAEAC,IAAAA,SAAAA,CAAUlnC,IAAI,EAAE;AACd,eAAOwG,MAAOgiB,CAAAA,SAAS,CAAC2e,aAAa,CAACrmC,IAAI,CAAC,IAAI,CAACd,IAAI,CAACwoB,SAAS,EAAExoB,KAAKwoB,SAAS;AAChF;AAMA4e,CAAAA,QAAAA,CAAS3lC,IAAI,EAAE;QACb,MAAM4lC,KAAAA,GAAQ7gC,MAAO8gC,CAAAA,cAAc,CAAC7lC,IAAAA,CAAAA,CAAAA;QACpC,IAAI8lC,WAAAA,CAAAA;AAEJ,YAAIC,kBAAkBH,KAAQ;YAE5BE,WAAc,OAAI,CAACH,QAAQ,CAACC,KAAAA,CAAAA,CAAAA;SAC7B;QAED,MAAMhmC,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMmK,EAAAA,GAAK/J,KAAK+J,EAAE;AAClB,cAAMw7B,KAAQ,OAAI,CAACA,KAAK,GAAG,GAAMx7B,GAAAA,EAAAA,CAAAA;AAEjC,YAAI,CAACA,EAAI;YACP,MAAM,IAAI4c,KAAM,8BAA6B3mB,IAAM;SACpD;AAED,YAAI+J,MAAMnK,KAAO;YAEf,OAAO2lC,KAAAA,CAAAA;SACR;QAED3lC,KAAK,CAACmK,GAAG,GAAG/J,IAAAA,CAAAA;AACZgmC,QAAAA,gBAAAA,CAAiBhmC,MAAMulC,KAAOO,EAAAA,WAAAA,CAAAA,CAAAA;QAC9B,IAAI,IAAI,CAACjf,QAAQ,EAAE;AACjB5hB,YAAAA,yDAAAA,CAAS4hB,QAAQ,CAAC7mB,IAAAA,CAAK+J,EAAE,EAAE/J,KAAK0a,SAAS;SAC1C;QAED,OAAO6qB,KAAAA,CAAAA;AACT;AAMAhlC,CAAAA,GAAAA,CAAIwJ,EAAE,EAAE;AACN,eAAO,IAAI,CAACnK,KAAK,CAACmK,EAAG;AACvB;AAKAk8B,CAAAA,UAAAA,CAAWjmC,IAAI,EAAE;QACf,MAAMJ,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMmK,EAAAA,GAAK/J,KAAK+J,EAAE;QAClB,MAAMw7B,KAAAA,GAAQ,IAAI,CAACA,KAAK;AAExB,YAAIx7B,MAAMnK,KAAO;YACf,OAAOA,KAAK,CAACmK,EAAG;SACjB;AAED,YAAIw7B,KAASx7B,IAAAA,EAAAA,IAAM9E,yDAAQ,CAACsgC,MAAM,EAAE;AAClC,mBAAOtgC,yDAAQ,CAACsgC,KAAM,EAACx7B,EAAG;YAC1B,IAAI,IAAI,CAAC8c,QAAQ,EAAE;gBACjB,OAAOnM,0DAAS,CAAC3Q,EAAG;aACrB;SACF;AACH;AACF,CAAC;AAED,SAASi8B,iBAAiBhmC,IAAI,EAAEulC,KAAK,EAAEO,WAAW,EAAE;AAElD,UAAMI,eAAeC,8DAAMphC,CAAAA,MAAAA,CAAOygC,MAAM,CAAC,IAAI,CAAG;AAC9CM,QAAAA,WAAAA,GAAc7gC,yDAAS1E,CAAAA,GAAG,CAACulC,WAAAA,CAAAA,GAAe,EAAE;AAC5C7gC,QAAAA,yDAAAA,CAAS1E,GAAG,CAACglC,KAAAA,CAAAA;AACbvlC,QAAAA,IAAAA,CAAKiF,QAAQ;AACd;IAEDA,yDAASvE,CAAAA,GAAG,CAAC6kC,KAAOW,EAAAA,YAAAA,CAAAA,CAAAA;IAEpB,IAAIlmC,IAAAA,CAAK00B,aAAa,EAAE;QACtB0R,aAAcb,CAAAA,KAAAA,EAAOvlC,KAAK00B,aAAa;KACxC;IAED,IAAI10B,IAAAA,CAAK2f,WAAW,EAAE;AACpB1a,QAAAA,yDAAAA,CAASohC,QAAQ,CAACd,KAAOvlC,EAAAA,IAAAA,CAAK2f,WAAW;KAC1C;AACH;AAEA,SAASymB,aAAcb,CAAAA,KAAK,EAAEe,MAAM,EAAE;AACpCvhC,IAAAA,MAAAA,CAAOC,IAAI,CAACshC,MAAAA,CAAAA,CAAQ1nC,OAAO,CAAC2nC,CAAAA,QAAY;QACtC,MAAMC,aAAAA,GAAgBD,QAASE,CAAAA,KAAK,CAAC;QACrC,MAAMC,UAAAA,GAAaF,cAAcpmC,GAAG;AACpC,cAAMumC,WAAc;AAACpB,YAAAA,KAAAA;AAAM,UAACxuB,MAAM,CAACyvB,aAAeI,CAAAA,CAAAA,IAAI,CAAC;AACvD,cAAMC,QAAQP,MAAM,CAACC,QAAS,EAACE,KAAK,CAAC;QACrC,MAAMK,UAAAA,GAAaD,MAAMzmC,GAAG;QAC5B,MAAM2mC,WAAAA,GAAcF,KAAMD,CAAAA,IAAI,CAAC;AAC/B3hC,QAAAA,yDAAAA,CAAS+hC,KAAK,CAACL,WAAaD,EAAAA,UAAAA,EAAYK,WAAaD,EAAAA,UAAAA,CAAAA,CAAAA;AACvD;AACF;AAEA,SAASf,iBAAAA,CAAkBH,KAAK,EAAE;IAChC,OAAO,QAAQA,SAAS,UAAcA,IAAAA,KAAAA,CAAAA;AACxC;;AC1GO,MAAMqB,QAAAA,CAAAA;IACXrpC,WAAc;AACZ,YAAI,CAACspC,WAAW,GAAG,IAAI5B,aAAct4B,CAAAA,iBAAAA,EAAmB,YAAY,IAAI;AACxE,YAAI,CAACiG,QAAQ,GAAG,IAAIqyB,cAAc7Q,OAAS;AAC3C,YAAI,CAACzU,OAAO,GAAG,IAAIslB,cAAcvgC,MAAQ;AACzC,YAAI,CAAC4G,MAAM,GAAG,IAAI25B,cAActM,KAAO;QAGvC,IAAI,CAACmO,gBAAgB,GAAG;AAAC,gBAAI,CAACD,WAAW;AAAE,gBAAI,CAACv7B,MAAM;AAAE,gBAAI,CAACsH,QAAQ;AAAC;AACxE;AAKAlS,CAAAA,GAAAA,CAAI,GAAGmV,IAAI,EAAE;QACX,IAAI,CAACkxB,KAAK,CAAC,UAAYlxB,EAAAA,IAAAA,CAAAA,CAAAA;AACzB;IAEA1U,MAAO,IAAG0U,IAAI,EAAE;QACd,IAAI,CAACkxB,KAAK,CAAC,YAAclxB,EAAAA,IAAAA,CAAAA,CAAAA;AAC3B;AAKAmxB,CAAAA,cAAAA,CAAe,GAAGnxB,IAAI,EAAE;AACtB,YAAI,CAACkxB,KAAK,CAAC,YAAYlxB,IAAM,MAAI,CAACgxB,WAAW;AAC/C;AAKA94B,CAAAA,WAAAA,CAAY,GAAG8H,IAAI,EAAE;AACnB,YAAI,CAACkxB,KAAK,CAAC,YAAYlxB,IAAM,MAAI,CAACjD,QAAQ;AAC5C;AAKAq0B,CAAAA,UAAAA,CAAW,GAAGpxB,IAAI,EAAE;AAClB,YAAI,CAACkxB,KAAK,CAAC,YAAYlxB,IAAM,MAAI,CAAC8J,OAAO;AAC3C;AAKAunB,CAAAA,SAAAA,CAAU,GAAGrxB,IAAI,EAAE;AACjB,YAAI,CAACkxB,KAAK,CAAC,YAAYlxB,IAAM,MAAI,CAACvK,MAAM;AAC1C;AAMA67B,CAAAA,aAAAA,CAAcz9B,EAAE,EAAE;QAChB,OAAO,IAAI,CAAC09B,IAAI,CAAC19B,IAAI,IAAI,CAACm9B,WAAW,EAAE;AACzC;AAMAzgB,CAAAA,UAAAA,CAAW1c,EAAE,EAAE;QACb,OAAO,IAAI,CAAC09B,IAAI,CAAC19B,IAAI,IAAI,CAACkJ,QAAQ,EAAE;AACtC;AAMAy0B,CAAAA,SAAAA,CAAU39B,EAAE,EAAE;QACZ,OAAO,IAAI,CAAC09B,IAAI,CAAC19B,IAAI,IAAI,CAACiW,OAAO,EAAE;AACrC;AAMA2nB,CAAAA,QAAAA,CAAS59B,EAAE,EAAE;QACX,OAAO,IAAI,CAAC09B,IAAI,CAAC19B,IAAI,IAAI,CAAC4B,MAAM,EAAE;AACpC;AAKAi8B,CAAAA,iBAAAA,CAAkB,GAAG1xB,IAAI,EAAE;AACzB,YAAI,CAACkxB,KAAK,CAAC,cAAclxB,IAAM,MAAI,CAACgxB,WAAW;AACjD;AAKAW,CAAAA,cAAAA,CAAe,GAAG3xB,IAAI,EAAE;AACtB,YAAI,CAACkxB,KAAK,CAAC,cAAclxB,IAAM,MAAI,CAACjD,QAAQ;AAC9C;AAKA60B,CAAAA,aAAAA,CAAc,GAAG5xB,IAAI,EAAE;AACrB,YAAI,CAACkxB,KAAK,CAAC,cAAclxB,IAAM,MAAI,CAAC8J,OAAO;AAC7C;AAKA+nB,CAAAA,YAAAA,CAAa,GAAG7xB,IAAI,EAAE;AACpB,YAAI,CAACkxB,KAAK,CAAC,cAAclxB,IAAM,MAAI,CAACvK,MAAM;AAC5C;AAIA,CACAy7B,MAAM7iC,MAAM,EAAE2R,IAAI,EAAE8xB,aAAa,EAAE;AACjC;AAAI9xB,YAAAA,GAAAA,IAAAA;SAAK,CAACtX,OAAO,CAACqpC,CAAAA,GAAO;AACvB,kBAAMC,GAAMF,GAAAA,aAAAA,IAAiB,IAAI,CAACG,mBAAmB,CAACF,GAAAA,CAAAA,CAAAA;AACtD,gBAAID,aAAiBE,IAAAA,GAAAA,CAAIzC,SAAS,CAACwC,GAASC,CAAAA,IAAAA,GAAAA,KAAQ,IAAI,CAACloB,OAAO,IAAIioB,GAAIl+B,CAAAA,EAAE,EAAG;AAC3E,oBAAI,CAACq+B,KAAK,CAAC7jC,MAAAA,EAAQ2jC,GAAKD,EAAAA,GAAAA,CAAAA,CAAAA;aACnB;gBAKLlZ,6DAAKkZ,CAAAA,GAAAA,EAAKjoC,CAAAA,IAAQ;AAOhB,0BAAMqoC,OAAUL,GAAAA,aAAAA,IAAiB,IAAI,CAACG,mBAAmB,CAACnoC,IAAAA,CAAAA,CAAAA;AAC1D,wBAAI,CAACooC,KAAK,CAAC7jC,MAAAA,EAAQ8jC,OAASroC,EAAAA,IAAAA,CAAAA,CAAAA;AAC9B;aACD;AACH;AACF;AAIA,CACAooC,MAAM7jC,MAAM,EAAEiiB,QAAQ,EAAE8hB,SAAS,EAAE;AACjC,cAAMC,cAAcC,8DAAYjkC,CAAAA,MAAAA,CAAAA,CAAAA;QAChClF,6DAAKipC,CAAAA,SAAS,CAAC,QAAWC,GAAAA,WAAAA,CAAY,EAAE,EAAE,EAAED;QAC5C9hB,QAAQ,CAACjiB,OAAO,CAAC+jC,SAAAA,CAAAA,CAAAA;QACjBjpC,6DAAKipC,CAAAA,SAAS,CAAC,OAAUC,GAAAA,WAAAA,CAAY,EAAE,EAAE,EAAED;AAC7C;AAKAH,CAAAA,mBAAAA,CAAoB5pC,IAAI,EAAE;QACxB,IAAK,IAAIuB,CAAI,MAAGA,CAAI,OAAI,CAACqnC,gBAAgB,CAACtnC,MAAM,EAAEC,CAAK;AACrD,kBAAMooC,GAAM,OAAI,CAACf,gBAAgB,CAACrnC,CAAE;YACpC,IAAIooC,GAAAA,CAAIzC,SAAS,CAAClnC,IAAO;gBACvB,OAAO2pC,GAAAA,CAAAA;aACR;AACH;QAEA,OAAO,IAAI,CAACloB,OAAO;AACrB;AAIA,CACAynB,KAAK19B,EAAE,EAAEi+B,aAAa,EAAEzpC,IAAI,EAAE;QAC5B,MAAMyB,IAAAA,GAAOgoC,aAAcznC,CAAAA,GAAG,CAACwJ,EAAAA,CAAAA,CAAAA;AAC/B,YAAI/J,SAAS9B,SAAW;AACtB,kBAAM,IAAIyoB,KAAM,OAAM5c,EAAK,8BAA2BxL,OAAO,GAAK;SACnE;QACD,OAAOyB,IAAAA,CAAAA;AACT;AAEF,CAAC;AAGD,eAAe,gBAAgB,IAAIinC,QAAW;;ACtK/B,MAAMwB,aAAAA,CAAAA;IACnB7qC,WAAc;QACZ,IAAI,CAAC8qC,KAAK,GAAG,EAAE;AACjB;AAYAC,CAAAA,MAAAA,CAAOvqC,KAAK,EAAEwqC,IAAI,EAAE1yB,IAAI,EAAEtK,MAAM,EAAE;AAChC,YAAIg9B,SAAS,YAAc;YACzB,IAAI,CAACF,KAAK,GAAG,IAAI,CAACG,kBAAkB,CAACzqC,OAAO,IAAI;AAChD,gBAAI,CAACD,OAAO,CAAC,IAAI,CAACuqC,KAAK,EAAEtqC,KAAO;SACjC;AAED,cAAMuhB,WAAc/T,GAAAA,MAAAA,GAAS,IAAI,CAACk9B,YAAY,CAAC1qC,KAAAA,CAAAA,CAAOwN,MAAM,CAACA,MAAU,QAAI,CAACk9B,YAAY,CAAC1qC,KAAM;AAC/F,cAAMq4B,SAAS,IAAI,CAACt4B,OAAO,CAACwhB,WAAAA,EAAavhB,OAAOwqC,IAAM1yB,EAAAA,IAAAA,CAAAA,CAAAA;AAEtD,YAAI0yB,SAAS,cAAgB;AAC3B,gBAAI,CAACzqC,OAAO,CAACwhB,WAAAA,EAAavhB,KAAO;AACjC,gBAAI,CAACD,OAAO,CAAC,IAAI,CAACuqC,KAAK,EAAEtqC,KAAO;SACjC;QACD,OAAOq4B,MAAAA,CAAAA;AACT;AAKAt4B,CAAAA,OAAAA,CAAQwhB,WAAW,EAAEvhB,KAAK,EAAEwqC,IAAI,EAAE1yB,IAAI,EAAE;AACtCA,QAAAA,IAAAA,GAAOA,QAAQ,EAAC;QAChB,KAAK,MAAM6yB,cAAcppB,WAAa;YACpC,MAAMqpB,MAAAA,GAASD,WAAWC,MAAM;YAChC,MAAMzkC,MAAAA,GAASykC,MAAM,CAACJ,IAAK;AAC3B,kBAAMld,MAAS;AAACttB,gBAAAA,KAAAA;AAAO8X,gBAAAA,IAAAA;AAAM6yB,gBAAAA,UAAAA,CAAWnjC,OAAO;AAAC;YAChD,IAAIqjC,6DAAAA,CAAa1kC,QAAQmnB,MAAQsd,EAAAA,MAAAA,CAAAA,KAAY,KAAK,IAAI9yB,IAAAA,CAAKgzB,UAAU,EAAE;AACrE,uBAAO,KAAK;aACb;AACH;AAEA,eAAO,IAAI;AACb;IAEAC,UAAa;AAMX,YAAI,CAAClxB,6DAAAA,CAAc,IAAI,CAACrB,MAAM,CAAG;AAC/B,gBAAI,CAACwyB,SAAS,GAAG,IAAI,CAACxyB,MAAM;YAC5B,IAAI,CAACA,MAAM,GAAG1Y,SAAAA,CAAAA;SACf;AACH;AAMA4qC,CAAAA,YAAAA,CAAa1qC,KAAK,EAAE;QAClB,IAAI,IAAI,CAACwY,MAAM,EAAE;YACf,OAAO,IAAI,CAACA,MAAM;SACnB;QAED,MAAM+I,WAAAA,GAAc,IAAI,CAAC/I,MAAM,GAAG,IAAI,CAACiyB,kBAAkB,CAACzqC,KAAAA,CAAAA,CAAAA;QAE1D,IAAI,CAACirC,mBAAmB,CAACjrC,KAAAA,CAAAA,CAAAA;QAEzB,OAAOuhB,WAAAA,CAAAA;AACT;IAEAkpB,kBAAmBzqC,CAAAA,KAAK,EAAEuI,GAAG,EAAE;QAC7B,MAAMlC,MAAAA,GAASrG,KAASA,IAAAA,KAAAA,CAAMqG,MAAM;QACpC,MAAMmB,OAAAA,GAAUkJ,6DAAerK,CAAAA,MAAAA,CAAOmB,OAAO,IAAInB,OAAOmB,OAAO,CAACoa,OAAO,EAAE,EAAC;AAC1E,cAAMA,UAAUspB,UAAW7kC,CAAAA,MAAAA,CAAAA,CAAAA;QAE3B,OAAOmB,OAAAA,KAAY,KAAK,IAAI,CAACe,GAAAA,GAAM,EAAE,GAAG4iC,iBAAkBnrC,CAAAA,KAAAA,EAAO4hB,OAASpa,EAAAA,OAAAA,EAASe,GAAI;AACzF;AAMA0iC,CAAAA,mBAAAA,CAAoBjrC,KAAK,EAAE;AACzB,cAAMorC,mBAAsB,OAAI,CAACJ,SAAS,IAAI,EAAE;QAChD,MAAMzpB,WAAAA,GAAc,IAAI,CAAC/I,MAAM;QAC/B,MAAMuQ,IAAAA,GAAO,CAACjQ,CAAGpP,EAAAA,CAAAA,GAAMoP,EAAEtL,MAAM,CAACvE,CAAAA,CAAAA,GAAK,CAACS,CAAAA,CAAE2hC,IAAI,CAACniC,CAAAA,CAAKD,GAAAA,CAAAA,CAAE2hC,MAAM,CAACj/B,EAAE,KAAKzC,CAAAA,CAAE0hC,MAAM,CAACj/B,EAAE;AAC7E,YAAI,CAAC5L,OAAO,CAACgpB,IAAKqiB,CAAAA,mBAAAA,EAAqB7pB,cAAcvhB,KAAO;AAC5D,YAAI,CAACD,OAAO,CAACgpB,IAAKxH,CAAAA,WAAAA,EAAa6pB,sBAAsBprC,KAAO;AAC9D;AACF,CAAC;AAKD,UAASkrC,UAAW7kC,CAAAA,MAAM,EAAE;AAC1B,UAAMilC,WAAW,EAAC;AAClB,UAAM1pB,UAAU,EAAE;AAClB,UAAMhb,OAAOD,MAAOC,CAAAA,IAAI,CAACwhB,QAASxG,CAAAA,OAAO,CAACpgB,KAAK;AAC/C,QAAK,IAAIE,CAAI,MAAGA,IAAIkF,IAAKnF,CAAAA,MAAM,EAAEC,CAAK;AACpCkgB,QAAAA,OAAAA,CAAQlf,IAAI,CAAC0lB,QAAAA,CAASkhB,SAAS,CAAC1iC,IAAI,CAAClF,CAAE;AACzC;AAEA,UAAM6pC,KAAQllC,GAAAA,MAAAA,CAAOub,OAAO,IAAI,EAAE;AAClC,QAAK,IAAIlgB,CAAI,MAAGA,IAAI6pC,KAAM9pC,CAAAA,MAAM,EAAEC,CAAK;QACrC,MAAMkpC,MAAAA,GAASW,KAAK,CAAC7pC,CAAE;AAEvB,YAAIkgB,OAAQ/D,CAAAA,OAAO,CAAC+sB,MAAAA,CAAAA,KAAY,CAAC,CAAG;AAClChpB,YAAAA,OAAAA,CAAQlf,IAAI,CAACkoC,MAAAA,CAAAA,CAAAA;AACbU,YAAAA,QAAQ,CAACV,MAAAA,CAAOj/B,EAAE,CAAC,GAAG,IAAI;SAC3B;AACH;IAEA,OAAO;AAACiW,QAAAA,OAAAA;AAAS0pB,QAAAA,QAAAA;AAAQ;AAC3B;AAEA,SAASE,OAAQhkC,CAAAA,OAAO,EAAEe,GAAG,EAAE;AAC7B,QAAI,CAACA,GAAAA,IAAOf,OAAY,UAAK,EAAE;AAC7B,eAAO,IAAI;KACZ;IACD,IAAIA,OAAAA,KAAY,IAAI,EAAE;AACpB,eAAO,EAAC;KACT;IACD,OAAOA,OAAAA,CAAAA;AACT;AAEA,SAAS2jC,iBAAkBnrC,CAAAA,KAAK,EAAE,EAAC4hB,OAAO,GAAE0pB,QAAQ,GAAC,EAAE9jC,OAAO,EAAEe,GAAG,EAAE;AACnE,UAAM8vB,SAAS,EAAE;IACjB,MAAMjjB,OAAAA,GAAUpV,MAAM0S,UAAU;IAEhC,KAAK,MAAMk4B,UAAUhpB,OAAS;QAC5B,MAAMjW,EAAAA,GAAKi/B,OAAOj/B,EAAE;AACpB,cAAMhD,IAAO6iC,GAAAA,OAAAA,CAAQhkC,OAAO,CAACmE,GAAG,EAAEpD,GAAAA,CAAAA,CAAAA;QAClC,IAAII,IAAAA,KAAS,IAAI,EAAE;YACjB,SAAS;SACV;AACD0vB,QAAAA,MAAAA,CAAO31B,IAAI,CAAC;AACVkoC,YAAAA,MAAAA;YACApjC,OAASikC,EAAAA,UAAAA,CAAWzrC,KAAMqG,CAAAA,MAAM,EAAE;AAACukC,gBAAAA,MAAAA;gBAAQW,KAAOD,EAAAA,QAAQ,CAAC3/B,EAAG;AAAA,eAAGhD,IAAMyM,EAAAA,OAAAA,CAAAA;AACzE;AACF;IAEA,OAAOijB,MAAAA,CAAAA;AACT;AAEA,SAASoT,UAAWplC,CAAAA,MAAM,EAAE,EAACukC,MAAM,GAAEW,KAAK,GAAC,EAAE5iC,IAAI,EAAEyM,OAAO,EAAE;IAC1D,MAAMxO,IAAAA,GAAOP,MAAOqlC,CAAAA,eAAe,CAACd,MAAAA,CAAAA,CAAAA;AACpC,UAAMr4B,MAASlM,GAAAA,MAAAA,CAAOmM,eAAe,CAAC7J,IAAM/B,EAAAA,IAAAA,CAAAA,CAAAA;IAC5C,IAAI2kC,KAAAA,IAASX,MAAO/jC,CAAAA,QAAQ,EAAE;QAE5B0L,MAAO7P,CAAAA,IAAI,CAACkoC,MAAAA,CAAO/jC,QAAQ;KAC5B;AACD,WAAOR,MAAOoM,CAAAA,cAAc,CAACF,MAAAA,EAAQ6C,OAAS;AAAC;KAAG,EAAE;AAElDu2B,QAAAA,UAAAA,EAAY,KAAK;AACjBC,QAAAA,SAAAA,EAAW,KAAK;AAChBC,QAAAA,OAAAA,EAAS,IAAI;AACf;AACF;;AClLO,SAASC,YAAAA,CAAa3rC,IAAI,EAAEqH,OAAO,EAAE;AAC1C,UAAMukC,kBAAkBllC,yDAASyK,CAAAA,QAAQ,CAACnR,IAAAA,CAAK,IAAI,EAAC;AACpD,UAAM6rC,cAAiB,GAACxkC,CAAAA,OAAAA,CAAQ8J,QAAQ,IAAI,EAAC,EAAGnR,IAAK,KAAI,EAAC;IAC1D,OAAO6rC,cAAAA,CAAej7B,SAAS,IAAIvJ,OAAAA,CAAQuJ,SAAS,IAAIg7B,eAAAA,CAAgBh7B,SAAS,IAAI;AACvF,CAAC;AAED,SAASk7B,yBAA0BtgC,CAAAA,EAAE,EAAEoF,SAAS,EAAE;AAChD,QAAI7F,IAAOS,GAAAA,EAAAA,CAAAA;AACX,QAAIA,OAAO,SAAW;QACpBT,IAAO6F,GAAAA,SAAAA,CAAAA;KACF,UAAIpF,OAAO,SAAW;QAC3BT,IAAO6F,GAAAA,SAAAA,KAAc,GAAM,SAAM,GAAG;KACrC;IACD,OAAO7F,IAAAA,CAAAA;AACT;AAEA,SAASghC,yBAA0BhhC,CAAAA,IAAI,EAAE6F,SAAS,EAAE;IAClD,OAAO7F,IAAAA,KAAS6F,SAAY,eAAY,SAAS;AACnD;AAEA,SAASo7B,aAAAA,CAAcxgC,EAAE,EAAE;AACzB,QAAIA,EAAO,YAAOA,EAAO,YAAOA,OAAO,GAAK;QAC1C,OAAOA,EAAAA,CAAAA;KACR;AACH;AAEA,SAASygC,gBAAAA,CAAiBriB,QAAQ,EAAE;IAClC,IAAIA,QAAAA,KAAa,KAASA,IAAAA,QAAAA,KAAa,QAAU;QAC/C,OAAO;KACR;IACD,IAAIA,QAAAA,KAAa,MAAUA,IAAAA,QAAAA,KAAa,OAAS;QAC/C,OAAO;KACR;AACH;AAEO,SAASsiB,aAAc1gC,CAAAA,EAAE,EAAE,GAAG2gC,YAAY,EAAE;AACjD,QAAIH,cAAcxgC,EAAK;QACrB,OAAOA,EAAAA,CAAAA;KACR;IACD,KAAK,MAAMhD,QAAQ2jC,YAAc;AAC/B,cAAMphC,OAAOvC,IAAKuC,CAAAA,IAAI,IACjBkhC,gBAAAA,CAAiBzjC,KAAKohB,QAAQ,KAC9Bpe,EAAGlK,CAAAA,MAAM,GAAG,CAAK0qC,IAAAA,aAAAA,CAAcxgC,EAAE,CAAC,EAAE,CAAC4gC,WAAW;AACrD,YAAIrhC,IAAM;YACR,OAAOA,IAAAA,CAAAA;SACR;AACH;IACA,MAAM,IAAIqd,MAAM,CAAC,0BAA0B,EAAE5c,EAAG,oDAAmD,CAAC,CAAE;AACxG,CAAC;AAED,SAAS6gC,mBAAmB7gC,EAAE,EAAET,IAAI,EAAE2C,OAAO,EAAE;AAC7C,QAAIA,OAAO,CAAC3C,IAAO,YAAS,KAAKS,EAAI;QACnC,OAAO;AAACT,YAAAA,IAAAA;AAAI;KACb;AACH;AAEA,SAASuhC,wBAAyB9gC,CAAAA,EAAE,EAAEtF,MAAM,EAAE;AAC5C,QAAIA,OAAOwE,IAAI,IAAIxE,OAAOwE,IAAI,CAACyG,QAAQ,EAAE;AACvC,cAAMo7B,UAAUrmC,MAAOwE,CAAAA,IAAI,CAACyG,QAAQ,CAAC9D,MAAM,CAAC,CAACm/B,CAAAA,GAAMA,EAAEl8B,OAAO,KAAK9E,EAAMghC,IAAAA,CAAAA,CAAE/7B,OAAO,KAAKjF,EAAAA,CAAAA,CAAAA;QACrF,IAAI+gC,OAAAA,CAAQjrC,MAAM,EAAE;AAClB,mBAAO+qC,kBAAmB7gC,CAAAA,EAAAA,EAAI,GAAK+gC,EAAAA,OAAO,CAAC,EAAE,CAAKF,IAAAA,kBAAAA,CAAmB7gC,EAAI,OAAK+gC,OAAO,CAAC,CAAE;SACzF;KACF;AACD,WAAO,EAAC;AACV;AAEA,SAASE,gBAAiBvmC,CAAAA,MAAM,EAAEmB,OAAO,EAAE;AACzC,UAAMqlC,gBAAgBvwB,0DAAS,CAACjW,MAAOlG,CAAAA,IAAI,CAAC,IAAI;AAACoN,QAAAA,MAAAA,EAAQ,EAAC;AAAC;AAC3D,UAAMu/B,YAAetlC,GAAAA,OAAAA,CAAQ+F,MAAM,IAAI,EAAC;AACxC,UAAMw/B,cAAiBjB,GAAAA,YAAAA,CAAazlC,MAAOlG,CAAAA,IAAI,EAAEqH,OAAAA,CAAAA,CAAAA;AACjD,UAAM+F,MAAS5G,GAAAA,MAAAA,CAAOygC,MAAM,CAAC,IAAI;AAGjCzgC,IAAAA,MAAAA,CAAOC,IAAI,CAACkmC,YAAAA,CAAAA,CAActsC,OAAO,CAACmL,CAAAA,EAAM;QACtC,MAAMqhC,SAAAA,GAAYF,YAAY,CAACnhC,EAAG;QAClC,IAAI,CAAClF,6DAAQA,CAACumC,SAAY;AACxB,mBAAO78B,QAAQ88B,KAAK,CAAC,CAAC,uCAAuC,EAAEthC,GAAG,CAAC;SACpE;QACD,IAAIqhC,SAAAA,CAAUE,MAAM,EAAE;AACpB,mBAAO/8B,QAAQC,IAAI,CAAC,CAAC,+CAA+C,EAAEzE,GAAG,CAAC;SAC3E;AACD,cAAMT,IAAOmhC,GAAAA,aAAAA,CAAc1gC,EAAIqhC,EAAAA,SAAAA,EAAWP,wBAAyB9gC,CAAAA,EAAAA,EAAItF,MAASQ,CAAAA,EAAAA,yDAAAA,CAAS0G,MAAM,CAACy/B,SAAU7sC,CAAAA,IAAI,CAAC;QAC/G,MAAMgtC,SAAAA,GAAYjB,0BAA0BhhC,IAAM6hC,EAAAA,cAAAA,CAAAA,CAAAA;AAClD,cAAMK,mBAAsBP,GAAAA,aAAAA,CAAct/B,MAAM,IAAI,EAAC;QACrDA,MAAM,CAAC5B,GAAG,GAAG0hC,8DAAAA,CAAQ1mC,OAAOygC,MAAM,CAAC,IAAI,CAAG;AAAC;AAACl8B,gBAAAA,IAAAA;AAAI;AAAG8hC,YAAAA,SAAAA;AAAWI,YAAAA,mBAAmB,CAACliC,IAAK;AAAEkiC,YAAAA,mBAAmB,CAACD,SAAU;AAAC;AAC1H;AAGA9mC,IAAAA,MAAAA,CAAOwE,IAAI,CAACyG,QAAQ,CAAC9Q,OAAO,CAACqN,CAAAA,OAAW;AACtC,cAAM1N,IAAO0N,GAAAA,OAAAA,CAAQ1N,IAAI,IAAIkG,OAAOlG,IAAI;AACxC,cAAM4Q,SAAYlD,GAAAA,OAAAA,CAAQkD,SAAS,IAAI+6B,aAAa3rC,IAAMqH,EAAAA,OAAAA,CAAAA,CAAAA;AAC1D,cAAMukC,eAAkBzvB,GAAAA,0DAAS,CAACnc,IAAAA,CAAK,IAAI,EAAC;AAC5C,cAAMitC,mBAAsBrB,GAAAA,eAAAA,CAAgBx+B,MAAM,IAAI,EAAC;AACvD5G,QAAAA,MAAAA,CAAOC,IAAI,CAACwmC,mBAAAA,CAAAA,CAAqB5sC,OAAO,CAAC8sC,CAAAA,SAAa;YACpD,MAAMpiC,IAAAA,GAAO+gC,0BAA0BqB,SAAWv8B,EAAAA,SAAAA,CAAAA,CAAAA;AAClD,kBAAMpF,EAAKkC,GAAAA,OAAO,CAAC3C,IAAAA,GAAO,SAAS,IAAIA,IAAAA,CAAAA;YACvCqC,MAAM,CAAC5B,EAAG,IAAG4B,MAAM,CAAC5B,GAAG,IAAIhF,MAAAA,CAAOygC,MAAM,CAAC,IAAI;YAC7CiG,8DAAQ9/B,CAAAA,MAAM,CAAC5B,EAAAA,CAAG,EAAE;AAAC;AAACT,oBAAAA,IAAAA;AAAI;AAAG4hC,gBAAAA,YAAY,CAACnhC,EAAG;AAAEyhC,gBAAAA,mBAAmB,CAACE,SAAU;AAAC;AAChF;AACF;AAGA3mC,IAAAA,MAAAA,CAAOC,IAAI,CAAC2G,MAAAA,CAAAA,CAAQ/M,OAAO,CAACyG,CAAAA,GAAO;QACjC,MAAMwB,KAAAA,GAAQ8E,MAAM,CAACtG,GAAI;AACzBomC,QAAAA,8DAAAA,CAAQ5kC,KAAO;AAAC5B,YAAAA,yDAAAA,CAAS0G,MAAM,CAAC9E,KAAMtI,CAAAA,IAAI,CAAC;AAAE0G,YAAAA,yDAAAA,CAAS4B,KAAK;AAAC;AAC9D;IAEA,OAAO8E,MAAAA,CAAAA;AACT;AAEA,SAASggC,WAAAA,CAAYlnC,MAAM,EAAE;IAC3B,MAAMmB,OAAAA,GAAUnB,OAAOmB,OAAO,KAAKnB,MAAOmB,CAAAA,OAAO,GAAG,EAAC;AAErDA,IAAAA,OAAAA,CAAQoa,OAAO,GAAGlR,6DAAAA,CAAelJ,OAAQoa,CAAAA,OAAO,EAAE,EAAC;IACnDpa,OAAQ+F,CAAAA,MAAM,GAAGq/B,gBAAAA,CAAiBvmC,MAAQmB,EAAAA,OAAAA,CAAAA,CAAAA;AAC5C;AAEA,SAASgmC,QAAAA,CAAS3iC,IAAI,EAAE;AACtBA,IAAAA,IAAAA,GAAOA,QAAQ,EAAC;AAChBA,IAAAA,IAAAA,CAAKyG,QAAQ,GAAGzG,IAAKyG,CAAAA,QAAQ,IAAI,EAAE;AACnCzG,IAAAA,IAAAA,CAAKwI,MAAM,GAAGxI,IAAKwI,CAAAA,MAAM,IAAI,EAAE;IAC/B,OAAOxI,IAAAA,CAAAA;AACT;AAEA,SAAS4iC,UAAAA,CAAWpnC,MAAM,EAAE;AAC1BA,IAAAA,MAAAA,GAASA,UAAU,EAAC;AACpBA,IAAAA,MAAAA,CAAOwE,IAAI,GAAG2iC,QAASnnC,CAAAA,MAAAA,CAAOwE,IAAI;IAElC0iC,WAAYlnC,CAAAA,MAAAA,CAAAA,CAAAA;IAEZ,OAAOA,MAAAA,CAAAA;AACT;AAEA,MAAMqnC,WAAW,IAAI/tC,GAAAA,EAAAA,CAAAA;AACrB,MAAMguC,aAAa,IAAIC,GAAAA,EAAAA,CAAAA;AAEvB,SAASC,UAAWr4B,CAAAA,QAAQ,EAAEs4B,QAAQ,EAAE;IACtC,IAAIlnC,IAAAA,GAAO8mC,QAASvrC,CAAAA,GAAG,CAACqT,QAAAA,CAAAA,CAAAA;AACxB,QAAI,CAAC5O,IAAM;QACTA,IAAOknC,GAAAA,QAAAA,EAAAA,CAAAA;QACPJ,QAASprC,CAAAA,GAAG,CAACkT,QAAU5O,EAAAA,IAAAA,CAAAA,CAAAA;AACvB+mC,QAAAA,UAAAA,CAAWhrC,GAAG,CAACiE,IAAAA,CAAAA,CAAAA;KAChB;IACD,OAAOA,IAAAA,CAAAA;AACT;AAEA,MAAMmnC,UAAa,IAACzrC,GAAKsa,EAAAA,GAAAA,EAAK3V,GAAQ;IACpC,MAAM0B,IAAAA,GAAO+K,6DAAgBA,CAACkJ,GAAK3V,EAAAA,GAAAA,CAAAA,CAAAA;AACnC,QAAI0B,SAAS7I,SAAW;AACtBwC,QAAAA,GAAAA,CAAIK,GAAG,CAACgG,IAAAA,CAAAA,CAAAA;KACT;AACH;AAEe,MAAMqlC,MAAAA,CAAAA;AACnBxuC,IAAAA,WAAAA,CAAY6G,MAAM,CAAE;QAClB,IAAI,CAAC4nC,OAAO,GAAGR,UAAWpnC,CAAAA,MAAAA,CAAAA,CAAAA;QAC1B,IAAI,CAAC6nC,WAAW,GAAG,IAAIvuC,GAAAA,EAAAA,CAAAA;QACvB,IAAI,CAACwuC,cAAc,GAAG,IAAIxuC,GAAAA,EAAAA,CAAAA;AAC5B;AAEA,QAAIyuC,QAAW;AACb,eAAO,IAAI,CAACH,OAAO,CAACG,QAAQ;AAC9B;AAEA,QAAIjuC,IAAO;AACT,eAAO,IAAI,CAAC8tC,OAAO,CAAC9tC,IAAI;AAC1B;IAEA,IAAIA,IAAAA,CAAKA,IAAI,EAAE;AACb,YAAI,CAAC8tC,OAAO,CAAC9tC,IAAI,GAAGA,IAAAA,CAAAA;AACtB;AAEA,QAAI0K,IAAO;AACT,eAAO,IAAI,CAACojC,OAAO,CAACpjC,IAAI;AAC1B;IAEA,IAAIA,IAAAA,CAAKA,IAAI,EAAE;AACb,YAAI,CAACojC,OAAO,CAACpjC,IAAI,GAAG2iC,QAAS3iC,CAAAA,IAAAA,CAAAA,CAAAA;AAC/B;AAEA,QAAIrD,OAAU;AACZ,eAAO,IAAI,CAACymC,OAAO,CAACzmC,OAAO;AAC7B;IAEA,IAAIA,OAAAA,CAAQA,OAAO,EAAE;AACnB,YAAI,CAACymC,OAAO,CAACzmC,OAAO,GAAGA,OAAAA,CAAAA;AACzB;AAEA,QAAIoa,OAAU;AACZ,eAAO,IAAI,CAACqsB,OAAO,CAACrsB,OAAO;AAC7B;IAEAlc,MAAS;QACP,MAAMW,MAAAA,GAAS,IAAI,CAAC4nC,OAAO;AAC3B,YAAI,CAACI,UAAU;QACfd,WAAYlnC,CAAAA,MAAAA,CAAAA,CAAAA;AACd;IAEAgoC,UAAa;QACX,IAAI,CAACH,WAAW,CAACI,KAAK;QACtB,IAAI,CAACH,cAAc,CAACG,KAAK;AAC3B;AAQAh8B,CAAAA,gBAAAA,CAAiBi8B,WAAW,EAAE;QAC5B,OAAOV,UAAAA,CAAWU,aAChB,IAAM;AAAC;oBACL,CAAC,SAAS,EAAEA,WAAAA,CAAY,CAAC;AACzB;AACD;AAAC;AACN;AAQC,CACDr4B,yBAA0Bq4B,CAAAA,WAAW,EAAEt4B,UAAU,EAAE;QACjD,OAAO43B,UAAAA,CAAW,CAAC,EAAEU,WAAAA,CAAY,YAAY,EAAEt4B,UAAAA,CAAW,CAAC,EACzD,IAAM;AACJ;AACE,qBAAC,SAAS,EAAEs4B,WAAAA,CAAY,aAAa,EAAEt4B,WAAW,CAAC;oBACnD,CAAC,YAAY,EAAEA,UAAAA,CAAW,CAAC;AAC5B;AAED;oBACE,CAAC,SAAS,EAAEs4B,WAAAA,CAAY,CAAC;AACzB;AACD;AACF;AACL;AASC,CACD54B,uBAAwB44B,CAAAA,WAAW,EAAEj5B,WAAW,EAAE;QAChD,OAAOu4B,UAAAA,CAAW,CAAC,EAAEU,WAAAA,CAAY,CAAC,EAAEj5B,WAAAA,CAAY,CAAC,EAC/C,IAAM;AAAC;AACL,qBAAC,SAAS,EAAEi5B,WAAAA,CAAY,UAAU,EAAEj5B,YAAY,CAAC;oBACjD,CAAC,SAAS,EAAEi5B,WAAAA,CAAY,CAAC;oBACzB,CAAC,SAAS,EAAEj5B,WAAAA,CAAY,CAAC;AACzB;AACD;AAAC;AACN;AAOAo2B,CAAAA,eAAAA,CAAgBd,MAAM,EAAE;QACtB,MAAMj/B,EAAAA,GAAKi/B,OAAOj/B,EAAE;QACpB,MAAMxL,IAAAA,GAAO,IAAI,CAACA,IAAI;QACtB,OAAO0tC,UAAAA,CAAW,CAAC,EAAE1tC,IAAAA,CAAK,QAAQ,EAAEwL,EAAAA,CAAG,CAAC,EACtC,IAAM;AAAC;oBACL,CAAC,QAAQ,EAAEA,EAAAA,CAAG,CAAC;uBACZi/B,MAAO4D,CAAAA,sBAAsB,IAAI,EAAE;AACvC;AAAC;AACN;AAIC,CACDC,aAAcC,CAAAA,SAAS,EAAEC,UAAU,EAAE;QACnC,MAAMT,WAAAA,GAAc,IAAI,CAACA,WAAW;QACpC,IAAI34B,KAAAA,GAAQ24B,WAAY/rC,CAAAA,GAAG,CAACusC,SAAAA,CAAAA,CAAAA;QAC5B,IAAI,CAACn5B,SAASo5B,UAAY;AACxBp5B,YAAAA,KAAAA,GAAQ,IAAI5V,GAAAA,EAAAA,CAAAA;YACZuuC,WAAY5rC,CAAAA,GAAG,CAACosC,SAAWn5B,EAAAA,KAAAA,CAAAA,CAAAA;SAC5B;QACD,OAAOA,KAAAA,CAAAA;AACT;AAOC,CACD/C,gBAAgBk8B,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;AAC/C,cAAM,EAACnnC,OAAO,GAAErH,IAAI,GAAC,GAAG,IAAI;AAC5B,cAAMoV,KAAQ,OAAI,CAACk5B,aAAa,CAACC,SAAWC,EAAAA,UAAAA,CAAAA,CAAAA;QAC5C,MAAMrgC,MAAAA,GAASiH,KAAMpT,CAAAA,GAAG,CAACysC,QAAAA,CAAAA,CAAAA;AACzB,YAAItgC,MAAQ;YACV,OAAOA,MAAAA,CAAAA;SACR;AAED,cAAMiE,SAAS,IAAIq7B,GAAAA,EAAAA,CAAAA;QAEnBgB,QAASpuC,CAAAA,OAAO,CAACoG,CAAAA,IAAQ;AACvB,gBAAI8nC,SAAW;AACbn8B,gBAAAA,MAAAA,CAAO5P,GAAG,CAAC+rC,SAAAA,CAAAA,CAAAA;AACX9nC,gBAAAA,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAO8mC,GAAAA,UAAAA,CAAWx7B,QAAQm8B,SAAWznC,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;aACnD;AACDL,YAAAA,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAO8mC,GAAAA,UAAAA,CAAWx7B,QAAQ/K,OAASP,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;YAChDL,IAAKpG,CAAAA,OAAO,CAACyG,CAAAA,GAAO8mC,GAAAA,UAAAA,CAAWx7B,MAAQ+J,EAAAA,0DAAS,CAACnc,IAAAA,CAAK,IAAI,EAAI8G,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAC9DL,YAAAA,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAO8mC,GAAAA,UAAAA,CAAWx7B,QAAQ1L,yDAAUI,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AACjDL,YAAAA,IAAAA,CAAKpG,OAAO,CAACyG,CAAAA,GAAO8mC,GAAAA,UAAAA,CAAWx7B,QAAQgP,0DAAata,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AACtD;QAEA,MAAMolB,KAAAA,GAAQhhB,KAAM5H,CAAAA,IAAI,CAAC8O,MAAAA,CAAAA,CAAAA;QACzB,IAAI8Z,KAAAA,CAAM5qB,MAAM,KAAK,CAAG;AACtB4qB,YAAAA,KAAAA,CAAM3pB,IAAI,CAACiE,MAAOygC,CAAAA,MAAM,CAAC,IAAI;SAC9B;QACD,IAAIuG,UAAAA,CAAW/qC,GAAG,CAACgsC,QAAW;YAC5Br5B,KAAMjT,CAAAA,GAAG,CAACssC,QAAUviB,EAAAA,KAAAA,CAAAA,CAAAA;SACrB;QACD,OAAOA,KAAAA,CAAAA;AACT;AAKC,CACDwiB,iBAAoB;AAClB,cAAM,EAACrnC,OAAO,GAAErH,IAAI,GAAC,GAAG,IAAI;QAE5B,OAAO;AACLqH,YAAAA,OAAAA;YACA8U,0DAAS,CAACnc,IAAK,KAAI,EAAC;AACpB0G,YAAAA,yDAAAA,CAASyK,QAAQ,CAACnR,IAAK,KAAI,EAAC;AAC5B;AAACA,gBAAAA,IAAAA;AAAI;AACL0G,YAAAA,yDAAAA;AACA0a,YAAAA,0DAAAA;AACD;AACH;AAQC,CACDzL,oBAAoBvD,MAAM,EAAEsD,KAAK,EAAET,OAAO,EAAEQ,QAAW;AAAC;KAAG,EAAE;AAC3D,cAAMyiB,MAAS;AAACzwB,YAAAA,OAAAA,EAAS,IAAI;AAAA;QAC7B,MAAM,EAACknC,QAAQ,GAAEC,WAAW,GAAC,GAAGC,WAAAA,CAAY,IAAI,CAACb,cAAc,EAAE57B,MAAQqD,EAAAA,QAAAA,CAAAA,CAAAA;AACzE,YAAIpO,OAAUsnC,GAAAA,QAAAA,CAAAA;QACd,IAAIG,WAAAA,CAAYH,UAAUj5B,KAAQ;YAChCwiB,MAAOzwB,CAAAA,OAAO,GAAG,KAAK;YACtBwN,OAAU85B,GAAAA,8DAAAA,CAAW95B,OAAWA,CAAAA,GAAAA,OAAAA,EAAAA,GAAYA,OAAO;AAEnD,kBAAM+5B,cAAc,IAAI,CAAC18B,cAAc,CAACF,QAAQ6C,OAAS25B,EAAAA,WAAAA,CAAAA,CAAAA;YACzDvnC,OAAU4nC,GAAAA,8DAAAA,CAAeN,UAAU15B,OAAS+5B,EAAAA,WAAAA,CAAAA,CAAAA;SAC7C;QAED,KAAK,MAAM5qC,QAAQsR,KAAO;AACxBwiB,YAAAA,MAAM,CAAC9zB,IAAAA,CAAK,GAAGiD,OAAO,CAACjD,IAAK;AAC9B;QACA,OAAO8zB,MAAAA,CAAAA;AACT;AAOC,CACD5lB,cAAeF,CAAAA,MAAM,EAAE6C,OAAO,EAAEQ,QAAW;AAAC;AAAG,OAAEy5B,kBAAkB,EAAE;QACnE,MAAM,EAACP,WAAS,GAAGE,YAAY,IAAI,CAACb,cAAc,EAAE57B,MAAQqD,EAAAA,QAAAA,CAAAA,CAAAA;AAC5D,eAAOnP,6DAAQA,CAAC2O,OACZg6B,CAAAA,GAAAA,8DAAAA,CAAeN,UAAU15B,OAAStV,EAAAA,SAAAA,EAAWuvC,sBAC7CP,QAAQ;AACd;AACF,CAAC;AAED,SAASE,YAAYM,aAAa,EAAE/8B,MAAM,EAAEqD,QAAQ,EAAE;IACpD,IAAIL,KAAAA,GAAQ+5B,aAAcntC,CAAAA,GAAG,CAACoQ,MAAAA,CAAAA,CAAAA;AAC9B,QAAI,CAACgD,KAAO;AACVA,QAAAA,KAAAA,GAAQ,IAAI5V,GAAAA,EAAAA,CAAAA;QACZ2vC,aAAchtC,CAAAA,GAAG,CAACiQ,MAAQgD,EAAAA,KAAAA,CAAAA,CAAAA;KAC3B;IACD,MAAMC,QAAAA,GAAWI,SAAS4yB,IAAI;IAC9B,IAAIl6B,MAAAA,GAASiH,KAAMpT,CAAAA,GAAG,CAACqT,QAAAA,CAAAA,CAAAA;AACvB,QAAI,CAAClH,MAAQ;QACX,MAAMwgC,QAAAA,GAAWS,8DAAeA,CAACh9B,MAAQqD,EAAAA,QAAAA,CAAAA,CAAAA;QACzCtH,MAAS;AACPwgC,YAAAA,QAAAA;YACAC,WAAan5B,EAAAA,QAAAA,CAASpI,MAAM,CAACgiC,CAAAA,CAAAA,GAAK,CAACA,CAAEjD,CAAAA,WAAW,EAAGrf,CAAAA,QAAQ,CAAC;AAC9D;QACA3X,KAAMjT,CAAAA,GAAG,CAACkT,QAAUlH,EAAAA,MAAAA,CAAAA,CAAAA;KACrB;IACD,OAAOA,MAAAA,CAAAA;AACT;AAEA,MAAMmhC,cAAcvnC,CAAAA,KAAAA,GAASzB,6DAASyB,CAAAA,KAAAA,CAAAA,IACjCvB,OAAOK,mBAAmB,CAACkB,KAAOmjC,CAAAA,CAAAA,IAAI,CAAC,CAACpkC,GAAAA,GAAQioC,8DAAWhnC,CAAAA,KAAK,CAACjB,GAAI;AAE1E,SAASgoC,WAAYzZ,CAAAA,KAAK,EAAE3f,KAAK,EAAE;AACjC,UAAM,EAAC65B,YAAY,GAAEC,WAAW,GAAC,GAAGjF,8DAAalV,CAAAA,KAAAA,CAAAA,CAAAA;IAEjD,KAAK,MAAMjxB,QAAQsR,KAAO;AACxB,cAAM81B,aAAa+D,YAAanrC,CAAAA,IAAAA,CAAAA,CAAAA;AAChC,cAAMqnC,YAAY+D,WAAYprC,CAAAA,IAAAA,CAAAA,CAAAA;QAC9B,MAAM2D,KAAAA,GAAQ,CAAC0jC,SAAAA,IAAaD,UAAS,KAAMnW,KAAK,CAACjxB,IAAK;QACtD,IAAKonC,UAAeuD,KAAAA,8DAAWhnC,CAAAA,KAAAA,CAAAA,IAAUunC,YAAYvnC,KAAK,MACpD0jC,SAAazkC,IAAAA,6DAAAA,CAAQe,KAAS;AAClC,mBAAO,IAAI;SACZ;AACH;AACA,WAAO,KAAK;AACd;;;;AC7YA,MAAM0nC,eAAkB;AAAC;AAAO;AAAU;AAAQ;AAAS;AAAY;AACvE,SAASC,oBAAqB9lB,CAAAA,QAAQ,EAAE7e,IAAI,EAAE;IAC5C,OAAO6e,QAAAA,KAAa,KAASA,IAAAA,QAAAA,KAAa,QAAa6lB,IAAAA,eAAAA,CAAgB/xB,OAAO,CAACkM,QAAAA,CAAAA,KAAc,CAAC,KAAK7e,IAAS;AAC9G;AAEA,SAAS4kC,aAAcC,CAAAA,EAAE,EAAEC,EAAE,EAAE;AAC7B,WAAO,SAASl3B,CAAC,EAAEpP,CAAC,EAAE;QACpB,OAAOoP,CAAC,CAACi3B,EAAG,MAAKrmC,CAAC,CAACqmC,EAAAA,CAAG,GAClBj3B,CAAC,CAACk3B,EAAAA,CAAG,GAAGtmC,CAAC,CAACsmC,GAAG,GACbl3B,CAAC,CAACi3B,EAAG,IAAGrmC,CAAC,CAACqmC,EAAG;AACnB;AACF;AAEA,SAASE,oBAAAA,CAAqB76B,OAAO,EAAE;IACrC,MAAMpV,KAAAA,GAAQoV,QAAQpV,KAAK;AAC3B,UAAM0G,gBAAmB1G,GAAAA,KAAAA,CAAMwH,OAAO,CAACV,SAAS;AAEhD9G,IAAAA,KAAAA,CAAMs+B,aAAa,CAAC;IACpBuM,6DAAankC,CAAAA,gBAAAA,IAAoBA,gBAAiBwpC,CAAAA,UAAU,EAAE;AAAC96B,QAAAA,OAAAA;KAAQ,EAAEpV,KAAAA,CAAAA,CAAAA;AAC3E;AAEA,SAASmwC,mBAAAA,CAAoB/6B,OAAO,EAAE;IACpC,MAAMpV,KAAAA,GAAQoV,QAAQpV,KAAK;AAC3B,UAAM0G,gBAAmB1G,GAAAA,KAAAA,CAAMwH,OAAO,CAACV,SAAS;IAChD+jC,6DAAankC,CAAAA,gBAAAA,IAAoBA,gBAAiB0pC,CAAAA,UAAU,EAAE;AAACh7B,QAAAA,OAAAA;KAAQ,EAAEpV,KAAAA,CAAAA,CAAAA;AAC3E;AAMA,UAASqwC,SAAUzuC,CAAAA,IAAI,EAAE;IACvB,IAAIu0B,6DAAAA,EAAAA,IAAqB,OAAOv0B,IAAAA,KAAS,QAAU;QACjDA,IAAOqyB,GAAAA,QAAAA,CAASqc,cAAc,CAAC1uC,IAAAA,CAAAA,CAAAA;AACjC,WAAO,IAAIA,IAAAA,IAAQA,IAAKH,CAAAA,MAAM,EAAE;QAE9BG,IAAOA,GAAAA,IAAI,CAAC,CAAE;KACf;IAED,IAAIA,IAAAA,IAAQA,IAAKovB,CAAAA,MAAM,EAAE;AAEvBpvB,QAAAA,IAAAA,GAAOA,KAAKovB,MAAM;KACnB;IACD,OAAOpvB,IAAAA,CAAAA;AACT;AAEA,MAAM2uC,YAAY,EAAC;AACnB,MAAMC,QAAAA,GAAW,CAACvpC,GAAQ;AACxB,UAAM+pB,SAASqf,SAAUppC,CAAAA,GAAAA,CAAAA,CAAAA;AACzB,WAAON,MAAOW,CAAAA,MAAM,CAACipC,SAAAA,CAAAA,CAAW/iC,MAAM,CAAC,CAACijC,CAAAA,GAAMA,CAAEzf,CAAAA,MAAM,KAAKA,MAAAA,CAAAA,CAAQhvB,GAAG;AACxE;AAEA,SAAS0uC,gBAAgB9zB,GAAG,EAAE9b,KAAK,EAAE0W,IAAI,EAAE;IACzC,MAAM5Q,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACgW,GAAAA,CAAAA,CAAAA;IACzB,KAAK,MAAM3V,OAAOL,IAAM;AACtB,cAAM+pC,SAAS,CAAC1pC,GAAAA,CAAAA;AAChB,YAAI0pC,UAAU7vC,KAAO;YACnB,MAAMoH,KAAAA,GAAQ0U,GAAG,CAAC3V,GAAI;YACtB,OAAO2V,GAAG,CAAC3V,GAAI;YACf,IAAIuQ,IAAAA,GAAO,CAAKm5B,IAAAA,MAAAA,GAAS7vC,KAAO;gBAC9B8b,GAAG,CAAC+zB,MAASn5B,GAAAA,IAAAA,CAAK,GAAGtP,KAAAA,CAAAA;aACtB;SACF;AACH;AACF;AASA,UAAS0oC,mBAAmBjuB,CAAC,EAAEkuB,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;AAC9D,QAAI,CAACD,WAAAA,IAAenuB,CAAExiB,CAAAA,IAAI,KAAK,UAAY;AACzC,eAAO,IAAI;KACZ;AACD,QAAI4wC,OAAS;QACX,OAAOF,SAAAA,CAAAA;KACR;IACD,OAAOluB,CAAAA,CAAAA;AACT;AAEA,SAASquB,eAAevoC,KAAK,EAAEsM,SAAS,EAAEk8B,KAAK,EAAE;IAC/C,OAAOxoC,KAAAA,CAAMjB,OAAO,CAACoN,IAAI,GAAGnM,KAAK,CAACwoC,KAAM,IAAGl8B,SAAS,CAACk8B,KAAM;AAC7D;AAEA,SAASC,cAAepmC,CAAAA,IAAI,EAAEiK,SAAS,EAAE;AACvC,UAAM,EAAChM,MAAAA,GAAQC,MAAAA,GAAO,GAAG8B,IAAAA,CAAAA;AACzB,QAAI/B,UAAUC,MAAQ;QACpB,OAAO;YACLM,IAAM0nC,EAAAA,cAAAA,CAAejoC,QAAQgM,SAAW;YACxC3L,KAAO4nC,EAAAA,cAAAA,CAAejoC,QAAQgM,SAAW;YACzC5L,GAAK6nC,EAAAA,cAAAA,CAAehoC,QAAQ+L,SAAW;YACvC1L,MAAQ2nC,EAAAA,cAAAA,CAAehoC,QAAQ+L,SAAW;AAC5C;KACD;IACD,OAAOA,SAAAA,CAAAA;AACT;AAEA,MAAMo8B,KAAAA,CAAAA;AAEJ,WAAOtqC,WAAWA,yDAAS;AAC3B,WAAO0pC,YAAYA,SAAU;AAC7B,WAAOj0B,YAAYA,0DAAU;AAC7B,WAAO8L,WAAWA,QAAS;AAC3B,WAAOgpB,UAAUA,OAAQ;AACzB,WAAOZ,WAAWA,QAAS;IAE3B,OAAOjJ,QAAAA,CAAS,GAAG/lC,KAAK,EAAE;AACxB4mB,QAAAA,QAAAA,CAASzlB,GAAG,CAAInB,GAAAA,KAAAA,CAAAA,CAAAA;AAChB6vC,QAAAA,iBAAAA,EAAAA,CAAAA;AACF;IAEA,OAAOxJ,UAAAA,CAAW,GAAGrmC,KAAK,EAAE;AAC1B4mB,QAAAA,QAAAA,CAAShlB,MAAM,CAAI5B,GAAAA,KAAAA,CAAAA,CAAAA;AACnB6vC,QAAAA,iBAAAA,EAAAA,CAAAA;AACF;IAGA7xC,WAAYoC,CAAAA,IAAI,EAAE0vC,UAAU,CAAE;AAC5B,cAAMjrC,SAAS,IAAI,CAACA,MAAM,GAAG,IAAI2nC,MAAOsD,CAAAA,UAAAA,CAAAA,CAAAA;AACxC,cAAMC,gBAAgBlB,SAAUzuC,CAAAA,IAAAA,CAAAA,CAAAA;AAChC,cAAM4vC,gBAAgBhB,QAASe,CAAAA,aAAAA,CAAAA,CAAAA;AAC/B,YAAIC,aAAe;AACjB,kBAAM,IAAIjpB,KAAAA,CACR,4CAA+CipB,GAAAA,aAAAA,CAAc7lC,EAAE,GAAG,IACtE,uDAAoD6lC,aAAcxgB,CAAAA,MAAM,CAACrlB,EAAE,GAAG,mBAC1E;SACH;QAED,MAAMnE,OAAAA,GAAUnB,OAAOoM,cAAc,CAACpM,OAAOwoC,iBAAiB,IAAI,IAAI,CAACn8B,UAAU;QAEjF,IAAI,CAAC07B,QAAQ,GAAG,KAAK/nC,MAAO+nC,CAAAA,QAAQ,IAAIlY,eAAAA,CAAgBqb,aAAa;AACrE,YAAI,CAACnD,QAAQ,CAAC5c,YAAY,CAACnrB,MAAAA,CAAAA,CAAAA;QAE3B,MAAM+O,OAAAA,GAAU,IAAI,CAACg5B,QAAQ,CAACrd,cAAc,CAACwgB,aAAe/pC,EAAAA,OAAAA,CAAQma,WAAW;QAC/E,MAAMqP,MAAAA,GAAS5b,OAAWA,IAAAA,OAAAA,CAAQ4b,MAAM;QACxC,MAAM1T,MAAAA,GAAS0T,MAAUA,IAAAA,MAAAA,CAAO1T,MAAM;QACtC,MAAMC,KAAAA,GAAQyT,MAAUA,IAAAA,MAAAA,CAAOzT,KAAK;QAEpC,IAAI,CAAC5R,EAAE,GAAG8lC,8DAAAA,EAAAA,CAAAA;QACV,IAAI,CAACziC,GAAG,GAAGoG,OAAAA,CAAAA;QACX,IAAI,CAAC4b,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACzT,KAAK,GAAGA,KAAAA,CAAAA;QACb,IAAI,CAACD,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACo0B,QAAQ,GAAGlqC,OAAAA,CAAAA;AAIhB,YAAI,CAACmqC,YAAY,GAAG,IAAI,CAAChwB,WAAW;QACpC,IAAI,CAACwO,OAAO,GAAG,EAAE;QACjB,IAAI,CAACyhB,SAAS,GAAG,EAAE;QACnB,IAAI,CAAC9kC,OAAO,GAAGhN,SAAAA,CAAAA;QACf,IAAI,CAAC8sB,KAAK,GAAG,EAAE;QACf,IAAI,CAAC+H,uBAAuB,GAAG70B,SAAAA,CAAAA;QAC/B,IAAI,CAACiV,SAAS,GAAGjV,SAAAA,CAAAA;QACjB,IAAI,CAAC+B,OAAO,GAAG,EAAE;QACjB,IAAI,CAACgwC,UAAU,GAAG/xC,SAAAA,CAAAA;QAClB,IAAI,CAACgyC,UAAU,GAAG,EAAC;AACnB,SACA,IAAI,CAACC,oBAAoB,GAAGjyC,SAAAA,CAAAA;QAC5B,IAAI,CAACkyC,eAAe,GAAG,EAAE;QACzB,IAAI,CAACzkC,MAAM,GAAG,EAAC;QACf,IAAI,CAAC0kC,QAAQ,GAAG,IAAI5H,aAAAA,EAAAA,CAAAA;QACpB,IAAI,CAACxU,QAAQ,GAAG,EAAC;QACjB,IAAI,CAACqc,cAAc,GAAG,EAAC;QACvB,IAAI,CAACC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC57B,mBAAmB,GAAGzW,SAAAA,CAAAA;QAC3B,IAAI,CAAC8P,QAAQ,GAAG9P,SAAAA,CAAAA;AAChB,YAAI,CAACsyC,SAAS,GAAGC,8DAAAA,CAAS9nC,CAAAA,IAAAA,GAAQ,IAAI,CAAC7E,MAAM,CAAC6E,IAAO/C,CAAAA,EAAAA,OAAAA,CAAQ8qC,WAAW,IAAI;QAC5E,IAAI,CAACv6B,YAAY,GAAG,EAAE;AAGtBw4B,QAAAA,SAAS,CAAC,IAAI,CAAC5kC,EAAE,CAAC,GAAG,IAAI;QAEzB,IAAI,CAACyJ,OAAW,KAAC4b,MAAQ;AAKvB7gB,YAAAA,OAAAA,CAAQ88B,KAAK,CAAC;AACd;SACD;AAED5kC,QAAAA,QAAAA,CAAS9F,MAAM,CAAC,IAAI,EAAE,UAAY0tC,EAAAA,oBAAAA,CAAAA,CAAAA;AAClC5nC,QAAAA,QAAAA,CAAS9F,MAAM,CAAC,IAAI,EAAE,UAAY4tC,EAAAA,mBAAAA,CAAAA,CAAAA;AAElC,YAAI,CAACoC,WAAW;QAChB,IAAI,IAAI,CAACJ,QAAQ,EAAE;AACjB,gBAAI,CAACzsC,MAAM;SACZ;AACH;AAEA,QAAIic,WAAc;AAChB,cAAM,EAACna,OAAS,IAACma,WAAW,GAAE6wB,sBAAoB,GAAEj1B,KAAAA,GAAOD,MAAM,GAAEq0B,YAAY,GAAC,GAAG,IAAI;QACvF,IAAI,CAAC93B,6DAAaA,CAAC8H,WAAc;YAE/B,OAAOA,WAAAA,CAAAA;SACR;AAED,YAAI6wB,uBAAuBb,YAAc;YAEvC,OAAOA,YAAAA,CAAAA;SACR;QAGD,OAAOr0B,MAAAA,GAASC,KAAQD,GAAAA,MAAAA,GAAS,IAAI;AACvC;AAEA,QAAIzS,IAAO;AACT,eAAO,IAAI,CAACxE,MAAM,CAACwE,IAAI;AACzB;IAEA,IAAIA,IAAAA,CAAKA,IAAI,EAAE;AACb,YAAI,CAACxE,MAAM,CAACwE,IAAI,GAAGA,IAAAA,CAAAA;AACrB;AAEA,QAAIrD,OAAU;QACZ,OAAO,IAAI,CAACkqC,QAAQ;AACtB;IAEA,IAAIlqC,OAAAA,CAAQA,OAAO,EAAE;AACnB,YAAI,CAACnB,MAAM,CAACmB,OAAO,GAAGA,OAAAA,CAAAA;AACxB;AAEA,QAAI4gB,QAAW;QACb,OAAOA,QAAAA,CAAAA;AACT;AAIA,CACAmqB,WAAc;QAEZ,IAAI,CAACjU,aAAa,CAAC;AAEnB,YAAI,IAAI,CAAC92B,OAAO,CAACirC,UAAU,EAAE;AAC3B,gBAAI,CAAC/d,MAAM;SACN;AACLge,YAAAA,8DAAAA,CAAY,IAAI,EAAE,IAAI,CAAClrC,OAAO,CAACitB,gBAAgB;SAChD;AAED,YAAI,CAACke,UAAU;QAGf,IAAI,CAACrU,aAAa,CAAC;AAEnB,eAAO,IAAI;AACb;IAEAgQ,KAAQ;AACNsE,QAAAA,8DAAAA,CAAY,IAAI,CAAC5hB,MAAM,EAAE,IAAI,CAAChiB,GAAG;AACjC,eAAO,IAAI;AACb;IAEA9L,IAAO;QACLmF,QAASnF,CAAAA,IAAI,CAAC,IAAI;AAClB,eAAO,IAAI;AACb;AAMA,CACAwxB,MAAOnX,CAAAA,KAAK,EAAED,MAAM,EAAE;AACpB,YAAI,CAACjV,QAAAA,CAAS9G,OAAO,CAAC,IAAI,CAAG;YAC3B,IAAI,CAACsxC,OAAO,CAACt1B,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;SACf;YACL,IAAI,CAACw1B,iBAAiB,GAAG;AAACv1B,gBAAAA,KAAAA;AAAOD,gBAAAA,MAAAA;AAAM;SACxC;AACH;IAEAu1B,OAAQt1B,CAAAA,KAAK,EAAED,MAAM,EAAE;QACrB,MAAM9V,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAMwpB,MAAAA,GAAS,IAAI,CAACA,MAAM;AAC1B,cAAMrP,cAAcna,OAAQgrC,CAAAA,mBAAmB,IAAI,IAAI,CAAC7wB,WAAW;QACnE,MAAMoxB,OAAAA,GAAU,IAAI,CAAC3E,QAAQ,CAAC9c,cAAc,CAACN,MAAQzT,EAAAA,KAAAA,EAAOD,MAAQqE,EAAAA,WAAAA,CAAAA,CAAAA;QACpE,MAAMqxB,QAAAA,GAAWxrC,QAAQitB,gBAAgB,IAAI,IAAI,CAAC2Z,QAAQ,CAAC/c,mBAAmB;AAC9E,cAAM9mB,OAAO,IAAI,CAACgT,KAAK,GAAG,WAAW,QAAQ;AAE7C,YAAI,CAACA,KAAK,GAAGw1B,OAAAA,CAAQx1B,KAAK;AAC1B,YAAI,CAACD,MAAM,GAAGy1B,OAAAA,CAAQz1B,MAAM;AAC5B,YAAI,CAACq0B,YAAY,GAAG,IAAI,CAAChwB,WAAW;AACpC,YAAI,CAAC+wB,8DAAY,KAAI,EAAEM,QAAAA,EAAU,IAAI,CAAG;AACtC;SACD;QAED,IAAI,CAAC1U,aAAa,CAAC,QAAU;YAACn2B,IAAM4qC,EAAAA,OAAAA;AAAO;QAE3ClI,6DAAarjC,CAAAA,OAAAA,CAAQyrC,QAAQ,EAAE;YAAC,IAAI;AAAEF,YAAAA,OAAAA;AAAQ,WAAE,IAAI;QAEpD,IAAI,IAAI,CAACZ,QAAQ,EAAE;AACjB,gBAAI,IAAI,CAACC,SAAS,CAAC7nC,IAAO;AAExB,oBAAI,CAAC2oC,MAAM;aACZ;SACF;AACH;IAEAC,mBAAsB;QACpB,MAAM3rC,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,cAAM4rC,aAAgB5rC,GAAAA,OAAAA,CAAQ+F,MAAM,IAAI,EAAC;QAEzCojB,6DAAKyiB,CAAAA,aAAAA,EAAe,CAACC,WAAAA,EAAatM,MAAW;AAC3CsM,YAAAA,WAAAA,CAAY1nC,EAAE,GAAGo7B,MAAAA,CAAAA;AACnB;AACF;AAIA,CACAuM,mBAAsB;QACpB,MAAM9rC,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAM+rC,SAAAA,GAAY/rC,QAAQ+F,MAAM;QAChC,MAAMA,MAAAA,GAAS,IAAI,CAACA,MAAM;QAC1B,MAAMimC,OAAAA,GAAU7sC,OAAOC,IAAI,CAAC2G,QAAQ1K,MAAM,CAAC,CAAC+Z,GAAAA,EAAKjR,EAAO;YACtDiR,GAAG,CAACjR,EAAG,IAAG,KAAK;YACf,OAAOiR,GAAAA,CAAAA;AACT,WAAG,EAAC;AACJ,YAAIpb,QAAQ,EAAE;AAEd,YAAI+xC,SAAW;YACb/xC,KAAQA,GAAAA,KAAAA,CAAMmX,MAAM,CAClBhS,MAAOC,CAAAA,IAAI,CAAC2sC,SAAWvxB,CAAAA,CAAAA,GAAG,CAAC,CAACrW,EAAO;gBACjC,MAAM2gC,YAAAA,GAAeiH,SAAS,CAAC5nC,EAAG;gBAClC,MAAMT,IAAAA,GAAOmhC,cAAc1gC,EAAI2gC,EAAAA,YAAAA,CAAAA,CAAAA;AAC/B,sBAAMmH,WAAWvoC,IAAS;AAC1B,sBAAMgQ,eAAehQ,IAAS;gBAC9B,OAAO;oBACL1D,OAAS8kC,EAAAA,YAAAA;AACToH,oBAAAA,SAAAA,EAAWD,QAAW,iBAAcv4B,YAAe,cAAW,MAAM;AACpEy4B,oBAAAA,KAAAA,EAAOF,QAAW,oBAAiBv4B,YAAe,gBAAa,QAAQ;AACzE;AACF;SAEH;QAEDyV,6DAAKnvB,CAAAA,KAAAA,EAAO,CAACI,IAAS;YACpB,MAAM0qC,YAAAA,GAAe1qC,KAAK4F,OAAO;YACjC,MAAMmE,EAAAA,GAAK2gC,aAAa3gC,EAAE;YAC1B,MAAMT,IAAAA,GAAOmhC,cAAc1gC,EAAI2gC,EAAAA,YAAAA,CAAAA,CAAAA;AAC/B,kBAAMsH,YAAYljC,6DAAe47B,CAAAA,YAAAA,CAAansC,IAAI,EAAEyB,KAAK+xC,KAAK;AAE9D,gBAAIrH,YAAaviB,CAAAA,QAAQ,KAAKjqB,SAAAA,IAAa+vC,oBAAqBvD,CAAAA,YAAAA,CAAaviB,QAAQ,EAAE7e,IAAU2kC,CAAAA,KAAAA,oBAAAA,CAAqBjuC,IAAK8xC,CAAAA,SAAS,CAAG;gBACrIpH,YAAaviB,CAAAA,QAAQ,GAAGnoB,IAAAA,CAAK8xC,SAAS;aACvC;YAEDF,OAAO,CAAC7nC,EAAG,IAAG,IAAI;AAClB,gBAAIlD,QAAQ,IAAI;YAChB,IAAIkD,EAAAA,IAAM4B,UAAUA,MAAM,CAAC5B,GAAG,CAACxL,IAAI,KAAKyzC,SAAW;gBACjDnrC,KAAQ8E,GAAAA,MAAM,CAAC5B,EAAG;aACb;gBACL,MAAMkoC,UAAAA,GAAazrB,QAASmhB,CAAAA,QAAQ,CAACqK,SAAAA,CAAAA,CAAAA;AACrCnrC,gBAAAA,KAAAA,GAAQ,IAAIorC,UAAW;AACrBloC,oBAAAA,EAAAA;oBACAxL,IAAMyzC,EAAAA,SAAAA;oBACN5kC,GAAK,MAAI,CAACA,GAAG;AACbhP,oBAAAA,KAAAA,EAAO,IAAI;AACb;AACAuN,gBAAAA,MAAM,CAAC9E,KAAAA,CAAMkD,EAAE,CAAC,GAAGlD,KAAAA,CAAAA;aACpB;YAEDA,KAAMmgB,CAAAA,IAAI,CAAC0jB,YAAc9kC,EAAAA,OAAAA,CAAAA,CAAAA;AAC3B;QAEAmpB,6DAAK6iB,CAAAA,OAAAA,EAAS,CAACM,UAAAA,EAAYnoC,EAAO;AAChC,gBAAI,CAACmoC,UAAY;gBACf,OAAOvmC,MAAM,CAAC5B,EAAG;aAClB;AACH;QAEAglB,6DAAKpjB,CAAAA,MAAAA,EAAQ,CAAC9E,KAAU;AACtBukB,YAAAA,OAAAA,CAAQxmB,SAAS,CAAC,IAAI,EAAEiC,KAAAA,EAAOA,MAAMjB,OAAO;YAC5CwlB,OAAQkD,CAAAA,MAAM,CAAC,IAAI,EAAEznB,KAAAA,CAAAA,CAAAA;AACvB;AACF;AAIA,CACAsrC,eAAkB;QAChB,MAAMhqC,QAAAA,GAAW,IAAI,CAAC6nC,SAAS;AAC/B,cAAMv6B,UAAU,IAAI,CAACxM,IAAI,CAACyG,QAAQ,CAAC7P,MAAM;QACzC,MAAM2V,OAAAA,GAAUrN,SAAStI,MAAM;QAE/BsI,QAAS8O,CAAAA,IAAI,CAAC,CAACC,CAAAA,EAAGpP,IAAMoP,CAAE5O,CAAAA,KAAK,GAAGR,CAAAA,CAAEQ,KAAK;AACzC,YAAIkN,UAAUC,OAAS;AACrB,gBAAK,IAAI3V,CAAI2V,GAAAA,OAAAA,EAAS3V,CAAI0V,GAAAA,OAAAA,EAAS,EAAE1V,CAAG;gBACtC,IAAI,CAACsyC,mBAAmB,CAACtyC,CAAAA,CAAAA,CAAAA;AAC3B;YACAqI,QAAS6N,CAAAA,MAAM,CAACP,OAAAA,EAASD,OAAUC,GAAAA,OAAAA,CAAAA,CAAAA;SACpC;QACD,IAAI,CAAC26B,eAAe,GAAGjoC,QAASkqC,CAAAA,KAAK,CAAC,CAAGp7B,CAAAA,CAAAA,IAAI,CAACi3B,aAAAA,CAAc,OAAS;AACvE;AAIA,CACAoE,2BAA8B;QAC5B,MAAM,EAACtC,SAAW7nC,EAAAA,QAAAA,GAAUc,IAAAA,EAAM,EAACyG,QAAAA,GAAS,GAAC,GAAG,IAAI;AACpD,YAAIvH,QAAStI,CAAAA,MAAM,GAAG6P,QAAAA,CAAS7P,MAAM,EAAE;YACrC,OAAO,IAAI,CAACqL,OAAO;SACpB;AACD/C,QAAAA,QAAAA,CAASvJ,OAAO,CAAC,CAACsK,IAAAA,EAAMZ,KAAU;YAChC,IAAIoH,QAAAA,CAAS9D,MAAM,CAACvE,CAAAA,CAAAA,GAAKA,CAAM6B,KAAAA,IAAAA,CAAK0a,QAAQ,EAAE/jB,MAAM,KAAK,CAAG;gBAC1D,IAAI,CAACuyC,mBAAmB,CAAC9pC,KAAAA,CAAAA,CAAAA;aAC1B;AACH;AACF;IAEAiqC,wBAA2B;AACzB,cAAMC,iBAAiB,EAAE;AACzB,cAAM9iC,QAAW,OAAI,CAACzG,IAAI,CAACyG,QAAQ;AACnC,YAAI5P,CAAGuI,EAAAA,IAAAA,CAAAA;AAEP,YAAI,CAACiqC,2BAA2B;QAEhC,IAAKxyC,CAAAA,GAAI,GAAGuI,IAAOqH,GAAAA,QAAAA,CAAS7P,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK;YACjD,MAAMmM,OAAAA,GAAUyD,QAAQ,CAAC5P,CAAE;AAC3B,gBAAIoJ,IAAO,OAAI,CAACyG,cAAc,CAAC7P,CAAAA,CAAAA,CAAAA;YAC/B,MAAMvB,IAAAA,GAAO0N,QAAQ1N,IAAI,IAAI,IAAI,CAACkG,MAAM,CAAClG,IAAI;AAE7C,gBAAI2K,KAAK3K,IAAI,IAAI2K,IAAK3K,CAAAA,IAAI,KAAKA,IAAM;gBACnC,IAAI,CAAC6zC,mBAAmB,CAACtyC,CAAAA,CAAAA,CAAAA;gBACzBoJ,IAAO,OAAI,CAACyG,cAAc,CAAC7P,CAAAA,CAAAA,CAAAA;aAC5B;AACDoJ,YAAAA,IAAAA,CAAK3K,IAAI,GAAGA,IAAAA,CAAAA;YACZ2K,IAAKiG,CAAAA,SAAS,GAAGlD,OAAQkD,CAAAA,SAAS,IAAI+6B,YAAa3rC,CAAAA,IAAAA,EAAM,IAAI,CAACqH,OAAO;AACrEsD,YAAAA,IAAAA,CAAKupC,KAAK,GAAGxmC,OAAQwmC,CAAAA,KAAK,IAAI;AAC9BvpC,YAAAA,IAAAA,CAAKZ,KAAK,GAAGxI,CAAAA,CAAAA;AACboJ,YAAAA,IAAAA,CAAK2J,KAAK,GAAG,EAAK5G,GAAAA,OAAAA,CAAQ4G,KAAK;AAC/B3J,YAAAA,IAAAA,CAAKwpC,OAAO,GAAG,IAAI,CAACjxB,gBAAgB,CAAC3hB,CAAAA,CAAAA,CAAAA;YAErC,IAAIoJ,IAAAA,CAAK6B,UAAU,EAAE;gBACnB7B,IAAK6B,CAAAA,UAAU,CAAC0D,WAAW,CAAC3O,CAAAA,CAAAA,CAAAA;gBAC5BoJ,IAAK6B,CAAAA,UAAU,CAACoD,UAAU;aACrB;gBACL,MAAMwkC,eAAAA,GAAkBnsB,QAASghB,CAAAA,aAAa,CAACjpC,IAAAA,CAAAA,CAAAA;gBAC/C,MAAM,EAAC0O,qBAAoBC,eAAAA,GAAgB,GAAGjI,yDAAAA,CAASyK,QAAQ,CAACnR,IAAK;gBACrEwG,MAAOyB,CAAAA,MAAM,CAACmsC,eAAiB;oBAC7BzlC,eAAiBsZ,EAAAA,QAAAA,CAASC,UAAU,CAACvZ,eAAAA,CAAAA;oBACrCD,kBAAoBA,EAAAA,kBAAAA,IAAsBuZ,QAASC,CAAAA,UAAU,CAACxZ,kBAAAA,CAAAA;AAChE;AACA/D,gBAAAA,IAAAA,CAAK6B,UAAU,GAAG,IAAI4nC,eAAAA,CAAgB,IAAI,EAAE7yC,CAAAA,CAAAA,CAAAA;gBAC5C0yC,cAAe1xC,CAAAA,IAAI,CAACoI,IAAAA,CAAK6B,UAAU;aACpC;AACH;AAEA,YAAI,CAAConC,eAAe;QACpB,OAAOK,cAAAA,CAAAA;AACT;AAKA,CACAI,cAAiB;QACf7jB,6DAAK,KAAI,CAAC9lB,IAAI,CAACyG,QAAQ,EAAE,CAACzD,SAASrD,YAAiB;AAClD,gBAAI,CAAC+G,cAAc,CAAC/G,YAAcmC,CAAAA,CAAAA,UAAU,CAAC+E,KAAK;AACpD,WAAG,IAAI;AACT;AAID,CACCA,KAAQ;AACN,YAAI,CAAC8iC,cAAc;QACnB,IAAI,CAAClW,aAAa,CAAC;AACrB;AAEA54B,IAAAA,MAAAA,CAAO6E,IAAI,EAAE;QACX,MAAMlE,MAAAA,GAAS,IAAI,CAACA,MAAM;AAE1BA,QAAAA,MAAAA,CAAOX,MAAM;AACb,cAAM8B,OAAU,OAAI,CAACkqC,QAAQ,GAAGrrC,MAAAA,CAAOoM,cAAc,CAACpM,MAAOwoC,CAAAA,iBAAiB,EAAI,MAAI,CAACn8B,UAAU;AACjG,cAAM+hC,gBAAgB,IAAI,CAACl+B,mBAAmB,GAAG,CAAC/O,QAAQV,SAAS;AAEnE,YAAI,CAAC4tC,aAAa;AAClB,YAAI,CAACC,mBAAmB;AACxB,YAAI,CAACC,oBAAoB;QAIzB,IAAI,CAAC3C,QAAQ,CAAClH,UAAU;AAExB,YAAI,IAAI,CAACzM,aAAa,CAAC,cAAgB;AAAC/zB,YAAAA,IAAAA;AAAMugC,YAAAA,UAAAA,EAAY,IAAI;AAAA,eAAO,KAAK,EAAE;AAC1E;SACD;QAGD,MAAMsJ,cAAAA,GAAiB,IAAI,CAACD,wBAAwB;QAEpD,IAAI,CAAC7V,aAAa,CAAC;AAGnB,YAAI/N,UAAa;AACjB,YAAK,IAAI7uB,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAO,IAAI,CAACY,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK;AAC/D,kBAAM,EAACiL,UAAU,GAAC,GAAG,IAAI,CAAC4E,cAAc,CAAC7P,CAAAA,CAAAA,CAAAA;AACzC,kBAAMgQ,QAAQ,CAAC+iC,aAAAA,IAAiBL,eAAev2B,OAAO,CAAClR,gBAAgB,CAAC;AAGxEA,YAAAA,UAAAA,CAAWqF,qBAAqB,CAACN,KAAAA,CAAAA,CAAAA;AACjC6e,YAAAA,UAAAA,GAAa3vB,KAAKoC,GAAG,CAAC,CAAC2J,UAAAA,CAAW4H,cAAc,EAAIgc,EAAAA,UAAAA,CAAAA,CAAAA;AACtD;QACAA,UAAa,OAAI,CAACskB,WAAW,GAAGrtC,OAAAA,CAAQimB,MAAM,CAACqnB,WAAW,GAAGvkB,UAAAA,GAAa,CAAC;QAC3E,IAAI,CAACwkB,aAAa,CAACxkB,UAAAA,CAAAA,CAAAA;AAGnB,YAAI,CAACkkB,aAAe;YAGlB9jB,6DAAKyjB,CAAAA,cAAAA,EAAgB,CAACznC,UAAe;AACnCA,gBAAAA,UAAAA,CAAW+E,KAAK;AAClB;SACD;QAED,IAAI,CAACsjC,eAAe,CAACzqC,IAAAA,CAAAA,CAAAA;QAGrB,IAAI,CAAC+zB,aAAa,CAAC,aAAe;AAAC/zB,YAAAA,IAAAA;AAAI;AAEvC,YAAI,CAAC4lB,OAAO,CAACtX,IAAI,CAACi3B,cAAc,GAAK;AAGrC,cAAM,EAACjuC,OAAO,GAAEgwC,UAAU,GAAC,GAAG,IAAI;AAClC,YAAIA,UAAY;AACd,gBAAI,CAACoD,aAAa,CAACpD,UAAAA,EAAY,IAAI;SAC9B,UAAIhwC,OAAQJ,CAAAA,MAAM,EAAE;AACzB,gBAAI,CAACyzC,kBAAkB,CAACrzC,OAAAA,EAASA,SAAS,IAAI;SAC/C;AAED,YAAI,CAACqxC,MAAM;AACb;AAIC,CACDwB,aAAgB;AACd/jB,QAAAA,6DAAAA,CAAK,IAAI,CAACpjB,MAAM,EAAE,CAAC9E,KAAU;YAC3BukB,OAAQqD,CAAAA,SAAS,CAAC,IAAI,EAAE5nB,KAAAA,CAAAA,CAAAA;AAC1B;AAEA,YAAI,CAAC0qC,mBAAmB;AACxB,YAAI,CAACG,mBAAmB;AAC1B;AAIC,CACDqB,mBAAsB;QACpB,MAAMntC,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAM2tC,cAAAA,GAAiB,IAAIvH,GAAIjnC,CAAAA,MAAAA,CAAOC,IAAI,CAAC,IAAI,CAACkrC,UAAU;AAC1D,cAAMsD,SAAY,OAAIxH,GAAIpmC,CAAAA,OAAAA,CAAQ6tC,MAAM;AAExC,YAAI,CAACC,8DAAAA,CAAUH,cAAgBC,EAAAA,SAAAA,CAAAA,IAAc,CAAC,CAAC,IAAI,CAACrD,oBAAoB,KAAKvqC,OAAQirC,CAAAA,UAAU,EAAE;AAE/F,gBAAI,CAAC8C,YAAY;AACjB,gBAAI,CAAC5C,UAAU;SAChB;AACH;AAIC,CACDiC,oBAAuB;AACrB,cAAM,EAAC1C,cAAAA,GAAe,GAAG,IAAI;AAC7B,cAAMsD,OAAU,OAAI,CAACC,sBAAsB,MAAM,EAAE;QACnD,KAAK,MAAM,EAACtvC,MAAM,GAAErF,QAAO+R,KAAAA,GAAM,IAAI2iC,OAAS;AAC5C,kBAAMh+B,IAAOrR,GAAAA,MAAAA,KAAW,iBAAoB,IAAC0M,QAAQA,KAAK;AAC1D69B,YAAAA,eAAAA,CAAgBwB,gBAAgBpxC,KAAO0W,EAAAA,IAAAA,CAAAA,CAAAA;AACzC;AACF;AAIC,CACDi+B,sBAAyB;QACvB,MAAM19B,YAAAA,GAAe,IAAI,CAACA,YAAY;AACtC,YAAI,CAACA,YAAAA,IAAgB,CAACA,YAAAA,CAAatW,MAAM,EAAE;AACzC;SACD;QAED,IAAI,CAACsW,YAAY,GAAG,EAAE;AACtB,cAAM29B,eAAe,IAAI,CAAC7qC,IAAI,CAACyG,QAAQ,CAAC7P,MAAM;QAC9C,MAAMk0C,OAAAA,GAAU,CAACpU,GAAAA,GAAQ,IAAIqM,GAAAA,CAC3B71B,YACGvK,CAAAA,MAAM,CAACijC,CAAAA,CAAKA,GAAAA,CAAC,CAAC,EAAE,KAAKlP,GAAAA,CAAAA,CACrBvf,GAAG,CAAC,CAACyuB,CAAAA,EAAG/uC,CAAMA,GAAAA,CAAAA,GAAI,GAAM+uC,GAAAA,CAAAA,CAAE74B,MAAM,CAAC,CAAG4wB,CAAAA,CAAAA,IAAI,CAAC;AAG9C,cAAMoN,YAAYD,OAAQ;AAC1B,YAAK,IAAIj0C,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIg0C,cAAch0C,CAAK;AACrC,gBAAI,CAAC4zC,8DAAAA,CAAUM,SAAWD,EAAAA,OAAAA,CAAQj0C,CAAK;AACrC;aACD;AACH;AACA,eAAO2J,MAAM5H,IAAI,CAACmyC,SACf5zB,CAAAA,CAAAA,GAAG,CAACyuB,CAAAA,CAAAA,GAAKA,CAAEpI,CAAAA,KAAK,CAAC,GACjBrmB,CAAAA,CAAAA,CAAAA,GAAG,CAAClJ,CAAAA,KAAM;gBAAC3S,MAAQ2S,EAAAA,CAAC,CAAC,CAAE;gBAAEhY,KAAO,GAACgY,CAAC,CAAC,CAAE;gBAAEjG,KAAO,GAACiG,CAAC,CAAC,CAAE;aAAA;AACxD;AAOAi8B,CAAAA,aAAAA,CAAcxkB,UAAU,EAAE;AACxB,YAAI,IAAI,CAAC+N,aAAa,CAAC,cAAgB;AAACwM,YAAAA,UAAAA,EAAY,IAAI;AAAA,eAAO,KAAK,EAAE;AACpE;SACD;QAED9d,OAAQtnB,CAAAA,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC6X,KAAK,EAAE,IAAI,CAACD,MAAM,EAAEiT,UAAAA,CAAAA,CAAAA;QAE9C,MAAMzb,IAAAA,GAAO,IAAI,CAACC,SAAS;AAC3B,cAAM8gC,SAAS/gC,IAAKyI,CAAAA,KAAK,IAAI,CAAKzI,IAAAA,IAAAA,CAAKwI,MAAM,IAAI;QAEjD,IAAI,CAAC6S,OAAO,GAAG,EAAE;AACjBQ,QAAAA,6DAAAA,CAAK,IAAI,CAAC/D,KAAK,EAAE,CAACJ,GAAQ;AACxB,gBAAIqpB,MAAUrpB,IAAAA,GAAAA,CAAIzC,QAAQ,KAAK,WAAa;AAE1C;aACD;YAID,IAAIyC,GAAAA,CAAIhmB,SAAS,EAAE;AACjBgmB,gBAAAA,GAAAA,CAAIhmB,SAAS;aACd;AACD,gBAAI,CAAC2pB,OAAO,CAACztB,IAAI,IAAI8pB,IAAI2D,OAAO;AAClC,WAAG,IAAI;AAEP,YAAI,CAACA,OAAO,CAAC3vB,OAAO,CAAC,CAACoB,MAAMsI,KAAU;AACpCtI,YAAAA,IAAAA,CAAKk0C,IAAI,GAAG5rC,KAAAA,CAAAA;AACd;QAEA,IAAI,CAACo0B,aAAa,CAAC;AACrB;AAOA0W,CAAAA,eAAAA,CAAgBzqC,IAAI,EAAE;AACpB,YAAI,IAAI,CAAC+zB,aAAa,CAAC,sBAAwB;AAAC/zB,YAAAA,IAAAA;AAAMugC,YAAAA,UAAAA,EAAY,IAAI;AAAA,eAAO,KAAK,EAAE;AAClF;SACD;AAED,YAAK,IAAIppC,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAO,IAAI,CAACY,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AAC/D,gBAAI,CAAC6P,cAAc,CAAC7P,CAAGiL,CAAAA,CAAAA,UAAU,CAACnG,SAAS;AAC7C;AAEA,YAAK,IAAI9E,CAAAA,GAAI,CAAGuI,EAAAA,IAAAA,GAAO,IAAI,CAACY,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AAC/D,gBAAI,CAACq0C,cAAc,CAACr0C,CAAGwtC,EAAAA,8DAAAA,CAAW3kC,QAAQA,IAAK;gBAACC,YAAc9I,EAAAA,CAAAA;AAAC,iBAAK6I,IAAI;AAC1E;QAEA,IAAI,CAAC+zB,aAAa,CAAC,qBAAuB;AAAC/zB,YAAAA,IAAAA;AAAI;AACjD;AAMA,CACAwrC,cAAe7rC,CAAAA,KAAK,EAAEK,IAAI,EAAE;AAC1B,cAAMO,IAAO,OAAI,CAACyG,cAAc,CAACrH,KAAAA,CAAAA,CAAAA;AACjC,cAAM4N,IAAO;AAAChN,YAAAA,IAAAA;AAAMZ,YAAAA,KAAAA;AAAOK,YAAAA,IAAAA;AAAMugC,YAAAA,UAAAA,EAAY,IAAI;AAAA;AAEjD,YAAI,IAAI,CAACxM,aAAa,CAAC,qBAAuBxmB,EAAAA,IAAAA,CAAAA,KAAU,KAAK,EAAE;AAC7D;SACD;QAEDhN,IAAK6B,CAAAA,UAAU,CAACxL,OAAO,CAACoJ,IAAAA,CAAAA,CAAAA;QAExBuN,IAAKgzB,CAAAA,UAAU,GAAG,KAAK;QACvB,IAAI,CAACxM,aAAa,CAAC,oBAAsBxmB,EAAAA,IAAAA,CAAAA,CAAAA;AAC3C;IAEAo7B,MAAS;AACP,YAAI,IAAI,CAAC5U,aAAa,CAAC,cAAgB;AAACwM,YAAAA,UAAAA,EAAY,IAAI;AAAA,eAAO,KAAK,EAAE;AACpE;SACD;AAED,YAAIziC,QAASzF,CAAAA,GAAG,CAAC,IAAI,CAAG;YACtB,IAAI,IAAI,CAACuvC,QAAQ,IAAI,CAAC9pC,QAAS9G,CAAAA,OAAO,CAAC,IAAI,CAAG;gBAC5C8G,QAASvH,CAAAA,KAAK,CAAC,IAAI;aACpB;SACI;AACL,gBAAI,CAACa,IAAI;YACTsuC,oBAAqB;AAACjwC,gBAAAA,KAAAA,EAAO,IAAI;AAAA;SAClC;AACH;IAEA2B,IAAO;QACL,IAAID,CAAAA,CAAAA;QACJ,IAAI,IAAI,CAACoxC,iBAAiB,EAAE;YAC1B,MAAM,EAACv1B,QAAOD,MAAAA,GAAO,GAAG,IAAI,CAACw1B,iBAAiB;YAC9C,IAAI,CAACD,OAAO,CAACt1B,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;YACpB,IAAI,CAACw1B,iBAAiB,GAAG,IAAI;SAC9B;AACD,YAAI,CAACxE,KAAK;QAEV,IAAI,IAAI,CAAC/wB,KAAK,IAAI,KAAK,IAAI,CAACD,MAAM,IAAI,CAAG;AACvC;SACD;AAED,YAAI,IAAI,CAACghB,aAAa,CAAC,YAAc;AAACwM,YAAAA,UAAAA,EAAY,IAAI;AAAA,eAAO,KAAK,EAAE;AAClE;SACD;QAKD,MAAMkL,MAAAA,GAAS,IAAI,CAAC7lB,OAAO;AAC3B,YAAKzuB,CAAI,MAAGA,CAAIs0C,GAAAA,MAAAA,CAAOv0C,MAAM,IAAIu0C,MAAM,CAACt0C,CAAAA,CAAE,CAAC0uB,CAAC,IAAI,GAAG,EAAE1uB,CAAG;AACtDs0C,YAAAA,MAAM,CAACt0C,CAAE,EAACC,IAAI,CAAC,IAAI,CAACoT,SAAS;AAC/B;AAEA,YAAI,CAACkhC,aAAa;AAGlB,cAAOv0C,CAAIs0C,GAAAA,MAAAA,CAAOv0C,MAAM,EAAE,EAAEC,CAAG;AAC7Bs0C,YAAAA,MAAM,CAACt0C,CAAE,EAACC,IAAI,CAAC,IAAI,CAACoT,SAAS;AAC/B;QAEA,IAAI,CAACupB,aAAa,CAAC;AACrB;AAKAt0B,CAAAA,sBAAAA,CAAuBF,aAAa,EAAE;QACpC,MAAMC,QAAAA,GAAW,IAAI,CAACioC,eAAe;AACrC,cAAM3Z,SAAS,EAAE;AACjB,YAAI32B,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOF,GAAAA,QAAAA,CAAStI,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YACjD,MAAMoJ,IAAAA,GAAOf,QAAQ,CAACrI,CAAE;AACxB,gBAAI,CAACoI,aAAAA,IAAiBgB,IAAKwpC,CAAAA,OAAO,EAAE;AAClCjc,gBAAAA,MAAAA,CAAO31B,IAAI,CAACoI,IAAAA,CAAAA,CAAAA;aACb;AACH;QAEA,OAAOutB,MAAAA,CAAAA;AACT;AAKA,CACApO,4BAA+B;AAC7B,eAAO,IAAI,CAACjgB,sBAAsB,CAAC,IAAI;AACzC;AAMA,CACAisC,aAAgB;AACd,YAAI,IAAI,CAAC3X,aAAa,CAAC,oBAAsB;AAACwM,YAAAA,UAAAA,EAAY,IAAI;AAAA,eAAO,KAAK,EAAE;AAC1E;SACD;QAED,MAAM/gC,QAAAA,GAAW,IAAI,CAACkgB,4BAA4B;QAClD,IAAK,IAAIvoB,IAAIqI,QAAStI,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,IAAEA,CAAG;AAC7C,gBAAI,CAACw0C,YAAY,CAACnsC,QAAQ,CAACrI,CAAE;AAC/B;QAEA,IAAI,CAAC48B,aAAa,CAAC;AACrB;AAOA4X,CAAAA,YAAAA,CAAaprC,IAAI,EAAE;QACjB,MAAMkE,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAM4F,IAAAA,GAAO9J,KAAK6J,KAAK;QACvB,MAAMwhC,OAAAA,GAAU,CAACvhC,IAAAA,CAAKhL,QAAQ;AAC9B,cAAMkL,IAAOo8B,GAAAA,cAAAA,CAAepmC,IAAM,MAAI,CAACiK,SAAS;AAChD,cAAM+C,IAAO;AACXhN,YAAAA,IAAAA;AACAZ,YAAAA,KAAAA,EAAOY,KAAKZ,KAAK;AACjB4gC,YAAAA,UAAAA,EAAY,IAAI;AAClB;AAEA,YAAI,IAAI,CAACxM,aAAa,CAAC,mBAAqBxmB,EAAAA,IAAAA,CAAAA,KAAU,KAAK,EAAE;AAC3D;SACD;AAED,YAAIq+B,OAAS;AACX5P,YAAAA,6DAAAA,CAASv3B,GAAK;gBACZ1F,IAAMsL,EAAAA,IAAAA,CAAKtL,IAAI,KAAK,KAAK,GAAG,IAAIwL,IAAKxL,CAAAA,IAAI,GAAGsL,IAAAA,CAAKtL,IAAI;AACrDF,gBAAAA,KAAAA,EAAOwL,IAAKxL,CAAAA,KAAK,KAAK,KAAK,GAAG,IAAI,CAACmU,KAAK,GAAGzI,IAAAA,CAAK1L,KAAK,GAAGwL,KAAKxL,KAAK;gBAClED,GAAKyL,EAAAA,IAAAA,CAAKzL,GAAG,KAAK,KAAK,GAAG,IAAI2L,IAAK3L,CAAAA,GAAG,GAAGyL,IAAAA,CAAKzL,GAAG;AACjDE,gBAAAA,MAAAA,EAAQuL,IAAKvL,CAAAA,MAAM,KAAK,KAAK,GAAG,IAAI,CAACiU,MAAM,GAAGxI,IAAAA,CAAKzL,MAAM,GAAGuL,KAAKvL,MAAM;AACzE;SACD;QAEDyB,IAAK6B,CAAAA,UAAU,CAAChL,IAAI;AAEpB,YAAIw0C,OAAS;YACXzP,6DAAW13B,CAAAA,GAAAA,CAAAA,CAAAA;SACZ;QAED8I,IAAKgzB,CAAAA,UAAU,GAAG,KAAK;QACvB,IAAI,CAACxM,aAAa,CAAC,kBAAoBxmB,EAAAA,IAAAA,CAAAA,CAAAA;AACzC;AAOAiT,CAAAA,aAAAA,CAAc3L,KAAK,EAAE;QACnB,OAAO6L,6DAAAA,CAAe7L,OAAO,IAAI,CAACrK,SAAS,EAAE,IAAI,CAAC8/B,WAAW;AAC/D;AAEAuB,IAAAA,yBAAAA,CAA0BzzB,CAAC,EAAEpY,IAAI,EAAE/C,OAAO,EAAEqjB,gBAAgB,EAAE;AAC5D,cAAM1kB,MAASkwC,GAAAA,WAAAA,CAAYrqB,KAAK,CAACzhB,IAAK;QACtC,IAAI,OAAOpE,WAAW,UAAY;AAChC,mBAAOA,MAAO,KAAI,EAAEwc,CAAAA,EAAGnb,OAASqjB,EAAAA,gBAAAA,CAAAA,CAAAA;SACjC;AAED,eAAO,EAAE;AACX;AAEAtZ,IAAAA,cAAAA,CAAe/G,YAAY,EAAE;AAC3B,cAAMqD,UAAU,IAAI,CAAChD,IAAI,CAACyG,QAAQ,CAAC9G,YAAa;QAChD,MAAMT,QAAAA,GAAW,IAAI,CAAC6nC,SAAS;QAC/B,IAAI9mC,IAAAA,GAAOf,QAASyD,CAAAA,MAAM,CAACvE,CAAAA,CAAKA,GAAAA,CAAAA,IAAKA,CAAEuc,CAAAA,QAAQ,KAAK3X,OAAAA,CAAAA,CAAS7L,GAAG;AAEhE,YAAI,CAAC8I,IAAM;YACTA,IAAO;AACL3K,gBAAAA,IAAAA,EAAM,IAAI;AACV0K,gBAAAA,IAAAA,EAAM,EAAE;AACRgD,gBAAAA,OAAAA,EAAS,IAAI;AACblB,gBAAAA,UAAAA,EAAY,IAAI;AAChB+B,gBAAAA,MAAAA,EAAQ,IAAI;AACZ+B,gBAAAA,OAAAA,EAAS,IAAI;AACbG,gBAAAA,OAAAA,EAAS,IAAI;gBACbyjC,KAAOxmC,EAAAA,OAAAA,IAAWA,OAAQwmC,CAAAA,KAAK,IAAI;gBACnCnqC,KAAOM,EAAAA,YAAAA;gBACPgb,QAAU3X,EAAAA,OAAAA;AACVM,gBAAAA,OAAAA,EAAS,EAAE;AACX4E,gBAAAA,OAAAA,EAAS,KAAK;AAChB;AACAhJ,YAAAA,QAAAA,CAASrH,IAAI,CAACoI,IAAAA,CAAAA,CAAAA;SACf;QAED,OAAOA,IAAAA,CAAAA;AACT;IAEA4H,UAAa;QACX,OAAO,IAAI,CAAC9C,QAAQ,KAAK,IAAI,CAACA,QAAQ,GAAGhC,6DAAc,KAAI,EAAE;AAAC5N,YAAAA,KAAAA,EAAO,IAAI;YAAEG,IAAM;SAAQ;AAC3F;IAEAinB,sBAAyB;AACvB,eAAO,IAAI,CAAC6C,4BAA4B,GAAGxoB,MAAM;AACnD;AAEA4hB,IAAAA,gBAAAA,CAAiB7Y,YAAY,EAAE;AAC7B,cAAMqD,UAAU,IAAI,CAAChD,IAAI,CAACyG,QAAQ,CAAC9G,YAAa;AAChD,YAAI,CAACqD,OAAS;AACZ,mBAAO,KAAK;SACb;AAED,cAAM/C,IAAO,OAAI,CAACyG,cAAc,CAAC/G,YAAAA,CAAAA,CAAAA;QAIjC,OAAO,OAAOM,IAAK4D,CAAAA,MAAM,KAAK,YAAY,CAAC5D,IAAAA,CAAK4D,MAAM,GAAG,CAACb,OAAAA,CAAQa,MAAM;AAC1E;IAEA4nC,oBAAqB9rC,CAAAA,YAAY,EAAE8pC,OAAO,EAAE;AAC1C,cAAMxpC,IAAO,OAAI,CAACyG,cAAc,CAAC/G,YAAAA,CAAAA,CAAAA;QACjCM,IAAK4D,CAAAA,MAAM,GAAG,CAAC4lC,OAAAA,CAAAA;AACjB;AAEAzxB,IAAAA,oBAAAA,CAAqB3Y,KAAK,EAAE;QAC1B,IAAI,CAACgoC,cAAc,CAAChoC,KAAM,IAAG,CAAC,IAAI,CAACgoC,cAAc,CAAChoC,KAAM;AAC1D;AAEAoU,IAAAA,iBAAAA,CAAkBpU,KAAK,EAAE;AACvB,eAAO,CAAC,IAAI,CAACgoC,cAAc,CAAChoC,KAAM;AACpC;AAIA,CACAqsC,kBAAkB/rC,YAAY,EAAEwD,SAAS,EAAEsmC,OAAO,EAAE;QAClD,MAAM/pC,IAAAA,GAAO+pC,OAAU,YAAS,MAAM;AACtC,cAAMxpC,IAAO,OAAI,CAACyG,cAAc,CAAC/G,YAAAA,CAAAA,CAAAA;AACjC,cAAMvK,QAAQ6K,IAAK6B,CAAAA,UAAU,CAACqJ,kBAAkB,CAAClW,SAAWyK,EAAAA,IAAAA,CAAAA,CAAAA;AAE5D,YAAImL,6DAAOA,CAAC1H,SAAY;AACtBlD,YAAAA,IAAAA,CAAKD,IAAI,CAACmD,SAAAA,CAAU,CAACU,MAAM,GAAG,CAAC4lC,OAAAA,CAAAA;AAC/B,gBAAI,CAAC5uC,MAAM;SACN;YACL,IAAI,CAAC4wC,oBAAoB,CAAC9rC,YAAc8pC,EAAAA,OAAAA,CAAAA,CAAAA;YAExCr0C,KAAMyF,CAAAA,MAAM,CAACoF,IAAM;AAACwpC,gBAAAA,OAAAA;AAAO;YAC3B,IAAI,CAAC5uC,MAAM,CAAC,CAACsJ,GAAAA,GAAQA,IAAIxE,YAAY,KAAKA,YAAeD,GAAAA,IAAAA,GAAOzK,SAAS;SAC1E;AACH;IAEA02C,IAAKhsC,CAAAA,YAAY,EAAEwD,SAAS,EAAE;AAC5B,YAAI,CAACuoC,iBAAiB,CAAC/rC,YAAAA,EAAcwD,WAAW,KAAK;AACvD;IAEAyoC,IAAKjsC,CAAAA,YAAY,EAAEwD,SAAS,EAAE;AAC5B,YAAI,CAACuoC,iBAAiB,CAAC/rC,YAAAA,EAAcwD,WAAW,IAAI;AACtD;AAKAgmC,CAAAA,mBAAAA,CAAoBxpC,YAAY,EAAE;AAChC,cAAMM,IAAO,OAAI,CAAC8mC,SAAS,CAACpnC,YAAa;QACzC,IAAIM,IAAAA,IAAQA,IAAK6B,CAAAA,UAAU,EAAE;YAC3B7B,IAAK6B,CAAAA,UAAU,CAACgF,QAAQ;SACzB;AACD,eAAO,IAAI,CAACigC,SAAS,CAACpnC,YAAa;AACrC;IAEAksC,KAAQ;AACN,YAAIh1C,CAAGuI,EAAAA,IAAAA,CAAAA;AACP,YAAI,CAAC/G,IAAI;QACTmF,QAASjF,CAAAA,MAAM,CAAC,IAAI;AAEpB,YAAK1B,CAAI,MAAGuI,IAAO,OAAI,CAACY,IAAI,CAACyG,QAAQ,CAAC7P,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;YAC3D,IAAI,CAACsyC,mBAAmB,CAACtyC,CAAAA,CAAAA,CAAAA;AAC3B;AACF;IAEAi1C,OAAU;QACR,IAAI,CAACrY,aAAa,CAAC;AACnB,cAAM,EAACtN,MAAM,GAAEhiB,GAAG,GAAC,GAAG,IAAI;AAE1B,YAAI,CAAC0nC,KAAK;QACV,IAAI,CAACrwC,MAAM,CAACgoC,UAAU;AAEtB,YAAIrd,MAAQ;AACV,gBAAI,CAACukB,YAAY;AACjB3C,YAAAA,8DAAAA,CAAY5hB,MAAQhiB,EAAAA,GAAAA,CAAAA,CAAAA;AACpB,gBAAI,CAACo/B,QAAQ,CAACnd,cAAc,CAACjiB,GAAAA,CAAAA,CAAAA;YAC7B,IAAI,CAACgiB,MAAM,GAAG,IAAI;YAClB,IAAI,CAAChiB,GAAG,GAAG,IAAI;SAChB;AAED,eAAOuhC,SAAS,CAAC,IAAI,CAAC5kC,EAAE,CAAC;QAEzB,IAAI,CAAC2yB,aAAa,CAAC;AACrB;IAEAsY,aAAc,IAAG9+B,IAAI,EAAE;AACrB,eAAO,IAAI,CAACkZ,MAAM,CAAC6lB,SAAS,CAAI/+B,GAAAA,IAAAA,CAAAA,CAAAA;AAClC;AAIA,CACA66B,UAAa;AACX,YAAI,CAACmE,cAAc;AACnB,YAAI,IAAI,CAACtvC,OAAO,CAACirC,UAAU,EAAE;AAC3B,gBAAI,CAACsE,oBAAoB;SACpB;YACL,IAAI,CAAC5E,QAAQ,GAAG,IAAI;SACrB;AACH;AAIC,CACD2E,cAAiB;QACf,MAAMz2C,SAAAA,GAAY,IAAI,CAACyxC,UAAU;QACjC,MAAM1D,QAAAA,GAAW,IAAI,CAACA,QAAQ;QAE9B,MAAM4I,IAAAA,GAAO,CAAC72C,IAAAA,EAAMgxB,QAAa;AAC/Bid,YAAAA,QAAAA,CAASld,gBAAgB,CAAC,IAAI,EAAE/wB,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA;YACtC9wB,SAAS,CAACF,KAAK,GAAGgxB,QAAAA,CAAAA;AACpB;AAEA,cAAMA,QAAW,IAACxO,CAAG1Z,EAAAA,CAAAA,EAAGC,CAAM;AAC5ByZ,YAAAA,CAAAA,CAAE7C,OAAO,GAAG7W,CAAAA,CAAAA;AACZ0Z,YAAAA,CAAAA,CAAE5C,OAAO,GAAG7W,CAAAA,CAAAA;YACZ,IAAI,CAAC+rC,aAAa,CAACtyB,CAAAA,CAAAA,CAAAA;AACrB;QAEAgO,6DAAK,KAAI,CAACnpB,OAAO,CAAC6tC,MAAM,EAAE,CAACl1C,IAAS62C,GAAAA,IAAAA,CAAK72C,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACjD;AAIC,CACD4lB,oBAAuB;AACrB,YAAI,CAAC,IAAI,CAAChF,oBAAoB,EAAE;YAC9B,IAAI,CAACA,oBAAoB,GAAG,EAAC;SAC9B;QACD,MAAM1xC,SAAAA,GAAY,IAAI,CAAC0xC,oBAAoB;QAC3C,MAAM3D,QAAAA,GAAW,IAAI,CAACA,QAAQ;QAE9B,MAAM4I,IAAAA,GAAO,CAAC72C,IAAAA,EAAMgxB,QAAa;AAC/Bid,YAAAA,QAAAA,CAASld,gBAAgB,CAAC,IAAI,EAAE/wB,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA;YACtC9wB,SAAS,CAACF,KAAK,GAAGgxB,QAAAA,CAAAA;AACpB;QACA,MAAM8lB,OAAAA,GAAU,CAAC92C,IAAAA,EAAMgxB,QAAa;YAClC,IAAI9wB,SAAS,CAACF,IAAAA,CAAK,EAAE;AACnBiuC,gBAAAA,QAAAA,CAAShd,mBAAmB,CAAC,IAAI,EAAEjxB,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA;gBACzC,OAAO9wB,SAAS,CAACF,IAAK;aACvB;AACH;QAEA,MAAMgxB,QAAAA,GAAW,CAAC5T,KAAAA,EAAOD,MAAW;YAClC,IAAI,IAAI,CAAC0T,MAAM,EAAE;gBACf,IAAI,CAAC0D,MAAM,CAACnX,KAAOD,EAAAA,MAAAA,CAAAA,CAAAA;aACpB;AACH;AAEA,YAAI45B;AACJ,cAAM/E,WAAW,IAAM;AACrB8E,YAAAA,OAAAA,CAAQ,QAAU9E,EAAAA,QAAAA,CAAAA,CAAAA;YAElB,IAAI,CAACA,QAAQ,GAAG,IAAI;AACpB,gBAAI,CAACzd,MAAM;AAEXsiB,YAAAA,IAAAA,CAAK,QAAU7lB,EAAAA,QAAAA,CAAAA,CAAAA;AACf6lB,YAAAA,IAAAA,CAAK,QAAUE,EAAAA,QAAAA,CAAAA,CAAAA;AACjB;AAEAA,QAAAA,QAAAA,GAAW,IAAM;YACf,IAAI,CAAC/E,QAAQ,GAAG,KAAK;AAErB8E,YAAAA,OAAAA,CAAQ,QAAU9lB,EAAAA,QAAAA,CAAAA,CAAAA;AAGlB,gBAAI,CAACulB,KAAK;YACV,IAAI,CAAC7D,OAAO,CAAC,CAAG;AAEhBmE,YAAAA,IAAAA,CAAK,QAAU7E,EAAAA,QAAAA,CAAAA,CAAAA;AACjB;AAEA,YAAI/D,SAAS7c,UAAU,CAAC,IAAI,CAACP,MAAM,CAAG;AACpCmhB,YAAAA,QAAAA,EAAAA,CAAAA;SACK;AACL+E,YAAAA,QAAAA,EAAAA,CAAAA;SACD;AACH;AAIA,CACA3B,YAAe;AACb5kB,QAAAA,6DAAAA,CAAK,IAAI,CAACmhB,UAAU,EAAE,CAAC3gB,UAAUhxB,IAAS;AACxC,gBAAI,CAACiuC,QAAQ,CAAChd,mBAAmB,CAAC,IAAI,EAAEjxB,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA;AAChD;QACA,IAAI,CAAC2gB,UAAU,GAAG,EAAC;AAEnBnhB,QAAAA,6DAAAA,CAAK,IAAI,CAACohB,oBAAoB,EAAE,CAAC5gB,UAAUhxB,IAAS;AAClD,gBAAI,CAACiuC,QAAQ,CAAChd,mBAAmB,CAAC,IAAI,EAAEjxB,IAAMgxB,EAAAA,QAAAA,CAAAA,CAAAA;AAChD;QACA,IAAI,CAAC4gB,oBAAoB,GAAGjyC,SAAAA,CAAAA;AAC9B;AAEAq3C,IAAAA,gBAAAA,CAAiB31C,KAAK,EAAE+I,IAAI,EAAE4sB,OAAO,EAAE;QACrC,MAAMigB,MAAAA,GAASjgB,OAAU,WAAQ,QAAQ;QACzC,IAAIrsB,IAAAA,EAAMlJ,MAAMF,CAAGuI,EAAAA,IAAAA,CAAAA;AAEnB,YAAIM,SAAS,SAAW;YACtBO,IAAO,OAAI,CAACyG,cAAc,CAAC/P,KAAK,CAAC,EAAE,CAACgJ,YAAY;AAChDM,YAAAA,IAAAA,CAAK6B,UAAU,CAAC,GAAMyqC,GAAAA,MAAAA,GAAS,mBAAoB;SACpD;QAED,IAAK11C,CAAAA,GAAI,GAAGuI,IAAOzI,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC9CE,IAAOJ,GAAAA,KAAK,CAACE,CAAE;YACf,MAAMiL,UAAAA,GAAa/K,QAAQ,IAAI,CAAC2P,cAAc,CAAC3P,IAAAA,CAAK4I,YAAY,EAAEmC,UAAU;AAC5E,gBAAIA,UAAY;gBACdA,UAAU,CAACyqC,MAAS,gBAAa,CAACx1C,IAAAA,CAAKmM,OAAO,EAAEnM,IAAK4I,CAAAA,YAAY,EAAE5I,IAAAA,CAAKsI,KAAK;aAC9E;AACH;AACF;AAKA,CACAmtC,iBAAoB;AAClB,eAAO,IAAI,CAACx1C,OAAO,IAAI,EAAE;AAC3B;AAMAy1C,CAAAA,iBAAAA,CAAkBC,cAAc,EAAE;AAChC,cAAMC,UAAa,OAAI,CAAC31C,OAAO,IAAI,EAAE;QACrC,MAAM4D,MAAAA,GAAS8xC,cAAev1B,CAAAA,GAAG,CAAC,CAAC,EAACxX,YAAY,GAAEN,KAAK,GAAC,GAAK;AAC3D,kBAAMY,IAAO,OAAI,CAACyG,cAAc,CAAC/G,YAAAA,CAAAA,CAAAA;AACjC,gBAAI,CAACM,IAAM;gBACT,MAAM,IAAIyd,KAAM,gCAA+B/d,YAAc;aAC9D;YAED,OAAO;AACLA,gBAAAA,YAAAA;gBACAuD,OAASjD,EAAAA,IAAAA,CAAKD,IAAI,CAACX,KAAM;AACzBA,gBAAAA,KAAAA;AACF;AACF;QACA,MAAM2lB,OAAAA,GAAU,CAAC4nB,8DAAAA,CAAehyC,MAAQ+xC,EAAAA,UAAAA,CAAAA,CAAAA;AAExC,YAAI3nB,OAAS;YACX,IAAI,CAAChuB,OAAO,GAAG4D,MAAAA,CAAAA;YAEf,IAAI,CAACosC,UAAU,GAAG,IAAI;YACtB,IAAI,CAACqD,kBAAkB,CAACzvC,MAAQ+xC,EAAAA,UAAAA,CAAAA,CAAAA;SACjC;AACH;AAUA,CACAlZ,cAAckM,IAAI,EAAE1yB,IAAI,EAAEtK,MAAM,EAAE;QAChC,OAAO,IAAI,CAACykC,QAAQ,CAAC1H,MAAM,CAAC,IAAI,EAAEC,IAAAA,EAAM1yB,IAAMtK,EAAAA,MAAAA,CAAAA,CAAAA;AAChD;AAOA0C,CAAAA,eAAAA,CAAgBwnC,QAAQ,EAAE;AACxB,eAAO,IAAI,CAACzF,QAAQ,CAACz5B,MAAM,CAAChL,MAAM,CAACgiC,CAAAA,CAAAA,GAAKA,EAAE5E,MAAM,CAACj/B,EAAE,KAAK+rC,QAAAA,CAAAA,CAAUj2C,MAAM,KAAK;AAC/E;AAIA,CACAyzC,mBAAmBzvC,MAAM,EAAE+xC,UAAU,EAAEG,MAAM,EAAE;AAC7C,cAAMC,YAAe,OAAI,CAACpwC,OAAO,CAACqwC,KAAK;QACvC,MAAM9uB,IAAAA,GAAO,CAACjQ,CAAAA,EAAGpP,CAAMoP,GAAAA,CAAAA,CAAEtL,MAAM,CAACvE,CAAAA,CAAK,IAACS,CAAE2hC,CAAAA,IAAI,CAACniC,CAAAA,CAAAA,GAAKD,CAAEuB,CAAAA,YAAY,KAAKtB,CAAAA,CAAEsB,YAAY,IAAIvB,CAAEiB,CAAAA,KAAK,KAAKhB,CAAAA,CAAEgB,KAAK;QAC1G,MAAM4tC,WAAAA,GAAc/uB,KAAKyuB,UAAY/xC,EAAAA,MAAAA,CAAAA,CAAAA;AACrC,cAAMsyC,SAAYJ,GAAAA,MAAAA,GAASlyC,MAASsjB,GAAAA,IAAAA,CAAKtjB,QAAQ+xC,UAAW;QAE5D,IAAIM,WAAAA,CAAYr2C,MAAM,EAAE;AACtB,gBAAI,CAAC01C,gBAAgB,CAACW,aAAaF,YAAartC,CAAAA,IAAI,EAAE,KAAK;SAC5D;AAED,YAAIwtC,SAAUt2C,CAAAA,MAAM,IAAIm2C,YAAAA,CAAartC,IAAI,EAAE;AACzC,gBAAI,CAAC4sC,gBAAgB,CAACY,WAAWH,YAAartC,CAAAA,IAAI,EAAE,IAAI;SACzD;AACH;AAIA,CACA0qC,aAActyB,CAAAA,CAAC,EAAEg1B,MAAM,EAAE;AACvB,cAAM7/B,IAAO;YACXtV,KAAOmgB,EAAAA,CAAAA;AACPg1B,YAAAA,MAAAA;AACA7M,YAAAA,UAAAA,EAAY,IAAI;YAChBgG,WAAa,MAAI,CAAC/lB,aAAa,CAACpI,CAAAA,CAAAA;AAClC;QACA,MAAMq1B,WAAAA,GAAc,CAACpN,MAAW,GAACA,CAAAA,MAAOpjC,CAAAA,OAAO,CAAC6tC,MAAM,IAAI,IAAI,CAAC7tC,OAAO,CAAC6tC,MAAM,EAAEnoB,QAAQ,CAACvK,CAAAA,CAAE0Q,MAAM,CAAClzB,IAAI;QAErG,IAAI,IAAI,CAACm+B,aAAa,CAAC,eAAexmB,IAAMkgC,EAAAA,WAAAA,CAAAA,KAAiB,KAAK,EAAE;AAClE;SACD;QAED,MAAMnoB,OAAAA,GAAU,IAAI,CAACooB,YAAY,CAACt1B,CAAGg1B,EAAAA,MAAAA,EAAQ7/B,KAAKg5B,WAAW;QAE7Dh5B,IAAKgzB,CAAAA,UAAU,GAAG,KAAK;AACvB,YAAI,CAACxM,aAAa,CAAC,cAAcxmB,IAAMkgC,EAAAA,WAAAA,CAAAA,CAAAA;QAEvC,IAAInoB,OAAAA,IAAW/X,IAAK+X,CAAAA,OAAO,EAAE;AAC3B,gBAAI,CAACqjB,MAAM;SACZ;AAED,eAAO,IAAI;AACb;AASA,CACA+E,aAAat1B,CAAC,EAAEg1B,MAAM,EAAE7G,WAAW,EAAE;QACnC,MAAM,EAACjvC,SAAS21C,UAAa,KAAE,GAAEhwC,OAAAA,GAAQ,GAAG,IAAI;AAehD,cAAMqjB,gBAAmB8sB,GAAAA,MAAAA,CAAAA;AACzB,cAAMlyC,SAAS,IAAI,CAACyyC,kBAAkB,CAACv1B,CAAAA,EAAG60B,YAAY1G,WAAajmB,EAAAA,gBAAAA,CAAAA,CAAAA;AACnE,cAAMkmB,UAAUoH,8DAAcx1B,CAAAA,CAAAA,CAAAA,CAAAA;AAC9B,cAAMkuB,YAAYD,kBAAmBjuB,CAAAA,CAAAA,EAAG,IAAI,CAACkvB,UAAU,EAAEf,WAAaC,EAAAA,OAAAA,CAAAA,CAAAA;AAEtE,YAAID,WAAa;YAGf,IAAI,CAACe,UAAU,GAAG,IAAI;YAGtBhH,6DAAarjC,CAAAA,OAAAA,CAAQ4wC,OAAO,EAAE;AAACz1B,gBAAAA,CAAAA;AAAGld,gBAAAA,MAAAA;gBAAQ,IAAI;AAAC,eAAE,IAAI;AAErD,gBAAIsrC,OAAS;gBACXlG,6DAAarjC,CAAAA,OAAAA,CAAQkb,OAAO,EAAE;AAACC,oBAAAA,CAAAA;AAAGld,oBAAAA,MAAAA;oBAAQ,IAAI;AAAC,mBAAE,IAAI;aACtD;SACF;QAED,MAAMoqB,OAAAA,GAAU,CAAC4nB,8DAAAA,CAAehyC,MAAQ+xC,EAAAA,UAAAA,CAAAA,CAAAA;AACxC,YAAI3nB,WAAW8nB,MAAQ;YACrB,IAAI,CAAC91C,OAAO,GAAG4D,MAAAA,CAAAA;AACf,gBAAI,CAACyvC,kBAAkB,CAACzvC,MAAAA,EAAQ+xC,UAAYG,EAAAA,MAAAA,CAAAA,CAAAA;SAC7C;QAED,IAAI,CAAC9F,UAAU,GAAGhB,SAAAA,CAAAA;QAElB,OAAOhhB,OAAAA,CAAAA;AACT;AAUAqoB,CAAAA,kBAAAA,CAAmBv1B,CAAC,EAAE60B,UAAU,EAAE1G,WAAW,EAAEjmB,gBAAgB,EAAE;QAC/D,IAAIlI,CAAAA,CAAExiB,IAAI,KAAK,UAAY;AACzB,mBAAO,EAAE;SACV;AAED,YAAI,CAAC2wC,WAAa;YAEhB,OAAO0G,UAAAA,CAAAA;SACR;AAED,cAAMI,YAAe,OAAI,CAACpwC,OAAO,CAACqwC,KAAK;QACvC,OAAO,IAAI,CAACzB,yBAAyB,CAACzzB,GAAGi1B,YAAartC,CAAAA,IAAI,EAAEqtC,YAAc/sB,EAAAA,gBAAAA,CAAAA,CAAAA;AAC5E;AACF;AAGA,SAASwmB,iBAAoB;IAC3B,OAAO1gB,6DAAAA,CAAKwgB,MAAMZ,SAAS,EAAE,CAACvwC,KAAUA,GAAAA,KAAAA,CAAMiyC,QAAQ,CAAClH,UAAU;AACnE;;AClwCA,SAASsN,QAAQrpC,GAA6B,EAAEjB,OAAmB,EAAEmS,QAAgB,EAAE;AACrF,UAAM,EAACD,UAAAA,GAAYq4B,WAAAA,GAAarvC,CAAAA,GAAGC,CAAAA,GAAG6Z,WAAAA,GAAaD,WAAAA,GAAY,GAAG/U,OAAAA,CAAAA;AAClE,QAAIwqC,cAAcD,WAAcv1B,GAAAA,WAAAA,CAAAA;;;AAIhC/T,IAAAA,GAAAA,CAAI+2B,SAAS;AACb/2B,IAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAAA,EAAGC,GAAG6Z,WAAa9C,EAAAA,UAAAA,GAAas4B,aAAar4B,QAAWq4B,GAAAA,WAAAA,CAAAA,CAAAA;AAChE,QAAIz1B,cAAcw1B,WAAa;AAC7BC,QAAAA,WAAAA,GAAcD,WAAcx1B,GAAAA,WAAAA,CAAAA;QAC5B9T,GAAI2V,CAAAA,GAAG,CAAC1b,CAAGC,EAAAA,CAAAA,EAAG4Z,aAAa5C,QAAWq4B,GAAAA,WAAAA,EAAat4B,UAAas4B,GAAAA,WAAAA,EAAa,IAAI;KAC5E;AACLvpC,QAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAAA,EAAGC,GAAGovC,WAAap4B,EAAAA,QAAAA,GAAWa,yDAAOA,EAAEd,UAAac,GAAAA,yDAAAA,CAAAA,CAAAA;KAC7D;AACD/R,IAAAA,GAAAA,CAAIwpC,SAAS;AACbxpC,IAAAA,GAAAA,CAAI4F,IAAI;AACV;AAEA,SAAS6jC,eAAAA,CAAgBvwC,KAAK,EAAE;AAC9B,WAAOwwC,8DAAiBA,CAACxwC,KAAO;AAAC;AAAc;AAAY;AAAc;AAAW;AACtF;AAEA;;IAGA,SAASywC,oBAAkBh0B,GAAe,EAAE7B,WAAmB,EAAEC,WAAmB,EAAE61B,UAAkB,EAAE;AACxG,UAAMC,CAAIJ,GAAAA,eAAAA,CAAgB9zB,GAAInd,CAAAA,OAAO,CAACsxC,YAAY;AAClD,UAAMC,aAAgB,GAACh2B,CAAAA,WAAAA,GAAcD,WAAU,IAAK;AACpD,UAAMk2B,aAAap4C,IAAKC,CAAAA,GAAG,CAACk4C,aAAAA,EAAeH,aAAa91B,WAAc;;;;;;;;IAStE,MAAMm2B,iBAAAA,GAAoB,CAACt7B,GAAQ;QACjC,MAAMu7B,aAAAA,GAAgB,CAACn2B,WAAcniB,GAAAA,IAAAA,CAAKC,GAAG,CAACk4C,aAAAA,EAAep7B,GAAG,KAAKi7B,UAAa;AAClF,eAAOrZ,6DAAWA,CAAC5hB,GAAK,KAAG/c,IAAKC,CAAAA,GAAG,CAACk4C,aAAeG,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AACrD;IAEA,OAAO;QACLC,UAAYF,EAAAA,iBAAAA,CAAkBJ,EAAEM,UAAU;QAC1CC,QAAUH,EAAAA,iBAAAA,CAAkBJ,EAAEO,QAAQ;AACtCC,QAAAA,UAAAA,EAAY9Z,6DAAYsZ,CAAAA,CAAAA,CAAEQ,UAAU,EAAE,CAAGL,EAAAA,UAAAA,CAAAA;AACzCM,QAAAA,QAAAA,EAAU/Z,6DAAYsZ,CAAAA,CAAAA,CAAES,QAAQ,EAAE,CAAGN,EAAAA,UAAAA,CAAAA;AACvC;AACF;AAEA;;IAGA,SAASO,WAAW9vC,CAAS,EAAE+vC,KAAa,EAAEvwC,CAAS,EAAEC,CAAS,EAAE;IAClE,OAAO;AACLD,QAAAA,CAAAA,EAAGA,CAAIQ,GAAAA,CAAAA,GAAI7I,IAAKwf,CAAAA,GAAG,CAACo5B,KAAAA,CAAAA;AACpBtwC,QAAAA,CAAAA,EAAGA,CAAIO,GAAAA,CAAAA,GAAI7I,IAAK0f,CAAAA,GAAG,CAACk5B,KAAAA,CAAAA;AACtB;AACF;AAGA;;;;;;;;;;;;;AAaC,IACD,SAASC,OAAAA,CACPzqC,GAA6B,EAC7BjB,OAAmB,EACnByO,MAAc,EACd8E,OAAe,EACfzY,GAAW,EACXge,QAAiB,EACjB;AACA,UAAM,EAAC5d,CAAAA,GAAGC,CAAAA,GAAG+W,UAAAA,EAAYnf,KAAK,GAAEw3C,WAAW,GAAEx1B,WAAa42B,EAAAA,MAAAA,GAAO,GAAG3rC,OAAAA,CAAAA;IAEpE,MAAMgV,WAAAA,GAAcniB,KAAKoC,GAAG,CAAC+K,QAAQgV,WAAW,GAAGzB,OAAU9E,GAAAA,MAAAA,GAAS87B,WAAa;AACnF,UAAMx1B,cAAc42B,MAAS,OAAIA,SAASp4B,OAAU9E,GAAAA,MAAAA,GAAS87B,cAAc,CAAC;AAE5E,QAAIqB,aAAgB;AACpB,UAAMC,QAAQ/wC,GAAM/H,GAAAA,KAAAA,CAAAA;AAEpB,QAAIwgB,OAAS;;;;AAIX,cAAMu4B,oBAAuBH,GAAAA,MAAAA,GAAS,CAAIA,GAAAA,MAAAA,GAASp4B,UAAU,CAAC;AAC9D,cAAMw4B,oBAAuB/2B,GAAAA,WAAAA,GAAc,CAAIA,GAAAA,WAAAA,GAAczB,UAAU,CAAC;AACxE,cAAMy4B,kBAAqB,GAACF,CAAAA,oBAAAA,GAAuBC,oBAAmB,IAAK;QAC3E,MAAME,aAAAA,GAAgBD,kBAAuB,SAAI,KAACH,GAAQG,sBAAuBA,kBAAAA,GAAqBz4B,OAAM,IAAKs4B,KAAK;AACtHD,QAAAA,aAAAA,GAAgB,CAACC,KAAQI,GAAAA,aAAY,IAAK;KAC3C;IAED,MAAMC,IAAAA,GAAOr5C,KAAKoC,GAAG,CAAC,OAAO42C,KAAQ72B,GAAAA,WAAAA,GAAcvG,SAASyE,yDAAM8B,CAAAA,GAAAA,WAAAA,CAAAA;AAClE,UAAMm3B,WAAc,GAACN,CAAAA,KAAAA,GAAQK,IAAG,IAAK;IACrC,MAAMh6B,UAAAA,GAAanf,QAAQo5C,WAAcP,GAAAA,aAAAA,CAAAA;IACzC,MAAMz5B,QAAAA,GAAWrX,MAAMqxC,WAAcP,GAAAA,aAAAA,CAAAA;AACrC,UAAM,EAACR,UAAAA,GAAYC,QAAAA,GAAUC,UAAU,GAAEC,QAAQ,GAAC,GAAGX,mBAAAA,CAAkB5qC,OAAS+U,EAAAA,WAAAA,EAAaC,aAAa7C,QAAWD,GAAAA,UAAAA,CAAAA,CAAAA;AAErH,UAAMk6B,2BAA2Bp3B,WAAco2B,GAAAA,UAAAA,CAAAA;AAC/C,UAAMiB,yBAAyBr3B,WAAcq2B,GAAAA,QAAAA,CAAAA;IAC7C,MAAMiB,uBAAAA,GAA0Bp6B,aAAak5B,UAAagB,GAAAA,wBAAAA,CAAAA;IAC1D,MAAMG,qBAAAA,GAAwBp6B,WAAWk5B,QAAWgB,GAAAA,sBAAAA,CAAAA;AAEpD,UAAMG,2BAA2Bz3B,WAAcu2B,GAAAA,UAAAA,CAAAA;AAC/C,UAAMmB,yBAAyB13B,WAAcw2B,GAAAA,QAAAA,CAAAA;IAC7C,MAAMmB,uBAAAA,GAA0Bx6B,aAAao5B,UAAakB,GAAAA,wBAAAA,CAAAA;IAC1D,MAAMG,qBAAAA,GAAwBx6B,WAAWo5B,QAAWkB,GAAAA,sBAAAA,CAAAA;AAEpDxrC,IAAAA,GAAAA,CAAI+2B,SAAS;AAEb,QAAIlf,QAAU;;AAEZ,cAAM8zB,qBAAwB,GAACN,CAAAA,uBAAAA,GAA0BC,qBAAoB,IAAK;AAClFtrC,QAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAGC,EAAAA,CAAAA,EAAG6Z,aAAas3B,uBAAyBM,EAAAA,qBAAAA,CAAAA,CAAAA;AACpD3rC,QAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAGC,EAAAA,CAAAA,EAAG6Z,aAAa43B,qBAAuBL,EAAAA,qBAAAA,CAAAA,CAAAA;;AAGlD,YAAIlB,WAAW,CAAG;AAChB,kBAAMwB,OAAUrB,GAAAA,UAAAA,CAAWa,sBAAwBE,EAAAA,qBAAAA,EAAuBrxC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YAC7E8F,GAAI2V,CAAAA,GAAG,CAACi2B,OAAAA,CAAQ3xC,CAAC,EAAE2xC,QAAQ1xC,CAAC,EAAEkwC,QAAUkB,EAAAA,qBAAAA,EAAuBp6B,QAAWa,GAAAA,yDAAAA,CAAAA,CAAAA;SAC3E;;AAGD,cAAM85B,EAAKtB,GAAAA,UAAAA,CAAWiB,sBAAwBt6B,EAAAA,QAAAA,EAAUjX,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AAC3D8F,QAAAA,GAAAA,CAAIi3B,MAAM,CAAC4U,EAAAA,CAAG5xC,CAAC,EAAE4xC,GAAG3xC,CAAC;;AAGrB,YAAIowC,WAAW,CAAG;AAChB,kBAAMsB,OAAUrB,GAAAA,UAAAA,CAAWiB,sBAAwBE,EAAAA,qBAAAA,EAAuBzxC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AAC7E8F,YAAAA,GAAAA,CAAI2V,GAAG,CAACi2B,OAAQ3xC,CAAAA,CAAC,EAAE2xC,OAAAA,CAAQ1xC,CAAC,EAAEowC,QAAUp5B,EAAAA,QAAAA,GAAWa,yDAAS25B,EAAAA,qBAAAA,GAAwB95C,KAAKqgB,EAAE;SAC5F;;AAGD,cAAM65B,qBAAwB,GAAC,CAAC56B,QAAYo5B,GAAAA,QAAAA,GAAWx2B,WAAiB7C,IAAAA,UAAco5B,GAAAA,UAAAA,GAAav2B,WAAW,CAAC,IAAK;QACpH9T,GAAI2V,CAAAA,GAAG,CAAC1b,CAAGC,EAAAA,CAAAA,EAAG4Z,aAAa5C,QAAYo5B,GAAAA,QAAAA,GAAWx2B,WAAcg4B,EAAAA,qBAAAA,EAAuB,IAAI;QAC3F9rC,GAAI2V,CAAAA,GAAG,CAAC1b,CAAGC,EAAAA,CAAAA,EAAG4Z,aAAag4B,qBAAuB76B,EAAAA,UAAAA,GAAco5B,UAAav2B,GAAAA,WAAAA,EAAc,IAAI;;AAG/F,YAAIu2B,aAAa,CAAG;AAClB,kBAAMuB,OAAUrB,GAAAA,UAAAA,CAAWgB,wBAA0BE,EAAAA,uBAAAA,EAAyBxxC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AACjF8F,YAAAA,GAAAA,CAAI2V,GAAG,CAACi2B,OAAQ3xC,CAAAA,CAAC,EAAE2xC,OAAAA,CAAQ1xC,CAAC,EAAEmwC,UAAYoB,EAAAA,uBAAAA,GAA0B75C,IAAKqgB,CAAAA,EAAE,EAAEhB,UAAac,GAAAA,yDAAAA,CAAAA,CAAAA;SAC3F;;AAGD,cAAMg6B,EAAKxB,GAAAA,UAAAA,CAAWY,wBAA0Bl6B,EAAAA,UAAAA,EAAYhX,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AAC/D8F,QAAAA,GAAAA,CAAIi3B,MAAM,CAAC8U,EAAAA,CAAG9xC,CAAC,EAAE8xC,GAAG7xC,CAAC;;AAGrB,YAAIiwC,aAAa,CAAG;AAClB,kBAAMyB,OAAUrB,GAAAA,UAAAA,CAAWY,wBAA0BE,EAAAA,uBAAAA,EAAyBpxC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YACjF8F,GAAI2V,CAAAA,GAAG,CAACi2B,OAAAA,CAAQ3xC,CAAC,EAAE2xC,QAAQ1xC,CAAC,EAAEiwC,UAAYl5B,EAAAA,UAAAA,GAAac,yDAASs5B,EAAAA,uBAAAA,CAAAA,CAAAA;SACjE;KACI;QACLrrC,GAAIg3B,CAAAA,MAAM,CAAC/8B,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AAEd,cAAM8xC,WAAcp6C,GAAAA,IAAAA,CAAKwf,GAAG,CAACi6B,2BAA2Bt3B,WAAc9Z,GAAAA,CAAAA,CAAAA;AACtE,cAAMgyC,WAAcr6C,GAAAA,IAAAA,CAAK0f,GAAG,CAAC+5B,2BAA2Bt3B,WAAc7Z,GAAAA,CAAAA,CAAAA;QACtE8F,GAAIi3B,CAAAA,MAAM,CAAC+U,WAAaC,EAAAA,WAAAA,CAAAA,CAAAA;AAExB,cAAMC,SAAYt6C,GAAAA,IAAAA,CAAKwf,GAAG,CAACk6B,yBAAyBv3B,WAAc9Z,GAAAA,CAAAA,CAAAA;AAClE,cAAMkyC,SAAYv6C,GAAAA,IAAAA,CAAK0f,GAAG,CAACg6B,yBAAyBv3B,WAAc7Z,GAAAA,CAAAA,CAAAA;QAClE8F,GAAIi3B,CAAAA,MAAM,CAACiV,SAAWC,EAAAA,SAAAA,CAAAA,CAAAA;KACvB;AAEDnsC,IAAAA,GAAAA,CAAIwpC,SAAS;AACf;AAEA,SAAS4C,OAAAA,CACPpsC,GAA6B,EAC7BjB,OAAmB,EACnByO,MAAc,EACd8E,OAAe,EACfuF,QAAiB,EACjB;AACA,UAAM,EAACw0B,WAAW,GAAEp7B,aAAYP,aAAAA,GAAc,GAAG3R,OAAAA,CAAAA;IACjD,IAAImS,QAAAA,GAAWnS,QAAQmS,QAAQ;AAC/B,QAAIm7B,WAAa;AACf5B,QAAAA,OAAAA,CAAQzqC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQ8E,EAAAA,OAAAA,EAASpB,QAAU2G,EAAAA,QAAAA,CAAAA,CAAAA;AACjD,YAAK,IAAInlB,CAAI,MAAGA,CAAI25C,GAAAA,WAAAA,EAAa,EAAE35C,CAAG;AACpCsN,YAAAA,GAAAA,CAAIiB,IAAI;AACV;QACA,IAAI,CAAC2N,MAAM8B,aAAgB;AACzBQ,YAAAA,QAAAA,GAAWD,UAAcP,IAAAA,aAAgBM,GAAAA,yDAAAA,IAAOA,yDAAE;SACnD;KACF;AACDy5B,IAAAA,OAAAA,CAAQzqC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQ8E,EAAAA,OAAAA,EAASpB,QAAU2G,EAAAA,QAAAA,CAAAA,CAAAA;AACjD7X,IAAAA,GAAAA,CAAIiB,IAAI;IACR,OAAOiQ,QAAAA,CAAAA;AACT;AAEA,SAASkmB,UAAAA,CACPp3B,GAA6B,EAC7BjB,OAAmB,EACnByO,MAAc,EACd8E,OAAe,EACfuF,QAAiB,EACjB;IACA,MAAM,EAACw0B,cAAap7B,UAAAA,GAAYP,aAAa,GAAElY,OAAO,GAAC,GAAGuG,OAAAA,CAAAA;IAC1D,MAAM,EAAC0U,cAAa64B,eAAAA,GAAiBhY,UAAU,GAAEE,gBAAgB,GAAC,GAAGh8B,OAAAA,CAAAA;IACrE,MAAM+zC,KAAAA,GAAQ/zC,OAAQud,CAAAA,WAAW,KAAK;AAEtC,QAAI,CAACtC,WAAa;AAChB;KACD;IAEDzT,GAAI62B,CAAAA,WAAW,CAACvC,UAAAA,IAAc,EAAE;AAChCt0B,IAAAA,GAAAA,CAAI82B,cAAc,GAAGtC,gBAAAA,CAAAA;AAErB,QAAI+X,KAAO;QACTvsC,GAAIwT,CAAAA,SAAS,GAAGC,WAAc;QAC9BzT,GAAIwsC,CAAAA,QAAQ,GAAGF,eAAmB;KAC7B;AACLtsC,QAAAA,GAAAA,CAAIwT,SAAS,GAAGC,WAAAA,CAAAA;QAChBzT,GAAIwsC,CAAAA,QAAQ,GAAGF,eAAmB;KACnC;IAED,IAAIp7B,QAAAA,GAAWnS,QAAQmS,QAAQ;AAC/B,QAAIm7B,WAAa;AACf5B,QAAAA,OAAAA,CAAQzqC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQ8E,EAAAA,OAAAA,EAASpB,QAAU2G,EAAAA,QAAAA,CAAAA,CAAAA;AACjD,YAAK,IAAInlB,CAAI,MAAGA,CAAI25C,GAAAA,WAAAA,EAAa,EAAE35C,CAAG;AACpCsN,YAAAA,GAAAA,CAAIk3B,MAAM;AACZ;QACA,IAAI,CAACtoB,MAAM8B,aAAgB;AACzBQ,YAAAA,QAAAA,GAAWD,UAAcP,IAAAA,aAAgBM,GAAAA,yDAAAA,IAAOA,yDAAE;SACnD;KACF;AAED,QAAIu7B,KAAO;AACTlD,QAAAA,OAAAA,CAAQrpC,KAAKjB,OAASmS,EAAAA,QAAAA,CAAAA,CAAAA;KACvB;AAED,QAAI,CAACm7B,WAAa;AAChB5B,QAAAA,OAAAA,CAAQzqC,GAAKjB,EAAAA,OAAAA,EAASyO,MAAQ8E,EAAAA,OAAAA,EAASpB,QAAU2G,EAAAA,QAAAA,CAAAA,CAAAA;AACjD7X,QAAAA,GAAAA,CAAIk3B,MAAM;KACX;AACH;AAUe,MAAMuV,UAAmBplB,SAAAA,OAAAA,CAAAA;AAEtC,WAAO1qB,KAAK,KAAM;AAElB,WAAO9E,QAAW;QAChBke,WAAa;QACbzC,WAAa;AACbghB,QAAAA,UAAAA,EAAY,EAAE;QACdE,gBAAkB;QAClB8X,eAAiBx7C,EAAAA,SAAAA;QACjBg5C,YAAc;QACdr2B,WAAa;QACbjG,MAAQ;QACR8E,OAAS;QACTZ,KAAO5gB,EAAAA,SAAAA;AACP+mB,QAAAA,QAAAA,EAAU,IAAI;KACd;AAEF,WAAOyP,aAAgB;QACrBlU,eAAiB;KACjB;AAEF,WAAOb,WAAc;AACnBC,QAAAA,WAAAA,EAAa,IAAI;QACjBC,UAAY,GAACzD,OAASA,IAAS;KAC/B;IAEF0B,aAAsB;IACtBQ,QAAiB;IACjBm7B,WAAoB;IACpBv4B,WAAoB;IACpBC,WAAoB;IACpBu1B,WAAoB;IACpBr4B,UAAmB;AAEnBzgB,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK;QAEL,IAAI,CAACmD,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAAC4f,aAAa,GAAG5f,SAAAA,CAAAA;QACrB,IAAI,CAACmgB,UAAU,GAAGngB,SAAAA,CAAAA;QAClB,IAAI,CAACogB,QAAQ,GAAGpgB,SAAAA,CAAAA;QAChB,IAAI,CAACgjB,WAAW,GAAGhjB,SAAAA,CAAAA;QACnB,IAAI,CAACijB,WAAW,GAAGjjB,SAAAA,CAAAA;QACnB,IAAI,CAACw4C,WAAW,GAAG;QACnB,IAAI,CAAC+C,WAAW,GAAG;AAEnB,YAAIh3C,GAAK;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;AACH;AAEA6mB,IAAAA,OAAAA,CAAQwwB,MAAc,EAAEC,MAAc,EAAE9wB,gBAAyB,EAAE;AACjE,cAAMzL,KAAQ,OAAI,CAACgM,QAAQ,CAAC;AAAC;AAAK;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;AACxC,cAAM,EAACnK,KAAK,GAAEiL,WAAS,GAAGN,6DAAiBA,CAACjM,KAAO;YAACnW,CAAGyyC,EAAAA,MAAAA;YAAQxyC,CAAGyyC,EAAAA,MAAAA;AAAM;AACxE,cAAM,EAAC17B,UAAAA,GAAYC,QAAAA,GAAU4C,WAAW,GAAEC,WAAW,GAAErD,gBAAc,GAAG,IAAI,CAAC0L,QAAQ,CAAC;AACpF;AACA;AACA;AACA;AACA;SACD,EAAEP,gBAAAA,CAAAA,CAAAA;AACH,cAAM+wB,OAAU,GAAC,KAAI,CAACp0C,OAAO,CAAC8Z,OAAO,GAAG,IAAI,CAAC9Z,OAAO,CAACib,WAAW,IAAI;QACpE,MAAM6B,cAAAA,GAAiB5T,6DAAegP,CAAAA,aAAAA,EAAeQ,QAAWD,GAAAA,UAAAA,CAAAA,CAAAA;AAChE,cAAM47B,aAAgBv3B,GAAAA,cAAAA,IAAkBtE,yDAAOW,IAAAA,6DAAAA,CAAcD,OAAOT,UAAYC,EAAAA,QAAAA,CAAAA,CAAAA;AAChF,cAAM47B,YAAeC,GAAAA,8DAAAA,CAAWpwB,QAAU7I,EAAAA,WAAAA,GAAc84B,SAAS74B,WAAc64B,GAAAA,OAAAA,CAAAA,CAAAA;AAE/E,eAAQC,aAAiBC,IAAAA,YAAAA,CAAAA;AAC3B;AAEArwB,IAAAA,cAAAA,CAAeZ,gBAAyB,EAAE;AACxC,cAAM,EAAC5hB,CAAC,GAAEC,CAAC,GAAE+W,aAAYC,QAAAA,GAAU4C,WAAAA,GAAaC,WAAW,GAAC,GAAG,IAAI,CAACqI,QAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;SACD,EAAEP,gBAAAA,CAAAA,CAAAA;QACH,MAAM,EAACrO,SAAQ8E,OAAAA,GAAQ,GAAG,IAAI,CAAC9Z,OAAO;AACtC,cAAMw0C,SAAY,GAAC/7B,CAAAA,UAAAA,GAAaC,QAAO,IAAK;AAC5C,cAAM+7B,aAAa,CAACn5B,cAAcC,WAAczB,GAAAA,OAAAA,GAAU9E,MAAK,IAAK;QACpE,OAAO;AACLvT,YAAAA,CAAAA,EAAGA,CAAIrI,GAAAA,IAAAA,CAAKwf,GAAG,CAAC47B,SAAaC,CAAAA,GAAAA,UAAAA;AAC7B/yC,YAAAA,CAAAA,EAAGA,CAAItI,GAAAA,IAAAA,CAAK0f,GAAG,CAAC07B,SAAaC,CAAAA,GAAAA,UAAAA;AAC/B;AACF;AAEA1lB,IAAAA,eAAAA,CAAgB1L,gBAAyB,EAAE;QACzC,OAAO,IAAI,CAACY,cAAc,CAACZ,gBAAAA,CAAAA,CAAAA;AAC7B;AAEAlpB,IAAAA,IAAAA,CAAKqN,GAA6B,EAAE;AAClC,cAAM,EAACxH,OAAO,GAAEkY,aAAa,GAAC,GAAG,IAAI;AACrC,cAAMlD,SAAS,CAAChV,QAAQgV,MAAM,IAAI,KAAK;AACvC,cAAM8E,UAAU,CAAC9Z,QAAQ8Z,OAAO,IAAI,KAAK;QACzC,MAAMuF,QAAAA,GAAWrf,QAAQqf,QAAQ;QACjC,IAAI,CAACyxB,WAAW,GAAI9wC,QAAQud,WAAW,KAAK,OAAW,UAAO,CAAC;QAC/D,IAAI,CAACs2B,WAAW,GAAG37B,aAAgBM,GAAAA,yDAAAA,GAAMpf,KAAKoE,KAAK,CAAC0a,aAAgBM,GAAAA,yDAAAA,CAAAA,GAAO,CAAC;QAE5E,IAAIN,aAAAA,KAAkB,CAAK,QAAI,CAACoD,WAAW,GAAG,KAAK,IAAI,CAACC,WAAW,GAAG,CAAG;AACvE;SACD;AAED/T,QAAAA,GAAAA,CAAIq2B,IAAI;QAER,MAAM2W,SAAAA,GAAY,CAAC,IAAI,CAAC/7B,UAAU,GAAG,IAAI,CAACC,QAAO,IAAK;QACtDlR,GAAIktC,CAAAA,SAAS,CAACt7C,IAAAA,CAAKwf,GAAG,CAAC47B,aAAax/B,MAAQ5b,EAAAA,IAAAA,CAAK0f,GAAG,CAAC07B,SAAax/B,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;QAClE,MAAM2/B,GAAAA,GAAM,IAAIv7C,IAAK0f,CAAAA,GAAG,CAAC1f,IAAKC,CAAAA,GAAG,CAACogB,yDAAAA,EAAIvB,aAAiB;AACvD,cAAM08B,eAAe5/B,MAAS2/B,GAAAA,GAAAA,CAAAA;QAE9BntC,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ4a,eAAe;QACvCpT,GAAIqT,CAAAA,WAAW,GAAG7a,OAAAA,CAAQ8a,WAAW;AAErC84B,QAAAA,OAAAA,CAAQpsC,GAAK,MAAI,EAAEotC,YAAAA,EAAc96B,OAASuF,EAAAA,QAAAA,CAAAA,CAAAA;AAC1Cuf,QAAAA,UAAAA,CAAWp3B,GAAK,MAAI,EAAEotC,YAAAA,EAAc96B,OAASuF,EAAAA,QAAAA,CAAAA,CAAAA;AAE7C7X,QAAAA,GAAAA,CAAIu2B,OAAO;AACb;AACF;;AClXA,SAAS8W,SAASrtC,GAAG,EAAExH,OAAO,EAAEya,KAAAA,GAAQza,OAAO,EAAE;AAC/CwH,IAAAA,GAAAA,CAAIstC,OAAO,GAAG5rC,6DAAAA,CAAeuR,MAAMs6B,cAAc,EAAE/0C,QAAQ+0C,cAAc;AACzEvtC,IAAAA,GAAAA,CAAI62B,WAAW,CAACn1B,6DAAAA,CAAeuR,MAAMqhB,UAAU,EAAE97B,QAAQ87B,UAAU;AACnEt0B,IAAAA,GAAAA,CAAI82B,cAAc,GAAGp1B,6DAAAA,CAAeuR,MAAMuhB,gBAAgB,EAAEh8B,QAAQg8B,gBAAgB;AACpFx0B,IAAAA,GAAAA,CAAIwsC,QAAQ,GAAG9qC,6DAAAA,CAAeuR,MAAMq5B,eAAe,EAAE9zC,QAAQ8zC,eAAe;AAC5EtsC,IAAAA,GAAAA,CAAIwT,SAAS,GAAG9R,6DAAAA,CAAeuR,MAAMQ,WAAW,EAAEjb,QAAQib,WAAW;AACrEzT,IAAAA,GAAAA,CAAIqT,WAAW,GAAG3R,6DAAAA,CAAeuR,MAAMK,WAAW,EAAE9a,QAAQ8a,WAAW;AACzE;AAEA,SAAS2jB,OAAOj3B,GAAG,EAAEwtC,QAAQ,EAAEl4C,MAAM,EAAE;AACrC0K,IAAAA,GAAAA,CAAIi3B,MAAM,CAAC3hC,MAAAA,CAAO2E,CAAC,EAAE3E,OAAO4E,CAAC;AAC/B;AAKA,UAASuzC,aAAcj1C,CAAAA,OAAO,EAAE;IAC9B,IAAIA,OAAAA,CAAQk1C,OAAO,EAAE;QACnB,OAAOC,0DAAAA,CAAAA;KACR;AAED,QAAIn1C,QAAQo1C,OAAO,IAAIp1C,OAAQq1C,CAAAA,sBAAsB,KAAK,UAAY;QACpE,OAAOC,0DAAAA,CAAAA;KACR;IAED,OAAO7W,MAAAA,CAAAA;AACT;AAEA,SAAS8W,QAAAA,CAAS59B,MAAM,EAAE2G,OAAO,EAAEwH,MAAS,KAAE,EAAE;IAC9C,MAAMza,KAAAA,GAAQsM,OAAO1d,MAAM;AAC3B,UAAM,EAACX,KAAAA,EAAOk8C,WAAc,IAAC,GAAEn0C,GAAKo0C,EAAAA,SAAAA,GAAYpqC,KAAQ,IAAC,GAAC,GAAGya,MAAAA,CAAAA;AAC7D,UAAM,EAACxsB,KAAOo8C,EAAAA,YAAAA,GAAcr0C,GAAKs0C,EAAAA,UAAAA,GAAW,GAAGr3B,OAAAA,CAAAA;AAC/C,UAAMhlB,KAAQF,GAAAA,IAAAA,CAAKoC,GAAG,CAACg6C,WAAaE,EAAAA,YAAAA,CAAAA,CAAAA;AACpC,UAAMr0C,GAAMjI,GAAAA,IAAAA,CAAKC,GAAG,CAACo8C,SAAWE,EAAAA,UAAAA,CAAAA,CAAAA;AAChC,UAAMC,UAAUJ,WAAcE,GAAAA,YAAAA,IAAgBD,YAAYC,YAAgBF,IAAAA,WAAAA,GAAcG,cAAcF,SAAYE,GAAAA,UAAAA,CAAAA;IAElH,OAAO;AACLtqC,QAAAA,KAAAA;AACA/R,QAAAA,KAAAA;AACAqE,QAAAA,IAAAA,EAAM2gB,QAAQ3gB,IAAI;QAClB8E,IAAMpB,EAAAA,GAAAA,GAAM/H,SAAS,CAACs8C,OAAAA,GAAUvqC,QAAQhK,GAAM/H,GAAAA,KAAAA,GAAQ+H,MAAM/H,KAAK;AACnE;AACF;AAiBA,UAASu8C,YAAYruC,GAAG,EAAEuW,IAAI,EAAEO,OAAO,EAAEwH,MAAM,EAAE;AAC/C,UAAM,EAACnO,MAAAA,GAAQ3X,OAAAA,GAAQ,GAAG+d,IAAAA,CAAAA;AAC1B,UAAM,EAAC1S,KAAAA,GAAO/R,KAAAA,GAAOqE,IAAAA,GAAM8E,IAAAA,GAAK,GAAG8yC,QAAS59B,CAAAA,MAAAA,EAAQ2G,OAASwH,EAAAA,MAAAA,CAAAA,CAAAA;AAC7D,UAAMgwB,aAAab,aAAcj1C,CAAAA,OAAAA,CAAAA,CAAAA;IAEjC,IAAI,EAACgQ,MAAO,IAAI,GAAE5O,OAAO,GAAC,GAAG0kB,MAAAA,IAAU,EAAC;AACxC,QAAI5rB,GAAG0d,KAAOpM,EAAAA,IAAAA,CAAAA;AAEd,QAAKtR,CAAI,MAAGA,CAAKuI,IAAAA,IAAAA,EAAM,EAAEvI,CAAG;AAC1B0d,QAAAA,KAAAA,GAAQD,MAAM,CAAC,CAACre,KAAS8H,IAAAA,OAAUqB,GAAAA,IAAAA,GAAOvI,CAAIA,GAAAA,CAAC,KAAKmR,KAAM;QAE1D,IAAIuM,KAAAA,CAAMG,IAAI,EAAE;YAEd,SAAS;AACX,eAAO,IAAI/H,IAAM;AACfxI,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC5mB,KAAAA,CAAMnW,CAAC,EAAEmW,MAAMlW,CAAC;AAC3BsO,YAAAA,IAAAA,GAAO,KAAK;SACP;AACL8lC,YAAAA,UAAAA,CAAWtuC,GAAKgE,EAAAA,IAAAA,EAAMoM,KAAOxW,EAAAA,OAAAA,EAASpB,QAAQk1C,OAAO;SACtD;QAED1pC,IAAOoM,GAAAA,KAAAA,CAAAA;AACT;AAEA,QAAIja,IAAM;AACRia,QAAAA,KAAAA,GAAQD,MAAM,CAAC,CAACre,KAAS8H,IAAAA,OAAUqB,GAAAA,IAAAA,GAAO,EAAC,IAAK4I,KAAM;AACtDyqC,QAAAA,UAAAA,CAAWtuC,GAAKgE,EAAAA,IAAAA,EAAMoM,KAAOxW,EAAAA,OAAAA,EAASpB,QAAQk1C,OAAO;KACtD;AAED,WAAO,CAAC,CAACv3C,IAAAA,CAAAA;AACX;AAiBA,UAASo4C,gBAAgBvuC,GAAG,EAAEuW,IAAI,EAAEO,OAAO,EAAEwH,MAAM,EAAE;IACnD,MAAMnO,MAAAA,GAASoG,KAAKpG,MAAM;IAC1B,MAAM,EAACtM,KAAK,GAAE/R,KAAK,GAAEmJ,OAAK,GAAG8yC,QAAS59B,CAAAA,MAAAA,EAAQ2G,OAASwH,EAAAA,MAAAA,CAAAA,CAAAA;IACvD,MAAM,EAAC9V,MAAO,IAAI,GAAE5O,OAAO,GAAC,GAAG0kB,MAAAA,IAAU,EAAC;AAC1C,QAAIkwB,IAAO;AACX,QAAIC,MAAS;AACb,QAAI/7C,CAAG0d,EAAAA,KAAAA,EAAOs+B,KAAOx8B,EAAAA,IAAAA,EAAMJ,IAAM68B,EAAAA,KAAAA,CAAAA;AAEjC,UAAMC,UAAa,IAAC1zC,KAAU,GAACpJ,CAAAA,KAAAA,IAAS8H,OAAAA,GAAUqB,IAAOC,GAAAA,KAAAA,GAAQA,KAAI,CAAC,IAAK2I,KAAAA,CAAAA;AAC3E,UAAMgrC,QAAQ,IAAM;AAClB,YAAI38B,SAASJ,IAAM;YAEjB9R,GAAIi3B,CAAAA,MAAM,CAACuX,IAAM18B,EAAAA,IAAAA,CAAAA,CAAAA;YACjB9R,GAAIi3B,CAAAA,MAAM,CAACuX,IAAMt8B,EAAAA,IAAAA,CAAAA,CAAAA;YAGjBlS,GAAIi3B,CAAAA,MAAM,CAACuX,IAAMG,EAAAA,KAAAA,CAAAA,CAAAA;SAClB;AACH;AAEA,QAAInmC,IAAM;QACR4H,KAAQD,GAAAA,MAAM,CAACy+B,UAAAA,CAAW,CAAG;AAC7B5uC,QAAAA,GAAAA,CAAIg3B,MAAM,CAAC5mB,KAAAA,CAAMnW,CAAC,EAAEmW,MAAMlW,CAAC;KAC5B;AAED,QAAKxH,CAAI,MAAGA,CAAKuI,IAAAA,IAAAA,EAAM,EAAEvI,CAAG;QAC1B0d,KAAQD,GAAAA,MAAM,CAACy+B,UAAAA,CAAWl8C,CAAG;QAE7B,IAAI0d,KAAAA,CAAMG,IAAI,EAAE;YAEd,SAAS;SACV;QAED,MAAMtW,CAAAA,GAAImW,MAAMnW,CAAC;QACjB,MAAMC,CAAAA,GAAIkW,MAAMlW,CAAC;QACjB,MAAM40C,MAAAA,GAAS70C,CAAI;AAEnB,YAAI60C,WAAWJ,KAAO;AAEpB,gBAAIx0C,IAAIgY,IAAM;gBACZA,IAAOhY,GAAAA,CAAAA,CAAAA;aACF,UAAIA,IAAI4X,IAAM;gBACnBA,IAAO5X,GAAAA,CAAAA,CAAAA;aACR;AAEDs0C,YAAAA,IAAAA,GAAO,CAACC,MAAAA,GAASD,IAAOv0C,GAAAA,CAAAA,IAAK,EAAEw0C,MAAAA,CAAAA;SAC1B;AACLI,YAAAA,KAAAA,EAAAA,CAAAA;YAGA7uC,GAAIi3B,CAAAA,MAAM,CAACh9B,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;YAEdw0C,KAAQI,GAAAA,MAAAA,CAAAA;YACRL,MAAS;AACTv8B,YAAAA,IAAAA,GAAOJ,IAAO5X,GAAAA,CAAAA,CAAAA;SACf;QAEDy0C,KAAQz0C,GAAAA,CAAAA,CAAAA;AACV;AACA20C,IAAAA,KAAAA,EAAAA,CAAAA;AACF;AAOA,UAASE,iBAAkBx4B,CAAAA,IAAI,EAAE;IAC/B,MAAM5c,IAAAA,GAAO4c,KAAK/d,OAAO;AACzB,UAAM87B,aAAa36B,IAAK26B,CAAAA,UAAU,IAAI36B,IAAK26B,CAAAA,UAAU,CAAC7hC,MAAM;IAC5D,MAAMu8C,WAAAA,GAAc,CAACz4B,IAAKM,CAAAA,UAAU,IAAI,CAACN,IAAAA,CAAKrgB,KAAK,IAAI,CAACyD,KAAKi0C,OAAO,IAAIj0C,KAAKk0C,sBAAsB,KAAK,cAAc,CAACl0C,IAAAA,CAAK+zC,OAAO,IAAI,CAACpZ,UAAAA,CAAAA;IACxI,OAAO0a,WAAAA,GAAcT,kBAAkBF,WAAW;AACpD;AAKA,UAASY,uBAAwBz2C,CAAAA,OAAO,EAAE;IACxC,IAAIA,OAAAA,CAAQk1C,OAAO,EAAE;QACnB,OAAOwB,0DAAAA,CAAAA;KACR;AAED,QAAI12C,QAAQo1C,OAAO,IAAIp1C,OAAQq1C,CAAAA,sBAAsB,KAAK,UAAY;QACpE,OAAOsB,0DAAAA,CAAAA;KACR;IAED,OAAOC,0DAAAA,CAAAA;AACT;AAEA,SAASC,mBAAAA,CAAoBrvC,GAAG,EAAEuW,IAAI,EAAEzkB,KAAK,EAAE+R,KAAK,EAAE;IACpD,IAAIyrC,IAAAA,GAAO/4B,KAAKg5B,KAAK;AACrB,QAAI,CAACD,IAAM;QACTA,IAAO/4B,GAAAA,IAAAA,CAAKg5B,KAAK,GAAG,IAAIC,MAAAA,EAAAA,CAAAA;AACxB,YAAIj5B,IAAK+4B,CAAAA,IAAI,CAACA,IAAAA,EAAMx9C,OAAO+R,KAAQ;AACjCyrC,YAAAA,IAAAA,CAAK9F,SAAS;SACf;KACF;IACD6D,QAASrtC,CAAAA,GAAAA,EAAKuW,KAAK/d,OAAO;AAC1BwH,IAAAA,GAAAA,CAAIk3B,MAAM,CAACoY,IAAAA,CAAAA,CAAAA;AACb;AAEA,SAASG,gBAAAA,CAAiBzvC,GAAG,EAAEuW,IAAI,EAAEzkB,KAAK,EAAE+R,KAAK,EAAE;AACjD,UAAM,EAAC6rC,QAAAA,GAAUl3C,OAAAA,GAAQ,GAAG+d,IAAAA,CAAAA;AAC5B,UAAMo5B,gBAAgBZ,iBAAkBx4B,CAAAA,IAAAA,CAAAA,CAAAA;IAExC,KAAK,MAAMO,WAAW44B,QAAU;QAC9BrC,QAASrtC,CAAAA,GAAAA,EAAKxH,OAASse,EAAAA,OAAAA,CAAQ7D,KAAK;AACpCjT,QAAAA,GAAAA,CAAI+2B,SAAS;QACb,IAAI4Y,aAAAA,CAAc3vC,GAAKuW,EAAAA,IAAAA,EAAMO,OAAS;AAAChlB,YAAAA,KAAAA;AAAO+H,YAAAA,GAAAA,EAAK/H,QAAQ+R,KAAQ;SAAK;AACtE7D,YAAAA,GAAAA,CAAIwpC,SAAS;SACd;AACDxpC,QAAAA,GAAAA,CAAIk3B,MAAM;AACZ;AACF;AAEA,MAAM0Y,SAAAA,GAAY,OAAOJ,MAAW;AAEpC,SAAS78C,IAAAA,CAAKqN,GAAG,EAAEuW,IAAI,EAAEzkB,KAAK,EAAE+R,KAAK,EAAE;AACrC,QAAI+rC,aAAa,CAACr5B,IAAAA,CAAK/d,OAAO,CAACse,OAAO,EAAE;QACtCu4B,mBAAoBrvC,CAAAA,GAAAA,EAAKuW,MAAMzkB,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;KACjC;QACL4rC,gBAAiBzvC,CAAAA,GAAAA,EAAKuW,MAAMzkB,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;KACpC;AACH;AAEe,MAAMgsC,WAAoBxoB,SAAAA,OAAAA,CAAAA;AAEvC,WAAO1qB,KAAK,MAAO;AAIlB,CACD,OAAO9E,QAAW;QAChB01C,cAAgB;AAChBjZ,QAAAA,UAAAA,EAAY,EAAE;QACdE,gBAAkB;QAClB8X,eAAiB;QACjB74B,WAAa;AACbq8B,QAAAA,eAAAA,EAAiB,IAAI;QACrBjC,sBAAwB;AACxB5sC,QAAAA,IAAAA,EAAM,KAAK;AACXqV,QAAAA,QAAAA,EAAU,KAAK;AACfo3B,QAAAA,OAAAA,EAAS,KAAK;QACdE,OAAS;KACT;AAID,CACD,OAAOtmB,aAAgB;QACrBlU,eAAiB;QACjBE,WAAa;KACb;AAGF,WAAOf,WAAc;AACnBC,QAAAA,WAAAA,EAAa,IAAI;AACjBC,QAAAA,UAAAA,EAAY,CAACzD,IAAAA,GAASA,IAAS,qBAAgBA,IAAS;KACxD;AAGFxe,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK;QAEL,IAAI,CAAC0hB,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACve,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAACwG,MAAM,GAAGxG,SAAAA,CAAAA;QACd,IAAI,CAACoF,KAAK,GAAGpF,SAAAA,CAAAA;QACb,IAAI,CAACioB,SAAS,GAAGjoB,SAAAA,CAAAA;QACjB,IAAI,CAACy+C,KAAK,GAAGz+C,SAAAA,CAAAA;QACb,IAAI,CAACi/C,OAAO,GAAGj/C,SAAAA,CAAAA;QACf,IAAI,CAACk/C,SAAS,GAAGl/C,SAAAA,CAAAA;QACjB,IAAI,CAAC+lB,UAAU,GAAG,KAAK;QACvB,IAAI,CAACo5B,cAAc,GAAG,KAAK;QAC3B,IAAI,CAACr5B,aAAa,GAAG9lB,SAAAA,CAAAA;AAErB,YAAIuE,GAAK;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;AACH;IAEAoiB,mBAAoB1R,CAAAA,SAAS,EAAEhE,SAAS,EAAE;QACxC,MAAMvJ,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,YAAI,CAACA,OAAAA,CAAQo1C,OAAO,IAAIp1C,OAAAA,CAAQq1C,sBAAsB,KAAK,UAAS,KAAM,CAACr1C,QAAQk1C,OAAO,IAAI,CAAC,IAAI,CAACuC,cAAc,EAAE;YAClH,MAAM95C,IAAAA,GAAOqC,OAAQ8d,CAAAA,QAAQ,GAAG,IAAI,CAACpgB,KAAK,GAAG,IAAI,CAAC6iB,SAAS;AAC3Dm3B,YAAAA,8DAAAA,CAA2B,IAAI,CAACH,OAAO,EAAEv3C,OAAAA,EAASuN,WAAW5P,IAAM4L,EAAAA,SAAAA,CAAAA,CAAAA;YACnE,IAAI,CAACkuC,cAAc,GAAG,IAAI;SAC3B;AACH;IAEA,IAAI9/B,MAAAA,CAAOA,MAAM,EAAE;QACjB,IAAI,CAAC4/B,OAAO,GAAG5/B,MAAAA,CAAAA;QACf,OAAO,IAAI,CAAC6/B,SAAS;QACrB,OAAO,IAAI,CAACT,KAAK;QACjB,IAAI,CAACU,cAAc,GAAG,KAAK;AAC7B;AAEA,QAAI9/B,MAAS;QACX,OAAO,IAAI,CAAC4/B,OAAO;AACrB;AAEA,QAAIL,QAAW;AACb,eAAO,IAAI,CAACM,SAAS,KAAK,IAAI,CAACA,SAAS,GAAGG,8DAAAA,CAAiB,IAAI,EAAE,IAAI,CAAC33C,OAAO,CAACse,OAAO;AACxF;AAKA,CACAwR,KAAQ;QACN,MAAMonB,QAAAA,GAAW,IAAI,CAACA,QAAQ;QAC9B,MAAMv/B,MAAAA,GAAS,IAAI,CAACA,MAAM;QAC1B,OAAOu/B,QAAAA,CAASj9C,MAAM,IAAI0d,MAAM,CAACu/B,QAAQ,CAAC,EAAE,CAAC59C,KAAK,CAAC;AACrD;AAKA,CACA2c,IAAO;QACL,MAAMihC,QAAAA,GAAW,IAAI,CAACA,QAAQ;QAC9B,MAAMv/B,MAAAA,GAAS,IAAI,CAACA,MAAM;QAC1B,MAAMtM,KAAAA,GAAQ6rC,SAASj9C,MAAM;QAC7B,OAAOoR,KAAAA,IAASsM,MAAM,CAACu/B,QAAQ,CAAC7rC,KAAQ,KAAE,CAAChK,GAAG,CAAC;AACjD;AAQA,CACAu2C,WAAYhgC,CAAAA,KAAK,EAAE+oB,QAAQ,EAAE;QAC3B,MAAM3gC,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAMU,KAAAA,GAAQkX,KAAK,CAAC+oB,QAAS;QAC7B,MAAMhpB,MAAAA,GAAS,IAAI,CAACA,MAAM;QAC1B,MAAMu/B,QAAAA,GAAWW,8DAAe,KAAI,EAAE;AAAClX,YAAAA,QAAAA;YAAUrnC,KAAOoH,EAAAA,KAAAA;YAAOW,GAAKX,EAAAA,KAAAA;AAAK;QAEzE,IAAI,CAACw2C,QAASj9C,CAAAA,MAAM,EAAE;AACpB;SACD;AAED,cAAM42B,SAAS,EAAE;AACjB,cAAMinB,eAAerB,uBAAwBz2C,CAAAA,OAAAA,CAAAA,CAAAA;AAC7C,YAAI9F,CAAGuI,EAAAA,IAAAA,CAAAA;QACP,IAAKvI,CAAAA,GAAI,GAAGuI,IAAOy0C,GAAAA,QAAAA,CAASj9C,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YACjD,MAAM,EAACZ,QAAO+H,GAAAA,GAAI,GAAG61C,QAAQ,CAACh9C,CAAE;YAChC,MAAMikC,EAAAA,GAAKxmB,MAAM,CAACre,KAAM;YACxB,MAAM8kC,EAAAA,GAAKzmB,MAAM,CAACtW,GAAI;AACtB,gBAAI88B,OAAOC,EAAI;AACbvN,gBAAAA,MAAAA,CAAO31B,IAAI,CAACijC,EAAAA,CAAAA,CAAAA;gBACZ,SAAS;aACV;YACD,MAAMn8B,CAAAA,GAAI5I,KAAKuY,GAAG,CAAC,CAACjR,KAAAA,GAAQy9B,EAAE,CAACwC,QAAAA,CAAS,KAAKvC,EAAE,CAACuC,QAAAA,CAAS,GAAGxC,EAAE,CAACwC,SAAS,CAAD;AACvE,kBAAMoX,eAAeD,YAAa3Z,CAAAA,EAAAA,EAAIC,EAAIp8B,EAAAA,CAAAA,EAAGhC,QAAQk1C,OAAO;AAC5D6C,YAAAA,YAAY,CAACpX,QAAAA,CAAS,GAAG/oB,KAAK,CAAC+oB,QAAS;AACxC9P,YAAAA,MAAAA,CAAO31B,IAAI,CAAC68C,YAAAA,CAAAA,CAAAA;AACd;QACA,OAAOlnB,MAAAA,CAAO52B,MAAM,KAAK,IAAI42B,MAAM,CAAC,EAAE,GAAGA,MAAM;AACjD;AAeA,CACAglB,YAAYruC,GAAG,EAAE8W,OAAO,EAAEwH,MAAM,EAAE;QAChC,MAAMqxB,aAAAA,GAAgBZ,kBAAkB,IAAI;AAC5C,eAAOY,aAAc3vC,CAAAA,GAAAA,EAAK,IAAI,EAAE8W,OAASwH,EAAAA,MAAAA,CAAAA,CAAAA;AAC3C;AAQA,CACAgxB,KAAKtvC,GAAG,EAAElO,KAAK,EAAE+R,KAAK,EAAE;QACtB,MAAM6rC,QAAAA,GAAW,IAAI,CAACA,QAAQ;QAC9B,MAAMC,aAAAA,GAAgBZ,kBAAkB,IAAI;QAC5C,IAAI54C,IAAAA,GAAO,IAAI,CAACD,KAAK;AAErBpE,QAAAA,KAAAA,GAAQA,KAAS;AACjB+R,QAAAA,KAAAA,GAAQA,SAAU,IAAI,CAACsM,MAAM,CAAC1d,MAAM,GAAGX,KAAAA,CAAAA;QAEvC,KAAK,MAAMglB,WAAW44B,QAAU;AAC9Bv5C,YAAAA,IAAAA,IAAQw5C,aAAc3vC,CAAAA,GAAAA,EAAK,IAAI,EAAE8W,OAAS;AAAChlB,gBAAAA,KAAAA;AAAO+H,gBAAAA,GAAAA,EAAK/H,QAAQ+R,KAAQ;AAAC;AAC1E;AACA,eAAO,CAAC,CAAC1N,IAAAA,CAAAA;AACX;AASAxD,CAAAA,IAAAA,CAAKqN,GAAG,EAAE+F,SAAS,EAAEjU,KAAK,EAAE+R,KAAK,EAAE;AACjC,cAAMrL,OAAU,OAAI,CAACA,OAAO,IAAI,EAAC;AACjC,cAAM2X,MAAS,OAAI,CAACA,MAAM,IAAI,EAAE;AAEhC,YAAIA,MAAO1d,CAAAA,MAAM,IAAI+F,OAAAA,CAAQib,WAAW,EAAE;AACxCzT,YAAAA,GAAAA,CAAIq2B,IAAI;YAER1jC,IAAKqN,CAAAA,GAAAA,EAAK,IAAI,EAAElO,KAAO+R,EAAAA,KAAAA,CAAAA,CAAAA;AAEvB7D,YAAAA,GAAAA,CAAIu2B,OAAO;SACZ;QAED,IAAI,IAAI,CAACxf,QAAQ,EAAE;YAEjB,IAAI,CAACk5B,cAAc,GAAG,KAAK;YAC3B,IAAI,CAACV,KAAK,GAAGz+C,SAAAA,CAAAA;SACd;AACH;AACF;;AClbA,SAASorB,SAAAA,CAAQxB,EAAgB,EAAE4C,GAAW,EAAEphB,IAAe,EAAE2f,gBAA0B,EAAE;IAC3F,MAAMrjB,OAAAA,GAAUkiB,GAAGliB,OAAO;IAC1B,MAAM,EAAC,CAAC0D,IAAK,GAAEhD,QAAM,GAAGwhB,EAAG0B,CAAAA,QAAQ,CAAC;AAAClgB,QAAAA,IAAAA;KAAK,EAAE2f,gBAAAA,CAAAA,CAAAA;IAE5C,OAAQjqB,IAAAA,CAAKuY,GAAG,CAACmT,GAAAA,GAAMpkB,SAASV,OAAQ0X,CAAAA,MAAM,GAAG1X,OAAAA,CAAQg4C,SAAS;AACpE;AAIe,MAAMC,YAAqBppB,SAAAA,OAAAA,CAAAA;AAExC,WAAO1qB,KAAK,OAAQ;IAEpBiB,MAA4B;IAC5B2S,IAAe;IACfrc,IAAe;AAEf;;AAEC,MACD,OAAO2D,QAAW;QAChB4b,WAAa;QACb+8B,SAAW;QACXx6B,gBAAkB;QAClB06B,WAAa;QACb39B,UAAY;QACZ7C,MAAQ;QACRO,QAAU;KACV;AAEF;;AAEC,MACD,OAAO6W,aAAgB;QACrBlU,eAAiB;QACjBE,WAAa;KACb;AAEF9iB,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK;QAEL,IAAI,CAACmD,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAAC8M,MAAM,GAAG9M,SAAAA,CAAAA;QACd,IAAI,CAACyf,IAAI,GAAGzf,SAAAA,CAAAA;QACZ,IAAI,CAACoD,IAAI,GAAGpD,SAAAA,CAAAA;AAEZ,YAAIuE,GAAK;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;AACH;AAEA6mB,IAAAA,OAAAA,CAAQy0B,MAAc,EAAEC,MAAc,EAAE/0B,gBAA0B,EAAE;QAClE,MAAMrjB,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAM,EAACyB,IAAGC,CAAAA,GAAE,GAAG,IAAI,CAACkiB,QAAQ,CAAC;AAAC;AAAK;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACzC,OAASjqB,KAAK+pB,GAAG,CAACg1B,SAAS12C,CAAG,OAAKrI,KAAK+pB,GAAG,CAACi1B,SAAS12C,CAAG,OAAMtI,KAAK+pB,GAAG,CAACnjB,QAAQg4C,SAAS,GAAGh4C,OAAQ0X,CAAAA,MAAM,EAAE;AAC7G;IAEA2gC,QAASF,CAAAA,MAAc,EAAE90B,gBAA0B,EAAE;AACnD,eAAOK,SAAQ,KAAI,EAAEy0B,MAAAA,EAAQ,GAAK90B,EAAAA,gBAAAA,CAAAA,CAAAA;AACpC;IAEAi1B,QAASF,CAAAA,MAAc,EAAE/0B,gBAA0B,EAAE;AACnD,eAAOK,SAAQ,KAAI,EAAE00B,MAAAA,EAAQ,GAAK/0B,EAAAA,gBAAAA,CAAAA,CAAAA;AACpC;AAEAY,IAAAA,cAAAA,CAAeZ,gBAA0B,EAAE;QACzC,MAAM,EAAC5hB,IAAGC,CAAAA,GAAE,GAAG,IAAI,CAACkiB,QAAQ,CAAC;AAAC;AAAK;SAAI,EAAEP,gBAAAA,CAAAA,CAAAA;QACzC,OAAO;AAAC5hB,YAAAA,CAAAA;AAAGC,YAAAA,CAAAA;AAAC;AACd;AAEAf,IAAAA,IAAAA,CAAKX,OAAmD,EAAE;AACxDA,QAAAA,OAAAA,GAAUA,OAAW,QAAI,CAACA,OAAO,IAAI,EAAC;QACtC,IAAI0X,MAAAA,GAAS1X,OAAQ0X,CAAAA,MAAM,IAAI;AAC/BA,QAAAA,MAAAA,GAASte,KAAKoC,GAAG,CAACkc,QAAQA,MAAU1X,IAAAA,OAAAA,CAAQk4C,WAAW,IAAI;AAC3D,cAAMj9B,WAAcvD,GAAAA,MAAAA,IAAU1X,OAAQib,CAAAA,WAAW,IAAI;AACrD,eAAO,CAACvD,MAASuD,GAAAA,WAAU,IAAK;AAClC;IAEA9gB,IAAKqN,CAAAA,GAA6B,EAAE8F,IAAe,EAAE;QACnD,MAAMtN,OAAAA,GAAU,IAAI,CAACA,OAAO;AAE5B,YAAI,IAAI,CAAC+X,IAAI,IAAI/X,OAAQ0X,CAAAA,MAAM,GAAG,GAAO,KAAC+L,6DAAe,KAAI,EAAEnW,IAAM,MAAI,CAAC3M,IAAI,CAACX,WAAW,CAAI;AAC5F;SACD;QAEDwH,GAAIqT,CAAAA,WAAW,GAAG7a,OAAAA,CAAQ8a,WAAW;QACrCtT,GAAIwT,CAAAA,SAAS,GAAGhb,OAAAA,CAAQib,WAAW;QACnCzT,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ4a,eAAe;QACvC29B,8DAAU/wC,CAAAA,GAAAA,EAAKxH,SAAS,IAAI,CAACyB,CAAC,EAAE,IAAI,CAACC,CAAC;AACxC;IAEAygB,QAAW;AACT,cAAMniB,OAAU,OAAI,CAACA,OAAO,IAAI,EAAC;;AAEjC,eAAOA,OAAQ0X,CAAAA,MAAM,GAAG1X,OAAAA,CAAQg4C,SAAS;AAC3C;AACF;;AC5FA,SAASQ,YAAAA,CAAaC,GAAG,EAAEp1B,gBAAgB,EAAE;AAC3C,UAAM,EAAC5hB,CAAC,GAAEC,CAAC,GAAEmS,OAAMkC,KAAAA,GAAOD,MAAAA,GAAO,IAA4B2iC,GAAAA,CAAI70B,QAAQ,CAAC;AAAC;AAAK;AAAK;AAAQ;AAAS;KAAS,EAAEP,gBAAAA,CAAAA,CAAAA;IAEjH,IAAIvhB,IAAAA,EAAMF,KAAOD,EAAAA,GAAAA,EAAKE,MAAQ62C,EAAAA,IAAAA,CAAAA;IAE9B,IAAID,GAAAA,CAAI7kC,UAAU,EAAE;AAClB8kC,QAAAA,IAAAA,GAAO5iC,MAAS;QAChBhU,IAAO1I,GAAAA,IAAAA,CAAKC,GAAG,CAACoI,CAAGoS,EAAAA,IAAAA,CAAAA,CAAAA;QACnBjS,KAAQxI,GAAAA,IAAAA,CAAKoC,GAAG,CAACiG,CAAGoS,EAAAA,IAAAA,CAAAA,CAAAA;AACpBlS,QAAAA,GAAAA,GAAMD,CAAIg3C,GAAAA,IAAAA,CAAAA;AACV72C,QAAAA,MAAAA,GAASH,CAAIg3C,GAAAA,IAAAA,CAAAA;KACR;AACLA,QAAAA,IAAAA,GAAO3iC,KAAQ;AACfjU,QAAAA,IAAAA,GAAOL,CAAIi3C,GAAAA,IAAAA,CAAAA;AACX92C,QAAAA,KAAAA,GAAQH,CAAIi3C,GAAAA,IAAAA,CAAAA;QACZ/2C,GAAMvI,GAAAA,IAAAA,CAAKC,GAAG,CAACqI,CAAGmS,EAAAA,IAAAA,CAAAA,CAAAA;QAClBhS,MAASzI,GAAAA,IAAAA,CAAKoC,GAAG,CAACkG,CAAGmS,EAAAA,IAAAA,CAAAA,CAAAA;KACtB;IAED,OAAO;AAAC/R,QAAAA,IAAAA;AAAMH,QAAAA,GAAAA;AAAKC,QAAAA,KAAAA;AAAOC,QAAAA,MAAAA;AAAM;AAClC;AAEA,SAAS82C,WAAAA,CAAY5gC,IAAI,EAAErX,KAAK,EAAErH,GAAG,EAAEmC,GAAG,EAAE;AAC1C,WAAOuc,IAAO,OAAIggB,6DAAYr3B,CAAAA,KAAAA,EAAOrH,KAAKmC,GAAI;AAChD;AAEA,SAASo9C,iBAAiBH,GAAG,EAAEI,IAAI,EAAEC,IAAI,EAAE;AACzC,UAAMp4C,KAAQ+3C,GAAAA,GAAAA,CAAIz4C,OAAO,CAACib,WAAW;IACrC,MAAMlD,IAAAA,GAAO0gC,IAAIzkC,aAAa;AAC9B,UAAMq9B,IAAI0H,8DAAOr4C,CAAAA,KAAAA,CAAAA,CAAAA;IAEjB,OAAO;AACLsB,QAAAA,CAAAA,EAAG22C,YAAY5gC,IAAKpW,CAAAA,GAAG,EAAE0vC,CAAE1vC,CAAAA,GAAG,EAAE,CAAGm3C,EAAAA,IAAAA,CAAAA;AACnC72C,QAAAA,CAAAA,EAAG02C,YAAY5gC,IAAKnW,CAAAA,KAAK,EAAEyvC,CAAEzvC,CAAAA,KAAK,EAAE,CAAGi3C,EAAAA,IAAAA,CAAAA;AACvC32C,QAAAA,CAAAA,EAAGy2C,YAAY5gC,IAAKlW,CAAAA,MAAM,EAAEwvC,CAAExvC,CAAAA,MAAM,EAAE,CAAGi3C,EAAAA,IAAAA,CAAAA;AACzC32C,QAAAA,CAAAA,EAAGw2C,YAAY5gC,IAAKjW,CAAAA,IAAI,EAAEuvC,CAAEvvC,CAAAA,IAAI,EAAE,CAAG+2C,EAAAA,IAAAA,CAAAA;AACvC;AACF;AAEA,SAAS1H,kBAAkBsH,GAAG,EAAEI,IAAI,EAAEC,IAAI,EAAE;AAC1C,UAAM,EAAC7kC,kBAAkB,GAAC,GAAGwkC,GAAAA,CAAI70B,QAAQ,CAAC;AAAC;AAAqB;AAChE,UAAMljB,KAAQ+3C,GAAAA,GAAAA,CAAIz4C,OAAO,CAACsxC,YAAY;AACtC,UAAMD,IAAI2H,8DAAct4C,CAAAA,KAAAA,CAAAA,CAAAA;AACxB,UAAMu4C,IAAO7/C,GAAAA,IAAAA,CAAKC,GAAG,CAACw/C,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;IAC5B,MAAM/gC,IAAAA,GAAO0gC,IAAIzkC,aAAa;IAI9B,MAAMklC,YAAAA,GAAejlC,sBAAsBhV,6DAASyB,CAAAA,KAAAA,CAAAA,CAAAA;IAEpD,OAAO;AACLy4C,QAAAA,OAAAA,EAASR,WAAY,EAACO,YAAgBnhC,IAAAA,IAAAA,CAAKpW,GAAG,IAAIoW,IAAKjW,CAAAA,IAAI,EAAEuvC,CAAAA,CAAE8H,OAAO,EAAE,CAAGF,EAAAA,IAAAA,CAAAA;AAC3EG,QAAAA,QAAAA,EAAUT,WAAY,EAACO,YAAgBnhC,IAAAA,IAAAA,CAAKpW,GAAG,IAAIoW,IAAKnW,CAAAA,KAAK,EAAEyvC,CAAAA,CAAE+H,QAAQ,EAAE,CAAGH,EAAAA,IAAAA,CAAAA;AAC9EI,QAAAA,UAAAA,EAAYV,WAAY,EAACO,YAAgBnhC,IAAAA,IAAAA,CAAKlW,MAAM,IAAIkW,IAAKjW,CAAAA,IAAI,EAAEuvC,CAAAA,CAAEgI,UAAU,EAAE,CAAGJ,EAAAA,IAAAA,CAAAA;AACpFK,QAAAA,WAAAA,EAAaX,WAAY,EAACO,YAAgBnhC,IAAAA,IAAAA,CAAKlW,MAAM,IAAIkW,IAAKnW,CAAAA,KAAK,EAAEyvC,CAAAA,CAAEiI,WAAW,EAAE,CAAGL,EAAAA,IAAAA,CAAAA;AACzF;AACF;AAEA,SAASM,aAAAA,CAAcd,GAAG,EAAE;AAC1B,UAAMe,SAAShB,YAAaC,CAAAA,GAAAA,CAAAA,CAAAA;AAC5B,UAAM1iC,KAAQyjC,GAAAA,MAAAA,CAAO53C,KAAK,GAAG43C,OAAO13C,IAAI;AACxC,UAAMgU,MAAS0jC,GAAAA,MAAAA,CAAO33C,MAAM,GAAG23C,OAAO73C,GAAG;AACzC,UAAMmd,MAAS85B,GAAAA,gBAAAA,CAAiBH,GAAK1iC,EAAAA,KAAAA,GAAQ,GAAGD,MAAS;AACzD,UAAM4B,MAASy5B,GAAAA,iBAAAA,CAAkBsH,GAAK1iC,EAAAA,KAAAA,GAAQ,GAAGD,MAAS;IAE1D,OAAO;QACL2jC,KAAO;AACLh4C,YAAAA,CAAAA,EAAG+3C,OAAO13C,IAAI;AACdJ,YAAAA,CAAAA,EAAG83C,OAAO73C,GAAG;YACb2lB,CAAGvR,EAAAA,KAAAA;YACHyR,CAAG1R,EAAAA,MAAAA;AACH4B,YAAAA,MAAAA;AACF;QACAq8B,KAAO;AACLtyC,YAAAA,CAAAA,EAAG+3C,MAAO13C,CAAAA,IAAI,GAAGgd,MAAAA,CAAO3c,CAAC;AACzBT,YAAAA,CAAAA,EAAG83C,MAAO73C,CAAAA,GAAG,GAAGmd,MAAAA,CAAO9c,CAAC;AACxBslB,YAAAA,CAAAA,EAAGvR,KAAQ+I,GAAAA,MAAAA,CAAO3c,CAAC,GAAG2c,OAAO7c,CAAC;AAC9BulB,YAAAA,CAAAA,EAAG1R,MAASgJ,GAAAA,MAAAA,CAAO9c,CAAC,GAAG8c,OAAO5c,CAAC;YAC/BwV,MAAQ;AACNyhC,gBAAAA,OAAAA,EAAS//C,IAAKoC,CAAAA,GAAG,CAAC,GAAGkc,OAAOyhC,OAAO,GAAG//C,IAAKoC,CAAAA,GAAG,CAACsjB,MAAAA,CAAO9c,CAAC,EAAE8c,OAAO3c,CAAC;AACjEi3C,gBAAAA,QAAAA,EAAUhgD,IAAKoC,CAAAA,GAAG,CAAC,GAAGkc,OAAO0hC,QAAQ,GAAGhgD,IAAKoC,CAAAA,GAAG,CAACsjB,MAAAA,CAAO9c,CAAC,EAAE8c,OAAO7c,CAAC;AACnEo3C,gBAAAA,UAAAA,EAAYjgD,IAAKoC,CAAAA,GAAG,CAAC,GAAGkc,OAAO2hC,UAAU,GAAGjgD,IAAKoC,CAAAA,GAAG,CAACsjB,MAAAA,CAAO5c,CAAC,EAAE4c,OAAO3c,CAAC;AACvEm3C,gBAAAA,WAAAA,EAAalgD,IAAKoC,CAAAA,GAAG,CAAC,GAAGkc,OAAO4hC,WAAW,GAAGlgD,IAAKoC,CAAAA,GAAG,CAACsjB,MAAAA,CAAO5c,CAAC,EAAE4c,OAAO7c,CAAC;AAC3E;AACF;AACF;AACF;AAEA,SAASyhB,OAAAA,CAAQ+0B,GAAG,EAAEh3C,CAAC,EAAEC,CAAC,EAAE2hB,gBAAgB,EAAE;IAC5C,MAAMq2B,KAAAA,GAAQj4C,MAAM,IAAI;IACxB,MAAMk4C,KAAAA,GAAQj4C,MAAM,IAAI;AACxB,UAAMk4C,WAAWF,KAASC,IAAAA,KAAAA,CAAAA;AAC1B,UAAMH,MAASf,GAAAA,GAAAA,IAAO,CAACmB,QAAAA,IAAYpB,aAAaC,GAAKp1B,EAAAA,gBAAAA,CAAAA,CAAAA;IAErD,OAAOm2B,MAAAA,KACHE,KAASnF,IAAAA,8DAAAA,CAAW9yC,GAAG+3C,MAAO13C,CAAAA,IAAI,EAAE03C,MAAO53C,CAAAA,KAAK,EAChD+3C,KAAAA,SAASpF,8DAAW7yC,CAAAA,CAAAA,EAAG83C,OAAO73C,GAAG,EAAE63C,MAAO33C,CAAAA,MAAM;AACtD;AAEA,SAASg4C,SAAAA,CAAUniC,MAAM,EAAE;IACzB,OAAOA,MAAAA,CAAOyhC,OAAO,IAAIzhC,MAAO0hC,CAAAA,QAAQ,IAAI1hC,MAAO2hC,CAAAA,UAAU,IAAI3hC,MAAAA,CAAO4hC,WAAW;AACrF;AAMC,CACD,SAASQ,iBAAAA,CAAkBtyC,GAAG,EAAEuyC,IAAI,EAAE;AACpCvyC,IAAAA,GAAAA,CAAIuyC,IAAI,CAACA,IAAKt4C,CAAAA,CAAC,EAAEs4C,IAAAA,CAAKr4C,CAAC,EAAEq4C,IAAKzyB,CAAAA,CAAC,EAAEyyB,IAAAA,CAAKvyB,CAAC;AACzC;AAEA,SAASwyB,WAAAA,CAAYD,IAAI,EAAEE,MAAM,EAAEC,OAAU,KAAE,EAAE;IAC/C,MAAMz4C,CAAAA,GAAIs4C,KAAKt4C,CAAC,KAAKy4C,QAAQz4C,CAAC,GAAG,CAACw4C,MAAAA,GAAS,CAAC;IAC5C,MAAMv4C,CAAAA,GAAIq4C,KAAKr4C,CAAC,KAAKw4C,QAAQx4C,CAAC,GAAG,CAACu4C,MAAAA,GAAS,CAAC;AAC5C,UAAM3yB,IAAI,CAACyyB,KAAKt4C,CAAC,GAAGs4C,KAAKzyB,CAAC,KAAK4yB,OAAQz4C,CAAAA,CAAC,GAAGy4C,OAAQ5yB,CAAAA,CAAC,GAAG2yB,MAAS,IAAC,IAAIx4C,CAAAA,CAAAA;AACrE,UAAM+lB,IAAI,CAACuyB,KAAKr4C,CAAC,GAAGq4C,KAAKvyB,CAAC,KAAK0yB,OAAQx4C,CAAAA,CAAC,GAAGw4C,OAAQ1yB,CAAAA,CAAC,GAAGyyB,MAAS,IAAC,IAAIv4C,CAAAA,CAAAA;IACrE,OAAO;QACLD,CAAGs4C,EAAAA,IAAAA,CAAKt4C,CAAC,GAAGA,CAAAA;QACZC,CAAGq4C,EAAAA,IAAAA,CAAKr4C,CAAC,GAAGA,CAAAA;QACZ4lB,CAAGyyB,EAAAA,IAAAA,CAAKzyB,CAAC,GAAGA,CAAAA;QACZE,CAAGuyB,EAAAA,IAAAA,CAAKvyB,CAAC,GAAGA,CAAAA;AACZ9P,QAAAA,MAAAA,EAAQqiC,KAAKriC,MAAM;AACrB;AACF;AAEe,MAAMyiC,UAAmBtrB,SAAAA,OAAAA,CAAAA;AAEtC,WAAO1qB,KAAK,KAAM;AAIjB,CACD,OAAO9E,QAAW;QAChB2U,aAAe;QACfiH,WAAa;QACbq2B,YAAc;QACd58B,aAAe;QACf6F,UAAYjiB,EAAAA,SAAAA;KACZ;AAID,CACD,OAAOw2B,aAAgB;QACrBlU,eAAiB;QACjBE,WAAa;KACb;AAEF9iB,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;QACf,KAAK;QAEL,IAAI,CAACmD,OAAO,GAAG1H,SAAAA,CAAAA;QACf,IAAI,CAACsb,UAAU,GAAGtb,SAAAA,CAAAA;QAClB,IAAI,CAACub,IAAI,GAAGvb,SAAAA,CAAAA;QACZ,IAAI,CAACyd,KAAK,GAAGzd,SAAAA,CAAAA;QACb,IAAI,CAACwd,MAAM,GAAGxd,SAAAA,CAAAA;QACd,IAAI,CAACoc,aAAa,GAAGpc,SAAAA,CAAAA;AAErB,YAAIuE,GAAK;YACPsC,MAAOyB,CAAAA,MAAM,CAAC,IAAI,EAAE/D,GAAAA,CAAAA,CAAAA;SACrB;AACH;AAEA1C,IAAAA,IAAAA,CAAKqN,GAAG,EAAE;AACR,cAAM,EAACkN,aAAAA,GAAe1U,OAAAA,EAAS,EAAC8a,WAAAA,GAAaF,eAAAA,GAAgB,GAAC,GAAG,IAAI;AACrE,cAAM,EAACm5B,KAAK,GAAE0F,QAAM,GAAGF,cAAc,IAAI;AACzC,cAAMa,cAAcP,SAAUJ,CAAAA,KAAAA,CAAM/hC,MAAM,IAAI2iC,0DAAkBA,GAAGP,iBAAiB;AAEpFtyC,QAAAA,GAAAA,CAAIq2B,IAAI;QAER,IAAI4b,KAAAA,CAAMnyB,CAAC,KAAKysB,KAAMzsB,CAAAA,CAAC,IAAImyB,KAAAA,CAAMjyB,CAAC,KAAKusB,KAAMvsB,CAAAA,CAAC,EAAE;AAC9ChgB,YAAAA,GAAAA,CAAI+2B,SAAS;YACb6b,WAAY5yC,CAAAA,GAAAA,EAAKwyC,WAAYP,CAAAA,KAAAA,EAAO/kC,aAAeq/B,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACnDvsC,YAAAA,GAAAA,CAAI4F,IAAI;AACRgtC,YAAAA,WAAAA,CAAY5yC,GAAKwyC,EAAAA,WAAAA,CAAYjG,KAAO,GAACr/B,aAAe+kC,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACpDjyC,YAAAA,GAAAA,CAAImT,SAAS,GAAGG,WAAAA,CAAAA;AAChBtT,YAAAA,GAAAA,CAAIiB,IAAI,CAAC;SACV;AAEDjB,QAAAA,GAAAA,CAAI+2B,SAAS;QACb6b,WAAY5yC,CAAAA,GAAAA,EAAKwyC,YAAYjG,KAAOr/B,EAAAA,aAAAA,CAAAA,CAAAA,CAAAA;AACpClN,QAAAA,GAAAA,CAAImT,SAAS,GAAGC,eAAAA,CAAAA;AAChBpT,QAAAA,GAAAA,CAAIiB,IAAI;AAERjB,QAAAA,GAAAA,CAAIu2B,OAAO;AACb;AAEAra,IAAAA,OAAAA,CAAQy0B,MAAM,EAAEC,MAAM,EAAE/0B,gBAAgB,EAAE;AACxC,eAAOK,OAAQ,KAAI,EAAEy0B,MAAAA,EAAQC,MAAQ/0B,EAAAA,gBAAAA,CAAAA,CAAAA;AACvC;IAEAg1B,QAASF,CAAAA,MAAM,EAAE90B,gBAAgB,EAAE;AACjC,eAAOK,OAAQ,KAAI,EAAEy0B,MAAAA,EAAQ,IAAI,EAAE90B,gBAAAA,CAAAA,CAAAA;AACrC;IAEAi1B,QAASF,CAAAA,MAAM,EAAE/0B,gBAAgB,EAAE;AACjC,eAAOK,OAAQ,KAAI,EAAE,IAAI,EAAE00B,MAAQ/0B,EAAAA,gBAAAA,CAAAA,CAAAA;AACrC;AAEAY,IAAAA,cAAAA,CAAeZ,gBAAgB,EAAE;AAC/B,cAAM,EAAC5hB,CAAAA,GAAGC,CAAAA,GAAGmS,IAAI,GAAED,UAAU,GAAC,IAA4B,IAAI,CAACgQ,QAAQ,CAAC;AAAC;AAAK;AAAK;AAAQ;SAAa,EAAEP,gBAAAA,CAAAA,CAAAA;QAC1G,OAAO;AACL5hB,YAAAA,CAAAA,EAAGmS,aAAa,CAACnS,IAAIoS,IAAG,IAAK,IAAIpS,CAAC;AAClCC,YAAAA,CAAAA,EAAGkS,aAAalS,CAAI,GAACA,CAAAA,CAAImS,GAAAA,IAAG,IAAK,CAAC;AACpC;AACF;AAEAsO,IAAAA,QAAAA,CAASze,IAAI,EAAE;QACb,OAAOA,IAAAA,KAAS,GAAM,OAAI,CAACqS,KAAK,GAAG,IAAI,IAAI,CAACD,MAAM,GAAG,CAAC;AACxD;AACF;;;;;;;;;;ACpNA,MAAMwkC,aAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED;AACA,MAAMC,iBAAoB,mBAAgBD,aAAAA,CAAc9/B,GAAG,CAACpe,CAAAA,KAASA,GAAAA,KAAAA,CAAMo+C,OAAO,CAAC,QAAQ,OAASA,CAAAA,CAAAA,OAAO,CAAC,GAAK;AAEjH,SAASC,cAAAA,CAAevgD,CAAS,EAAE;AACjC,WAAOogD,aAAa,CAACpgD,CAAIogD,GAAAA,aAAAA,CAAcrgD,MAAM,CAAC;AAChD;AAEA,SAASygD,kBAAAA,CAAmBxgD,CAAS,EAAE;AACrC,WAAOqgD,iBAAiB,CAACrgD,CAAIqgD,GAAAA,iBAAAA,CAAkBtgD,MAAM,CAAC;AACxD;AAEA,SAAS0gD,sBAAuBt0C,CAAAA,OAAqB,EAAEnM,CAAS,EAAE;IAChEmM,OAAQyU,CAAAA,WAAW,GAAG2/B,cAAevgD,CAAAA,CAAAA,CAAAA,CAAAA;IACrCmM,OAAQuU,CAAAA,eAAe,GAAG8/B,kBAAmBxgD,CAAAA,CAAAA,CAAAA,CAAAA;AAE7C,WAAO,EAAEA,CAAAA,CAAAA;AACX;AAEA,SAAS0gD,uBAAwBv0C,CAAAA,OAAqB,EAAEnM,CAAS,EAAE;IACjEmM,OAAQuU,CAAAA,eAAe,GAAGvU,OAAQhD,CAAAA,IAAI,CAACmX,GAAG,CAAC,IAAMigC,cAAevgD,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;IAEhE,OAAOA,CAAAA,CAAAA;AACT;AAEA,SAAS2gD,wBAAyBx0C,CAAAA,OAAqB,EAAEnM,CAAS,EAAE;IAClEmM,OAAQuU,CAAAA,eAAe,GAAGvU,OAAQhD,CAAAA,IAAI,CAACmX,GAAG,CAAC,IAAMkgC,kBAAmBxgD,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;IAEpE,OAAOA,CAAAA,CAAAA;AACT;AAEA,SAAS4gD,YAAAA,CAAatiD,KAAY,EAAE;AAClC,QAAI0B,CAAI;IAER,OAAO,CAACmM,SAAuBrD,YAAyB;AACtD,cAAMmC,UAAa3M,GAAAA,KAAAA,CAAMuR,cAAc,CAAC/G,cAAcmC,UAAU;AAEhE,YAAIA,sBAAsBwU,kBAAoB;AAC5Czf,YAAAA,CAAAA,GAAI0gD,wBAAwBv0C,OAASnM,EAAAA,CAAAA,CAAAA,CAAAA;SAChC,UAAIiL,sBAAsB+Z,mBAAqB;AACpDhlB,YAAAA,CAAAA,GAAI2gD,yBAAyBx0C,OAASnM,EAAAA,CAAAA,CAAAA,CAAAA;AACxC,eAAO,IAAIiL,UAAY;AACrBjL,YAAAA,CAAAA,GAAIygD,uBAAuBt0C,OAASnM,EAAAA,CAAAA,CAAAA,CAAAA;SACrC;AACH;AACF;AAEA,SAAS6gD,yBAAAA,CACPhhC,WAAkE,EAClE;IACA,IAAIihC,CAAAA,CAAAA;AAEJ,QAAKA,KAAKjhC,WAAa;QACrB,IAAIA,WAAW,CAACihC,CAAAA,CAAE,CAAClgC,WAAW,IAAIf,WAAW,CAACihC,CAAAA,CAAE,CAACpgC,eAAe,EAAE;AAChE,mBAAO,IAAI;SACZ;AACH;AAEA,WAAO,KAAK;AACd;AAEA,SAASqgC,wBAAAA,CACP9X,UAA4B,EAC5B;AACA,WAAOA,eAAeA,UAAAA,CAAWroB,WAAW,IAAIqoB,UAAAA,CAAWvoB,eAAe,CAAD;AAC3E;AAEA,oBAAe;IACbzW,EAAI;IAEJ9E,QAAU;AACRswB,QAAAA,OAAAA,EAAS,IAAI;AACburB,QAAAA,aAAAA,EAAe,KAAK;AACtB;AAEA9xB,IAAAA,YAAAA,CAAAA,CAAa5wB,KAAY,EAAE2iD,KAAK,EAAEn7C,OAA4B,EAAE;QAC9D,IAAI,CAACA,OAAQ2vB,CAAAA,OAAO,EAAE;AACpB;SACD;AAED,cAAM,EACJtsB,IAAAA,EAAM,EAACyG,QAAAA,GAAS,GAChB9J,OAAAA,EAASo7C,YAAY,GACtB,GAAG5iD,KAAAA,CAAMqG,MAAM;QAChB,MAAM,EAACwO,QAAQ,GAAC,GAAG+tC,YAAAA,CAAAA;AAEnB,YAAI,CAACp7C,OAAAA,CAAQk7C,aAAa,KAAKH,yBAAAA,CAA0BjxC,QAAamxC,CAAAA,IAAAA,wBAAAA,CAAyBG,YAAkB/tC,CAAAA,IAAAA,QAAAA,IAAY0tC,yBAA0B1tC,CAAAA,QAAAA,CAAS,CAAI;AAClK;SACD;AAED,cAAMguC,YAAYP,YAAatiD,CAAAA,KAAAA,CAAAA,CAAAA;AAE/BsR,QAAAA,QAAAA,CAAS9Q,OAAO,CAACqiD,SAAAA,CAAAA,CAAAA;AACnB;AACF,CAAE;;AClHF,SAASC,cAAAA,CAAej4C,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE8a,cAAc,EAAEnmB,OAAO,EAAE;AAQlE,CACD,MAAMu7C,OAAAA,GAAUv7C,OAAQu7C,CAAAA,OAAO,IAAIp1B,cAAAA,CAAAA;AAEnC,QAAIo1B,WAAWlwC,KAAO;AACpB,eAAOhI,IAAKopC,CAAAA,KAAK,CAACnzC,KAAAA,EAAOA,KAAQ+R,GAAAA,KAAAA,CAAAA,CAAAA;KAClC;AAED,UAAMmwC,YAAY,EAAE;IAEpB,MAAMC,WAAAA,GAAc,CAACpwC,KAAAA,GAAQ,MAAMkwC,UAAU;AAC7C,QAAIG,YAAe;IACnB,MAAMC,QAAAA,GAAWriD,QAAQ+R,KAAQ;AAEjC,QAAIiG,CAAIhY,GAAAA,KAAAA,CAAAA;IACR,IAAIY,CAAAA,EAAG0hD,YAAcC,EAAAA,OAAAA,EAASvuC,IAAMwuC,EAAAA,KAAAA,CAAAA;AAEpCN,IAAAA,SAAS,CAACE,YAAAA,EAAAA,CAAe,GAAGr4C,IAAI,CAACiO,CAAE;AAEnC,QAAKpX,CAAI,MAAGA,CAAIqhD,GAAAA,OAAAA,GAAU,GAAGrhD,CAAK;AAChC,YAAI87C,IAAO;AACX,YAAI+F,IAAO;QACX,IAAIr5B,CAAAA,CAAAA;QAGJ,MAAMs5B,aAAAA,GAAgB5iD,IAAKoE,CAAAA,KAAK,CAAEtD,CAAAA,CAAI,QAAKuhD,WAAAA,CAAAA,GAAe,CAAIniD,GAAAA,KAAAA,CAAAA;AAC9D,cAAM2iD,WAAc7iD,GAAAA,IAAAA,CAAKC,GAAG,CAACD,KAAKoE,KAAK,CAAC,CAACtD,CAAI,QAAKuhD,WAAAA,CAAAA,GAAe,GAAGpwC,KAAS/R,CAAAA,GAAAA,KAAAA,CAAAA;AAC7E,cAAM4iD,iBAAiBD,WAAcD,GAAAA,aAAAA,CAAAA;AAErC,YAAKt5B,CAAIs5B,GAAAA,aAAAA,EAAet5B,CAAIu5B,GAAAA,WAAAA,EAAav5B,CAAK;AAC5CszB,YAAAA,IAAAA,IAAQ3yC,IAAI,CAACqf,CAAE,EAACjhB,CAAC;AACjBs6C,YAAAA,IAAAA,IAAQ14C,IAAI,CAACqf,CAAE,EAAChhB,CAAC;AACnB;QAEAs0C,IAAQkG,IAAAA,cAAAA,CAAAA;QACRH,IAAQG,IAAAA,cAAAA,CAAAA;AAGR,cAAMC,YAAY/iD,IAAKoE,CAAAA,KAAK,CAACtD,CAAAA,GAAIuhD,eAAe,CAAIniD,GAAAA,KAAAA,CAAAA;AACpD,cAAM8iD,OAAUhjD,GAAAA,IAAAA,CAAKC,GAAG,CAACD,KAAKoE,KAAK,CAAC,CAACtD,CAAI,QAAKuhD,WAAAA,CAAAA,GAAe,GAAGpwC,KAAS/R,CAAAA,GAAAA,KAAAA,CAAAA;QACzE,MAAM,EAACmI,CAAG46C,EAAAA,OAAAA,GAAS36C,CAAAA,EAAG46C,UAAQ,GAAGj5C,IAAI,CAACiO,CAAE;AAOxCuqC,QAAAA,OAAAA,GAAUvuC,OAAO,CAAC;AAElB,YAAKoV,CAAIy5B,GAAAA,SAAAA,EAAWz5B,CAAI05B,GAAAA,OAAAA,EAAS15B,CAAK;AACpCpV,YAAAA,IAAAA,GAAO,GAAMlU,GAAAA,IAAAA,CAAKuY,GAAG,CACnB,CAAC0qC,OAAUrG,GAAAA,IAAG,KAAM3yC,IAAI,CAACqf,EAAE,CAAChhB,CAAC,GAAG46C,OAAM,CACtC,GAACD,CAAAA,OAAAA,GAAUh5C,IAAI,CAACqf,CAAE,EAACjhB,CAAAA,KAAMs6C,OAAOO,OAAM;AAGxC,gBAAIhvC,OAAOuuC,OAAS;gBAClBA,OAAUvuC,GAAAA,IAAAA,CAAAA;gBACVsuC,YAAev4C,GAAAA,IAAI,CAACqf,CAAE;gBACtBo5B,KAAQp5B,GAAAA,CAAAA,CAAAA;aACT;AACH;QAEA84B,SAAS,CAACE,eAAe,GAAGE,YAAAA,CAAAA;QAC5BtqC,CAAIwqC,GAAAA,KAAAA,CAAAA;AACN;AAGAN,IAAAA,SAAS,CAACE,YAAAA,EAAAA,CAAe,GAAGr4C,IAAI,CAACs4C,QAAS;IAE1C,OAAOH,SAAAA,CAAAA;AACT;AAEA,SAASe,gBAAAA,CAAiBl5C,IAAI,EAAE/J,KAAK,EAAE+R,KAAK,EAAE8a,cAAc,EAAE;AAC5D,QAAI6vB,IAAO;AACX,QAAIC,MAAS;IACb,IAAI/7C,CAAAA,EAAG0d,OAAOnW,CAAGC,EAAAA,CAAAA,EAAGw0C,OAAOsG,QAAUC,EAAAA,QAAAA,EAAUC,YAAYhjC,IAAMJ,EAAAA,IAAAA,CAAAA;AACjE,UAAMkiC,YAAY,EAAE;IACpB,MAAMG,QAAAA,GAAWriD,QAAQ+R,KAAQ;AAEjC,UAAMsxC,IAAOt5C,GAAAA,IAAI,CAAC/J,KAAAA,CAAM,CAACmI,CAAC;AAC1B,UAAMm7C,IAAOv5C,GAAAA,IAAI,CAACs4C,QAAAA,CAAS,CAACl6C,CAAC;AAC7B,UAAMo7C,KAAKD,IAAOD,GAAAA,IAAAA,CAAAA;AAElB,QAAKziD,IAAIZ,KAAOY,EAAAA,CAAAA,GAAIZ,KAAQ+R,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;QACtC0d,KAAQvU,GAAAA,IAAI,CAACnJ,CAAE;AACfuH,QAAAA,CAAAA,GAAI,CAACmW,KAAAA,CAAMnW,CAAC,GAAGk7C,IAAG,IAAKE,EAAK12B,GAAAA,cAAAA,CAAAA;AAC5BzkB,QAAAA,CAAAA,GAAIkW,MAAMlW,CAAC;AACX,cAAM40C,SAAS70C,CAAI;AAEnB,YAAI60C,WAAWJ,KAAO;AAEpB,gBAAIx0C,IAAIgY,IAAM;gBACZA,IAAOhY,GAAAA,CAAAA,CAAAA;gBACP86C,QAAWtiD,GAAAA,CAAAA,CAAAA;aACN,UAAIwH,IAAI4X,IAAM;gBACnBA,IAAO5X,GAAAA,CAAAA,CAAAA;gBACP+6C,QAAWviD,GAAAA,CAAAA,CAAAA;aACZ;YAGD87C,IAAO,GAACC,CAAAA,MAASD,GAAAA,IAAAA,GAAOp+B,MAAMnW,CAAAA,IAAK,EAAEw0C,MAAAA,CAAAA;SAChC;AAEL,kBAAM6G,YAAY5iD,CAAI;AAEtB,gBAAI,CAACmY,6DAAAA,CAAcmqC,QAAa,MAACnqC,6DAAaA,CAACoqC,QAAW;AAKxD,sBAAMM,kBAAqB3jD,GAAAA,IAAAA,CAAKC,GAAG,CAACmjD,QAAUC,EAAAA,QAAAA,CAAAA,CAAAA;AAC9C,sBAAMO,kBAAqB5jD,GAAAA,IAAAA,CAAKoC,GAAG,CAACghD,QAAUC,EAAAA,QAAAA,CAAAA,CAAAA;gBAE9C,IAAIM,kBAAAA,KAAuBL,UAAcK,IAAAA,kBAAAA,KAAuBD,SAAW;AACzEtB,oBAAAA,SAAAA,CAAUtgD,IAAI,CAAC;wBACb,GAAGmI,IAAI,CAAC05C,kBAAmB;wBAC3Bt7C,CAAGu0C,EAAAA,IAAAA;AACL;iBACD;gBACD,IAAIgH,kBAAAA,KAAuBN,UAAcM,IAAAA,kBAAAA,KAAuBF,SAAW;AACzEtB,oBAAAA,SAAAA,CAAUtgD,IAAI,CAAC;wBACb,GAAGmI,IAAI,CAAC25C,kBAAmB;wBAC3Bv7C,CAAGu0C,EAAAA,IAAAA;AACL;iBACD;aACF;YAID,IAAI97C,CAAAA,GAAI,CAAK4iD,IAAAA,SAAAA,KAAcJ,UAAY;AAErClB,gBAAAA,SAAAA,CAAUtgD,IAAI,CAACmI,IAAI,CAACy5C,SAAU;aAC/B;AAGDtB,YAAAA,SAAAA,CAAUtgD,IAAI,CAAC0c,KAAAA,CAAAA,CAAAA;YACfs+B,KAAQI,GAAAA,MAAAA,CAAAA;YACRL,MAAS;AACTv8B,YAAAA,IAAAA,GAAOJ,IAAO5X,GAAAA,CAAAA,CAAAA;AACd86C,YAAAA,QAAAA,GAAWC,WAAWC,UAAaxiD,GAAAA,CAAAA,CAAAA;SACpC;AACH;IAEA,OAAOshD,SAAAA,CAAAA;AACT;AAEA,SAASyB,qBAAAA,CAAsB52C,OAAO,EAAE;IACtC,IAAIA,OAAAA,CAAQgY,UAAU,EAAE;QACtB,MAAMhb,IAAAA,GAAOgD,QAAQwB,KAAK;AAC1B,eAAOxB,QAAQgY,UAAU;AACzB,eAAOhY,QAAQwB,KAAK;QACpB1I,MAAO+9C,CAAAA,cAAc,CAAC72C,OAAAA,EAAS,MAAQ;AACrC82C,YAAAA,YAAAA,EAAc,IAAI;AAClBC,YAAAA,UAAAA,EAAY,IAAI;AAChBC,YAAAA,QAAAA,EAAU,IAAI;YACd38C,KAAO2C,EAAAA,IAAAA;AACT;KACD;AACH;AAEA,SAASi6C,kBAAAA,CAAmB9kD,KAAK,EAAE;AACjCA,IAAAA,KAAAA,CAAM6K,IAAI,CAACyG,QAAQ,CAAC9Q,OAAO,CAAC,CAACqN,OAAY;QACvC42C,qBAAsB52C,CAAAA,OAAAA,CAAAA,CAAAA;AACxB;AACF;AAEA,SAASk3C,yCAA0Cj6C,CAAAA,IAAI,EAAEqU,MAAM,EAAE;IAC/D,MAAM6lC,UAAAA,GAAa7lC,OAAO1d,MAAM;AAEhC,QAAIX,KAAQ;IACZ,IAAI+R,KAAAA,CAAAA;IAEJ,MAAM,EAAC9H,MAAM,GAAC,GAAGD,IAAAA,CAAAA;IACjB,MAAM,EAACjK,GAAG,GAAEmC,GAAG,GAAE6I,UAAU,GAAEC,UAAU,GAAC,GAAGf,MAAAA,CAAOa,aAAa;AAE/D,QAAIC,UAAY;QACd/K,KAAQy+B,GAAAA,6DAAAA,CAAY9V,6DAAatK,CAAAA,MAAAA,EAAQpU,MAAOG,CAAAA,IAAI,EAAErK,GAAK+oB,CAAAA,CAAAA,EAAE,EAAE,GAAGo7B,UAAa;KAChF;AACD,QAAIl5C,UAAY;QACd+G,KAAQ0sB,GAAAA,6DAAAA,CAAY9V,6DAAatK,CAAAA,MAAAA,EAAQpU,MAAOG,CAAAA,IAAI,EAAElI,GAAAA,CAAAA,CAAK6mB,EAAE,GAAG,CAAG/oB,EAAAA,KAAAA,EAAOkkD,UAAclkD,CAAAA,GAAAA,KAAAA,CAAAA;KACnF;AACL+R,QAAAA,KAAAA,GAAQmyC,UAAalkD,GAAAA,KAAAA,CAAAA;KACtB;IAED,OAAO;AAACA,QAAAA,KAAAA;AAAO+R,QAAAA,KAAAA;AAAK;AACtB;AAEA,wBAAe;IACblH,EAAI;IAEJ9E,QAAU;QACRo+C,SAAW;AACX9tB,QAAAA,OAAAA,EAAS,KAAK;AAChB;IAEA+tB,oBAAsB,GAACllD,KAAO8X,EAAAA,IAAAA,EAAMtQ,OAAY;QAC9C,IAAI,CAACA,OAAQ2vB,CAAAA,OAAO,EAAE;YAEpB2tB,kBAAmB9kD,CAAAA,KAAAA,CAAAA,CAAAA;AACnB;SACD;QAGD,MAAM2tB,cAAAA,GAAiB3tB,MAAMud,KAAK;QAElCvd,KAAM6K,CAAAA,IAAI,CAACyG,QAAQ,CAAC9Q,OAAO,CAAC,CAACqN,SAASrD,YAAiB;AACrD,kBAAM,EAAC6E,KAAAA,GAAO0B,SAAAA,GAAU,GAAGlD,OAAAA,CAAAA;YAC3B,MAAM/C,IAAAA,GAAO9K,KAAMuR,CAAAA,cAAc,CAAC/G,YAAAA,CAAAA,CAAAA;YAClC,MAAMK,IAAAA,GAAOwE,KAASxB,IAAAA,OAAAA,CAAQhD,IAAI;AAElC,gBAAIpG,6DAAQ;AAACsM,gBAAAA,SAAAA;gBAAW/Q,KAAMwH,CAAAA,OAAO,CAACuJ,SAAS;AAAC,mBAAM,GAAK;AAEzD;aACD;AAED,gBAAI,CAACjG,IAAAA,CAAK6B,UAAU,CAACgD,kBAAkB,EAAE;AAEvC;aACD;AAED,kBAAMw1C,QAAQnlD,KAAMuN,CAAAA,MAAM,CAACzC,IAAAA,CAAK2F,OAAO,CAAC;AACxC,gBAAI00C,MAAMhlD,IAAI,KAAK,YAAYglD,KAAMhlD,CAAAA,IAAI,KAAK,MAAQ;AAEpD;aACD;AAED,gBAAIH,KAAMwH,CAAAA,OAAO,CAACmL,OAAO,EAAE;AAEzB;aACD;AAED,gBAAI,EAAC7R,KAAK,GAAE+R,QAAM,GAAGkyC,0CAA0Cj6C,IAAMD,EAAAA,IAAAA,CAAAA,CAAAA;AACrE,kBAAMu6C,SAAY59C,GAAAA,OAAAA,CAAQ49C,SAAS,IAAI,CAAIz3B,GAAAA,cAAAA,CAAAA;AAC3C,gBAAI9a,SAASuyC,SAAW;gBAEtBX,qBAAsB52C,CAAAA,OAAAA,CAAAA,CAAAA;AACtB;aACD;AAED,gBAAIgM,6DAAaA,CAACxK,KAAQ;AAIxBxB,gBAAAA,OAAAA,CAAQwB,KAAK,GAAGxE,IAAAA,CAAAA;AAChB,uBAAOgD,QAAQhD,IAAI;gBACnBlE,MAAO+9C,CAAAA,cAAc,CAAC72C,OAAAA,EAAS,MAAQ;AACrC82C,oBAAAA,YAAAA,EAAc,IAAI;AAClBC,oBAAAA,UAAAA,EAAY,IAAI;AAChBziD,oBAAAA,GAAAA,EAAK,WAAW;wBACd,OAAO,IAAI,CAAC0jB,UAAU;AACxB;oBACAvjB,GAAK,WAASqqC,CAAC,EAAE;wBACf,IAAI,CAACt9B,KAAK,GAAGs9B,CAAAA,CAAAA;AACf;AACF;aACD;YAGD,IAAIqW,SAAAA,CAAAA;AACJ,mBAAQx7C,QAAQy9C,SAAS;gBACzB,KAAK;AACHjC,oBAAAA,SAAAA,GAAYF,cAAej4C,CAAAA,IAAAA,EAAM/J,KAAO+R,EAAAA,KAAAA,EAAO8a,cAAgBnmB,EAAAA,OAAAA,CAAAA,CAAAA;oBAC/D,MAAM;gBACR,KAAK;oBACHw7C,SAAYe,GAAAA,gBAAAA,CAAiBl5C,IAAM/J,EAAAA,KAAAA,EAAO+R,KAAO8a,EAAAA,cAAAA,CAAAA,CAAAA;oBACjD,MAAM;AACR;oBACE,MAAM,IAAIpF,KAAM,EAAC,kCAAkC,EAAE/gB,QAAQy9C,SAAS,CAAC,CAAC,CAAC,CAAE;AAC7E;AAEAp3C,YAAAA,OAAAA,CAAQgY,UAAU,GAAGm9B,SAAAA,CAAAA;AACvB;AACF;AAEArM,IAAAA,OAAAA,CAAAA,CAAQ32C,KAAK,EAAE;QACb8kD,kBAAmB9kD,CAAAA,KAAAA,CAAAA,CAAAA;AACrB;AACF,CAAE;;AC5RK,SAASg/C,SAAUz5B,CAAAA,IAAI,EAAEjhB,MAAM,EAAE6jC,QAAQ,EAAE;IAChD,MAAMuW,QAAAA,GAAWn5B,KAAKm5B,QAAQ;IAC9B,MAAMv/B,MAAAA,GAASoG,KAAKpG,MAAM;IAC1B,MAAMkmC,OAAAA,GAAU/gD,OAAO6a,MAAM;AAC7B,UAAMspB,QAAQ,EAAE;IAEhB,KAAK,MAAM3iB,WAAW44B,QAAU;AAC9B,YAAI,EAAC59C,KAAAA,GAAO+H,GAAAA,GAAI,GAAGid,OAAAA,CAAAA;QACnBjd,GAAMy8C,GAAAA,eAAAA,CAAgBxkD,OAAO+H,GAAKsW,EAAAA,MAAAA,CAAAA,CAAAA;AAElC,cAAM6hC,MAASuE,GAAAA,UAAAA,CAAWpd,QAAUhpB,EAAAA,MAAM,CAACre,KAAAA,CAAM,EAAEqe,MAAM,CAACtW,GAAAA,CAAI,EAAEid,OAAAA,CAAQ3gB,IAAI;QAE5E,IAAI,CAACb,MAAOo6C,CAAAA,QAAQ,EAAE;AAGpBjW,YAAAA,KAAAA,CAAM/lC,IAAI,CAAC;gBACTk7B,MAAQ9X,EAAAA,OAAAA;gBACRxhB,MAAQ08C,EAAAA,MAAAA;gBACRlgD,KAAOqe,EAAAA,MAAM,CAACre,KAAM;gBACpB+H,GAAKsW,EAAAA,MAAM,CAACtW,GAAI;AAClB;YACA,SAAS;SACV;QAGD,MAAM28C,cAAAA,GAAiBnG,8DAAcA,CAAC/6C,MAAQ08C,EAAAA,MAAAA,CAAAA,CAAAA;QAE9C,KAAK,MAAMyE,OAAOD,cAAgB;AAChC,kBAAME,YAAYH,UAAWpd,CAAAA,QAAAA,EAAUkd,OAAO,CAACI,IAAI3kD,KAAK,CAAC,EAAEukD,OAAO,CAACI,GAAI58C,CAAAA,GAAG,CAAC,EAAE48C,IAAItgD,IAAI;YACrF,MAAMwgD,WAAAA,GAAcC,8DAAc9/B,CAAAA,OAAAA,EAAS3G,MAAQumC,EAAAA,SAAAA,CAAAA,CAAAA;YAEnD,KAAK,MAAMG,cAAcF,WAAa;AACpCld,gBAAAA,KAAAA,CAAM/lC,IAAI,CAAC;oBACTk7B,MAAQioB,EAAAA,UAAAA;oBACRvhD,MAAQmhD,EAAAA,GAAAA;oBACR3kD,KAAO;AACL,yBAACqnC,WAAW2d,QAAAA,CAAS9E,QAAQ0E,SAAW,WAAS9kD,KAAKoC,GAAG;AAC3D;oBACA6F,GAAK;AACH,yBAACs/B,WAAW2d,QAAAA,CAAS9E,QAAQ0E,SAAW,SAAO9kD,KAAKC,GAAG;AACzD;AACF;AACF;AACF;AACF;IACA,OAAO4nC,KAAAA,CAAAA;AACT,CAAC;AAEM,SAAS8c,WAAWpd,QAAQ,EAAE7Q,KAAK,EAAE7Z,IAAI,EAAEtY,IAAI,EAAE;AACtD,QAAIA,IAAM;AACR;KACD;IACD,IAAIrE,KAAAA,GAAQw2B,KAAK,CAAC6Q,QAAS;IAC3B,IAAIt/B,GAAAA,GAAM4U,IAAI,CAAC0qB,QAAS;AAExB,QAAIA,aAAa,OAAS;AACxBrnC,QAAAA,KAAAA,GAAQilD,8DAAgBjlD,CAAAA,KAAAA,CAAAA,CAAAA;AACxB+H,QAAAA,GAAAA,GAAMk9C,8DAAgBl9C,CAAAA,GAAAA,CAAAA,CAAAA;KACvB;IACD,OAAO;AAACs/B,QAAAA,QAAAA;AAAUrnC,QAAAA,KAAAA;AAAO+H,QAAAA,GAAAA;AAAG;AAC9B,CAAC;AAEM,SAASm9C,mBAAAA,CAAoBC,QAAQ,EAAE1gC,IAAI,EAAE;IAClD,MAAM,EAACtc,CAAI,MAAI,GAAEC,CAAI,MAAI,GAAC,GAAG+8C,QAAAA,IAAY,EAAC;IAC1C,MAAMC,UAAAA,GAAa3gC,KAAKpG,MAAM;AAC9B,UAAMA,SAAS,EAAE;IACjBoG,IAAKm5B,CAAAA,QAAQ,CAACl+C,OAAO,CAAC,CAAC,EAACM,KAAK,GAAE+H,GAAG,GAAC,GAAK;QACtCA,GAAMy8C,GAAAA,eAAAA,CAAgBxkD,OAAO+H,GAAKq9C,EAAAA,UAAAA,CAAAA,CAAAA;QAClC,MAAM5uB,KAAAA,GAAQ4uB,UAAU,CAACplD,KAAM;QAC/B,MAAM2c,IAAAA,GAAOyoC,UAAU,CAACr9C,GAAI;QAC5B,IAAIK,CAAAA,KAAM,IAAI,EAAE;AACdiW,YAAAA,MAAAA,CAAOzc,IAAI,CAAC;AAACuG,gBAAAA,CAAAA,EAAGquB,MAAMruB,CAAC;AAAEC,gBAAAA,CAAAA;AAAC;AAC1BiW,YAAAA,MAAAA,CAAOzc,IAAI,CAAC;AAACuG,gBAAAA,CAAAA,EAAGwU,KAAKxU,CAAC;AAAEC,gBAAAA,CAAAA;AAAC;SACpB,UAAID,CAAM,SAAI,EAAE;AACrBkW,YAAAA,MAAAA,CAAOzc,IAAI,CAAC;AAACuG,gBAAAA,CAAAA;AAAGC,gBAAAA,CAAAA,EAAGouB,MAAMpuB,CAAC;AAAA;AAC1BiW,YAAAA,MAAAA,CAAOzc,IAAI,CAAC;AAACuG,gBAAAA,CAAAA;AAAGC,gBAAAA,CAAAA,EAAGuU,KAAKvU,CAAC;AAAA;SAC1B;AACH;IACA,OAAOiW,MAAAA,CAAAA;AACT,CAAC;AAEM,SAASmmC,eAAgBxkD,CAAAA,KAAK,EAAE+H,GAAG,EAAEsW,MAAM,EAAE;IAClD,MAAMtW,GAAAA,GAAM/H,OAAO+H,GAAO;QACxB,MAAMuW,KAAAA,GAAQD,MAAM,CAACtW,GAAI;QACzB,IAAI,CAAC+U,MAAMwB,KAAMnW,CAAAA,CAAC,KAAK,CAAC2U,KAAAA,CAAMwB,KAAMlW,CAAAA,CAAC,CAAG;YACtC,MAAM;SACP;AACH;IACA,OAAOL,GAAAA,CAAAA;AACT,CAAC;AAED,SAASi9C,QAAAA,CAAShtC,CAAC,EAAEpP,CAAC,EAAEnF,IAAI,EAAE9D,EAAE,EAAE;AAChC,QAAIqY,KAAKpP,CAAG;AACV,eAAOjJ,GAAGqY,CAAC,CAACvU,KAAK,EAAEmF,CAAC,CAACnF,IAAK;KAC3B;IACD,OAAOuU,CAAAA,GAAIA,CAAC,CAACvU,IAAK,IAAGmF,IAAIA,CAAC,CAACnF,IAAK,IAAG,CAAC;AACtC;;ACnFO,SAAS4hD,mBAAAA,CAAoBF,QAAQ,EAAE1gC,IAAI,EAAE;AAClD,QAAIpG,SAAS,EAAE;AACf,QAAIja,QAAQ,KAAK;AAEjB,QAAIiC,6DAAOA,CAAC8+C,QAAW;AACrB/gD,QAAAA,KAAAA,GAAQ,IAAI;QAEZia,MAAS8mC,GAAAA,QAAAA,CAAAA;KACJ;AACL9mC,QAAAA,MAAAA,GAAS6mC,oBAAoBC,QAAU1gC,EAAAA,IAAAA,CAAAA,CAAAA;KACxC;AAED,WAAOpG,MAAO1d,CAAAA,MAAM,GAAG,IAAIo9C,WAAY;AACrC1/B,QAAAA,MAAAA;QACA3X,OAAS;YAACo1C,OAAS;AAAC;AACpB13C,QAAAA,KAAAA;QACA6iB,SAAW7iB,EAAAA,KAAAA;AACb,SAAK,IAAI;AACX,CAAC;AAEM,SAASkhD,gBAAiBxoB,CAAAA,MAAM,EAAE;AACvC,WAAOA,MAAUA,IAAAA,MAAAA,CAAO3tB,IAAI,KAAK,KAAK;AACxC;;AC5BO,SAASo2C,cAAeC,CAAAA,OAAO,EAAEp8C,KAAK,EAAEq8C,SAAS,EAAE;IACxD,MAAM3oB,MAAAA,GAAS0oB,OAAO,CAACp8C,KAAM;IAC7B,IAAI+F,IAAAA,GAAO2tB,OAAO3tB,IAAI;AACtB,UAAMu2C,OAAU;AAACt8C,QAAAA,KAAAA;AAAM;IACvB,IAAI5F,MAAAA,CAAAA;AAEJ,QAAI,CAACiiD,SAAW;QACd,OAAOt2C,IAAAA,CAAAA;KACR;IAED,MAAOA,IAAAA,KAAS,KAAK,IAAIu2C,OAAAA,CAAQ3oC,OAAO,CAAC5N,IAAAA,CAAAA,KAAU,CAAC,CAAG;QACrD,IAAI,CAACvF,6DAAAA,CAASuF,IAAO;YACnB,OAAOA,IAAAA,CAAAA;SACR;QAED3L,MAASgiD,GAAAA,OAAO,CAACr2C,IAAK;AACtB,YAAI,CAAC3L,MAAQ;AACX,mBAAO,KAAK;SACb;QAED,IAAIA,MAAAA,CAAOgwC,OAAO,EAAE;YAClB,OAAOrkC,IAAAA,CAAAA;SACR;AAEDu2C,QAAAA,OAAAA,CAAQ9jD,IAAI,CAACuN,IAAAA,CAAAA,CAAAA;AACbA,QAAAA,IAAAA,GAAO3L,OAAO2L,IAAI;AACpB;AAEA,WAAO,KAAK;AACd,CAAC;AAOD,CAAO,SAASw2C,WAAYlhC,CAAAA,IAAI,EAAErb,KAAK,EAAE2I,KAAK,EAAE;KAE9C,MAAM5C,IAAAA,GAAOy2C,eAAgBnhC,CAAAA,IAAAA,CAAAA,CAAAA;AAE7B,QAAI9e,6DAAQA,CAACwJ,IAAO;AAClB,eAAO2N,MAAM3N,IAAK/H,CAAAA,KAAK,CAAI,QAAK,GAAG+H,IAAI;KACxC;AAED,QAAI3L,SAASqiD,UAAW12C,CAAAA,IAAAA,CAAAA,CAAAA;AAExB,QAAIvF,6DAAAA,CAASpG,MAAW1D,CAAAA,IAAAA,IAAAA,CAAKoE,KAAK,CAACV,YAAYA,MAAQ;AACrD,eAAOsiD,kBAAkB32C,IAAI,CAAC,CAAE,GAAE/F,OAAO5F,MAAQuO,EAAAA,KAAAA,CAAAA,CAAAA;KAClD;IAED,OAAO;AAAC;AAAU;AAAS;AAAO;AAAS;KAAQ,CAACgL,OAAO,CAAC5N,IAAAA,CAAAA,IAAS,CAAKA,IAAAA,IAAAA,CAAAA;AAC5E,CAAC;AAED,SAAS22C,iBAAAA,CAAkBC,OAAO,EAAE38C,KAAK,EAAE5F,MAAM,EAAEuO,KAAK,EAAE;IACxD,IAAIg0C,OAAAA,KAAY,GAAOA,IAAAA,OAAAA,KAAY,GAAK;AACtCviD,QAAAA,MAAAA,GAAS4F,KAAQ5F,GAAAA,MAAAA,CAAAA;KAClB;AAED,QAAIA,MAAW4F,KAAAA,KAAAA,IAAS5F,MAAS,QAAKA,UAAUuO,KAAO;AACrD,eAAO,KAAK;KACb;IAED,OAAOvO,MAAAA,CAAAA;AACT;AAMC,CACM,SAASwiD,eAAAA,CAAgB72C,IAAI,EAAExH,KAAK,EAAE;AAC3C,QAAI+4B,QAAQ,IAAI;AAChB,QAAIvxB,SAAS,OAAS;AACpBuxB,QAAAA,KAAAA,GAAQ/4B,MAAMY,MAAM;KACf,UAAI4G,SAAS,KAAO;AACzBuxB,QAAAA,KAAAA,GAAQ/4B,MAAMU,GAAG;KACZ,UAAI1C,6DAAQA,CAACwJ,IAAO;AAEzBuxB,QAAAA,KAAAA,GAAQ/4B,KAAM2Q,CAAAA,gBAAgB,CAACnJ,IAAAA,CAAK/H,KAAK;KACpC,UAAIO,KAAMqU,CAAAA,YAAY,EAAE;AAC7B0kB,QAAAA,KAAAA,GAAQ/4B,MAAMqU,YAAY;KAC3B;IACD,OAAO0kB,KAAAA,CAAAA;AACT,CAAC;AAQD,CAAO,SAASulB,eAAgB92C,CAAAA,IAAI,EAAExH,KAAK,EAAE8R,UAAU,EAAE;IACvD,IAAIrS,KAAAA,CAAAA;AAEJ,QAAI+H,SAAS,OAAS;QACpB/H,KAAQqS,GAAAA,UAAAA,CAAAA;KACH,UAAItK,SAAS,KAAO;QACzB/H,KAAQO,GAAAA,KAAAA,CAAMjB,OAAO,CAACoB,OAAO,GAAGH,KAAM5H,CAAAA,GAAG,GAAG4H,KAAAA,CAAMzF,GAAG;KAChD,UAAIyD,6DAAQA,CAACwJ,IAAO;AAEzB/H,QAAAA,KAAAA,GAAQ+H,KAAK/H,KAAK;KACb;AACLA,QAAAA,KAAAA,GAAQO,MAAMo5B,YAAY;KAC3B;IACD,OAAO35B,KAAAA,CAAAA;AACT,CAAC;AAKD,UAASw+C,eAAgBnhC,CAAAA,IAAI,EAAE;IAC7B,MAAM/d,OAAAA,GAAU+d,KAAK/d,OAAO;IAC5B,MAAMw/C,UAAAA,GAAax/C,QAAQyI,IAAI;AAC/B,QAAIA,IAAOS,GAAAA,6DAAAA,CAAes2C,UAAcA,IAAAA,UAAAA,CAAW1iD,MAAM,EAAE0iD,UAAAA,CAAAA,CAAAA;AAE3D,QAAI/2C,SAASnQ,SAAW;QACtBmQ,IAAO,IAAC,CAACzI,OAAAA,CAAQ4a,eAAe;KACjC;AAED,QAAInS,IAAS,UAAK,IAAIA,IAAAA,KAAS,IAAI,EAAE;AACnC,eAAO,KAAK;KACb;IAED,IAAIA,IAAAA,KAAS,IAAI,EAAE;QACjB,OAAO;KACR;IACD,OAAOA,IAAAA,CAAAA;AACT;;AC1HO,SAASg3C,eAAgBrpB,CAAAA,MAAM,EAAE;AACtC,UAAM,EAACn1B,KAAK,GAAEyB,QAAOqb,IAAAA,GAAK,GAAGqY,MAAAA,CAAAA;AAC7B,UAAMze,SAAS,EAAE;IACjB,MAAMu/B,QAAAA,GAAWn5B,KAAKm5B,QAAQ;IAC9B,MAAMwI,YAAAA,GAAe3hC,KAAKpG,MAAM;IAChC,MAAMgoC,UAAAA,GAAaC,cAAc3+C,KAAOyB,EAAAA,KAAAA,CAAAA,CAAAA;IACxCi9C,UAAWzkD,CAAAA,IAAI,CAACyjD,mBAAoB;AAACl9C,QAAAA,CAAAA,EAAG,IAAI;AAAEC,QAAAA,CAAAA,EAAGT,MAAMY,MAAM;KAAGkc,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAEhE,QAAK,IAAI7jB,CAAI,MAAGA,IAAIg9C,QAASj9C,CAAAA,MAAM,EAAEC,CAAK;QACxC,MAAMokB,OAAAA,GAAU44B,QAAQ,CAACh9C,CAAE;QAC3B,IAAK,IAAIwoB,IAAIpE,OAAQhlB,CAAAA,KAAK,EAAEopB,CAAKpE,IAAAA,OAAAA,CAAQjd,GAAG,EAAEqhB,CAAK;AACjDm9B,YAAAA,cAAAA,CAAeloC,MAAQ+nC,EAAAA,YAAY,CAACh9B,CAAAA,CAAE,EAAEi9B,UAAAA,CAAAA,CAAAA;AAC1C;AACF;AACA,WAAO,IAAItI,WAAY;AAAC1/B,QAAAA,MAAAA;AAAQ3X,QAAAA,OAAAA,EAAS,EAAC;AAAC;AAC7C,CAAC;AAMA,CACD,SAAS4/C,aAAAA,CAAc3+C,KAAK,EAAEyB,KAAK,EAAE;AACnC,UAAMo9C,QAAQ,EAAE;IAChB,MAAMnrB,KAAAA,GAAQ1zB,KAAMgE,CAAAA,uBAAuB,CAAC;AAE5C,QAAK,IAAI/K,CAAI,MAAGA,IAAIy6B,KAAM16B,CAAAA,MAAM,EAAEC,CAAK;QACrC,MAAMoJ,IAAAA,GAAOqxB,KAAK,CAACz6B,CAAE;QACrB,IAAIoJ,IAAAA,CAAKZ,KAAK,KAAKA,KAAO;YACxB,MAAM;SACP;QACD,IAAI,CAACY,IAAK4D,CAAAA,MAAM,EAAE;YAChB44C,KAAMC,CAAAA,OAAO,CAACz8C,IAAAA,CAAK+C,OAAO;SAC3B;AACH;IACA,OAAOy5C,KAAAA,CAAAA;AACT;AAMC,CACD,SAASD,cAAeloC,CAAAA,MAAM,EAAEqoC,WAAW,EAAEL,UAAU,EAAE;AACvD,UAAMM,YAAY,EAAE;AACpB,QAAK,IAAIv9B,CAAI,MAAGA,IAAIi9B,UAAW1lD,CAAAA,MAAM,EAAEyoB,CAAK;QAC1C,MAAM3E,IAAAA,GAAO4hC,UAAU,CAACj9B,CAAE;QAC1B,MAAM,EAACoN,KAAK,GAAE7Z,IAAI,GAAE2B,QAAM,GAAGsoC,SAAUniC,CAAAA,IAAAA,EAAMiiC,WAAa;QAE1D,IAAI,CAACpoC,KAAUkY,IAAAA,KAAAA,IAAS7Z,IAAO;YAC7B,SAAS;SACV;AACD,YAAI6Z,KAAO;AAGTmwB,YAAAA,SAAAA,CAAUF,OAAO,CAACnoC,KAAAA,CAAAA,CAAAA;SACb;AACLD,YAAAA,MAAAA,CAAOzc,IAAI,CAAC0c,KAAAA,CAAAA,CAAAA;AACZ,gBAAI,CAAC3B,IAAM;gBAET,MAAM;aACP;SACF;AACH;AACA0B,IAAAA,MAAAA,CAAOzc,IAAI,CAAI+kD,GAAAA,SAAAA,CAAAA,CAAAA;AACjB;AAOC,CACD,SAASC,SAAUniC,CAAAA,IAAI,EAAEiiC,WAAW,EAAErf,QAAQ,EAAE;AAC9C,UAAM/oB,KAAQmG,GAAAA,IAAAA,CAAK65B,WAAW,CAACoI,WAAarf,EAAAA,QAAAA,CAAAA,CAAAA;AAC5C,QAAI,CAAC/oB,KAAO;AACV,eAAO,EAAC;KACT;IAED,MAAMuoC,UAAAA,GAAavoC,KAAK,CAAC+oB,QAAS;IAClC,MAAMuW,QAAAA,GAAWn5B,KAAKm5B,QAAQ;IAC9B,MAAMwH,UAAAA,GAAa3gC,KAAKpG,MAAM;AAC9B,QAAImY,QAAQ,KAAK;AACjB,QAAI7Z,OAAO,KAAK;AAChB,QAAK,IAAI/b,CAAI,MAAGA,IAAIg9C,QAASj9C,CAAAA,MAAM,EAAEC,CAAK;QACxC,MAAMokB,OAAAA,GAAU44B,QAAQ,CAACh9C,CAAE;AAC3B,cAAMkmD,aAAa1B,UAAU,CAACpgC,QAAQhlB,KAAK,CAAC,CAACqnC,QAAS;AACtD,cAAM0f,YAAY3B,UAAU,CAACpgC,QAAQjd,GAAG,CAAC,CAACs/B,QAAS;QACnD,IAAI4T,8DAAAA,CAAW4L,UAAYC,EAAAA,UAAAA,EAAYC,SAAY;AACjDvwB,YAAAA,KAAAA,GAAQqwB,UAAeC,KAAAA,UAAAA,CAAAA;AACvBnqC,YAAAA,IAAAA,GAAOkqC,UAAeE,KAAAA,SAAAA,CAAAA;YACtB,MAAM;SACP;AACH;IACA,OAAO;AAACvwB,QAAAA,KAAAA;AAAO7Z,QAAAA,IAAAA;AAAM2B,QAAAA,KAAAA;AAAK;AAC5B;;AC1GO,MAAM0oC,SAAAA,CAAAA;AACXtoD,IAAAA,WAAAA,CAAYmJ,IAAI,CAAE;AAChB,YAAI,CAACM,CAAC,GAAGN,IAAAA,CAAKM,CAAC;AACf,YAAI,CAACC,CAAC,GAAGP,IAAAA,CAAKO,CAAC;AACf,YAAI,CAACgW,MAAM,GAAGvW,IAAAA,CAAKuW,MAAM;AAC3B;AAEAm+B,IAAAA,WAAAA,CAAYruC,GAAG,EAAEgyC,MAAM,EAAEr4C,IAAI,EAAE;QAC7B,MAAM,EAACM,IAAGC,CAAAA,GAAGgW,MAAM,GAAC,GAAG,IAAI;AAC3B8hC,QAAAA,MAAAA,GAASA,MAAU;YAAClgD,KAAO;YAAG+H,GAAKmX,EAAAA,yDAAAA;AAAG;QACtChR,GAAI2V,CAAAA,GAAG,CAAC1b,CAAAA,EAAGC,CAAGgW,EAAAA,MAAAA,EAAQ8hC,MAAOn4C,CAAAA,GAAG,EAAEm4C,MAAAA,CAAOlgD,KAAK,EAAE,IAAI;QACpD,OAAO,CAAC6H,KAAKq4C,MAAM;AACrB;AAEA5B,IAAAA,WAAAA,CAAYhgC,KAAK,EAAE;QACjB,MAAM,EAACnW,IAAGC,CAAAA,GAAGgW,MAAM,GAAC,GAAG,IAAI;QAC3B,MAAMwB,KAAAA,GAAQtB,MAAMsB,KAAK;QACzB,OAAO;AACLzX,YAAAA,CAAAA,EAAGA,CAAIrI,GAAAA,IAAAA,CAAKwf,GAAG,CAACM,KAASxB,CAAAA,GAAAA,MAAAA;AACzBhW,YAAAA,CAAAA,EAAGA,CAAItI,GAAAA,IAAAA,CAAK0f,GAAG,CAACI,KAASxB,CAAAA,GAAAA,MAAAA;AACzBwB,YAAAA,KAAAA;AACF;AACF;AACF;;ACdO,SAASqnC,UAAWnqB,CAAAA,MAAM,EAAE;AACjC,UAAM,EAAC59B,KAAK,GAAEiQ,OAAMsV,IAAAA,GAAK,GAAGqY,MAAAA,CAAAA;AAE5B,QAAIlzB,6DAAAA,CAASuF,IAAO;AAClB,eAAO+3C,eAAehoD,KAAOiQ,EAAAA,IAAAA,CAAAA,CAAAA;KAC9B;AAED,QAAIA,SAAS,OAAS;AACpB,eAAOg3C,eAAgBrpB,CAAAA,MAAAA,CAAAA,CAAAA;KACxB;AAED,QAAI3tB,SAAS,OAAS;AACpB,eAAO,IAAI;KACZ;AAED,UAAMg2C,WAAWgC,eAAgBrqB,CAAAA,MAAAA,CAAAA,CAAAA;AAEjC,QAAIqoB,oBAAoB6B,SAAW;QACjC,OAAO7B,QAAAA,CAAAA;KACR;AAED,WAAOE,oBAAoBF,QAAU1gC,EAAAA,IAAAA,CAAAA,CAAAA;AACvC,CAAC;AAKA,CACD,SAASyiC,cAAAA,CAAehoD,KAAK,EAAEkK,KAAK,EAAE;IACpC,MAAMY,IAAAA,GAAO9K,KAAMuR,CAAAA,cAAc,CAACrH,KAAAA,CAAAA,CAAAA;AAClC,UAAMoqC,OAAUxpC,GAAAA,IAAAA,IAAQ9K,KAAMqjB,CAAAA,gBAAgB,CAACnZ,KAAAA,CAAAA,CAAAA;AAC/C,WAAOoqC,OAAUxpC,GAAAA,IAAAA,CAAK+C,OAAO,GAAG,IAAI;AACtC;AAEA,SAASo6C,eAAAA,CAAgBrqB,MAAM,EAAE;AAC/B,UAAMn1B,KAAQm1B,GAAAA,MAAAA,CAAOn1B,KAAK,IAAI,EAAC;IAE/B,IAAIA,KAAAA,CAAMwf,wBAAwB,EAAE;AAClC,eAAOigC,uBAAwBtqB,CAAAA,MAAAA,CAAAA,CAAAA;KAChC;AACD,WAAOuqB,qBAAsBvqB,CAAAA,MAAAA,CAAAA,CAAAA;AAC/B;AAGA,SAASuqB,qBAAAA,CAAsBvqB,MAAM,EAAE;AACrC,UAAM,EAACn1B,KAAQ,OAAIwH,IAAAA,GAAK,GAAG2tB,MAAAA,CAAAA;IAC3B,MAAM4D,KAAAA,GAAQslB,gBAAgB72C,IAAMxH,EAAAA,KAAAA,CAAAA,CAAAA;AAEpC,QAAIiC,6DAAAA,CAAS82B,KAAQ;QACnB,MAAMpmB,UAAAA,GAAa3S,MAAMyS,YAAY;QAErC,OAAO;YACLjS,CAAGmS,EAAAA,UAAAA,GAAaomB,QAAQ,IAAI;YAC5Bt4B,CAAGkS,EAAAA,UAAAA,GAAa,IAAI,GAAGomB,KAAK;AAC9B;KACD;AAED,WAAO,IAAI;AACb;AAEA,SAAS0mB,uBAAAA,CAAwBtqB,MAAM,EAAE;AACvC,UAAM,EAACn1B,KAAAA,GAAOwH,IAAAA,GAAK,GAAG2tB,MAAAA,CAAAA;IACtB,MAAMp2B,OAAAA,GAAUiB,MAAMjB,OAAO;AAC7B,UAAM/F,MAASgH,GAAAA,KAAAA,CAAM6K,SAAS,GAAG7R,MAAM;IACvC,MAAMX,KAAAA,GAAQ0G,QAAQoB,OAAO,GAAGH,MAAMzF,GAAG,GAAGyF,MAAM5H,GAAG;IACrD,MAAMqH,KAAAA,GAAQ6+C,eAAgB92C,CAAAA,IAAAA,EAAMxH,KAAO3H,EAAAA,KAAAA,CAAAA,CAAAA;AAC3C,UAAMwD,SAAS,EAAE;AAEjB,QAAIkD,OAAQiV,CAAAA,IAAI,CAACoK,QAAQ,EAAE;AACzB,cAAMxJ,MAAS5U,GAAAA,KAAAA,CAAMwf,wBAAwB,CAAC,CAAGnnB,EAAAA,KAAAA,CAAAA,CAAAA;AACjD,eAAO,IAAIgnD,SAAU;AACnB7+C,YAAAA,CAAAA,EAAGoU,OAAOpU,CAAC;AACXC,YAAAA,CAAAA,EAAGmU,OAAOnU,CAAC;YACXgW,MAAQzW,EAAAA,KAAAA,CAAMmf,6BAA6B,CAAC1f,KAAAA,CAAAA;AAC9C;KACD;AAED,QAAK,IAAIxG,CAAI,MAAGA,CAAID,GAAAA,MAAAA,EAAQ,EAAEC,CAAG;AAC/B4C,QAAAA,MAAAA,CAAO5B,IAAI,CAAC+F,KAAMwf,CAAAA,wBAAwB,CAACvmB,CAAGwG,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AAChD;IACA,OAAO5D,MAAAA,CAAAA;AACT;;ACzFO,SAAS8jD,SAAUp5C,CAAAA,GAAG,EAAE4uB,MAAM,EAAE9oB,IAAI,EAAE;AAC3C,UAAMxQ,SAASyjD,UAAWnqB,CAAAA,MAAAA,CAAAA,CAAAA;AAC1B,UAAM,EAACrY,IAAI,GAAE9c,QAAOyC,IAAAA,GAAK,GAAG0yB,MAAAA,CAAAA;IAC5B,MAAMyqB,QAAAA,GAAW9iC,KAAK/d,OAAO;IAC7B,MAAMw/C,UAAAA,GAAaqB,SAASp4C,IAAI;IAChC,MAAMrM,KAAAA,GAAQykD,SAASjmC,eAAe;IACtC,MAAM,EAACkmC,OAAQ1kD,KAAK,GAAE0jD,OAAQ1jD,KAAK,GAAC,GAAGojD,UAAAA,IAAc,EAAC;AACtD,QAAI1iD,MAAUihB,IAAAA,IAAAA,CAAKpG,MAAM,CAAC1d,MAAM,EAAE;AAChC8kC,QAAAA,6DAAAA,CAASv3B,GAAK8F,EAAAA,IAAAA,CAAAA,CAAAA;AACdyzC,QAAAA,MAAAA,CAAOv5C,GAAK;AAACuW,YAAAA,IAAAA;AAAMjhB,YAAAA,MAAAA;AAAQgkD,YAAAA,KAAAA;AAAOhB,YAAAA,KAAAA;AAAOxyC,YAAAA,IAAAA;AAAMrM,YAAAA,KAAAA;AAAOyC,YAAAA,IAAAA;AAAI;QAC1Dw7B,6DAAW13B,CAAAA,GAAAA,CAAAA,CAAAA;KACZ;AACH,CAAC;AAED,SAASu5C,MAAOv5C,CAAAA,GAAG,EAAE3K,GAAG,EAAE;AACxB,UAAM,EAACkhB,IAAAA,GAAMjhB,MAAAA,GAAQgkD,KAAAA,GAAOhB,KAAAA,GAAOxyC,IAAAA,GAAMrM,KAAAA,GAAM,GAAGpE,GAAAA,CAAAA;AAClD,UAAM8jC,WAAW5iB,IAAKrgB,CAAAA,KAAK,GAAG,UAAUb,IAAI6G,IAAI;AAEhD8D,IAAAA,GAAAA,CAAIq2B,IAAI;IAER,IAAI8C,QAAAA,KAAa,GAAOmf,IAAAA,KAAAA,KAAUgB,KAAO;QACvCE,YAAax5C,CAAAA,GAAAA,EAAK1K,MAAQwQ,EAAAA,IAAAA,CAAK3L,GAAG;AAClC8G,QAAAA,IAAAA,CAAKjB,GAAK;AAACuW,YAAAA,IAAAA;AAAMjhB,YAAAA,MAAAA;YAAQV,KAAO0kD,EAAAA,KAAAA;AAAO7/C,YAAAA,KAAAA;AAAO0/B,YAAAA,QAAAA;AAAQ;AACtDn5B,QAAAA,GAAAA,CAAIu2B,OAAO;AACXv2B,QAAAA,GAAAA,CAAIq2B,IAAI;QACRmjB,YAAax5C,CAAAA,GAAAA,EAAK1K,MAAQwQ,EAAAA,IAAAA,CAAKzL,MAAM;KACtC;AACD4G,IAAAA,IAAAA,CAAKjB,GAAK;AAACuW,QAAAA,IAAAA;AAAMjhB,QAAAA,MAAAA;QAAQV,KAAO0jD,EAAAA,KAAAA;AAAO7+C,QAAAA,KAAAA;AAAO0/B,QAAAA,QAAAA;AAAQ;AAEtDn5B,IAAAA,GAAAA,CAAIu2B,OAAO;AACb;AAEA,SAASijB,aAAax5C,GAAG,EAAE1K,MAAM,EAAEmkD,KAAK,EAAE;AACxC,UAAM,EAAC/J,QAAAA,GAAUv/B,MAAAA,GAAO,GAAG7a,MAAAA,CAAAA;AAC3B,QAAIgzB,QAAQ,IAAI;AAChB,QAAIoxB,WAAW,KAAK;AAEpB15C,IAAAA,GAAAA,CAAI+2B,SAAS;IACb,KAAK,MAAMjgB,WAAW44B,QAAU;AAC9B,cAAM,EAAC59C,KAAAA,GAAO+H,GAAAA,GAAI,GAAGid,OAAAA,CAAAA;QACrB,MAAMS,UAAAA,GAAapH,MAAM,CAACre,KAAM;AAChC,cAAM0lB,YAAYrH,MAAM,CAACmmC,eAAgBxkD,CAAAA,KAAAA,EAAO+H,KAAKsW,MAAQ;AAC7D,YAAImY,KAAO;AACTtoB,YAAAA,GAAAA,CAAIg3B,MAAM,CAACzf,UAAAA,CAAWtd,CAAC,EAAEsd,WAAWrd,CAAC;AACrCouB,YAAAA,KAAAA,GAAQ,KAAK;SACR;AACLtoB,YAAAA,GAAAA,CAAIi3B,MAAM,CAAC1f,UAAWtd,CAAAA,CAAC,EAAEw/C,KAAAA,CAAAA,CAAAA;AACzBz5C,YAAAA,GAAAA,CAAIi3B,MAAM,CAAC1f,UAAAA,CAAWtd,CAAC,EAAEsd,WAAWrd,CAAC;SACtC;AACDw/C,QAAAA,QAAAA,GAAW,CAAC,CAACpkD,MAAAA,CAAO+4C,WAAW,CAACruC,KAAK8W,OAAS;YAACtO,IAAMkxC,EAAAA,QAAAA;AAAQ;AAC7D,YAAIA,QAAU;AACZ15C,YAAAA,GAAAA,CAAIwpC,SAAS;SACR;AACLxpC,YAAAA,GAAAA,CAAIi3B,MAAM,CAACzf,SAAUvd,CAAAA,CAAC,EAAEw/C,KAAAA,CAAAA,CAAAA;SACzB;AACH;AAEAz5C,IAAAA,GAAAA,CAAIi3B,MAAM,CAAC3hC,MAAAA,CAAOgzB,KAAK,GAAGruB,CAAC,EAAEw/C,KAAAA,CAAAA,CAAAA;AAC7Bz5C,IAAAA,GAAAA,CAAIwpC,SAAS;AACbxpC,IAAAA,GAAAA,CAAI4F,IAAI;AACV;AAEA,SAAS3E,IAAKjB,CAAAA,GAAG,EAAE3K,GAAG,EAAE;IACtB,MAAM,EAACkhB,IAAI,GAAEjhB,MAAM,GAAE6jC,QAAQ,GAAEvkC,KAAK,GAAE6E,KAAK,GAAC,GAAGpE,GAAAA,CAAAA;IAC/C,MAAMq6C,QAAAA,GAAWM,SAAUz5B,CAAAA,IAAAA,EAAMjhB,MAAQ6jC,EAAAA,QAAAA,CAAAA,CAAAA;AAEzC,SAAK,MAAM,EAACvK,MAAQ+qB,EAAAA,GAAAA,GAAKrkD,MAAAA,EAAQmhD,GAAG,GAAE3kD,KAAK,GAAE+H,GAAG,GAAC,IAAI61C,QAAU;QAC7D,MAAM,EAACz8B,KAAO,IAACG,eAAkBxe,EAAAA,KAAAA,GAAM,GAAG,EAAE,GAAC,GAAG+kD,GAAAA,CAAAA;QAChD,MAAMC,QAAAA,GAAWtkD,WAAW,IAAI;AAEhC0K,QAAAA,GAAAA,CAAIq2B,IAAI;AACRr2B,QAAAA,GAAAA,CAAImT,SAAS,GAAGC,eAAAA,CAAAA;AAEhBymC,QAAAA,UAAAA,CAAW75C,GAAKvG,EAAAA,KAAAA,EAAOmgD,QAAYrD,IAAAA,UAAAA,CAAWpd,UAAUrnC,KAAO+H,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAE/DmG,QAAAA,GAAAA,CAAI+2B,SAAS;AAEb,cAAM2iB,WAAW,CAAC,CAACnjC,IAAK83B,CAAAA,WAAW,CAACruC,GAAK25C,EAAAA,GAAAA,CAAAA,CAAAA;QAEzC,IAAIxjD,IAAAA,CAAAA;AACJ,YAAIyjD,QAAU;AACZ,gBAAIF,QAAU;AACZ15C,gBAAAA,GAAAA,CAAIwpC,SAAS;aACR;gBACLsQ,kBAAmB95C,CAAAA,GAAAA,EAAK1K,QAAQuE,GAAKs/B,EAAAA,QAAAA,CAAAA,CAAAA;aACtC;AAED,kBAAM4gB,aAAa,CAAC,CAACzkD,OAAO+4C,WAAW,CAACruC,KAAKy2C,GAAK;gBAACjuC,IAAMkxC,EAAAA,QAAAA;AAAU9/C,gBAAAA,OAAAA,EAAS,IAAI;AAAA;AAChFzD,YAAAA,IAAAA,GAAOujD,QAAYK,IAAAA,UAAAA,CAAAA;AACnB,gBAAI,CAAC5jD,IAAM;gBACT2jD,kBAAmB95C,CAAAA,GAAAA,EAAK1K,QAAQxD,KAAOqnC,EAAAA,QAAAA,CAAAA,CAAAA;aACxC;SACF;AAEDn5B,QAAAA,GAAAA,CAAIwpC,SAAS;AACbxpC,QAAAA,GAAAA,CAAIiB,IAAI,CAAC9K,IAAO,eAAY,SAAS;AAErC6J,QAAAA,GAAAA,CAAIu2B,OAAO;AACb;AACF;AAEA,SAASsjB,WAAW75C,GAAG,EAAEvG,KAAK,EAAEu4C,MAAM,EAAE;IACtC,MAAM,EAAC73C,MAAKE,MAAAA,GAAO,GAAGZ,KAAAA,CAAMzI,KAAK,CAAC+U,SAAS;IAC3C,MAAM,EAACozB,WAAUrnC,KAAAA,GAAO+H,GAAG,GAAC,GAAGm4C,MAAAA,IAAU,EAAC;AAC1C,QAAI7Y,aAAa,GAAK;AACpBn5B,QAAAA,GAAAA,CAAI+2B,SAAS;AACb/2B,QAAAA,GAAAA,CAAIuyC,IAAI,CAACzgD,KAAAA,EAAOqI,GAAKN,EAAAA,GAAAA,GAAM/H,OAAOuI,MAASF,GAAAA,GAAAA,CAAAA,CAAAA;AAC3C6F,QAAAA,GAAAA,CAAI4F,IAAI;KACT;AACH;AAEA,SAASk0C,kBAAAA,CAAmB95C,GAAG,EAAE1K,MAAM,EAAE8a,KAAK,EAAE+oB,QAAQ,EAAE;AACxD,UAAM6gB,iBAAoB1kD,GAAAA,MAAAA,CAAO86C,WAAW,CAAChgC,KAAO+oB,EAAAA,QAAAA,CAAAA,CAAAA;AACpD,QAAI6gB,iBAAmB;AACrBh6C,QAAAA,GAAAA,CAAIi3B,MAAM,CAAC+iB,iBAAAA,CAAkB//C,CAAC,EAAE+/C,kBAAkB9/C,CAAC;KACpD;AACH;;AC7GA,YAAe;IACbyC,EAAI;AAEJs9C,IAAAA,mBAAAA,CAAAA,CAAoBjpD,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QACzC,MAAMqL,KAAAA,GAAQ,CAAC7S,KAAM6K,CAAAA,IAAI,CAACyG,QAAQ,IAAI,EAAE,EAAE7P,MAAM;AAChD,cAAM6kD,UAAU,EAAE;QAClB,IAAIx7C,IAAAA,EAAMpJ,GAAG6jB,IAAMqY,EAAAA,MAAAA,CAAAA;AAEnB,YAAKl8B,CAAI,MAAGA,CAAImR,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;YAC1BoJ,IAAO9K,GAAAA,KAAAA,CAAMuR,cAAc,CAAC7P,CAAAA,CAAAA,CAAAA;AAC5B6jB,YAAAA,IAAAA,GAAOza,KAAK+C,OAAO;AACnB+vB,YAAAA,MAAAA,GAAS,IAAI;AAEb,gBAAIrY,IAAQA,IAAAA,IAAAA,CAAK/d,OAAO,IAAI+d,gBAAgBs5B,WAAa;gBACvDjhB,MAAS;oBACP0W,OAASt0C,EAAAA,KAAAA,CAAMqjB,gBAAgB,CAAC3hB,CAAAA,CAAAA;oBAChCwI,KAAOxI,EAAAA,CAAAA;oBACPuO,IAAMw2C,EAAAA,WAAAA,CAAYlhC,MAAM7jB,CAAGmR,EAAAA,KAAAA,CAAAA;AAC3B7S,oBAAAA,KAAAA;AACAkL,oBAAAA,IAAAA,EAAMJ,IAAK6B,CAAAA,UAAU,CAACnF,OAAO,CAACuJ,SAAS;AACvCtI,oBAAAA,KAAAA,EAAOqC,KAAKE,MAAM;AAClBua,oBAAAA,IAAAA;AACF;aACD;AAEDza,YAAAA,IAAAA,CAAKo+C,OAAO,GAAGtrB,MAAAA,CAAAA;AACf0oB,YAAAA,OAAAA,CAAQ5jD,IAAI,CAACk7B,MAAAA,CAAAA,CAAAA;AACf;AAEA,YAAKl8B,CAAI,MAAGA,CAAImR,GAAAA,KAAAA,EAAO,EAAEnR,CAAG;YAC1Bk8B,MAAS0oB,GAAAA,OAAO,CAAC5kD,CAAE;AACnB,gBAAI,CAACk8B,MAAUA,IAAAA,MAAAA,CAAO3tB,IAAI,KAAK,KAAK,EAAE;gBACpC,SAAS;aACV;AAED2tB,YAAAA,MAAAA,CAAO3tB,IAAI,GAAGo2C,cAAAA,CAAeC,OAAS5kD,EAAAA,CAAAA,EAAG8F,QAAQ++C,SAAS;AAC5D;AACF;AAEA4C,IAAAA,UAAAA,CAAAA,CAAWnpD,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAChC,MAAM7F,IAAAA,GAAO6F,OAAQ4hD,CAAAA,QAAQ,KAAK;QAClC,MAAMr/C,QAAAA,GAAW/J,MAAMiqB,4BAA4B;QACnD,MAAMnV,IAAAA,GAAO9U,MAAM+U,SAAS;QAC5B,IAAK,IAAIrT,IAAIqI,QAAStI,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,IAAEA,CAAG;AAC7C,kBAAMk8B,MAAS7zB,GAAAA,QAAQ,CAACrI,CAAAA,CAAE,CAACwnD,OAAO;AAClC,gBAAI,CAACtrB,MAAQ;gBACX,SAAS;aACV;AAEDA,YAAAA,MAAAA,CAAOrY,IAAI,CAACkB,mBAAmB,CAAC3R,IAAAA,EAAM8oB,OAAO1yB,IAAI;YACjD,IAAIvJ,IAAAA,IAAQi8B,MAAO3tB,CAAAA,IAAI,EAAE;gBACvBm4C,SAAUpoD,CAAAA,KAAAA,CAAMgP,GAAG,EAAE4uB,MAAQ9oB,EAAAA,IAAAA,CAAAA,CAAAA;aAC9B;AACH;AACF;AAEAu0C,IAAAA,kBAAAA,CAAAA,CAAmBrpD,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QACxC,IAAIA,OAAAA,CAAQ4hD,QAAQ,KAAK,oBAAsB;AAC7C;SACD;QAED,MAAMr/C,QAAAA,GAAW/J,MAAMiqB,4BAA4B;QACnD,IAAK,IAAIvoB,IAAIqI,QAAStI,CAAAA,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK,CAAG,IAAEA,CAAG;AAC7C,kBAAMk8B,MAAS7zB,GAAAA,QAAQ,CAACrI,CAAAA,CAAE,CAACwnD,OAAO;AAElC,gBAAI9C,iBAAiBxoB,MAAS;AAC5BwqB,gBAAAA,SAAAA,CAAUpoD,KAAMgP,CAAAA,GAAG,EAAE4uB,MAAAA,EAAQ59B,MAAM+U,SAAS;aAC7C;AACH;AACF;AAEAu0C,IAAAA,iBAAAA,CAAAA,CAAkBtpD,KAAK,EAAE8X,IAAI,EAAEtQ,OAAO,EAAE;AACtC,cAAMo2B,MAAS9lB,GAAAA,IAAAA,CAAKhN,IAAI,CAACo+C,OAAO;AAEhC,YAAI,CAAC9C,gBAAiBxoB,CAAAA,MAAAA,CAAAA,IAAWp2B,OAAQ4hD,CAAAA,QAAQ,KAAK,mBAAqB;AACzE;SACD;AAEDhB,QAAAA,SAAAA,CAAUpoD,KAAMgP,CAAAA,GAAG,EAAE4uB,MAAAA,EAAQ59B,MAAM+U,SAAS;AAC9C;IAEAlO,QAAU;AACR0/C,QAAAA,SAAAA,EAAW,IAAI;QACf6C,QAAU;AACZ;AACF,CAAE;;ACzEF,MAAMG,UAAAA,GAAa,CAACC,SAAAA,EAAWviB,QAAa;AAC1C,QAAI,EAACwiB,SAAYxiB,EAAAA,QAAAA,GAAUyiB,QAAWziB,EAAAA,QAAAA,GAAS,GAAGuiB,SAAAA,CAAAA;IAElD,IAAIA,SAAAA,CAAUG,aAAa,EAAE;QAC3BF,SAAY7oD,GAAAA,IAAAA,CAAKC,GAAG,CAAC4oD,SAAWxiB,EAAAA,QAAAA,CAAAA,CAAAA;AAChCyiB,QAAAA,QAAAA,GAAWF,UAAUI,eAAe,IAAIhpD,IAAKC,CAAAA,GAAG,CAAC6oD,QAAUziB,EAAAA,QAAAA,CAAAA,CAAAA;KAC5D;IAED,OAAO;AACLyiB,QAAAA,QAAAA;AACAD,QAAAA,SAAAA;QACAI,UAAYjpD,EAAAA,IAAAA,CAAKoC,GAAG,CAACikC,QAAUwiB,EAAAA,SAAAA,CAAAA;AACjC;AACF;AAEA,MAAMK,UAAAA,GAAa,CAAChxC,CAAGpP,EAAAA,CAAAA,GAAMoP,MAAM,IAAI,IAAIpP,MAAM,IAAI,IAAIoP,EAAEtO,YAAY,KAAKd,EAAEc,YAAY,IAAIsO,EAAE5O,KAAK,KAAKR,EAAEQ,KAAK;AAE1G,MAAM6/C,MAAe1zB,SAAAA,OAAAA,CAAAA;AAK1B72B,CAAAA,WAAAA,CAAY6G,MAAM,CAAE;QAClB,KAAK;QAEL,IAAI,CAAC2jD,MAAM,GAAG,KAAK;QAGnB,IAAI,CAACC,cAAc,GAAG,EAAE;AAIxB,CACA,IAAI,CAACC,YAAY,GAAG,IAAI;QAGxB,IAAI,CAACC,YAAY,GAAG,KAAK;AAEzB,YAAI,CAACnqD,KAAK,GAAGqG,MAAAA,CAAOrG,KAAK;AACzB,YAAI,CAACwH,OAAO,GAAGnB,MAAAA,CAAOmB,OAAO;AAC7B,YAAI,CAACwH,GAAG,GAAG3I,MAAAA,CAAO2I,GAAG;QACrB,IAAI,CAACo7C,WAAW,GAAGtqD,SAAAA,CAAAA;QACnB,IAAI,CAACuqD,WAAW,GAAGvqD,SAAAA,CAAAA;QACnB,IAAI,CAACwqD,UAAU,GAAGxqD,SAAAA,CAAAA;QAClB,IAAI,CAACgkB,SAAS,GAAGhkB,SAAAA,CAAAA;QACjB,IAAI,CAAC+jB,QAAQ,GAAG/jB,SAAAA,CAAAA;QAChB,IAAI,CAACqJ,GAAG,GAAGrJ,SAAAA,CAAAA;QACX,IAAI,CAACuJ,MAAM,GAAGvJ,SAAAA,CAAAA;QACd,IAAI,CAACwJ,IAAI,GAAGxJ,SAAAA,CAAAA;QACZ,IAAI,CAACsJ,KAAK,GAAGtJ,SAAAA,CAAAA;QACb,IAAI,CAACwd,MAAM,GAAGxd,SAAAA,CAAAA;QACd,IAAI,CAACyd,KAAK,GAAGzd,SAAAA,CAAAA;QACb,IAAI,CAAC+6B,QAAQ,GAAG/6B,SAAAA,CAAAA;QAChB,IAAI,CAACiqB,QAAQ,GAAGjqB,SAAAA,CAAAA;QAChB,IAAI,CAACqlB,MAAM,GAAGrlB,SAAAA,CAAAA;QACd,IAAI,CAAC4tB,QAAQ,GAAG5tB,SAAAA,CAAAA;AAClB;AAEA4F,IAAAA,MAAAA,CAAOme,QAAQ,EAAEC,SAAS,EAAE4Y,OAAO,EAAE;QACnC,IAAI,CAAC7Y,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACC,SAAS,GAAGA,SAAAA,CAAAA;QACjB,IAAI,CAAC+W,QAAQ,GAAG6B,OAAAA,CAAAA;AAEhB,YAAI,CAACI,aAAa;AAClB,YAAI,CAACytB,WAAW;AAChB,YAAI,CAACxsB,GAAG;AACV;IAEAjB,aAAgB;QACd,IAAI,IAAI,CAAC5hB,YAAY,EAAI;AACvB,gBAAI,CAACqC,KAAK,GAAG,IAAI,CAACsG,QAAQ;AAC1B,gBAAI,CAACva,IAAI,GAAG,IAAI,CAACuxB,QAAQ,CAACvxB,IAAI;AAC9B,gBAAI,CAACF,KAAK,GAAG,IAAI,CAACmU,KAAK;SAClB;AACL,gBAAI,CAACD,MAAM,GAAG,IAAI,CAACwG,SAAS;AAC5B,gBAAI,CAAC3a,GAAG,GAAG,IAAI,CAAC0xB,QAAQ,CAAC1xB,GAAG;AAC5B,gBAAI,CAACE,MAAM,GAAG,IAAI,CAACiU,MAAM;SAC1B;AACH;IAEAitC,WAAc;AACZ,cAAMf,YAAY,IAAI,CAAChiD,OAAO,CAAC6L,MAAM,IAAI,EAAC;AAC1C,YAAI+2C,WAAcnpD,GAAAA,6DAAAA,CAAKuoD,SAAU1nC,CAAAA,cAAc,EAAE;AAAC,gBAAI,CAAC9hB,KAAK;SAAC,EAAE,IAAI,KAAK,EAAE;QAE1E,IAAIwpD,SAAAA,CAAUh8C,MAAM,EAAE;AACpB48C,YAAAA,WAAAA,GAAcA,WAAY58C,CAAAA,MAAM,CAAC,CAAC5L,IAAS4nD,GAAAA,SAAAA,CAAUh8C,MAAM,CAAC5L,IAAM,MAAI,CAAC5B,KAAK,CAAC6K,IAAI;SAClF;QAED,IAAI2+C,SAAAA,CAAU3wC,IAAI,EAAE;AAClBuxC,YAAAA,WAAAA,GAAcA,WAAYvxC,CAAAA,IAAI,CAAC,CAACC,GAAGpP,CAAM8/C,GAAAA,SAAAA,CAAU3wC,IAAI,CAACC,GAAGpP,CAAG,MAAI,CAAC1J,KAAK,CAAC6K,IAAI;SAC9E;AAED,YAAI,IAAI,CAACrD,OAAO,CAACoB,OAAO,EAAE;AACxBwhD,YAAAA,WAAAA,CAAYxhD,OAAO;SACpB;QAED,IAAI,CAACwhD,WAAW,GAAGA,WAAAA,CAAAA;AACrB;IAEArsB,GAAM;AACJ,cAAM,EAACv2B,OAAO,GAAEwH,GAAG,GAAC,GAAG,IAAI;QAM3B,IAAI,CAACxH,OAAQof,CAAAA,OAAO,EAAE;AACpB,gBAAI,CAACrJ,KAAK,GAAG,IAAI,CAACD,MAAM,GAAG;AAC3B;SACD;QAED,MAAMksC,SAAAA,GAAYhiD,QAAQ6L,MAAM;QAChC,MAAMm3C,SAAAA,GAAYxwB,8DAAOwvB,CAAAA,SAAAA,CAAUzvB,IAAI;QACvC,MAAMkN,QAAAA,GAAWujB,UAAUriD,IAAI;QAC/B,MAAM03B,WAAAA,GAAc,IAAI,CAAC4qB,mBAAmB;AAC5C,cAAM,EAACf,QAAQ,GAAEG,aAAW,GAAGN,WAAWC,SAAWviB,EAAAA,QAAAA,CAAAA,CAAAA;AAErD,YAAI1pB,KAAOD,EAAAA,MAAAA,CAAAA;QAEXtO,GAAI+qB,CAAAA,IAAI,GAAGywB,SAAAA,CAAUppB,MAAM;QAE3B,IAAI,IAAI,CAAClmB,YAAY,EAAI;AACvBqC,YAAAA,KAAAA,GAAQ,IAAI,CAACsG,QAAQ;AACrBvG,YAAAA,MAAAA,GAAS,IAAI,CAACotC,QAAQ,CAAC7qB,WAAaoH,EAAAA,QAAAA,EAAUyiB,UAAUG,UAAc;SACjE;AACLvsC,YAAAA,MAAAA,GAAS,IAAI,CAACwG,SAAS;AACvBvG,YAAAA,KAAAA,GAAQ,IAAI,CAACotC,QAAQ,CAAC9qB,WAAa2qB,EAAAA,SAAAA,EAAWd,UAAUG,UAAc;SACvE;AAED,YAAI,CAACtsC,KAAK,GAAG3c,IAAAA,CAAKC,GAAG,CAAC0c,KAAO/V,EAAAA,OAAAA,CAAQqc,QAAQ,IAAI,IAAI,CAACA,QAAQ;AAC9D,YAAI,CAACvG,MAAM,GAAG1c,IAAAA,CAAKC,GAAG,CAACyc,MAAQ9V,EAAAA,OAAAA,CAAQsc,SAAS,IAAI,IAAI,CAACA,SAAS;AACpE;AAKA4mC,CAAAA,QAAAA,CAAS7qB,WAAW,EAAEoH,QAAQ,EAAEyiB,QAAQ,EAAEG,UAAU,EAAE;AACpD,cAAM,EAAC76C,GAAG,GAAE6U,QAAQ,GAAErc,SAAS,EAAC6L,MAAAA,EAAQ,EAAC4c,OAAAA,GAAQ,GAAC,GAAC,GAAG,IAAI;AAC1D,cAAM26B,QAAW,OAAI,CAACX,cAAc,GAAG,EAAE;AAEzC,cAAMK,UAAa,OAAI,CAACA,UAAU,GAAG;AAAC;AAAE;AACxC,cAAMpwB,aAAa2vB,UAAa55B,GAAAA,OAAAA,CAAAA;AAChC,YAAI46B,WAAchrB,GAAAA,WAAAA,CAAAA;AAElB7wB,QAAAA,GAAAA,CAAIg1B,SAAS,GAAG;AAChBh1B,QAAAA,GAAAA,CAAIm1B,YAAY,GAAG;AAEnB,YAAI2mB,MAAM,CAAC;AACX,YAAI3hD,MAAM,CAAC+wB,UAAAA,CAAAA;AACX,YAAI,CAACkwB,WAAW,CAAC5pD,OAAO,CAAC,CAACoiB,YAAYlhB,CAAM;YAC1C,MAAMqpD,SAAAA,GAAYrB,QAAYziB,GAAAA,QAAAA,GAAW,CAAKj4B,GAAAA,GAAAA,CAAIg8C,WAAW,CAACpoC,UAAAA,CAAWV,IAAI,EAAE3E,KAAK;AAEpF,gBAAI7b,CAAM,UAAK4oD,UAAU,CAACA,UAAW7oD,CAAAA,MAAM,GAAG,EAAE,GAAGspD,SAAAA,GAAY,CAAI96B,GAAAA,OAAAA,GAAUpM,QAAU;gBACrFgnC,WAAe3wB,IAAAA,UAAAA,CAAAA;gBACfowB,UAAU,CAACA,UAAW7oD,CAAAA,MAAM,IAAIC,CAAI,OAAI,CAAI,IAAC,CAAD,CAAG,GAAG;gBAClDyH,GAAO+wB,IAAAA,UAAAA,CAAAA;AACP4wB,gBAAAA,GAAAA,EAAAA,CAAAA;aACD;YAEDF,QAAQ,CAAClpD,EAAE,GAAG;gBAAC4H,IAAM;AAAGH,gBAAAA,GAAAA;AAAK2hD,gBAAAA,GAAAA;gBAAKvtC,KAAOwtC,EAAAA,SAAAA;gBAAWztC,MAAQusC,EAAAA,UAAAA;AAAU;AAEtES,YAAAA,UAAU,CAACA,UAAW7oD,CAAAA,MAAM,GAAG,EAAE,IAAIspD,SAAY96B,GAAAA,OAAAA,CAAAA;AACnD;QAEA,OAAO46B,WAAAA,CAAAA;AACT;AAEAF,IAAAA,QAAAA,CAAS9qB,WAAW,EAAE2qB,SAAS,EAAEd,QAAQ,EAAEuB,WAAW,EAAE;AACtD,cAAM,EAACj8C,GAAG,GAAE8U,SAAS,GAAEtc,SAAS,EAAC6L,MAAAA,EAAQ,EAAC4c,OAAAA,GAAQ,GAAC,GAAC,GAAG,IAAI;AAC3D,cAAM26B,QAAW,OAAI,CAACX,cAAc,GAAG,EAAE;AACzC,cAAMI,WAAc,OAAI,CAACA,WAAW,GAAG,EAAE;AACzC,cAAMa,cAAcpnC,SAAY+b,GAAAA,WAAAA,CAAAA;AAEhC,YAAIsrB,UAAal7B,GAAAA,OAAAA,CAAAA;AACjB,YAAIm7B,eAAkB;AACtB,YAAIC,gBAAmB;AAEvB,YAAI/hD,IAAO;AACX,YAAIgiD,GAAM;AAEV,YAAI,CAAClB,WAAW,CAAC5pD,OAAO,CAAC,CAACoiB,YAAYlhB,CAAM;YAC1C,MAAM,EAACqpD,SAAS,GAAElB,UAAU,GAAC,GAAG0B,iBAAkB7B,CAAAA,QAAAA,EAAUc,SAAWx7C,EAAAA,GAAAA,EAAK4T,UAAYqoC,EAAAA,WAAAA,CAAAA,CAAAA;AAGxF,gBAAIvpD,IAAI,CAAK2pD,IAAAA,gBAAAA,GAAmBxB,UAAa,OAAI55B,UAAUi7B,WAAa;AACtEC,gBAAAA,UAAAA,IAAcC,eAAkBn7B,GAAAA,OAAAA,CAAAA;AAChCo6B,gBAAAA,WAAAA,CAAY3nD,IAAI,CAAC;oBAAC6a,KAAO6tC,EAAAA,eAAAA;oBAAiB9tC,MAAQ+tC,EAAAA,gBAAAA;AAAgB;AAClE/hD,gBAAAA,IAAAA,IAAQ8hD,eAAkBn7B,GAAAA,OAAAA,CAAAA;AAC1Bq7B,gBAAAA,GAAAA,EAAAA,CAAAA;AACAF,gBAAAA,eAAAA,GAAkBC,gBAAmB;aACtC;YAGDT,QAAQ,CAAClpD,EAAE,GAAG;AAAC4H,gBAAAA,IAAAA;gBAAMH,GAAKkiD,EAAAA,gBAAAA;AAAkBC,gBAAAA,GAAAA;gBAAK/tC,KAAOwtC,EAAAA,SAAAA;gBAAWztC,MAAQusC,EAAAA,UAAAA;AAAU;YAGrFuB,eAAkBxqD,GAAAA,IAAAA,CAAKoC,GAAG,CAACooD,eAAiBL,EAAAA,SAAAA,CAAAA,CAAAA;AAC5CM,YAAAA,gBAAAA,IAAoBxB,UAAa55B,GAAAA,OAAAA,CAAAA;AACnC;QAEAk7B,UAAcC,IAAAA,eAAAA,CAAAA;AACdf,QAAAA,WAAAA,CAAY3nD,IAAI,CAAC;YAAC6a,KAAO6tC,EAAAA,eAAAA;YAAiB9tC,MAAQ+tC,EAAAA,gBAAAA;AAAgB;QAElE,OAAOF,UAAAA,CAAAA;AACT;IAEAK,cAAiB;AACf,YAAI,CAAC,IAAI,CAAChkD,OAAO,CAACof,OAAO,EAAE;AACzB;SACD;QACD,MAAMiZ,WAAAA,GAAc,IAAI,CAAC4qB,mBAAmB;AAC5C,cAAM,EAACR,cAAgBW,EAAAA,QAAAA,GAAUpjD,OAAS,IAACmxB,QAAOtlB,MAAAA,EAAQ,EAAC4c,OAAO,GAAC,GAAEw7B,GAAAA,GAAI,GAAC,GAAG,IAAI;QACjF,MAAMC,SAAAA,GAAYC,8DAAaA,CAACF,GAAK,MAAI,CAACniD,IAAI,EAAE,IAAI,CAACiU,KAAK;QAC1D,IAAI,IAAI,CAACrC,YAAY,EAAI;AACvB,gBAAI4vC,GAAM;AACV,gBAAIxhD,OAAOoxB,8DAAe/B,CAAAA,KAAAA,EAAO,IAAI,CAACrvB,IAAI,GAAG2mB,OAAAA,EAAS,IAAI,CAAC7mB,KAAK,GAAG,IAAI,CAACkhD,UAAU,CAACQ,GAAI;YACvF,KAAK,MAAMc,UAAUhB,QAAU;gBAC7B,IAAIE,GAAAA,KAAQc,MAAOd,CAAAA,GAAG,EAAE;AACtBA,oBAAAA,GAAAA,GAAMc,OAAOd,GAAG;AAChBxhD,oBAAAA,IAAAA,GAAOoxB,8DAAe/B,CAAAA,KAAAA,EAAO,IAAI,CAACrvB,IAAI,GAAG2mB,OAAAA,EAAS,IAAI,CAAC7mB,KAAK,GAAG,IAAI,CAACkhD,UAAU,CAACQ,GAAI;iBACpF;AACDc,gBAAAA,MAAAA,CAAOziD,GAAG,IAAI,IAAI,CAACA,GAAG,GAAG02B,WAAc5P,GAAAA,OAAAA,CAAAA;gBACvC27B,MAAOtiD,CAAAA,IAAI,GAAGoiD,SAAAA,CAAUG,UAAU,CAACH,UAAUziD,CAAC,CAACK,IAAOsiD,CAAAA,EAAAA,MAAAA,CAAOruC,KAAK;gBAClEjU,IAAQsiD,IAAAA,MAAAA,CAAOruC,KAAK,GAAG0S,OAAAA,CAAAA;AACzB;SACK;AACL,gBAAIq7B,GAAM;AACV,gBAAIniD,MAAMuxB,8DAAe/B,CAAAA,KAAAA,EAAO,IAAI,CAACxvB,GAAG,GAAG02B,WAAc5P,GAAAA,OAAAA,EAAS,IAAI,CAAC5mB,MAAM,GAAG,IAAI,CAACghD,WAAW,CAACiB,GAAAA,CAAI,CAAChuC,MAAM;YAC5G,KAAK,MAAMsuC,UAAUhB,QAAU;gBAC7B,IAAIgB,MAAAA,CAAON,GAAG,KAAKA,GAAK;AACtBA,oBAAAA,GAAAA,GAAMM,OAAON,GAAG;AAChBniD,oBAAAA,GAAAA,GAAMuxB,8DAAcA,CAAC/B,KAAO,MAAI,CAACxvB,GAAG,GAAG02B,cAAc5P,OAAS,MAAI,CAAC5mB,MAAM,GAAG,IAAI,CAACghD,WAAW,CAACiB,GAAAA,CAAI,CAAChuC,MAAM;iBACzG;AACDsuC,gBAAAA,MAAAA,CAAOziD,GAAG,GAAGA,GAAAA,CAAAA;AACbyiD,gBAAAA,MAAAA,CAAOtiD,IAAI,IAAI,IAAI,CAACA,IAAI,GAAG2mB,OAAAA,CAAAA;AAC3B27B,gBAAAA,MAAAA,CAAOtiD,IAAI,GAAGoiD,SAAUG,CAAAA,UAAU,CAACH,SAAAA,CAAUziD,CAAC,CAAC2iD,MAAOtiD,CAAAA,IAAI,CAAGsiD,EAAAA,MAAAA,CAAOruC,KAAK;gBACzEpU,GAAOyiD,IAAAA,MAAAA,CAAOtuC,MAAM,GAAG2S,OAAAA,CAAAA;AACzB;SACD;AACH;IAEA/U,YAAe;AACb,eAAO,IAAI,CAAC1T,OAAO,CAACuiB,QAAQ,KAAK,KAAS,QAAI,CAACviB,OAAO,CAACuiB,QAAQ,KAAK;AACtE;IAEApoB,IAAO;AACL,YAAI,IAAI,CAAC6F,OAAO,CAACof,OAAO,EAAE;YACxB,MAAM5X,GAAAA,GAAM,IAAI,CAACA,GAAG;AACpBu3B,YAAAA,6DAAAA,CAASv3B,KAAK,IAAI;AAElB,gBAAI,CAAC88C,KAAK;YAEVplB,6DAAW13B,CAAAA,GAAAA,CAAAA,CAAAA;SACZ;AACH;AAIA,CACA88C,KAAQ;QACN,MAAM,EAACtkD,OAASmB,EAAAA,IAAAA,GAAM0hD,WAAAA,GAAaC,UAAAA,GAAYt7C,GAAAA,GAAI,GAAG,IAAI;AAC1D,cAAM,EAAC2pB,KAAK,GAAEtlB,MAAQm2C,EAAAA,SAAAA,GAAU,GAAG7gD,IAAAA,CAAAA;QACnC,MAAMojD,YAAAA,GAAellD,yDAAQA,CAACjD,KAAK;QACnC,MAAM8nD,SAAAA,GAAYC,8DAAchjD,CAAAA,IAAAA,CAAK8iD,GAAG,EAAE,IAAI,CAACniD,IAAI,EAAE,IAAI,CAACiU,KAAK;QAC/D,MAAMitC,SAAAA,GAAYxwB,8DAAOwvB,CAAAA,SAAAA,CAAUzvB,IAAI;QACvC,MAAM,EAAC9J,OAAO,GAAC,GAAGu5B,SAAAA,CAAAA;QAClB,MAAMviB,QAAAA,GAAWujB,UAAUriD,IAAI;AAC/B,cAAM6jD,eAAe/kB,QAAW;QAChC,IAAIglB,MAAAA,CAAAA;AAEJ,YAAI,CAACtlB,SAAS;AAGd33B,QAAAA,GAAAA,CAAIg1B,SAAS,GAAG0nB,SAAU1nB,CAAAA,SAAS,CAAC;AACpCh1B,QAAAA,GAAAA,CAAIm1B,YAAY,GAAG;AACnBn1B,QAAAA,GAAAA,CAAIwT,SAAS,GAAG;QAChBxT,GAAI+qB,CAAAA,IAAI,GAAGywB,SAAAA,CAAUppB,MAAM;QAE3B,MAAM,EAACsoB,WAAUD,SAAAA,GAAWI,UAAU,GAAC,GAAGN,UAAAA,CAAWC,SAAWviB,EAAAA,QAAAA,CAAAA,CAAAA;AAGhE,cAAMilB,gBAAgB,SAASjjD,CAAC,EAAEC,CAAC,EAAE0Z,UAAU,EAAE;AAC/C,gBAAIhF,MAAM8rC,QAAaA,CAAAA,IAAAA,QAAAA,IAAY,KAAK9rC,KAAM6rC,CAAAA,SAAAA,CAAAA,IAAcA,YAAY,CAAG;AACzE;aACD;AAGDz6C,YAAAA,GAAAA,CAAIq2B,IAAI;AAER,kBAAM7iB,SAAY9R,GAAAA,6DAAAA,CAAekS,UAAWJ,CAAAA,SAAS,EAAE;AACvDxT,YAAAA,GAAAA,CAAImT,SAAS,GAAGzR,6DAAekS,CAAAA,UAAAA,CAAWT,SAAS,EAAE4pC,YAAAA,CAAAA,CAAAA;AACrD/8C,YAAAA,GAAAA,CAAIstC,OAAO,GAAG5rC,6DAAekS,CAAAA,UAAAA,CAAW05B,OAAO,EAAE;AACjDttC,YAAAA,GAAAA,CAAI82B,cAAc,GAAGp1B,6DAAekS,CAAAA,UAAAA,CAAWkjB,cAAc,EAAE;AAC/D92B,YAAAA,GAAAA,CAAIwsC,QAAQ,GAAG9qC,6DAAekS,CAAAA,UAAAA,CAAW44B,QAAQ,EAAE;AACnDxsC,YAAAA,GAAAA,CAAIwT,SAAS,GAAGA,SAAAA,CAAAA;AAChBxT,YAAAA,GAAAA,CAAIqT,WAAW,GAAG3R,6DAAekS,CAAAA,UAAAA,CAAWP,WAAW,EAAE0pC,YAAAA,CAAAA,CAAAA;AAEzD/8C,YAAAA,GAAAA,CAAI62B,WAAW,CAACn1B,6DAAAA,CAAekS,UAAWupC,CAAAA,QAAQ,EAAE,EAAE;YAEtD,IAAI3C,SAAAA,CAAUG,aAAa,EAAE;AAG3B,sBAAMyC,WAAc;oBAClBltC,MAAQuqC,EAAAA,SAAAA,GAAY7oD,IAAKyrD,CAAAA,KAAK,GAAG;AACjCtqC,oBAAAA,UAAAA,EAAYa,WAAWb,UAAU;AACjCtC,oBAAAA,QAAAA,EAAUmD,WAAWnD,QAAQ;oBAC7BgD,WAAaD,EAAAA,SAAAA;AACf;AACA,sBAAMiC,OAAUinC,GAAAA,SAAAA,CAAUY,KAAK,CAACrjD,GAAGygD,QAAW;AAC9C,sBAAMhlC,UAAUxb,CAAI8iD,GAAAA,YAAAA,CAAAA;AAGpBO,gBAAAA,8DAAAA,CAAgBv9C,KAAKo9C,WAAa3nC,EAAAA,OAAAA,EAASC,OAAS8kC,EAAAA,SAAAA,CAAUI,eAAe,IAAIF,QAAAA,CAAAA,CAAAA;aAC5E;gBAGL,MAAM8C,OAAAA,GAAUtjD,CAAItI,GAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAACikC,QAAAA,GAAWwiB,SAAQ,IAAK,CAAG;AACzD,sBAAMgD,QAAWf,GAAAA,SAAAA,CAAUG,UAAU,CAAC5iD,CAAGygD,EAAAA,QAAAA,CAAAA,CAAAA;gBACzC,MAAM5Q,YAAAA,GAAe0H,8DAAc59B,CAAAA,UAAAA,CAAWk2B,YAAY;AAE1D9pC,gBAAAA,GAAAA,CAAI+2B,SAAS;gBAEb,IAAIp/B,MAAAA,CAAOW,MAAM,CAACwxC,YAAAA,CAAAA,CAAczN,IAAI,CAACrvB,CAAAA,CAAKA,GAAAA,CAAAA,KAAM,CAAI;AAClD6lC,oBAAAA,8DAAAA,CAAmB7yC,GAAK;wBACtB/F,CAAGwjD,EAAAA,QAAAA;wBACHvjD,CAAGsjD,EAAAA,OAAAA;wBACH19B,CAAG46B,EAAAA,QAAAA;wBACH16B,CAAGy6B,EAAAA,SAAAA;wBACHvqC,MAAQ45B,EAAAA,YAAAA;AACV;iBACK;AACL9pC,oBAAAA,GAAAA,CAAIuyC,IAAI,CAACkL,QAAUD,EAAAA,OAAAA,EAAS9C,QAAUD,EAAAA,SAAAA,CAAAA,CAAAA;iBACvC;AAEDz6C,gBAAAA,GAAAA,CAAIiB,IAAI;AACR,oBAAIuS,cAAc,CAAG;AACnBxT,oBAAAA,GAAAA,CAAIk3B,MAAM;iBACX;aACF;AAEDl3B,YAAAA,GAAAA,CAAIu2B,OAAO;AACb;AAEA,cAAMmnB,WAAW,SAASzjD,CAAC,EAAEC,CAAC,EAAE0Z,UAAU,EAAE;YAC1C6jB,6DAAWz3B,CAAAA,GAAAA,EAAK4T,WAAWV,IAAI,EAAEjZ,GAAGC,CAAK2gD,GAAAA,UAAAA,GAAa,GAAIW,SAAW;AACnEmC,gBAAAA,aAAAA,EAAe/pC,WAAWlU,MAAM;AAChCs1B,gBAAAA,SAAAA,EAAW0nB,SAAU1nB,CAAAA,SAAS,CAACphB,UAAAA,CAAWohB,SAAS;AACrD;AACF;QAGA,MAAM9oB,YAAAA,GAAe,IAAI,CAACA,YAAY;QACtC,MAAM2kB,WAAAA,GAAc,IAAI,CAAC4qB,mBAAmB;AAC5C,YAAIvvC,YAAc;YAChB+wC,MAAS;AACPhjD,gBAAAA,CAAAA,EAAGyxB,8DAAe/B,CAAAA,KAAAA,EAAO,IAAI,CAACrvB,IAAI,GAAG2mB,OAAS,MAAI,CAAC7mB,KAAK,GAAGkhD,UAAU,CAAC,CAAE;AACxEphD,gBAAAA,CAAAA,EAAG,IAAI,CAACC,GAAG,GAAG8mB,OAAU4P,GAAAA,WAAAA;gBACxBta,IAAM;AACR;SACK;YACL0mC,MAAS;gBACPhjD,CAAG,MAAI,CAACK,IAAI,GAAG2mB,OAAAA;AACf/mB,gBAAAA,CAAAA,EAAGwxB,8DAAcA,CAAC/B,KAAO,MAAI,CAACxvB,GAAG,GAAG02B,WAAc5P,GAAAA,OAAAA,EAAS,IAAI,CAAC5mB,MAAM,GAAGghD,WAAW,CAAC,EAAE,CAAC/sC,MAAM;gBAC9FiI,IAAM;AACR;SACD;AAEDqnC,QAAAA,8DAAAA,CAAsB,IAAI,CAAC59C,GAAG,EAAErG,KAAKkkD,aAAa;AAElD,cAAM3yB,aAAa2vB,UAAa55B,GAAAA,OAAAA,CAAAA;AAChC,YAAI,CAACm6B,WAAW,CAAC5pD,OAAO,CAAC,CAACoiB,YAAYlhB,CAAM;AAC1CsN,YAAAA,GAAAA,CAAIqT,WAAW,GAAGO,UAAWL,CAAAA,SAAS;AACtCvT,YAAAA,GAAAA,CAAImT,SAAS,GAAGS,UAAWL,CAAAA,SAAS;AAEpC,kBAAMuqC,YAAY99C,GAAIg8C,CAAAA,WAAW,CAACpoC,UAAWV,CAAAA,IAAI,EAAE3E,KAAK;AACxD,kBAAMymB,SAAY0nB,GAAAA,SAAAA,CAAU1nB,SAAS,CAACphB,UAAWohB,CAAAA,SAAS,KAAKphB,UAAWohB,CAAAA,SAAS,GAAGwlB,SAAAA,CAAUxlB,SAAS,CAAD;YACxG,MAAMzmB,KAAAA,GAAQmsC,WAAWsC,YAAec,GAAAA,SAAAA,CAAAA;YACxC,IAAI7jD,CAAAA,GAAIgjD,OAAOhjD,CAAC;YAChB,IAAIC,CAAAA,GAAI+iD,OAAO/iD,CAAC;AAEhBwiD,YAAAA,SAAAA,CAAUqB,QAAQ,CAAC,IAAI,CAACxvC,KAAK;AAE7B,gBAAIrC,YAAc;gBAChB,IAAIxZ,CAAAA,GAAI,KAAKuH,CAAIsU,GAAAA,KAAAA,GAAQ0S,UAAU,IAAI,CAAC7mB,KAAK,EAAE;oBAC7CF,CAAI+iD,GAAAA,MAAAA,CAAO/iD,CAAC,IAAIgxB,UAAAA,CAAAA;AAChB+xB,oBAAAA,MAAAA,CAAO1mC,IAAI;AACXtc,oBAAAA,CAAAA,GAAIgjD,OAAOhjD,CAAC,GAAGyxB,8DAAcA,CAAC/B,KAAO,MAAI,CAACrvB,IAAI,GAAG2mB,OAAS,MAAI,CAAC7mB,KAAK,GAAGkhD,UAAU,CAAC2B,MAAAA,CAAO1mC,IAAI,CAAC;iBAC/F;aACI,UAAI7jB,IAAI,CAAKwH,IAAAA,CAAAA,GAAIgxB,aAAa,IAAI,CAAC7wB,MAAM,EAAE;gBAChDJ,CAAIgjD,GAAAA,MAAAA,CAAOhjD,CAAC,GAAGA,CAAIohD,GAAAA,WAAW,CAAC4B,MAAAA,CAAO1mC,IAAI,CAAC,CAAChI,KAAK,GAAG0S,OAAAA,CAAAA;AACpDg8B,gBAAAA,MAAAA,CAAO1mC,IAAI;gBACXrc,CAAI+iD,GAAAA,MAAAA,CAAO/iD,CAAC,GAAGwxB,8DAAAA,CAAe/B,OAAO,IAAI,CAACxvB,GAAG,GAAG02B,WAAAA,GAAc5P,SAAS,IAAI,CAAC5mB,MAAM,GAAGghD,WAAW,CAAC4B,MAAO1mC,CAAAA,IAAI,CAAC,CAACjI,MAAM;aACrH;YAED,MAAM0vC,KAAAA,GAAQtB,SAAUziD,CAAAA,CAAC,CAACA,CAAAA,CAAAA,CAAAA;AAE1BijD,YAAAA,aAAAA,CAAcc,OAAO9jD,CAAG0Z,EAAAA,UAAAA,CAAAA,CAAAA;AAExB3Z,YAAAA,CAAAA,GAAIgkD,8DAAOjpB,CAAAA,SAAAA,EAAW/6B,CAAIygD,GAAAA,QAAAA,GAAWsC,YAAc9wC,EAAAA,YAAAA,GAAejS,CAAIsU,GAAAA,KAAAA,GAAQ,IAAI,CAACnU,KAAK,EAAET,KAAK8iD,GAAG;AAGlGiB,YAAAA,QAAAA,CAAShB,SAAUziD,CAAAA,CAAC,CAACA,CAAAA,CAAAA,EAAIC,CAAG0Z,EAAAA,UAAAA,CAAAA,CAAAA;AAE5B,gBAAI1H,YAAc;gBAChB+wC,MAAOhjD,CAAAA,CAAC,IAAIsU,KAAQ0S,GAAAA,OAAAA,CAAAA;AACtB,mBAAO,IAAI,OAAOrN,UAAWV,CAAAA,IAAI,KAAK,QAAU;gBAC9C,MAAMgrC,cAAAA,GAAiB1C,UAAUtwB,UAAU;AAC3C+xB,gBAAAA,MAAAA,CAAO/iD,CAAC,IAAIikD,yBAA0BvqC,CAAAA,UAAAA,EAAYsqC,cAAkBj9B,CAAAA,GAAAA,OAAAA,CAAAA;aAC/D;AACLg8B,gBAAAA,MAAAA,CAAO/iD,CAAC,IAAIgxB,UAAAA,CAAAA;aACb;AACH;AAEAkzB,QAAAA,8DAAAA,CAAqB,IAAI,CAACp+C,GAAG,EAAErG,KAAKkkD,aAAa;AACnD;AAIA,CACAlmB,SAAY;QACV,MAAMh+B,IAAAA,GAAO,IAAI,CAACnB,OAAO;QACzB,MAAMm4B,SAAAA,GAAYh3B,KAAK62B,KAAK;QAC5B,MAAM6tB,SAAAA,GAAYrzB,8DAAO2F,CAAAA,SAAAA,CAAU5F,IAAI;QACvC,MAAMuzB,YAAAA,GAAe98B,6DAAUmP,CAAAA,SAAAA,CAAU1P,OAAO;QAEhD,IAAI,CAAC0P,SAAU/Y,CAAAA,OAAO,EAAE;AACtB;SACD;QAED,MAAM8kC,SAAAA,GAAYC,8DAAchjD,CAAAA,IAAAA,CAAK8iD,GAAG,EAAE,IAAI,CAACniD,IAAI,EAAE,IAAI,CAACiU,KAAK;QAC/D,MAAMvO,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAM+a,QAAAA,GAAW4V,UAAU5V,QAAQ;QACnC,MAAMiiC,YAAAA,GAAeqB,SAAUllD,CAAAA,IAAI,GAAG;QACtC,MAAMolD,0BAAAA,GAA6BD,YAAankD,CAAAA,GAAG,GAAG6iD,YAAAA,CAAAA;QACtD,IAAI9iD,CAAAA,CAAAA;QAIJ,IAAII,IAAAA,GAAO,IAAI,CAACA,IAAI;QACpB,IAAIua,QAAAA,GAAW,IAAI,CAACtG,KAAK;QAEzB,IAAI,IAAI,CAACrC,YAAY,EAAI;AAEvB2I,YAAAA,QAAAA,GAAWjjB,IAAKoC,CAAAA,GAAG,CAAI,OAAI,CAACsnD,UAAU;YACtCphD,CAAI,OAAI,CAACC,GAAG,GAAGokD,0BAAAA,CAAAA;YACfjkD,IAAOoxB,GAAAA,8DAAAA,CAAe/xB,KAAKgwB,KAAK,EAAErvB,MAAM,IAAI,CAACF,KAAK,GAAGya,QAAAA,CAAAA,CAAAA;SAChD;AAEL,kBAAMC,YAAY,IAAI,CAACumC,WAAW,CAACxnD,MAAM,CAAC,CAACC,GAAKqF,EAAAA,IAAAA,GAASvH,KAAKoC,GAAG,CAACF,GAAKqF,EAAAA,IAAAA,CAAKmV,MAAM,CAAG;YACrFpU,CAAIqkD,GAAAA,0BAAAA,GAA6B7yB,8DAAcA,CAAC/xB,IAAKgwB,CAAAA,KAAK,EAAE,IAAI,CAACxvB,GAAG,EAAE,IAAI,CAACE,MAAM,GAAGya,YAAYnb,IAAK0K,CAAAA,MAAM,CAAC4c,OAAO,GAAG,IAAI,CAACw6B,mBAAmB;SAC/I;AAID,cAAMxhD,CAAIyxB,GAAAA,8DAAAA,CAAe3Q,QAAUzgB,EAAAA,IAAAA,EAAMA,IAAOua,GAAAA,QAAAA,CAAAA,CAAAA;AAGhD7U,QAAAA,GAAAA,CAAIg1B,SAAS,GAAG0nB,SAAU1nB,CAAAA,SAAS,CAAC1J,8DAAmBvQ,CAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACvD/a,QAAAA,GAAAA,CAAIm1B,YAAY,GAAG;QACnBn1B,GAAIqT,CAAAA,WAAW,GAAGsd,SAAAA,CAAU/7B,KAAK;QACjCoL,GAAImT,CAAAA,SAAS,GAAGwd,SAAAA,CAAU/7B,KAAK;QAC/BoL,GAAI+qB,CAAAA,IAAI,GAAGszB,SAAAA,CAAUjsB,MAAM;AAE3BqF,QAAAA,6DAAAA,CAAWz3B,GAAK2wB,EAAAA,SAAAA,CAAUzd,IAAI,EAAEjZ,GAAGC,CAAGmkD,EAAAA,SAAAA,CAAAA,CAAAA;AACxC;AAIA,CACA5C,mBAAsB;AACpB,cAAM9qB,SAAY,OAAI,CAACn4B,OAAO,CAACg4B,KAAK;QACpC,MAAM6tB,SAAAA,GAAYrzB,8DAAO2F,CAAAA,SAAAA,CAAU5F,IAAI;QACvC,MAAMuzB,YAAAA,GAAe98B,6DAAUmP,CAAAA,SAAAA,CAAU1P,OAAO;QAChD,OAAO0P,SAAAA,CAAU/Y,OAAO,GAAGymC,SAAAA,CAAUnzB,UAAU,GAAGozB,YAAAA,CAAahwC,MAAM,GAAG,CAAC;AAC3E;AAIA,CACAkwC,gBAAiBvkD,CAAAA,CAAC,EAAEC,CAAC,EAAE;AACrB,YAAIxH,GAAG+rD,MAAQC,EAAAA,EAAAA,CAAAA;AAEf,YAAI3R,8DAAUA,CAAC9yC,CAAG,MAAI,CAACK,IAAI,EAAE,IAAI,CAACF,KAAK,KAClC2yC,8DAAW7yC,CAAAA,CAAAA,EAAG,IAAI,CAACC,GAAG,EAAE,IAAI,CAACE,MAAM,CAAG;YAEzCqkD,EAAK,OAAI,CAACzD,cAAc;AACxB,gBAAKvoD,IAAI,CAAGA,EAAAA,CAAAA,GAAIgsD,GAAGjsD,MAAM,EAAE,EAAEC,CAAG;gBAC9B+rD,MAASC,GAAAA,EAAE,CAAChsD,CAAE;gBAEd,IAAIq6C,8DAAAA,CAAW9yC,GAAGwkD,MAAOnkD,CAAAA,IAAI,EAAEmkD,MAAOnkD,CAAAA,IAAI,GAAGmkD,MAAOlwC,CAAAA,KAAK,KACpDw+B,8DAAW7yC,CAAAA,CAAAA,EAAGukD,OAAOtkD,GAAG,EAAEskD,OAAOtkD,GAAG,GAAGskD,MAAOnwC,CAAAA,MAAM,CAAG;AAE1D,2BAAO,IAAI,CAAC8sC,WAAW,CAAC1oD,CAAE;iBAC3B;AACH;SACD;AAED,eAAO,IAAI;AACb;AAMAisD,CAAAA,WAAAA,CAAYhrC,CAAC,EAAE;QACb,MAAMha,IAAAA,GAAO,IAAI,CAACnB,OAAO;AACzB,YAAI,CAAComD,UAAAA,CAAWjrC,CAAExiB,CAAAA,IAAI,EAAEwI,IAAO;AAC7B;SACD;QAGD,MAAMklD,WAAAA,GAAc,IAAI,CAACL,gBAAgB,CAAC7qC,CAAE1Z,CAAAA,CAAC,EAAE0Z,CAAAA,CAAEzZ,CAAC;AAElD,YAAIyZ,EAAExiB,IAAI,KAAK,eAAewiB,CAAExiB,CAAAA,IAAI,KAAK,UAAY;YACnD,MAAMq8C,QAAAA,GAAW,IAAI,CAAC0N,YAAY;YAClC,MAAM4D,QAAAA,GAAWhE,WAAWtN,QAAUqR,EAAAA,WAAAA,CAAAA,CAAAA;YACtC,IAAIrR,QAAAA,IAAY,CAACsR,QAAU;gBACzB7sD,6DAAK0H,CAAAA,IAAAA,CAAKolD,OAAO,EAAE;AAACprC,oBAAAA,CAAAA;AAAG65B,oBAAAA,QAAAA;oBAAU,IAAI;AAAC,mBAAE,IAAI;aAC7C;YAED,IAAI,CAAC0N,YAAY,GAAG2D,WAAAA,CAAAA;YAEpB,IAAIA,WAAAA,IAAe,CAACC,QAAU;gBAC5B7sD,6DAAK0H,CAAAA,IAAAA,CAAKyvC,OAAO,EAAE;AAACz1B,oBAAAA,CAAAA;AAAGkrC,oBAAAA,WAAAA;oBAAa,IAAI;AAAC,mBAAE,IAAI;aAChD;AACH,eAAO,IAAIA,WAAa;YACtB5sD,6DAAK0H,CAAAA,IAAAA,CAAK+Z,OAAO,EAAE;AAACC,gBAAAA,CAAAA;AAAGkrC,gBAAAA,WAAAA;gBAAa,IAAI;AAAC,eAAE,IAAI;SAChD;AACH;AACF,CAAC;AAED,SAAStC,iBAAAA,CAAkB7B,QAAQ,EAAEc,SAAS,EAAEx7C,GAAG,EAAE4T,UAAU,EAAEqoC,WAAW,EAAE;AAC5E,UAAMF,SAAYiD,GAAAA,kBAAAA,CAAmBprC,UAAY8mC,EAAAA,QAAAA,EAAUc,SAAWx7C,EAAAA,GAAAA,CAAAA,CAAAA;AACtE,UAAM66C,UAAaoE,GAAAA,mBAAAA,CAAoBhD,WAAaroC,EAAAA,UAAAA,EAAY4nC,UAAUtwB,UAAU;IACpF,OAAO;AAAC6wB,QAAAA,SAAAA;AAAWlB,QAAAA,UAAAA;AAAU;AAC/B;AAEA,SAASmE,kBAAAA,CAAmBprC,UAAU,EAAE8mC,QAAQ,EAAEc,SAAS,EAAEx7C,GAAG,EAAE;IAChE,IAAIk/C,cAAAA,GAAiBtrC,WAAWV,IAAI;IACpC,IAAIgsC,cAAAA,IAAkB,OAAOA,cAAAA,KAAmB,QAAU;AACxDA,QAAAA,cAAAA,GAAiBA,cAAerrD,CAAAA,MAAM,CAAC,CAACiW,CAAGpP,EAAAA,CAAAA,GAAMoP,CAAErX,CAAAA,MAAM,GAAGiI,CAAAA,CAAEjI,MAAM,GAAGqX,IAAIpP,CAAC;KAC7E;IACD,OAAOggD,QAAAA,GAAYc,UAAUriD,IAAI,GAAG,IAAK6G,GAAIg8C,CAAAA,WAAW,CAACkD,cAAAA,CAAAA,CAAgB3wC,KAAK;AAChF;AAEA,SAAS0wC,oBAAoBhD,WAAW,EAAEroC,UAAU,EAAEsqC,cAAc,EAAE;AACpE,QAAIrD,UAAaoB,GAAAA,WAAAA,CAAAA;AACjB,QAAI,OAAOroC,UAAAA,CAAWV,IAAI,KAAK,QAAU;AACvC2nC,QAAAA,UAAAA,GAAasD,0BAA0BvqC,UAAYsqC,EAAAA,cAAAA,CAAAA,CAAAA;KACpD;IACD,OAAOrD,UAAAA,CAAAA;AACT;AAEA,SAASsD,yBAA0BvqC,CAAAA,UAAU,EAAEsqC,cAAc,EAAE;IAC7D,MAAMltB,WAAAA,GAAcpd,WAAWV,IAAI,GAAGU,WAAWV,IAAI,CAACzgB,MAAM,GAAG,CAAC;AAChE,WAAOyrD,cAAiBltB,GAAAA,WAAAA,CAAAA;AAC1B;AAEA,SAAS4tB,UAAWztD,CAAAA,IAAI,EAAEwI,IAAI,EAAE;AAC9B,QAAI,CAACxI,IAAS,oBAAeA,SAAS,UAAS,MAAOwI,IAAAA,CAAKyvC,OAAO,IAAIzvC,IAAKolD,CAAAA,OAAO,CAAG;AACnF,eAAO,IAAI;KACZ;IACD,IAAIplD,IAAAA,CAAK+Z,OAAO,KAAKviB,SAAS,OAAWA,IAAAA,IAAAA,KAAS,SAAQ,CAAI;AAC5D,eAAO,IAAI;KACZ;AACD,WAAO,KAAK;AACd;AAEA,oBAAe;IACbwL,EAAI;AAKJ,CACAwiD,QAAUpE,EAAAA,MAAAA;AAEVjpD,IAAAA,KAAAA,CAAAA,CAAMd,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;AAC3B,cAAMqa,MAAS7hB,GAAAA,KAAAA,CAAM6hB,MAAM,GAAG,IAAIkoC,MAAO;AAAC/6C,YAAAA,GAAAA,EAAKhP,MAAMgP,GAAG;AAAExH,YAAAA,OAAAA;AAASxH,YAAAA,KAAAA;AAAK;QACxEgtB,OAAQxmB,CAAAA,SAAS,CAACxG,KAAAA,EAAO6hB,MAAQra,EAAAA,OAAAA,CAAAA,CAAAA;QACjCwlB,OAAQkD,CAAAA,MAAM,CAAClwB,KAAO6hB,EAAAA,MAAAA,CAAAA,CAAAA;AACxB;AAEA3e,IAAAA,IAAAA,CAAAA,CAAKlD,KAAK,EAAE;AACVgtB,QAAAA,OAAAA,CAAQqD,SAAS,CAACrwB,KAAOA,EAAAA,KAAAA,CAAM6hB,MAAM;AACrC,eAAO7hB,MAAM6hB,MAAM;AACrB;AAKA4a,IAAAA,YAAAA,CAAAA,CAAaz8B,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAClC,MAAMqa,MAAAA,GAAS7hB,MAAM6hB,MAAM;QAC3BmL,OAAQxmB,CAAAA,SAAS,CAACxG,KAAAA,EAAO6hB,MAAQra,EAAAA,OAAAA,CAAAA,CAAAA;AACjCqa,QAAAA,MAAAA,CAAOra,OAAO,GAAGA,OAAAA,CAAAA;AACnB;AAIAy2B,IAAAA,WAAAA,CAAAA,CAAYj+B,KAAK,EAAE;QACjB,MAAM6hB,MAAAA,GAAS7hB,MAAM6hB,MAAM;AAC3BA,QAAAA,MAAAA,CAAO0oC,WAAW;AAClB1oC,QAAAA,MAAAA,CAAO2pC,cAAc;AACvB;IAGA4C,UAAWpuD,CAAAA,CAAAA,KAAK,EAAE8X,IAAI,EAAE;QACtB,IAAI,CAACA,IAAK6/B,CAAAA,MAAM,EAAE;AAChB33C,YAAAA,KAAAA,CAAM6hB,MAAM,CAAC8rC,WAAW,CAAC71C,KAAKtV,KAAK;SACpC;AACH;IAEAqE,QAAU;AACR+f,QAAAA,OAAAA,EAAS,IAAI;QACbmD,QAAU;QACV4O,KAAO;AACPjL,QAAAA,QAAAA,EAAU,IAAI;AACd9kB,QAAAA,OAAAA,EAAS,KAAK;QACduc,MAAQ;AAGRzC,QAAAA,OAAAA,CAAAA,CAAQC,CAAC,EAAEC,UAAU,EAAEf,MAAM,EAAE;YAC7B,MAAM3X,KAAAA,GAAQ0Y,WAAWpY,YAAY;YACrC,MAAM6jD,EAAAA,GAAKxsC,OAAO7hB,KAAK;YACvB,IAAIquD,EAAAA,CAAGhrC,gBAAgB,CAACnZ,KAAQ;AAC9BmkD,gBAAAA,EAAAA,CAAG7X,IAAI,CAACtsC,KAAAA,CAAAA,CAAAA;gBACR0Y,UAAWlU,CAAAA,MAAM,GAAG,IAAI;aACnB;AACL2/C,gBAAAA,EAAAA,CAAG5X,IAAI,CAACvsC,KAAAA,CAAAA,CAAAA;gBACR0Y,UAAWlU,CAAAA,MAAM,GAAG,KAAK;aAC1B;AACH;AAEA0pC,QAAAA,OAAAA,EAAS,IAAI;AACb2V,QAAAA,OAAAA,EAAS,IAAI;QAEb16C,MAAQ;AACNzP,YAAAA,KAAAA,EAAO,CAACoL,GAAQA,GAAAA,GAAAA,CAAIhP,KAAK,CAACwH,OAAO,CAAC5D,KAAK;YACvC8lD,QAAU;YACVz5B,OAAS;AAYTnO,YAAAA,cAAAA,CAAAA,CAAe9hB,KAAK,EAAE;AACpB,sBAAMsR,QAAWtR,GAAAA,KAAAA,CAAM6K,IAAI,CAACyG,QAAQ;gBACpC,MAAM,EAAC+B,QAAQ,EAACs2C,aAAAA,GAAe5nC,UAAU,GAAEiiB,YAAWpgC,KAAAA,GAAO0qD,eAAe,GAAExV,eAAa,GAAC,GAAG94C,KAAAA,CAAM6hB,MAAM,CAACra,OAAO;AAEnH,uBAAOxH,MAAMgK,sBAAsB,GAAGgY,GAAG,CAAC,CAAClX,IAAS;oBAClD,MAAMmX,KAAAA,GAAQnX,KAAK6B,UAAU,CAACsI,QAAQ,CAAC00C,aAAAA,GAAgB,IAAI7pD,SAAS;oBACpE,MAAM2iB,WAAAA,GAAc+N,6DAAUvO,CAAAA,KAAAA,CAAMQ,WAAW;oBAE/C,OAAO;AACLP,wBAAAA,IAAAA,EAAM5Q,QAAQ,CAACxG,IAAAA,CAAKZ,KAAK,CAAC,CAACuK,KAAK;AAChC0N,wBAAAA,SAAAA,EAAWF,MAAMG,eAAe;wBAChCG,SAAW3e,EAAAA,KAAAA;wBACX8K,MAAQ,GAAC5D,KAAKwpC,OAAO;AACrBgI,wBAAAA,OAAAA,EAASr6B,MAAMs6B,cAAc;AAC7B4P,wBAAAA,QAAAA,EAAUlqC,MAAMqhB,UAAU;AAC1BwC,wBAAAA,cAAAA,EAAgB7jB,MAAMuhB,gBAAgB;AACtCgY,wBAAAA,QAAAA,EAAUv5B,MAAMq5B,eAAe;wBAC/B94B,SAAW,EAACC,CAAAA,WAAYlF,CAAAA,KAAK,GAAGkF,WAAYnF,CAAAA,MAAM,IAAI;AACtD+E,wBAAAA,WAAAA,EAAaJ,MAAMK,WAAW;wBAC9BP,UAAYA,EAAAA,UAAAA,IAAcE,MAAMF,UAAU;AAC1CtC,wBAAAA,QAAAA,EAAUwC,MAAMxC,QAAQ;wBACxBukB,SAAWA,EAAAA,SAAAA,IAAa/hB,MAAM+hB,SAAS;AACvC8U,wBAAAA,YAAAA,EAAcwV,eAAoBxV,KAAAA,YAAgB72B,IAAAA,KAAAA,CAAM62B,YAAY,CAAD;AAGnEtuC,wBAAAA,YAAAA,EAAcM,KAAKZ,KAAK;AAC1B;AACF,mBAAG,IAAI;AACT;AACF;QAEAs1B,KAAO;AACL57B,YAAAA,KAAAA,EAAO,CAACoL,GAAQA,GAAAA,GAAAA,CAAIhP,KAAK,CAACwH,OAAO,CAAC5D,KAAK;AACvCgjB,YAAAA,OAAAA,EAAS,KAAK;YACdmD,QAAU;YACV7H,IAAM;AACR;AACF;IAEAX,WAAa;AACXC,QAAAA,WAAAA,EAAa,CAACxD,IAAAA,GAAS,CAACA,IAAAA,CAAK0D,UAAU,CAAC;QACxCrO,MAAQ;YACNmO,WAAa,GAACxD,OAAS,CAAC;AAAC;AAAkB;AAAU;AAAO,kBAACkP,QAAQ,CAAClP,IAAAA,CAAAA;AACxE;AACF;AACF,CAAE;;ACzsBK,MAAMuwC,KAAcl4B,SAAAA,OAAAA,CAAAA;AAIzB72B,CAAAA,WAAAA,CAAY6G,MAAM,CAAE;QAClB,KAAK;AAEL,YAAI,CAACrG,KAAK,GAAGqG,MAAAA,CAAOrG,KAAK;AACzB,YAAI,CAACwH,OAAO,GAAGnB,MAAAA,CAAOmB,OAAO;AAC7B,YAAI,CAACwH,GAAG,GAAG3I,MAAAA,CAAO2I,GAAG;QACrB,IAAI,CAACw/C,QAAQ,GAAG1uD,SAAAA,CAAAA;QAChB,IAAI,CAACqJ,GAAG,GAAGrJ,SAAAA,CAAAA;QACX,IAAI,CAACuJ,MAAM,GAAGvJ,SAAAA,CAAAA;QACd,IAAI,CAACwJ,IAAI,GAAGxJ,SAAAA,CAAAA;QACZ,IAAI,CAACsJ,KAAK,GAAGtJ,SAAAA,CAAAA;QACb,IAAI,CAACyd,KAAK,GAAGzd,SAAAA,CAAAA;QACb,IAAI,CAACwd,MAAM,GAAGxd,SAAAA,CAAAA;QACd,IAAI,CAACiqB,QAAQ,GAAGjqB,SAAAA,CAAAA;QAChB,IAAI,CAACqlB,MAAM,GAAGrlB,SAAAA,CAAAA;QACd,IAAI,CAAC4tB,QAAQ,GAAG5tB,SAAAA,CAAAA;AAClB;IAEA4F,MAAOme,CAAAA,QAAQ,EAAEC,SAAS,EAAE;QAC1B,MAAMnb,IAAAA,GAAO,IAAI,CAACnB,OAAO;QAEzB,IAAI,CAAC8B,IAAI,GAAG;QACZ,IAAI,CAACH,GAAG,GAAG;QAEX,IAAI,CAACR,IAAKie,CAAAA,OAAO,EAAE;AACjB,gBAAI,CAACrJ,KAAK,GAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAClU,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG;AACtD;SACD;AAED,YAAI,CAACkU,KAAK,GAAG,IAAI,CAACnU,KAAK,GAAGya,QAAAA,CAAAA;AAC1B,YAAI,CAACvG,MAAM,GAAG,IAAI,CAACjU,MAAM,GAAGya,SAAAA,CAAAA;QAE5B,MAAMmgB,SAAAA,GAAY98B,6DAAQwB,CAAAA,IAAAA,CAAKuZ,IAAI,IAAIvZ,KAAKuZ,IAAI,CAACzgB,MAAM,GAAG,CAAC;AAC3D,YAAI,CAAC+sD,QAAQ,GAAGh+B,6DAAAA,CAAU7nB,KAAKsnB,OAAO;AACtC,cAAMw+B,QAAWxqB,GAAAA,SAAAA,GAAYjK,8DAAOrxB,CAAAA,IAAAA,CAAKoxB,IAAI,EAAEG,UAAU,GAAG,IAAI,CAACs0B,QAAQ,CAAClxC,MAAM;QAEhF,IAAI,IAAI,CAACpC,YAAY,EAAI;YACvB,IAAI,CAACoC,MAAM,GAAGmxC,QAAAA,CAAAA;SACT;YACL,IAAI,CAAClxC,KAAK,GAAGkxC,QAAAA,CAAAA;SACd;AACH;IAEAvzC,YAAe;AACb,cAAMoR,GAAM,OAAI,CAAC9kB,OAAO,CAACuiB,QAAQ;QACjC,OAAOuC,GAAAA,KAAQ,SAASA,GAAQ;AAClC;AAEAoiC,IAAAA,SAAAA,CAAUlyC,MAAM,EAAE;AAChB,cAAM,EAACrT,GAAAA,GAAKG,IAAAA,GAAMD,MAAAA,GAAQD,KAAAA,GAAO5B,OAAAA,GAAQ,GAAG,IAAI;QAChD,MAAMmxB,KAAAA,GAAQnxB,QAAQmxB,KAAK;AAC3B,YAAIlZ,QAAW;AACf,YAAIoE,UAAU2W,MAAQC,EAAAA,MAAAA,CAAAA;QAEtB,IAAI,IAAI,CAACvf,YAAY,EAAI;YACvBsf,MAASE,GAAAA,8DAAAA,CAAe/B,OAAOrvB,IAAMF,EAAAA,KAAAA,CAAAA,CAAAA;AACrCqxB,YAAAA,MAAAA,GAAStxB,GAAMqT,GAAAA,MAAAA,CAAAA;AACfqH,YAAAA,QAAAA,GAAWza,KAAQE,GAAAA,IAAAA,CAAAA;SACd;YACL,IAAI9B,OAAAA,CAAQuiB,QAAQ,KAAK,MAAQ;AAC/ByQ,gBAAAA,MAAAA,GAASlxB,IAAOkT,GAAAA,MAAAA,CAAAA;gBAChBie,MAASC,GAAAA,8DAAAA,CAAe/B,OAAOtvB,MAAQF,EAAAA,GAAAA,CAAAA,CAAAA;AACvCsW,gBAAAA,QAAAA,GAAWwB,yDAAEA,GAAG,CAAC;aACZ;AACLuZ,gBAAAA,MAAAA,GAASpxB,KAAQoT,GAAAA,MAAAA,CAAAA;gBACjBie,MAASC,GAAAA,8DAAAA,CAAe/B,OAAOxvB,GAAKE,EAAAA,MAAAA,CAAAA,CAAAA;AACpCoW,gBAAAA,QAAAA,GAAWwB,yDAAK;aACjB;AACD4C,YAAAA,QAAAA,GAAWxa,MAASF,GAAAA,GAAAA,CAAAA;SACrB;QACD,OAAO;AAACqxB,YAAAA,MAAAA;AAAQC,YAAAA,MAAAA;AAAQ5W,YAAAA,QAAAA;AAAUpE,YAAAA,QAAAA;AAAQ;AAC5C;IAEA9d,IAAO;QACL,MAAMqN,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMrG,IAAAA,GAAO,IAAI,CAACnB,OAAO;QAEzB,IAAI,CAACmB,IAAKie,CAAAA,OAAO,EAAE;AACjB;SACD;QAED,MAAM+nC,QAAAA,GAAW30B,8DAAOrxB,CAAAA,IAAAA,CAAKoxB,IAAI;QACjC,MAAMG,UAAAA,GAAay0B,SAASz0B,UAAU;AACtC,cAAM1d,SAAS0d,UAAa,OAAI,IAAI,CAACs0B,QAAQ,CAACrlD,GAAG;AACjD,cAAM,EAACqxB,MAAAA,GAAQC,MAAAA,GAAQ5W,QAAAA,GAAUpE,QAAAA,GAAS,GAAG,IAAI,CAACivC,SAAS,CAAClyC,MAAAA,CAAAA,CAAAA;AAE5DiqB,QAAAA,6DAAAA,CAAWz3B,KAAKrG,IAAKuZ,CAAAA,IAAI,EAAE,GAAG,GAAGysC,QAAU;AACzC/qD,YAAAA,KAAAA,EAAO+E,KAAK/E,KAAK;AACjBigB,YAAAA,QAAAA;AACApE,YAAAA,QAAAA;YACAukB,SAAW1J,EAAAA,8DAAAA,CAAmB3xB,KAAKgwB,KAAK;YACxCwL,YAAc;YACde,WAAa;AAAC1K,gBAAAA,MAAAA;AAAQC,gBAAAA,MAAAA;AAAO;AAC/B;AACF;AACF,CAAC;AAED,SAASm0B,WAAY5uD,CAAAA,KAAK,EAAE2/B,SAAS,EAAE;IACrC,MAAMH,KAAAA,GAAQ,IAAI+uB,KAAM;AACtBv/C,QAAAA,GAAAA,EAAKhP,MAAMgP,GAAG;QACdxH,OAASm4B,EAAAA,SAAAA;AACT3/B,QAAAA,KAAAA;AACF;IAEAgtB,OAAQxmB,CAAAA,SAAS,CAACxG,KAAAA,EAAOw/B,KAAOG,EAAAA,SAAAA,CAAAA,CAAAA;IAChC3S,OAAQkD,CAAAA,MAAM,CAAClwB,KAAOw/B,EAAAA,KAAAA,CAAAA,CAAAA;AACtBx/B,IAAAA,KAAAA,CAAM6uD,UAAU,GAAGrvB,KAAAA,CAAAA;AACrB;AAEA,mBAAe;IACb7zB,EAAI;AAKJ,CACAwiD,QAAUI,EAAAA,KAAAA;AAEVztD,IAAAA,KAAAA,CAAAA,CAAMd,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;AAC3BonD,QAAAA,WAAAA,CAAY5uD,KAAOwH,EAAAA,OAAAA,CAAAA,CAAAA;AACrB;AAEAtE,IAAAA,IAAAA,CAAAA,CAAKlD,KAAK,EAAE;QACV,MAAM6uD,UAAAA,GAAa7uD,MAAM6uD,UAAU;QACnC7hC,OAAQqD,CAAAA,SAAS,CAACrwB,KAAO6uD,EAAAA,UAAAA,CAAAA,CAAAA;AACzB,eAAO7uD,MAAM6uD,UAAU;AACzB;AAEApyB,IAAAA,YAAAA,CAAAA,CAAaz8B,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAClC,MAAMg4B,KAAAA,GAAQx/B,MAAM6uD,UAAU;QAC9B7hC,OAAQxmB,CAAAA,SAAS,CAACxG,KAAAA,EAAOw/B,KAAOh4B,EAAAA,OAAAA,CAAAA,CAAAA;AAChCg4B,QAAAA,KAAAA,CAAMh4B,OAAO,GAAGA,OAAAA,CAAAA;AAClB;IAEAX,QAAU;QACR8xB,KAAO;AACP/R,QAAAA,OAAAA,EAAS,KAAK;QACdmT,IAAM;YACJ5U,MAAQ;AACV;AACAuI,QAAAA,QAAAA,EAAU,IAAI;QACduC,OAAS;QACTlG,QAAU;QACV7H,IAAM;AACNiD,QAAAA,MAAAA,EAAQ;AACV;IAEAmR,aAAe;QACb1yB,KAAO;AACT;IAEA2d,WAAa;AACXC,QAAAA,WAAAA,EAAa,IAAI;AACjBC,QAAAA,UAAAA,EAAY,KAAK;AACnB;AACF,CAAE;;AClKF,MAAMO,MAAM,IAAI8sC,OAAAA,EAAAA,CAAAA;AAEhB,sBAAe;IACbnjD,EAAI;AAEJ7K,IAAAA,KAAAA,CAAAA,CAAMd,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAC3B,MAAMg4B,KAAAA,GAAQ,IAAI+uB,KAAM;AACtBv/C,YAAAA,GAAAA,EAAKhP,MAAMgP,GAAG;AACdxH,YAAAA,OAAAA;AACAxH,YAAAA,KAAAA;AACF;QAEAgtB,OAAQxmB,CAAAA,SAAS,CAACxG,KAAAA,EAAOw/B,KAAOh4B,EAAAA,OAAAA,CAAAA,CAAAA;QAChCwlB,OAAQkD,CAAAA,MAAM,CAAClwB,KAAOw/B,EAAAA,KAAAA,CAAAA,CAAAA;QACtBxd,GAAI1f,CAAAA,GAAG,CAACtC,KAAOw/B,EAAAA,KAAAA,CAAAA,CAAAA;AACjB;AAEAt8B,IAAAA,IAAAA,CAAAA,CAAKlD,KAAK,EAAE;AACVgtB,QAAAA,OAAAA,CAAQqD,SAAS,CAACrwB,KAAOgiB,EAAAA,GAAAA,CAAI7f,GAAG,CAACnC,KAAAA,CAAAA,CAAAA,CAAAA;AACjCgiB,QAAAA,GAAAA,CAAI3e,MAAM,CAACrD,KAAAA,CAAAA,CAAAA;AACb;AAEAy8B,IAAAA,YAAAA,CAAAA,CAAaz8B,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAClC,MAAMg4B,KAAAA,GAAQxd,GAAI7f,CAAAA,GAAG,CAACnC,KAAAA,CAAAA,CAAAA;QACtBgtB,OAAQxmB,CAAAA,SAAS,CAACxG,KAAAA,EAAOw/B,KAAOh4B,EAAAA,OAAAA,CAAAA,CAAAA;AAChCg4B,QAAAA,KAAAA,CAAMh4B,OAAO,GAAGA,OAAAA,CAAAA;AAClB;IAEAX,QAAU;QACR8xB,KAAO;AACP/R,QAAAA,OAAAA,EAAS,KAAK;QACdmT,IAAM;YACJ5U,MAAQ;AACV;AACAuI,QAAAA,QAAAA,EAAU,IAAI;QACduC,OAAS;QACTlG,QAAU;QACV7H,IAAM;AACNiD,QAAAA,MAAAA,EAAQ;AACV;IAEAmR,aAAe;QACb1yB,KAAO;AACT;IAEA2d,WAAa;AACXC,QAAAA,WAAAA,EAAa,IAAI;AACjBC,QAAAA,UAAAA,EAAY,KAAK;AACnB;AACF,CAAE;;ACpCF,MAAMstC,WAAc;AAIlBC,CAAAA,OAAAA,CAAAA,CAAQxtD,KAAK,EAAE;QACb,IAAI,CAACA,KAAMC,CAAAA,MAAM,EAAE;AACjB,mBAAO,KAAK;SACb;AAED,YAAIC,CAAG+2B,EAAAA,GAAAA,CAAAA;AACP,YAAIw2B,OAAO,IAAIrhB,GAAAA,EAAAA,CAAAA;AACf,YAAI1kC,CAAI;AACR,YAAI2J,KAAQ;QAEZ,IAAKnR,CAAAA,GAAI,GAAG+2B,GAAMj3B,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAI+2B,GAAK,IAAE/2B,CAAG;AAC5C,kBAAMgoB,EAAKloB,GAAAA,KAAK,CAACE,CAAAA,CAAE,CAACqM,OAAO;YAC3B,IAAI2b,EAAAA,IAAMA,EAAG8M,CAAAA,QAAQ,EAAI;gBACvB,MAAMlK,GAAAA,GAAM5C,GAAG6M,eAAe;gBAC9B04B,IAAKtsD,CAAAA,GAAG,CAAC2pB,GAAAA,CAAIrjB,CAAC;AACdC,gBAAAA,CAAAA,IAAKojB,IAAIpjB,CAAC;gBACV,EAAE2J,KAAAA,CAAAA;aACH;AACH;AAEA,cAAMq8C,QAAW;AAAID,YAAAA,GAAAA,IAAAA;SAAK,CAACpsD,MAAM,CAAC,CAACiW,CAAAA,EAAGpP,IAAMoP,CAAIpP,GAAAA,CAAAA,CAAAA,GAAKulD,KAAK9mD,IAAI;QAE9D,OAAO;YACLc,CAAGimD,EAAAA,QAAAA;AACHhmD,YAAAA,CAAAA,EAAGA,CAAI2J,GAAAA,KAAAA;AACT;AACF;AAIA,CACAqZ,OAAQ1qB,CAAAA,CAAAA,KAAK,EAAE2tD,aAAa,EAAE;QAC5B,IAAI,CAAC3tD,KAAMC,CAAAA,MAAM,EAAE;AACjB,mBAAO,KAAK;SACb;QAED,IAAIwH,CAAAA,GAAIkmD,cAAclmD,CAAC;QACvB,IAAIC,CAAAA,GAAIimD,cAAcjmD,CAAC;QACvB,IAAIsiB,WAAAA,GAAczf,OAAOE,iBAAiB;AAC1C,YAAIvK,GAAG+2B,GAAK22B,EAAAA,cAAAA,CAAAA;QAEZ,IAAK1tD,CAAAA,GAAI,GAAG+2B,GAAMj3B,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAI+2B,GAAK,IAAE/2B,CAAG;AAC5C,kBAAMgoB,EAAKloB,GAAAA,KAAK,CAACE,CAAAA,CAAE,CAACqM,OAAO;YAC3B,IAAI2b,EAAAA,IAAMA,EAAG8M,CAAAA,QAAQ,EAAI;gBACvB,MAAMnZ,MAAAA,GAASqM,GAAG+B,cAAc;gBAChC,MAAMkhB,CAAAA,GAAI0iB,8DAAqBA,CAACF,aAAe9xC,EAAAA,MAAAA,CAAAA,CAAAA;AAE/C,oBAAIsvB,IAAInhB,WAAa;oBACnBA,WAAcmhB,GAAAA,CAAAA,CAAAA;oBACdyiB,cAAiB1lC,GAAAA,EAAAA,CAAAA;iBAClB;aACF;AACH;AAEA,YAAI0lC,cAAgB;YAClB,MAAME,EAAAA,GAAKF,eAAe74B,eAAe;AACzCttB,YAAAA,CAAAA,GAAIqmD,GAAGrmD,CAAC;AACRC,YAAAA,CAAAA,GAAIomD,GAAGpmD,CAAC;SACT;QAED,OAAO;AACLD,YAAAA,CAAAA;AACAC,YAAAA,CAAAA;AACF;AACF;AACF;AAGA,SAASqmD,YAAal0C,CAAAA,IAAI,EAAEm0C,MAAM,EAAE;AAClC,QAAIA,MAAQ;AACV,YAAIroD,6DAAOA,CAACqoD,MAAS;AAEnBnkD,YAAAA,KAAAA,CAAMsd,SAAS,CAACjmB,IAAI,CAAC+sD,KAAK,CAACp0C,IAAMm0C,EAAAA,MAAAA,CAAAA,CAAAA;SAC5B;AACLn0C,YAAAA,IAAAA,CAAK3Y,IAAI,CAAC8sD,MAAAA,CAAAA,CAAAA;SACX;KACF;IAED,OAAOn0C,IAAAA,CAAAA;AACT;AAQA,UAASq0C,aAAcC,CAAAA,GAAG,EAAE;AAC1B,QAAI,CAAC,OAAOA,GAAAA,KAAQ,QAAYA,IAAAA,GAAAA,YAAeC,MAAK,KAAMD,GAAI9xC,CAAAA,OAAO,CAAC,QAAQ,CAAC,CAAG;QAChF,OAAO8xC,GAAAA,CAAItnB,KAAK,CAAC;KAClB;IACD,OAAOsnB,GAAAA,CAAAA;AACT;AAQC,CACD,SAASE,iBAAAA,CAAkB7vD,KAAK,EAAE4B,IAAI,EAAE;AACtC,UAAM,EAACmM,OAAO,GAAEvD,eAAcN,KAAAA,GAAM,GAAGtI,IAAAA,CAAAA;AACvC,UAAM+K,UAAa3M,GAAAA,KAAAA,CAAMuR,cAAc,CAAC/G,cAAcmC,UAAU;IAChE,MAAM,EAAC8H,QAAOvM,KAAAA,GAAM,GAAGyE,UAAAA,CAAW6H,gBAAgB,CAACtK,KAAAA,CAAAA,CAAAA;IAEnD,OAAO;AACLlK,QAAAA,KAAAA;AACAyU,QAAAA,KAAAA;QACA7H,MAAQD,EAAAA,UAAAA,CAAWgH,SAAS,CAACzJ,KAAAA,CAAAA;QAC7B+D,GAAKjO,EAAAA,KAAAA,CAAM6K,IAAI,CAACyG,QAAQ,CAAC9G,YAAa,EAACK,IAAI,CAACX,KAAM;QAClD4lD,cAAgB5nD,EAAAA,KAAAA;AAChB2F,QAAAA,OAAAA,EAASlB,WAAW2D,UAAU;QAC9BtC,SAAW9D,EAAAA,KAAAA;AACXM,QAAAA,YAAAA;AACAuD,QAAAA,OAAAA;AACF;AACF;AAIC,CACD,SAASgiD,cAAAA,CAAeC,OAAO,EAAExoD,OAAO,EAAE;AACxC,UAAMwH,GAAMghD,GAAAA,OAAAA,CAAQhwD,KAAK,CAACgP,GAAG;AAC7B,UAAM,EAACihD,IAAI,GAAEC,SAAQ1wB,KAAAA,GAAM,GAAGwwB,OAAAA,CAAAA;AAC9B,UAAM,EAACtG,QAAAA,GAAUD,SAAAA,GAAU,GAAGjiD,OAAAA,CAAAA;IAC9B,MAAM2oD,QAAAA,GAAWn2B,8DAAOxyB,CAAAA,OAAAA,CAAQ2oD,QAAQ;IACxC,MAAM9C,SAAAA,GAAYrzB,8DAAOxyB,CAAAA,OAAAA,CAAQ6lD,SAAS;IAC1C,MAAM+C,UAAAA,GAAap2B,8DAAOxyB,CAAAA,OAAAA,CAAQ4oD,UAAU;IAC5C,MAAMC,cAAAA,GAAiB7wB,MAAM/9B,MAAM;IACnC,MAAM6uD,eAAAA,GAAkBJ,OAAOzuD,MAAM;IACrC,MAAM8uD,iBAAAA,GAAoBN,KAAKxuD,MAAM;IAErC,MAAMwuB,OAAAA,GAAUO,6DAAUhpB,CAAAA,OAAAA,CAAQyoB,OAAO;IACzC,IAAI3S,MAAAA,GAAS2S,QAAQ3S,MAAM;AAC3B,QAAIC,KAAQ;IAGZ,IAAIizC,kBAAAA,GAAqBP,KAAKptD,MAAM,CAAC,CAACgQ,KAAO49C,EAAAA,QAAAA,GAAa59C,KAAQ49C,GAAAA,QAAAA,CAASC,MAAM,CAACjvD,MAAM,GAAGgvD,QAAAA,CAASx2B,KAAK,CAACx4B,MAAM,GAAGgvD,QAASE,CAAAA,KAAK,CAAClvD,MAAM,EAAE;IAC1I+uD,kBAAsBR,IAAAA,OAAAA,CAAQY,UAAU,CAACnvD,MAAM,GAAGuuD,OAAQa,CAAAA,SAAS,CAACpvD,MAAM;AAE1E,QAAI4uD,cAAgB;AAClB/yC,QAAAA,MAAAA,IAAU+yC,cAAiBhD,GAAAA,SAAAA,CAAUnzB,UAAU,GAC9C,CAACm2B,cAAiB,QAAK7oD,OAAAA,CAAQspD,YAAY,GAC3CtpD,QAAQupD,iBAAiB;KAC3B;AACD,QAAIP,kBAAoB;AAEtB,cAAMQ,cAAiBxpD,GAAAA,OAAAA,CAAQypD,aAAa,GAAGrwD,IAAKoC,CAAAA,GAAG,CAACymD,SAAAA,EAAW0G,QAASj2B,CAAAA,UAAU,CAAIi2B,GAAAA,QAAAA,CAASj2B,UAAU;AAC7G5c,QAAAA,MAAAA,IAAUizC,oBAAoBS,cAC7B,GAACR,CAAAA,kBAAAA,GAAqBD,iBAAgB,IAAKJ,QAAAA,CAASj2B,UAAU,GAC9D,CAACs2B,kBAAAA,GAAqB,KAAKhpD,QAAQ0pD,WAAW;KAChD;AACD,QAAIZ,eAAiB;AACnBhzC,QAAAA,MAAAA,IAAU9V,OAAQ2pD,CAAAA,eAAe,GAChCb,eAAAA,GAAkBF,UAAWl2B,CAAAA,UAAU,GACtCo2B,CAAAA,eAAAA,GAAkB,KAAK9oD,QAAQ4pD,aAAa;KAC/C;AAGD,QAAIC,YAAe;IACnB,MAAMC,YAAAA,GAAe,SAAS/rC,IAAI,EAAE;QAClChI,KAAQ3c,GAAAA,IAAAA,CAAKoC,GAAG,CAACua,KAAAA,EAAOvO,IAAIg8C,WAAW,CAACzlC,IAAMhI,CAAAA,CAAAA,KAAK,GAAG8zC,YAAAA,CAAAA,CAAAA;AACxD;AAEAriD,IAAAA,GAAAA,CAAIq2B,IAAI;IAERr2B,GAAI+qB,CAAAA,IAAI,GAAGszB,SAAAA,CAAUjsB,MAAM;IAC3BzQ,6DAAKq/B,CAAAA,OAAAA,CAAQxwB,KAAK,EAAE8xB,YAAAA,CAAAA,CAAAA;IAGpBtiD,GAAI+qB,CAAAA,IAAI,GAAGo2B,QAAAA,CAAS/uB,MAAM;AAC1BzQ,IAAAA,6DAAAA,CAAKq/B,QAAQY,UAAU,CAACj4C,MAAM,CAACq3C,OAAAA,CAAQa,SAAS,CAAGS,EAAAA,YAAAA,CAAAA,CAAAA;IAGnDD,YAAe7pD,GAAAA,OAAAA,CAAQypD,aAAa,GAAIvH,QAAAA,GAAW,IAAIliD,OAAQ8mB,CAAAA,UAAU,GAAI,CAAC;IAC9EqC,6DAAKs/B,CAAAA,IAAAA,EAAM,CAACQ,QAAa;QACvB9/B,6DAAK8/B,CAAAA,QAAAA,CAASC,MAAM,EAAEY,YAAAA,CAAAA,CAAAA;QACtB3gC,6DAAK8/B,CAAAA,QAAAA,CAASx2B,KAAK,EAAEq3B,YAAAA,CAAAA,CAAAA;QACrB3gC,6DAAK8/B,CAAAA,QAAAA,CAASE,KAAK,EAAEW,YAAAA,CAAAA,CAAAA;AACvB;IAGAD,YAAe;IAGfriD,GAAI+qB,CAAAA,IAAI,GAAGq2B,UAAAA,CAAWhvB,MAAM;IAC5BzQ,6DAAKq/B,CAAAA,OAAAA,CAAQE,MAAM,EAAEoB,YAAAA,CAAAA,CAAAA;AAErBtiD,IAAAA,GAAAA,CAAIu2B,OAAO;AAGXhoB,IAAAA,KAAAA,IAAS0S,QAAQ1S,KAAK;IAEtB,OAAO;AAACA,QAAAA,KAAAA;AAAOD,QAAAA,MAAAA;AAAM;AACvB;AAEA,SAASi0C,eAAgBvxD,CAAAA,KAAK,EAAEmI,IAAI,EAAE;AACpC,UAAM,EAACe,CAAAA,GAAGoU,MAAAA,GAAO,GAAGnV,IAAAA,CAAAA;IAEpB,IAAIe,CAAAA,GAAIoU,SAAS,CAAG;QAClB,OAAO;AACT,WAAO,IAAIpU,CAAKlJ,GAAAA,KAAAA,CAAMsd,MAAM,GAAGA,SAAS,CAAI;QAC1C,OAAO;KACR;IACD,OAAO;AACT;AAEA,SAASk0C,mBAAAA,CAAoBC,MAAM,EAAEzxD,KAAK,EAAEwH,OAAO,EAAEW,IAAI,EAAE;AACzD,UAAM,EAACc,CAAAA,GAAGsU,KAAAA,GAAM,GAAGpV,IAAAA,CAAAA;AACnB,UAAMupD,KAAQlqD,GAAAA,OAAAA,CAAQmqD,SAAS,GAAGnqD,QAAQoqD,YAAY;AACtD,QAAIH,WAAW,MAAUxoD,IAAAA,CAAAA,GAAIsU,QAAQm0C,KAAQ1xD,GAAAA,KAAAA,CAAMud,KAAK,EAAE;AACxD,eAAO,IAAI;KACZ;AAED,QAAIk0C,MAAW,gBAAWxoD,CAAIsU,GAAAA,KAAAA,GAAQm0C,QAAQ,CAAG;AAC/C,eAAO,IAAI;KACZ;AACH;AAEA,SAASG,eAAAA,CAAgB7xD,KAAK,EAAEwH,OAAO,EAAEW,IAAI,EAAE2pD,MAAM,EAAE;AACrD,UAAM,EAAC7oD,CAAAA,GAAGsU,KAAAA,GAAM,GAAGpV,IAAAA,CAAAA;AACnB,UAAM,EAACoV,KAAAA,EAAOw0C,UAAU,GAAEh9C,SAAW,IAACzL,IAAI,GAAEF,KAAK,GAAC,GAAC,GAAGpJ,KAAAA,CAAAA;AACtD,QAAIyxD,MAAS;AAEb,QAAIK,WAAW,QAAU;QACvBL,MAASxoD,GAAAA,CAAAA,IAAK,CAACK,IAAAA,GAAOF,KAAI,IAAK,IAAI,SAAS,OAAO;KAC9C,UAAIH,CAAKsU,IAAAA,KAAAA,GAAQ,CAAG;QACzBk0C,MAAS;AACX,WAAO,IAAIxoD,CAAAA,IAAK8oD,UAAax0C,GAAAA,KAAAA,GAAQ,CAAG;QACtCk0C,MAAS;KACV;AAED,QAAID,mBAAoBC,CAAAA,MAAAA,EAAQzxD,KAAOwH,EAAAA,OAAAA,EAASW,IAAO;QACrDspD,MAAS;KACV;IAED,OAAOA,MAAAA,CAAAA;AACT;AAIC,CACD,SAASO,kBAAmBhyD,CAAAA,KAAK,EAAEwH,OAAO,EAAEW,IAAI,EAAE;IAChD,MAAM2pD,MAAAA,GAAS3pD,KAAK2pD,MAAM,IAAItqD,QAAQsqD,MAAM,IAAIP,gBAAgBvxD,KAAOmI,EAAAA,IAAAA,CAAAA,CAAAA;IAEvE,OAAO;QACLspD,MAAQtpD,EAAAA,IAAAA,CAAKspD,MAAM,IAAIjqD,OAAAA,CAAQiqD,MAAM,IAAII,eAAAA,CAAgB7xD,KAAOwH,EAAAA,OAAAA,EAASW,IAAM2pD,EAAAA,MAAAA,CAAAA;AAC/EA,QAAAA,MAAAA;AACF;AACF;AAEA,SAASG,MAAO9pD,CAAAA,IAAI,EAAEspD,MAAM,EAAE;AAC5B,QAAI,EAACxoD,CAAAA,GAAGsU,KAAAA,GAAM,GAAGpV,IAAAA,CAAAA;AACjB,QAAIspD,WAAW,OAAS;QACtBxoD,CAAKsU,IAAAA,KAAAA,CAAAA;KACA,UAAIk0C,WAAW,QAAU;AAC9BxoD,QAAAA,CAAAA,IAAMsU,KAAQ;KACf;IACD,OAAOtU,CAAAA,CAAAA;AACT;AAEA,SAASipD,OAAO/pD,IAAI,EAAE2pD,MAAM,EAAEK,cAAc,EAAE;AAE5C,QAAI,EAACjpD,CAAAA,GAAGoU,MAAAA,GAAO,GAAGnV,IAAAA,CAAAA;AAClB,QAAI2pD,WAAW,KAAO;QACpB5oD,CAAKipD,IAAAA,cAAAA,CAAAA;KACA,UAAIL,WAAW,QAAU;AAC9B5oD,QAAAA,CAAAA,IAAKoU,MAAS60C,GAAAA,cAAAA,CAAAA;KACT;AACLjpD,QAAAA,CAAAA,IAAMoU,MAAS;KAChB;IACD,OAAOpU,CAAAA,CAAAA;AACT;AAKA,UAASkpD,mBAAmB5qD,OAAO,EAAEW,IAAI,EAAEkqD,SAAS,EAAEryD,KAAK,EAAE;AAC3D,UAAM,EAAC2xD,SAAS,GAAEC,eAAcU,YAAAA,GAAa,GAAG9qD,OAAAA,CAAAA;AAChD,UAAM,EAACiqD,MAAAA,GAAQK,MAAAA,GAAO,GAAGO,SAAAA,CAAAA;AACzB,UAAMF,iBAAiBR,SAAYC,GAAAA,YAAAA,CAAAA;IACnC,MAAM,EAACjR,OAAO,GAAEC,QAAQ,GAAEC,aAAYC,WAAAA,GAAY,GAAGN,8DAAc8R,CAAAA,YAAAA,CAAAA,CAAAA;IAEnE,IAAIrpD,CAAAA,GAAIgpD,OAAO9pD,IAAMspD,EAAAA,MAAAA,CAAAA,CAAAA;IACrB,MAAMvoD,CAAAA,GAAIgpD,MAAO/pD,CAAAA,IAAAA,EAAM2pD,MAAQK,EAAAA,cAAAA,CAAAA,CAAAA;AAE/B,QAAIL,WAAW,QAAU;AACvB,YAAIL,WAAW,MAAQ;YACrBxoD,CAAKkpD,IAAAA,cAAAA,CAAAA;SACA,UAAIV,WAAW,OAAS;YAC7BxoD,CAAKkpD,IAAAA,cAAAA,CAAAA;SACN;KACI,UAAIV,WAAW,MAAQ;AAC5BxoD,QAAAA,CAAAA,IAAKrI,IAAKoC,CAAAA,GAAG,CAAC29C,OAAAA,EAASE,UAAc8Q,CAAAA,GAAAA,SAAAA,CAAAA;KAChC,UAAIF,WAAW,OAAS;AAC7BxoD,QAAAA,CAAAA,IAAKrI,IAAKoC,CAAAA,GAAG,CAAC49C,QAAAA,EAAUE,WAAe6Q,CAAAA,GAAAA,SAAAA,CAAAA;KACxC;IAED,OAAO;AACL1oD,QAAAA,CAAAA,EAAGs2B,6DAAWA,CAACt2B,CAAG,KAAGjJ,MAAMud,KAAK,GAAGpV,KAAKoV,KAAK;AAC7CrU,QAAAA,CAAAA,EAAGq2B,6DAAWA,CAACr2B,CAAG,KAAGlJ,MAAMsd,MAAM,GAAGnV,KAAKmV,MAAM;AACjD;AACF;AAEA,SAASi1C,YAAYvC,OAAO,EAAEr3B,KAAK,EAAEnxB,OAAO,EAAE;IAC5C,MAAMyoB,OAAAA,GAAUO,6DAAUhpB,CAAAA,OAAAA,CAAQyoB,OAAO;IAEzC,OAAO0I,KAAAA,KAAU,QACbq3B,GAAAA,OAAAA,CAAQ/mD,CAAC,GAAG+mD,QAAQzyC,KAAK,GAAG,CAC5Bob,GAAAA,KAAAA,KAAU,OACRq3B,GAAAA,OAAAA,CAAQ/mD,CAAC,GAAG+mD,OAAAA,CAAQzyC,KAAK,GAAG0S,OAAQ7mB,CAAAA,KAAK,GACzC4mD,OAAQ/mD,CAAAA,CAAC,GAAGgnB,OAAAA,CAAQ3mB,IAAI;AAChC;AAKA,UAASkpD,uBAAwB/zB,CAAAA,QAAQ,EAAE;IACzC,OAAO8wB,YAAAA,CAAa,EAAE,EAAEG,aAAcjxB,CAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACxC;AAEA,SAASg0B,qBAAqB9kD,MAAM,EAAEqiD,OAAO,EAAE0C,YAAY,EAAE;AAC3D,WAAO9kD,6DAAaA,CAACD,MAAQ;AAC3BqiD,QAAAA,OAAAA;AACA0C,QAAAA,YAAAA;QACAvyD,IAAM;AACR;AACF;AAEA,SAASwyD,iBAAkBvyD,CAAAA,SAAS,EAAEgV,OAAO,EAAE;AAC7C,UAAMqT,QAAWrT,GAAAA,OAAAA,IAAWA,OAAQvH,CAAAA,OAAO,IAAIuH,OAAQvH,CAAAA,OAAO,CAACmiD,OAAO,IAAI56C,OAAQvH,CAAAA,OAAO,CAACmiD,OAAO,CAAC5vD,SAAS;AAC3G,WAAOqoB,QAAWroB,GAAAA,SAAAA,CAAUqoB,QAAQ,CAACA,YAAYroB,SAAS;AAC5D;AAEA,MAAMwyD,gBAAmB;IAEvBC,WAAaC,EAAAA,0DAAAA;AACbtzB,IAAAA,KAAAA,CAAAA,CAAMkzB,YAAY,EAAE;QAClB,IAAIA,YAAAA,CAAajxD,MAAM,GAAG,CAAG;YAC3B,MAAMG,IAAAA,GAAO8wD,YAAY,CAAC,CAAE;AAC5B,kBAAMr/C,SAASzR,IAAK5B,CAAAA,KAAK,CAAC6K,IAAI,CAACwI,MAAM;AACrC,kBAAM0/C,UAAa1/C,GAAAA,MAAAA,GAASA,MAAO5R,CAAAA,MAAM,GAAG,CAAC;AAE7C,gBAAI,IAAI,IAAI,IAAI,CAAC+F,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC+C,IAAI,KAAK,SAAW;AAC3D,uBAAO3I,IAAKiM,CAAAA,OAAO,CAAC4G,KAAK,IAAI;aACxB,UAAI7S,IAAK6S,CAAAA,KAAK,EAAE;AACrB,uBAAO7S,KAAK6S,KAAK;AACnB,mBAAO,IAAIs+C,UAAa,QAAKnxD,IAAKoM,CAAAA,SAAS,GAAG+kD,UAAY;AACxD,uBAAO1/C,MAAM,CAACzR,IAAKoM,CAAAA,SAAS,CAAC;aAC9B;SACF;QAED,OAAO;AACT;IACAglD,UAAYF,EAAAA,0DAAAA;IAGZlC,UAAYkC,EAAAA,0DAAAA;IAGZG,WAAaH,EAAAA,0DAAAA;AACbr+C,IAAAA,KAAAA,CAAAA,CAAMy+C,WAAW,EAAE;AACjB,YAAI,IAAI,IAAI,IAAI,CAAC1rD,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC+C,IAAI,KAAK,SAAW;YAC3D,OAAO2oD,WAAAA,CAAYz+C,KAAK,GAAG,OAAOy+C,YAAYpD,cAAc,IAAIoD,YAAYpD,cAAc;SAC3F;AAED,YAAIr7C,KAAQy+C,GAAAA,WAAAA,CAAYrlD,OAAO,CAAC4G,KAAK,IAAI;AAEzC,YAAIA,KAAO;YACTA,KAAS;SACV;QACD,MAAMvM,KAAAA,GAAQgrD,YAAYpD,cAAc;QACxC,IAAI,CAACj2C,6DAAaA,CAAC3R,KAAQ;YACzBuM,KAASvM,IAAAA,KAAAA,CAAAA;SACV;QACD,OAAOuM,KAAAA,CAAAA;AACT;AACA0+C,IAAAA,UAAAA,CAAAA,CAAWD,WAAW,EAAE;AACtB,cAAMpoD,OAAOooD,WAAYlzD,CAAAA,KAAK,CAACuR,cAAc,CAAC2hD,YAAY1oD,YAAY;AACtE,cAAMhD,UAAUsD,IAAK6B,CAAAA,UAAU,CAACsI,QAAQ,CAACi+C,YAAYllD,SAAS;QAC9D,OAAO;AACLsU,YAAAA,WAAAA,EAAa9a,QAAQ8a,WAAW;AAChCF,YAAAA,eAAAA,EAAiB5a,QAAQ4a,eAAe;AACxCK,YAAAA,WAAAA,EAAajb,QAAQib,WAAW;AAChC6gB,YAAAA,UAAAA,EAAY97B,QAAQ87B,UAAU;AAC9BE,YAAAA,gBAAAA,EAAkBh8B,QAAQg8B,gBAAgB;YAC1CsV,YAAc;AAChB;AACF;IACAsa,cAAiB;AACf,eAAO,IAAI,CAAC5rD,OAAO,CAAC6rD,SAAS;AAC/B;AACAC,IAAAA,eAAAA,CAAAA,CAAgBJ,WAAW,EAAE;AAC3B,cAAMpoD,OAAOooD,WAAYlzD,CAAAA,KAAK,CAACuR,cAAc,CAAC2hD,YAAY1oD,YAAY;AACtE,cAAMhD,UAAUsD,IAAK6B,CAAAA,UAAU,CAACsI,QAAQ,CAACi+C,YAAYllD,SAAS;QAC9D,OAAO;AACL+T,YAAAA,UAAAA,EAAYva,QAAQua,UAAU;AAC9BtC,YAAAA,QAAAA,EAAUjY,QAAQiY,QAAQ;AAC5B;AACF;IACA8zC,UAAYT,EAAAA,0DAAAA;IAGZjC,SAAWiC,EAAAA,0DAAAA;IAGXU,YAAcV,EAAAA,0DAAAA;IACd5C,MAAQ4C,EAAAA,0DAAAA;IACRW,WAAaX,EAAAA,0DAAAA;AACf;AAWA,UAASY,2BAA2BtzD,SAAS,EAAE4d,IAAI,EAAEhP,GAAG,EAAE66B,GAAG,EAAE;AAC7D,UAAMxR,SAASj4B,SAAS,CAAC4d,KAAK,CAAC/c,IAAI,CAAC+N,GAAK66B,EAAAA,GAAAA,CAAAA,CAAAA;IAEzC,IAAI,OAAOxR,WAAW,WAAa;AACjC,eAAOu6B,gBAAgB,CAAC50C,IAAAA,CAAK,CAAC/c,IAAI,CAAC+N,GAAK66B,EAAAA,GAAAA,CAAAA,CAAAA;KACzC;IAED,OAAOxR,MAAAA,CAAAA;AACT;AAEO,MAAMs7B,OAAgBt9B,SAAAA,OAAAA,CAAAA;AAK3B,QAAO04B,cAAcA,WAAY;AAEjCvvD,IAAAA,WAAAA,CAAY6G,MAAM,CAAE;QAClB,KAAK;QAEL,IAAI,CAACutD,OAAO,GAAG;QACf,IAAI,CAAC/xD,OAAO,GAAG,EAAE;QACjB,IAAI,CAACgyD,cAAc,GAAG/zD,SAAAA,CAAAA;QACtB,IAAI,CAACg0D,KAAK,GAAGh0D,SAAAA,CAAAA;QACb,IAAI,CAACi0D,iBAAiB,GAAGj0D,SAAAA,CAAAA;QACzB,IAAI,CAACk0D,aAAa,GAAG,EAAE;QACvB,IAAI,CAAClsD,WAAW,GAAGhI,SAAAA,CAAAA;QACnB,IAAI,CAAC8P,QAAQ,GAAG9P,SAAAA,CAAAA;AAChB,YAAI,CAACE,KAAK,GAAGqG,MAAAA,CAAOrG,KAAK;AACzB,YAAI,CAACwH,OAAO,GAAGnB,MAAAA,CAAOmB,OAAO;QAC7B,IAAI,CAACysD,UAAU,GAAGn0D,SAAAA,CAAAA;QAClB,IAAI,CAAC0/B,KAAK,GAAG1/B,SAAAA,CAAAA;QACb,IAAI,CAAC8wD,UAAU,GAAG9wD,SAAAA,CAAAA;QAClB,IAAI,CAACmwD,IAAI,GAAGnwD,SAAAA,CAAAA;QACZ,IAAI,CAAC+wD,SAAS,GAAG/wD,SAAAA,CAAAA;QACjB,IAAI,CAACowD,MAAM,GAAGpwD,SAAAA,CAAAA;QACd,IAAI,CAAC2xD,MAAM,GAAG3xD,SAAAA,CAAAA;QACd,IAAI,CAACgyD,MAAM,GAAGhyD,SAAAA,CAAAA;QACd,IAAI,CAACmJ,CAAC,GAAGnJ,SAAAA,CAAAA;QACT,IAAI,CAACoJ,CAAC,GAAGpJ,SAAAA,CAAAA;QACT,IAAI,CAACwd,MAAM,GAAGxd,SAAAA,CAAAA;QACd,IAAI,CAACyd,KAAK,GAAGzd,SAAAA,CAAAA;QACb,IAAI,CAACo0D,MAAM,GAAGp0D,SAAAA,CAAAA;QACd,IAAI,CAACq0D,MAAM,GAAGr0D,SAAAA,CAAAA;QAGd,IAAI,CAACs0D,WAAW,GAAGt0D,SAAAA,CAAAA;QACnB,IAAI,CAACu0D,gBAAgB,GAAGv0D,SAAAA,CAAAA;QACxB,IAAI,CAACw0D,eAAe,GAAGx0D,SAAAA,CAAAA;AACzB;AAEAgQ,IAAAA,UAAAA,CAAWtI,OAAO,EAAE;QAClB,IAAI,CAACA,OAAO,GAAGA,OAAAA,CAAAA;QACf,IAAI,CAACusD,iBAAiB,GAAGj0D,SAAAA,CAAAA;QACzB,IAAI,CAAC8P,QAAQ,GAAG9P,SAAAA,CAAAA;AAClB;AAIA,CACAkW,kBAAqB;QACnB,MAAM1H,MAAAA,GAAS,IAAI,CAACylD,iBAAiB;AAErC,YAAIzlD,MAAQ;YACV,OAAOA,MAAAA,CAAAA;SACR;QAED,MAAMtO,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMwH,OAAAA,GAAU,IAAI,CAACA,OAAO,CAACu0B,UAAU,CAAC,IAAI,CAACrpB,UAAU;QACvD,MAAM/J,IAAAA,GAAOnB,OAAQ2vB,CAAAA,OAAO,IAAIn3B,KAAAA,CAAMwH,OAAO,CAACV,SAAS,IAAIU,OAAAA,CAAQE,UAAU;AAC7E,cAAMA,aAAa,IAAItB,UAAAA,CAAW,IAAI,CAACpG,KAAK,EAAE2I,IAAAA,CAAAA,CAAAA;QAC9C,IAAIA,IAAAA,CAAKwN,UAAU,EAAE;AACnB,gBAAI,CAAC49C,iBAAiB,GAAGptD,MAAAA,CAAOoP,MAAM,CAACrO,UAAAA,CAAAA,CAAAA;SACxC;QAED,OAAOA,UAAAA,CAAAA;AACT;AAIA,CACAgL,UAAa;QACX,OAAO,IAAI,CAAC9C,QAAQ,KACpB,IAAI,CAACA,QAAQ,GAAG6iD,oBAAAA,CAAqB,IAAI,CAACzyD,KAAK,CAAC0S,UAAU,IAAI,IAAI,EAAE,IAAI,CAACshD,aAAa;AACxF;IAEAO,QAASn/C,CAAAA,OAAO,EAAE5N,OAAO,EAAE;QACzB,MAAM,EAACpH,SAAS,GAAC,GAAGoH,OAAAA,CAAAA;AAEpB,cAAMqrD,WAAca,GAAAA,0BAAAA,CAA2BtzD,SAAW,iBAAe,IAAI,EAAEgV,OAAAA,CAAAA,CAAAA;AAC/E,cAAMoqB,KAAQk0B,GAAAA,0BAAAA,CAA2BtzD,SAAW,WAAS,IAAI,EAAEgV,OAAAA,CAAAA,CAAAA;AACnE,cAAM49C,UAAaU,GAAAA,0BAAAA,CAA2BtzD,SAAW,gBAAc,IAAI,EAAEgV,OAAAA,CAAAA,CAAAA;AAE7E,YAAI6kB,QAAQ,EAAE;QACdA,KAAQs1B,GAAAA,YAAAA,CAAat1B,OAAOy1B,aAAcmD,CAAAA,WAAAA,CAAAA,CAAAA,CAAAA;QAC1C54B,KAAQs1B,GAAAA,YAAAA,CAAat1B,OAAOy1B,aAAclwB,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA;QAC1CvF,KAAQs1B,GAAAA,YAAAA,CAAat1B,OAAOy1B,aAAcsD,CAAAA,UAAAA,CAAAA,CAAAA,CAAAA;QAE1C,OAAO/4B,KAAAA,CAAAA;AACT;IAEAu6B,aAAc9B,CAAAA,YAAY,EAAElrD,OAAO,EAAE;AACnC,eAAOgrD,wBACLkB,0BAA2BlsD,CAAAA,OAAAA,CAAQpH,SAAS,EAAE,cAAc,IAAI,EAAEsyD,YAAAA,CAAAA,CAAAA,CAAAA;AAEtE;IAEA+B,OAAQ/B,CAAAA,YAAY,EAAElrD,OAAO,EAAE;QAC7B,MAAM,EAACpH,SAAS,GAAC,GAAGoH,OAAAA,CAAAA;AACpB,cAAMktD,YAAY,EAAE;QAEpB/jC,6DAAK+hC,CAAAA,YAAAA,EAAc,CAACt9C,OAAY;AAC9B,kBAAMq7C,QAAW;AACfC,gBAAAA,MAAAA,EAAQ,EAAE;AACVz2B,gBAAAA,KAAAA,EAAO,EAAE;AACT02B,gBAAAA,KAAAA,EAAO,EAAE;AACX;YACA,MAAMgE,MAAAA,GAAShC,kBAAkBvyD,SAAWgV,EAAAA,OAAAA,CAAAA,CAAAA;YAC5Cm6C,YAAakB,CAAAA,QAAAA,CAASC,MAAM,EAAEhB,aAAAA,CAAcgE,2BAA2BiB,MAAQ,iBAAe,IAAI,EAAEv/C,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACpGm6C,YAAAA,YAAAA,CAAakB,SAASx2B,KAAK,EAAEy5B,2BAA2BiB,MAAQ,WAAS,IAAI,EAAEv/C,OAAAA,CAAAA,CAAAA,CAAAA;YAC/Em6C,YAAakB,CAAAA,QAAAA,CAASE,KAAK,EAAEjB,aAAAA,CAAcgE,2BAA2BiB,MAAQ,gBAAc,IAAI,EAAEv/C,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAElGs/C,YAAAA,SAAAA,CAAUhyD,IAAI,CAAC+tD,QAAAA,CAAAA,CAAAA;AACjB;QAEA,OAAOiE,SAAAA,CAAAA;AACT;IAEAE,YAAalC,CAAAA,YAAY,EAAElrD,OAAO,EAAE;AAClC,eAAOgrD,wBACLkB,0BAA2BlsD,CAAAA,OAAAA,CAAQpH,SAAS,EAAE,aAAa,IAAI,EAAEsyD,YAAAA,CAAAA,CAAAA,CAAAA;AAErE;IAGAmC,SAAUnC,CAAAA,YAAY,EAAElrD,OAAO,EAAE;QAC/B,MAAM,EAACpH,SAAS,GAAC,GAAGoH,OAAAA,CAAAA;AAEpB,cAAMgsD,YAAeE,GAAAA,0BAAAA,CAA2BtzD,SAAW,kBAAgB,IAAI,EAAEsyD,YAAAA,CAAAA,CAAAA;AACjF,cAAMxC,MAASwD,GAAAA,0BAAAA,CAA2BtzD,SAAW,YAAU,IAAI,EAAEsyD,YAAAA,CAAAA,CAAAA;AACrE,cAAMe,WAAcC,GAAAA,0BAAAA,CAA2BtzD,SAAW,iBAAe,IAAI,EAAEsyD,YAAAA,CAAAA,CAAAA;AAE/E,YAAIz4B,QAAQ,EAAE;QACdA,KAAQs1B,GAAAA,YAAAA,CAAat1B,OAAOy1B,aAAc8D,CAAAA,YAAAA,CAAAA,CAAAA,CAAAA;QAC1Cv5B,KAAQs1B,GAAAA,YAAAA,CAAat1B,OAAOy1B,aAAcQ,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA;QAC1Cj2B,KAAQs1B,GAAAA,YAAAA,CAAat1B,OAAOy1B,aAAc+D,CAAAA,WAAAA,CAAAA,CAAAA,CAAAA;QAE1C,OAAOx5B,KAAAA,CAAAA;AACT;AAKA66B,CAAAA,YAAAA,CAAattD,OAAO,EAAE;QACpB,MAAM/B,MAAAA,GAAS,IAAI,CAAC5D,OAAO;AAC3B,cAAMgJ,IAAO,OAAI,CAAC7K,KAAK,CAAC6K,IAAI;AAC5B,cAAMupD,cAAc,EAAE;AACtB,cAAMC,mBAAmB,EAAE;AAC3B,cAAMC,kBAAkB,EAAE;AAC1B,YAAI5B,eAAe,EAAE;AACrB,YAAIhxD,CAAG+2B,EAAAA,GAAAA,CAAAA;QAEP,IAAK/2B,CAAAA,GAAI,GAAG+2B,GAAMhzB,GAAAA,MAAAA,CAAOhE,MAAM,EAAEC,CAAAA,GAAI+2B,GAAK,IAAE/2B,CAAG;YAC7CgxD,YAAahwD,CAAAA,IAAI,CAACmtD,iBAAkB,KAAI,CAAC7vD,KAAK,EAAEyF,MAAM,CAAC/D,CAAE;AAC3D;QAGA,IAAI8F,OAAAA,CAAQgG,MAAM,EAAE;AAClBklD,YAAAA,YAAAA,GAAeA,YAAallD,CAAAA,MAAM,CAAC,CAACO,OAAS7D,EAAAA,KAAAA,EAAOmiB,KAAU7kB,GAAAA,OAAAA,CAAQgG,MAAM,CAACO,OAAS7D,EAAAA,KAAAA,EAAOmiB,KAAOxhB,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;SACrG;QAGD,IAAIrD,OAAAA,CAAQutD,QAAQ,EAAE;YACpBrC,YAAeA,GAAAA,YAAAA,CAAa75C,IAAI,CAAC,CAACC,CAAAA,EAAGpP,IAAMlC,OAAQutD,CAAAA,QAAQ,CAACj8C,CAAAA,EAAGpP,CAAGmB,EAAAA,IAAAA,CAAAA,CAAAA,CAAAA;SACnE;QAGD8lB,6DAAK+hC,CAAAA,YAAAA,EAAc,CAACt9C,OAAY;AAC9B,kBAAMu/C,MAAShC,GAAAA,iBAAAA,CAAkBnrD,OAAQpH,CAAAA,SAAS,EAAEgV,OAAAA,CAAAA,CAAAA;AACpDg/C,YAAAA,WAAAA,CAAY1xD,IAAI,CAACgxD,0BAAAA,CAA2BiB,MAAQ,gBAAc,IAAI,EAAEv/C,OAAAA,CAAAA,CAAAA,CAAAA;AACxEi/C,YAAAA,gBAAAA,CAAiB3xD,IAAI,CAACgxD,0BAAAA,CAA2BiB,MAAQ,qBAAmB,IAAI,EAAEv/C,OAAAA,CAAAA,CAAAA,CAAAA;AAClFk/C,YAAAA,eAAAA,CAAgB5xD,IAAI,CAACgxD,0BAAAA,CAA2BiB,MAAQ,oBAAkB,IAAI,EAAEv/C,OAAAA,CAAAA,CAAAA,CAAAA;AAClF;QAEA,IAAI,CAACg/C,WAAW,GAAGA,WAAAA,CAAAA;QACnB,IAAI,CAACC,gBAAgB,GAAGA,gBAAAA,CAAAA;QACxB,IAAI,CAACC,eAAe,GAAGA,eAAAA,CAAAA;QACvB,IAAI,CAACL,UAAU,GAAGvB,YAAAA,CAAAA;QAClB,OAAOA,YAAAA,CAAAA;AACT;IAEAhtD,MAAOmqB,CAAAA,OAAO,EAAE8nB,MAAM,EAAE;QACtB,MAAMnwC,OAAAA,GAAU,IAAI,CAACA,OAAO,CAACu0B,UAAU,CAAC,IAAI,CAACrpB,UAAU;QACvD,MAAMjN,MAAAA,GAAS,IAAI,CAAC5D,OAAO;QAC3B,IAAIuF,UAAAA,CAAAA;AACJ,YAAIsrD,eAAe,EAAE;QAErB,IAAI,CAACjtD,MAAOhE,CAAAA,MAAM,EAAE;AAClB,gBAAI,IAAI,CAACmyD,OAAO,KAAK,CAAG;gBACtBxsD,UAAa;oBACXwsD,OAAS;AACX;aACD;SACI;AACL,kBAAM7pC,QAAWglC,GAAAA,WAAW,CAACvnD,OAAAA,CAAQuiB,QAAQ,CAAC,CAAC9oB,IAAI,CAAC,IAAI,EAAEwE,MAAQ,MAAI,CAACouD,cAAc;YACrFnB,YAAe,OAAI,CAACoC,YAAY,CAACttD,OAAAA,CAAAA,CAAAA;AAEjC,gBAAI,CAACg4B,KAAK,GAAG,IAAI,CAAC+0B,QAAQ,CAAC7B,YAAclrD,EAAAA,OAAAA,CAAAA,CAAAA;AACzC,gBAAI,CAACopD,UAAU,GAAG,IAAI,CAAC4D,aAAa,CAAC9B,YAAclrD,EAAAA,OAAAA,CAAAA,CAAAA;AACnD,gBAAI,CAACyoD,IAAI,GAAG,IAAI,CAACwE,OAAO,CAAC/B,YAAclrD,EAAAA,OAAAA,CAAAA,CAAAA;AACvC,gBAAI,CAACqpD,SAAS,GAAG,IAAI,CAAC+D,YAAY,CAAClC,YAAclrD,EAAAA,OAAAA,CAAAA,CAAAA;AACjD,gBAAI,CAAC0oD,MAAM,GAAG,IAAI,CAAC2E,SAAS,CAACnC,YAAclrD,EAAAA,OAAAA,CAAAA,CAAAA;AAE3C,kBAAMW,OAAO,IAAI,CAAC2rD,KAAK,GAAG/D,cAAAA,CAAe,IAAI,EAAEvoD,OAAAA,CAAAA,CAAAA;AAC/C,kBAAMwtD,kBAAkBruD,MAAOyB,CAAAA,MAAM,CAAC,IAAI2hB,QAAU5hB,EAAAA,IAAAA,CAAAA,CAAAA;AACpD,kBAAMkqD,YAAYL,kBAAmB,KAAI,CAAChyD,KAAK,EAAEwH,OAASwtD,EAAAA,eAAAA,CAAAA,CAAAA;AAC1D,kBAAMC,kBAAkB7C,kBAAmB5qD,CAAAA,OAAAA,EAASwtD,iBAAiB3C,SAAW,MAAI,CAACryD,KAAK;AAE1F,gBAAI,CAACyxD,MAAM,GAAGY,SAAAA,CAAUZ,MAAM;AAC9B,gBAAI,CAACK,MAAM,GAAGO,SAAAA,CAAUP,MAAM;YAE9B1qD,UAAa;gBACXwsD,OAAS;AACT3qD,gBAAAA,CAAAA,EAAGgsD,gBAAgBhsD,CAAC;AACpBC,gBAAAA,CAAAA,EAAG+rD,gBAAgB/rD,CAAC;AACpBqU,gBAAAA,KAAAA,EAAOpV,KAAKoV,KAAK;AACjBD,gBAAAA,MAAAA,EAAQnV,KAAKmV,MAAM;AACnB42C,gBAAAA,MAAAA,EAAQnqC,SAAS9gB,CAAC;AAClBkrD,gBAAAA,MAAAA,EAAQpqC,SAAS7gB,CAAC;AACpB;SACD;QAED,IAAI,CAAC8qD,aAAa,GAAGtB,YAAAA,CAAAA;QACrB,IAAI,CAAC9iD,QAAQ,GAAG9P,SAAAA,CAAAA;AAEhB,YAAIsH,UAAY;AACd,gBAAI,CAAC4O,kBAAkB,GAAGtQ,MAAM,CAAC,IAAI,EAAE0B,UAAAA,CAAAA,CAAAA;SACxC;QAED,IAAIyoB,OAAAA,IAAWroB,OAAQ0tD,CAAAA,QAAQ,EAAE;AAC/B1tD,YAAAA,OAAAA,CAAQ0tD,QAAQ,CAACj0D,IAAI,CAAC,IAAI,EAAE;gBAACjB,KAAO,MAAI,CAACA,KAAK;AAAEgwD,gBAAAA,OAAAA,EAAS,IAAI;AAAErY,gBAAAA,MAAAA;AAAM;SACtE;AACH;AAEAwd,IAAAA,SAAAA,CAAUC,YAAY,EAAEpmD,GAAG,EAAE7G,IAAI,EAAEX,OAAO,EAAE;AAC1C,cAAM6tD,gBAAgB,IAAI,CAACC,gBAAgB,CAACF,cAAcjtD,IAAMX,EAAAA,OAAAA,CAAAA,CAAAA;AAEhEwH,QAAAA,GAAAA,CAAIi3B,MAAM,CAACovB,aAAAA,CAAcxyB,EAAE,EAAEwyB,cAAcvyB,EAAE;AAC7C9zB,QAAAA,GAAAA,CAAIi3B,MAAM,CAACovB,aAAAA,CAActyB,EAAE,EAAEsyB,cAAcryB,EAAE;AAC7Ch0B,QAAAA,GAAAA,CAAIi3B,MAAM,CAACovB,aAAAA,CAAcE,EAAE,EAAEF,cAAcG,EAAE;AAC/C;AAEAF,IAAAA,gBAAAA,CAAiBF,YAAY,EAAEjtD,IAAI,EAAEX,OAAO,EAAE;AAC5C,cAAM,EAACiqD,MAAM,GAAEK,MAAM,GAAC,GAAG,IAAI;AAC7B,cAAM,EAACH,SAAAA,GAAWW,YAAAA,GAAa,GAAG9qD,OAAAA,CAAAA;QAClC,MAAM,EAACm5C,OAAO,GAAEC,QAAQ,GAAEC,aAAYC,WAAAA,GAAY,GAAGN,8DAAc8R,CAAAA,YAAAA,CAAAA,CAAAA;AACnE,cAAM,EAACrpD,CAAGwsD,EAAAA,GAAAA,GAAKvsD,CAAGwsD,EAAAA,GAAAA,GAAI,GAAGN,YAAAA,CAAAA;AACzB,cAAM,EAAC73C,KAAAA,GAAOD,MAAAA,GAAO,GAAGnV,IAAAA,CAAAA;AACxB,YAAI06B,EAAIE,EAAAA,EAAAA,EAAIwyB,EAAIzyB,EAAAA,EAAAA,EAAIE,EAAIwyB,EAAAA,EAAAA,CAAAA;AAExB,YAAI1D,WAAW,QAAU;AACvB9uB,YAAAA,EAAAA,GAAK0yB,MAAOp4C,MAAS;AAErB,gBAAIm0C,WAAW,MAAQ;gBACrB5uB,EAAK4yB,GAAAA,GAAAA,CAAAA;AACL1yB,gBAAAA,EAAAA,GAAKF,EAAK8uB,GAAAA,SAAAA,CAAAA;AAGV7uB,gBAAAA,EAAAA,GAAKE,EAAK2uB,GAAAA,SAAAA,CAAAA;AACV6D,gBAAAA,EAAAA,GAAKxyB,EAAK2uB,GAAAA,SAAAA,CAAAA;aACL;AACL9uB,gBAAAA,EAAAA,GAAK4yB,GAAMl4C,GAAAA,KAAAA,CAAAA;AACXwlB,gBAAAA,EAAAA,GAAKF,EAAK8uB,GAAAA,SAAAA,CAAAA;AAGV7uB,gBAAAA,EAAAA,GAAKE,EAAK2uB,GAAAA,SAAAA,CAAAA;AACV6D,gBAAAA,EAAAA,GAAKxyB,EAAK2uB,GAAAA,SAAAA,CAAAA;aACX;YAED4D,EAAK1yB,GAAAA,EAAAA,CAAAA;SACA;AACL,gBAAI4uB,WAAW,MAAQ;AACrB1uB,gBAAAA,EAAAA,GAAK0yB,GAAM70D,GAAAA,IAAAA,CAAKoC,GAAG,CAAC29C,SAASE,UAAe8Q,CAAAA,GAAAA,SAAAA,CAAAA;aACvC,UAAIF,WAAW,OAAS;AAC7B1uB,gBAAAA,EAAAA,GAAK0yB,MAAMl4C,KAAQ3c,GAAAA,IAAAA,CAAKoC,GAAG,CAAC49C,UAAUE,WAAe6Q,CAAAA,GAAAA,SAAAA,CAAAA;aAChD;gBACL5uB,EAAK,OAAI,CAACmxB,MAAM;aACjB;AAED,gBAAIpC,WAAW,KAAO;gBACpBhvB,EAAK4yB,GAAAA,GAAAA,CAAAA;AACL1yB,gBAAAA,EAAAA,GAAKF,EAAK6uB,GAAAA,SAAAA,CAAAA;AAGV9uB,gBAAAA,EAAAA,GAAKE,EAAK4uB,GAAAA,SAAAA,CAAAA;AACV4D,gBAAAA,EAAAA,GAAKxyB,EAAK4uB,GAAAA,SAAAA,CAAAA;aACL;AACL7uB,gBAAAA,EAAAA,GAAK4yB,GAAMp4C,GAAAA,MAAAA,CAAAA;AACX0lB,gBAAAA,EAAAA,GAAKF,EAAK6uB,GAAAA,SAAAA,CAAAA;AAGV9uB,gBAAAA,EAAAA,GAAKE,EAAK4uB,GAAAA,SAAAA,CAAAA;AACV4D,gBAAAA,EAAAA,GAAKxyB,EAAK4uB,GAAAA,SAAAA,CAAAA;aACX;YACD6D,EAAK1yB,GAAAA,EAAAA,CAAAA;SACN;QACD,OAAO;AAACD,YAAAA,EAAAA;AAAIE,YAAAA,EAAAA;AAAIwyB,YAAAA,EAAAA;AAAIzyB,YAAAA,EAAAA;AAAIE,YAAAA,EAAAA;AAAIwyB,YAAAA,EAAAA;AAAE;AAChC;AAEA7uB,IAAAA,SAAAA,CAAUgvB,EAAE,EAAE3mD,GAAG,EAAExH,OAAO,EAAE;QAC1B,MAAMg4B,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAM/9B,MAAAA,GAAS+9B,MAAM/9B,MAAM;AAC3B,YAAI4rD,WAAWyD,YAAcpvD,EAAAA,CAAAA,CAAAA;AAE7B,YAAID,MAAQ;YACV,MAAMiqD,SAAAA,GAAYC,8DAAcnkD,CAAAA,OAAAA,CAAQikD,GAAG,EAAE,IAAI,CAACxiD,CAAC,EAAE,IAAI,CAACsU,KAAK;AAE/Do4C,YAAAA,EAAAA,CAAG1sD,CAAC,GAAGspD,WAAAA,CAAY,IAAI,EAAE/qD,OAAAA,CAAQ6yB,UAAU,EAAE7yB,OAAAA,CAAAA,CAAAA;AAE7CwH,YAAAA,GAAAA,CAAIg1B,SAAS,GAAG0nB,SAAAA,CAAU1nB,SAAS,CAACx8B,QAAQ6yB,UAAU;AACtDrrB,YAAAA,GAAAA,CAAIm1B,YAAY,GAAG;YAEnBkpB,SAAYrzB,GAAAA,8DAAAA,CAAOxyB,QAAQ6lD,SAAS;AACpCyD,YAAAA,YAAAA,GAAetpD,QAAQspD,YAAY;YAEnC9hD,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQouD,UAAU;YAClC5mD,GAAI+qB,CAAAA,IAAI,GAAGszB,SAAAA,CAAUjsB,MAAM;AAE3B,gBAAK1/B,CAAI,MAAGA,CAAID,GAAAA,MAAAA,EAAQ,EAAEC,CAAG;AAC3BsN,gBAAAA,GAAAA,CAAI09C,QAAQ,CAACltB,KAAK,CAAC99B,CAAAA,CAAE,EAAEgqD,SAAUziD,CAAAA,CAAC,CAAC0sD,EAAAA,CAAG1sD,CAAC,CAAG0sD,EAAAA,EAAAA,CAAGzsD,CAAC,GAAGmkD,SAAAA,CAAUnzB,UAAU,GAAG;AACxEy7B,gBAAAA,EAAAA,CAAGzsD,CAAC,IAAImkD,SAAAA,CAAUnzB,UAAU,GAAG42B;gBAE/B,IAAIpvD,CAAAA,GAAI,MAAMD,MAAQ;AACpBk0D,oBAAAA,EAAAA,CAAGzsD,CAAC,IAAI1B,OAAAA,CAAQupD,iBAAiB,GAAGD;iBACrC;AACH;SACD;AACH;AAKA+E,CAAAA,aAAAA,CAAc7mD,GAAG,EAAE2mD,EAAE,EAAEj0D,CAAC,EAAEgqD,SAAS,EAAElkD,OAAO,EAAE;AAC5C,cAAM2rD,UAAa,OAAI,CAACiB,WAAW,CAAC1yD,CAAE;AACtC,cAAM4xD,eAAkB,OAAI,CAACe,gBAAgB,CAAC3yD,CAAE;AAChD,cAAM,EAAC+nD,SAAAA,GAAWC,QAAAA,GAAS,GAAGliD,OAAAA,CAAAA;QAC9B,MAAM2oD,QAAAA,GAAWn2B,8DAAOxyB,CAAAA,OAAAA,CAAQ2oD,QAAQ;AACxC,cAAM2F,MAASvD,GAAAA,WAAAA,CAAY,IAAI,EAAE,MAAQ/qD,EAAAA,OAAAA,CAAAA,CAAAA;QACzC,MAAMuuD,SAAAA,GAAYrK,SAAUziD,CAAAA,CAAC,CAAC6sD,MAAAA,CAAAA,CAAAA;AAC9B,cAAME,OAAUvM,GAAAA,SAAAA,GAAY0G,QAASj2B,CAAAA,UAAU,GAAIi2B,CAAAA,QAAAA,CAASj2B,UAAU,GAAGuvB,SAAQ,IAAK,IAAI,CAAC;QAC3F,MAAMwM,MAAAA,GAASN,EAAGzsD,CAAAA,CAAC,GAAG8sD,OAAAA,CAAAA;QAEtB,IAAIxuD,OAAAA,CAAQmiD,aAAa,EAAE;AACzB,kBAAMyC,WAAc;AAClBltC,gBAAAA,MAAAA,EAAQte,IAAKC,CAAAA,GAAG,CAAC6oD,QAAAA,EAAUD,SAAa;AACxC1nC,gBAAAA,UAAAA,EAAYuxC,gBAAgBvxC,UAAU;AACtCtC,gBAAAA,QAAAA,EAAU6zC,gBAAgB7zC,QAAQ;gBAClCgD,WAAa;AACf;AAGA,kBAAMgC,UAAUinC,SAAUG,CAAAA,UAAU,CAACkK,SAAAA,EAAWrM,YAAYA,QAAW;YACvE,MAAMhlC,OAAAA,GAAUuxC,SAASxM,SAAY;YAGrCz6C,GAAIqT,CAAAA,WAAW,GAAG7a,OAAAA,CAAQ0uD,kBAAkB;YAC5ClnD,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ0uD,kBAAkB;YAC1CnW,8DAAU/wC,CAAAA,GAAAA,EAAKo9C,aAAa3nC,OAASC,EAAAA,OAAAA,CAAAA,CAAAA;YAGrC1V,GAAIqT,CAAAA,WAAW,GAAG8wC,UAAAA,CAAW7wC,WAAW;YACxCtT,GAAImT,CAAAA,SAAS,GAAGgxC,UAAAA,CAAW/wC,eAAe;YAC1C29B,8DAAU/wC,CAAAA,GAAAA,EAAKo9C,aAAa3nC,OAASC,EAAAA,OAAAA,CAAAA,CAAAA;SAChC;YAEL1V,GAAIwT,CAAAA,SAAS,GAAG/b,6DAAS0sD,CAAAA,UAAAA,CAAW1wC,WAAW,CAAI7hB,GAAAA,IAAAA,CAAKoC,GAAG,CAAI2D,GAAAA,MAAAA,CAAOW,MAAM,CAAC6rD,UAAAA,CAAW1wC,WAAW,CAAM0wC,CAAAA,GAAAA,UAAAA,CAAW1wC,WAAW,IAAI,CAAE;YACrIzT,GAAIqT,CAAAA,WAAW,GAAG8wC,UAAAA,CAAW7wC,WAAW;AACxCtT,YAAAA,GAAAA,CAAI62B,WAAW,CAACstB,UAAW7vB,CAAAA,UAAU,IAAI,EAAE;AAC3Ct0B,YAAAA,GAAAA,CAAI82B,cAAc,GAAGqtB,UAAW3vB,CAAAA,gBAAgB,IAAI;AAGpD,kBAAM2yB,MAASzK,GAAAA,SAAAA,CAAUG,UAAU,CAACkK,SAAWrM,EAAAA,QAAAA,CAAAA,CAAAA;YAC/C,MAAM0M,MAAAA,GAAS1K,UAAUG,UAAU,CAACH,UAAUY,KAAK,CAACyJ,SAAW,MAAIrM,QAAW;YAC9E,MAAM5Q,YAAAA,GAAe0H,8DAAc2S,CAAAA,UAAAA,CAAWra,YAAY;YAE1D,IAAInyC,MAAAA,CAAOW,MAAM,CAACwxC,YAAAA,CAAAA,CAAczN,IAAI,CAACrvB,CAAAA,CAAKA,GAAAA,CAAAA,KAAM,CAAI;AAClDhN,gBAAAA,GAAAA,CAAI+2B,SAAS;gBACb/2B,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ0uD,kBAAkB;AAC1CrU,gBAAAA,8DAAAA,CAAmB7yC,GAAK;oBACtB/F,CAAGktD,EAAAA,MAAAA;oBACHjtD,CAAG+sD,EAAAA,MAAAA;oBACHnnC,CAAG46B,EAAAA,QAAAA;oBACH16B,CAAGy6B,EAAAA,SAAAA;oBACHvqC,MAAQ45B,EAAAA,YAAAA;AACV;AACA9pC,gBAAAA,GAAAA,CAAIiB,IAAI;AACRjB,gBAAAA,GAAAA,CAAIk3B,MAAM;gBAGVl3B,GAAImT,CAAAA,SAAS,GAAGgxC,UAAAA,CAAW/wC,eAAe;AAC1CpT,gBAAAA,GAAAA,CAAI+2B,SAAS;AACb8b,gBAAAA,8DAAAA,CAAmB7yC,GAAK;oBACtB/F,CAAGmtD,EAAAA,MAAAA;AACHltD,oBAAAA,CAAAA,EAAG+sD,MAAS;AACZnnC,oBAAAA,CAAAA,EAAG46B,QAAW;AACd16B,oBAAAA,CAAAA,EAAGy6B,SAAY;oBACfvqC,MAAQ45B,EAAAA,YAAAA;AACV;AACA9pC,gBAAAA,GAAAA,CAAIiB,IAAI;aACH;gBAELjB,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ0uD,kBAAkB;AAC1ClnD,gBAAAA,GAAAA,CAAIs2B,QAAQ,CAAC6wB,MAAQF,EAAAA,MAAAA,EAAQvM,QAAUD,EAAAA,SAAAA,CAAAA,CAAAA;AACvCz6C,gBAAAA,GAAAA,CAAIqnD,UAAU,CAACF,MAAQF,EAAAA,MAAAA,EAAQvM,QAAUD,EAAAA,SAAAA,CAAAA,CAAAA;gBAEzCz6C,GAAImT,CAAAA,SAAS,GAAGgxC,UAAAA,CAAW/wC,eAAe;AAC1CpT,gBAAAA,GAAAA,CAAIs2B,QAAQ,CAAC8wB,MAAAA,EAAQH,SAAS,CAAGvM,EAAAA,QAAAA,GAAW,GAAGD,SAAY;aAC5D;SACF;AAGDz6C,QAAAA,GAAAA,CAAImT,SAAS,GAAG,IAAI,CAACmyC,eAAe,CAAC5yD,CAAE;AACzC;AAEA40D,IAAAA,QAAAA,CAASX,EAAE,EAAE3mD,GAAG,EAAExH,OAAO,EAAE;AACzB,cAAM,EAACyoD,IAAAA,GAAK,GAAG,IAAI;AACnB,cAAM,EAACiB,WAAAA,GAAaqF,SAAAA,GAAWtF,aAAAA,GAAexH,SAAAA,GAAWC,QAAAA,GAAUp7B,UAAAA,GAAW,GAAG9mB,OAAAA,CAAAA;QACjF,MAAM2oD,QAAAA,GAAWn2B,8DAAOxyB,CAAAA,OAAAA,CAAQ2oD,QAAQ;QACxC,IAAIa,cAAAA,GAAiBb,SAASj2B,UAAU;AACxC,YAAIs8B,YAAe;QAEnB,MAAM9K,SAAAA,GAAYC,8DAAcnkD,CAAAA,OAAAA,CAAQikD,GAAG,EAAE,IAAI,CAACxiD,CAAC,EAAE,IAAI,CAACsU,KAAK;QAE/D,MAAMk5C,cAAAA,GAAiB,SAASlxC,IAAI,EAAE;AACpCvW,YAAAA,GAAAA,CAAI09C,QAAQ,CAACnnC,IAAMmmC,EAAAA,SAAAA,CAAUziD,CAAC,CAAC0sD,EAAG1sD,CAAAA,CAAC,GAAGutD,YAAAA,CAAAA,EAAeb,EAAGzsD,CAAAA,CAAC,GAAG8nD,cAAiB;YAC7E2E,EAAGzsD,CAAAA,CAAC,IAAI8nD,cAAiBE,GAAAA,WAAAA,CAAAA;AAC3B;QAEA,MAAMwF,uBAAAA,GAA0BhL,SAAU1nB,CAAAA,SAAS,CAACuyB,SAAAA,CAAAA,CAAAA;AACpD,YAAI9F,QAAUkG,EAAAA,SAAAA,EAAW18B,KAAOv4B,EAAAA,CAAAA,EAAGwoB,GAAGjgB,IAAM82B,EAAAA,IAAAA,CAAAA;AAE5C/xB,QAAAA,GAAAA,CAAIg1B,SAAS,GAAGuyB,SAAAA,CAAAA;AAChBvnD,QAAAA,GAAAA,CAAIm1B,YAAY,GAAG;QACnBn1B,GAAI+qB,CAAAA,IAAI,GAAGo2B,QAAAA,CAAS/uB,MAAM;AAE1Bu0B,QAAAA,EAAAA,CAAG1sD,CAAC,GAAGspD,WAAY,KAAI,EAAEmE,uBAAyBlvD,EAAAA,OAAAA,CAAAA,CAAAA;QAGlDwH,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ6rD,SAAS;QACjC1iC,6DAAK,KAAI,CAACigC,UAAU,EAAE6F,cAAAA,CAAAA,CAAAA;AAEtBD,QAAAA,YAAAA,GAAevF,aAAiByF,IAAAA,uBAAAA,KAA4B,OACxDH,GAAAA,SAAAA,KAAc,QAAY7M,GAAAA,QAAAA,GAAW,CAAIp7B,GAAAA,UAAAA,GAAeo7B,QAAW,OAAIp7B,UAAW,GAClF,CAAC;QAGL,IAAK5sB,CAAAA,GAAI,GAAGuI,IAAOgmD,GAAAA,IAAAA,CAAKxuD,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC7C+uD,QAAWR,GAAAA,IAAI,CAACvuD,CAAE;AAClBi1D,YAAAA,SAAAA,GAAY,IAAI,CAACrC,eAAe,CAAC5yD,CAAE;AAEnCsN,YAAAA,GAAAA,CAAImT,SAAS,GAAGw0C,SAAAA,CAAAA;YAChBhmC,6DAAK8/B,CAAAA,QAAAA,CAASC,MAAM,EAAE+F,cAAAA,CAAAA,CAAAA;AAEtBx8B,YAAAA,KAAAA,GAAQw2B,SAASx2B,KAAK;YAEtB,IAAIg3B,aAAAA,IAAiBh3B,KAAMx4B,CAAAA,MAAM,EAAE;AACjC,oBAAI,CAACo0D,aAAa,CAAC7mD,GAAK2mD,EAAAA,EAAAA,EAAIj0D,GAAGgqD,SAAWlkD,EAAAA,OAAAA,CAAAA,CAAAA;AAC1CwpD,gBAAAA,cAAAA,GAAiBpwD,IAAKoC,CAAAA,GAAG,CAACmtD,QAAAA,CAASj2B,UAAU,EAAEuvB,SAAAA,CAAAA,CAAAA;aAChD;YAED,IAAKv/B,CAAAA,GAAI,GAAG6W,IAAO9G,GAAAA,KAAAA,CAAMx4B,MAAM,EAAEyoB,CAAAA,GAAI6W,IAAM,IAAE7W,CAAG;gBAC9CusC,cAAex8B,CAAAA,KAAK,CAAC/P,CAAE;AAEvB8mC,gBAAAA,cAAAA,GAAiBb,SAASj2B,UAAU;AACtC;YAEAvJ,6DAAK8/B,CAAAA,QAAAA,CAASE,KAAK,EAAE8F,cAAAA,CAAAA,CAAAA;AACvB;QAGAD,YAAe;AACfxF,QAAAA,cAAAA,GAAiBb,SAASj2B,UAAU;QAGpCvJ,6DAAK,KAAI,CAACkgC,SAAS,EAAE4F,cAAAA,CAAAA,CAAAA;QACrBd,EAAGzsD,CAAAA,CAAC,IAAIgoD,WAAAA,CAAAA;AACV;AAEA0F,IAAAA,UAAAA,CAAWjB,EAAE,EAAE3mD,GAAG,EAAExH,OAAO,EAAE;QAC3B,MAAM0oD,MAAAA,GAAS,IAAI,CAACA,MAAM;QAC1B,MAAMzuD,MAAAA,GAASyuD,OAAOzuD,MAAM;AAC5B,YAAI2uD,UAAY1uD,EAAAA,CAAAA,CAAAA;AAEhB,YAAID,MAAQ;YACV,MAAMiqD,SAAAA,GAAYC,8DAAcnkD,CAAAA,OAAAA,CAAQikD,GAAG,EAAE,IAAI,CAACxiD,CAAC,EAAE,IAAI,CAACsU,KAAK;AAE/Do4C,YAAAA,EAAAA,CAAG1sD,CAAC,GAAGspD,WAAAA,CAAY,IAAI,EAAE/qD,OAAAA,CAAQqvD,WAAW,EAAErvD,OAAAA,CAAAA,CAAAA;YAC9CmuD,EAAGzsD,CAAAA,CAAC,IAAI1B,OAAAA,CAAQ2pD,eAAe;AAE/BniD,YAAAA,GAAAA,CAAIg1B,SAAS,GAAG0nB,SAAAA,CAAU1nB,SAAS,CAACx8B,QAAQqvD,WAAW;AACvD7nD,YAAAA,GAAAA,CAAIm1B,YAAY,GAAG;YAEnBisB,UAAap2B,GAAAA,8DAAAA,CAAOxyB,QAAQ4oD,UAAU;YAEtCphD,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQsvD,WAAW;YACnC9nD,GAAI+qB,CAAAA,IAAI,GAAGq2B,UAAAA,CAAWhvB,MAAM;AAE5B,gBAAK1/B,CAAI,MAAGA,CAAID,GAAAA,MAAAA,EAAQ,EAAEC,CAAG;AAC3BsN,gBAAAA,GAAAA,CAAI09C,QAAQ,CAACwD,MAAM,CAACxuD,CAAAA,CAAE,EAAEgqD,SAAUziD,CAAAA,CAAC,CAAC0sD,EAAAA,CAAG1sD,CAAC,CAAG0sD,EAAAA,EAAAA,CAAGzsD,CAAC,GAAGknD,UAAAA,CAAWl2B,UAAU,GAAG;AAC1Ey7B,gBAAAA,EAAAA,CAAGzsD,CAAC,IAAIknD,UAAAA,CAAWl2B,UAAU,GAAG1yB,QAAQ4pD,aAAa;AACvD;SACD;AACH;AAEAhsB,IAAAA,cAAAA,CAAeuwB,EAAE,EAAE3mD,GAAG,EAAE+nD,WAAW,EAAEvvD,OAAO,EAAE;AAC5C,cAAM,EAACiqD,MAAM,GAAEK,MAAM,GAAC,GAAG,IAAI;AAC7B,cAAM,EAAC7oD,CAAAA,GAAGC,CAAAA,GAAE,GAAGysD,EAAAA,CAAAA;AACf,cAAM,EAACp4C,KAAAA,GAAOD,MAAAA,GAAO,GAAGy5C,WAAAA,CAAAA;AACxB,cAAM,EAACpW,OAAAA,GAASC,QAAAA,GAAUC,UAAAA,GAAYC,WAAAA,GAAY,GAAGN,8DAAch5C,CAAAA,OAAAA,CAAQ8qD,YAAY;QAEvFtjD,GAAImT,CAAAA,SAAS,GAAG3a,OAAAA,CAAQ4a,eAAe;QACvCpT,GAAIqT,CAAAA,WAAW,GAAG7a,OAAAA,CAAQ8a,WAAW;QACrCtT,GAAIwT,CAAAA,SAAS,GAAGhb,OAAAA,CAAQib,WAAW;AAEnCzT,QAAAA,GAAAA,CAAI+2B,SAAS;QACb/2B,GAAIg3B,CAAAA,MAAM,CAAC/8B,CAAAA,GAAI03C,OAASz3C,EAAAA,CAAAA,CAAAA,CAAAA;AACxB,YAAI4oD,WAAW,KAAO;AACpB,gBAAI,CAACqD,SAAS,CAACQ,EAAAA,EAAI3mD,KAAK+nD,WAAavvD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;AACDwH,QAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAIsU,GAAAA,KAAAA,GAAQqjC,QAAU13C,EAAAA,CAAAA,CAAAA,CAAAA;AACjC8F,QAAAA,GAAAA,CAAIgoD,gBAAgB,CAAC/tD,CAAAA,GAAIsU,OAAOrU,CAAGD,EAAAA,CAAAA,GAAIsU,OAAOrU,CAAI03C,GAAAA,QAAAA,CAAAA,CAAAA;QAClD,IAAIkR,MAAAA,KAAW,QAAYL,IAAAA,MAAAA,KAAW,OAAS;AAC7C,gBAAI,CAAC0D,SAAS,CAACQ,EAAAA,EAAI3mD,KAAK+nD,WAAavvD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;AACDwH,QAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAIsU,GAAAA,KAAAA,EAAOrU,IAAIoU,MAASwjC,GAAAA,WAAAA,CAAAA,CAAAA;QACnC9xC,GAAIgoD,CAAAA,gBAAgB,CAAC/tD,CAAIsU,GAAAA,KAAAA,EAAOrU,IAAIoU,MAAQrU,EAAAA,CAAAA,GAAIsU,KAAQujC,GAAAA,WAAAA,EAAa53C,CAAIoU,GAAAA,MAAAA,CAAAA,CAAAA;AACzE,YAAIw0C,WAAW,QAAU;AACvB,gBAAI,CAACqD,SAAS,CAACQ,EAAAA,EAAI3mD,KAAK+nD,WAAavvD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;AACDwH,QAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI43C,GAAAA,UAAAA,EAAY33C,CAAIoU,GAAAA,MAAAA,CAAAA,CAAAA;AAC/BtO,QAAAA,GAAAA,CAAIgoD,gBAAgB,CAAC/tD,CAAAA,EAAGC,IAAIoU,MAAQrU,EAAAA,CAAAA,EAAGC,IAAIoU,MAASujC,GAAAA,UAAAA,CAAAA,CAAAA;QACpD,IAAIiR,MAAAA,KAAW,QAAYL,IAAAA,MAAAA,KAAW,MAAQ;AAC5C,gBAAI,CAAC0D,SAAS,CAACQ,EAAAA,EAAI3mD,KAAK+nD,WAAavvD,EAAAA,OAAAA,CAAAA,CAAAA;SACtC;QACDwH,GAAIi3B,CAAAA,MAAM,CAACh9B,CAAAA,EAAGC,CAAIy3C,GAAAA,OAAAA,CAAAA,CAAAA;AAClB3xC,QAAAA,GAAAA,CAAIgoD,gBAAgB,CAAC/tD,CAAGC,EAAAA,CAAAA,EAAGD,IAAI03C,OAASz3C,EAAAA,CAAAA,CAAAA,CAAAA;AACxC8F,QAAAA,GAAAA,CAAIwpC,SAAS;AAEbxpC,QAAAA,GAAAA,CAAIiB,IAAI;QAER,IAAIzI,OAAAA,CAAQib,WAAW,GAAG,CAAG;AAC3BzT,YAAAA,GAAAA,CAAIk3B,MAAM;SACX;AACH;AAMA+wB,CAAAA,sBAAAA,CAAuBzvD,OAAO,EAAE;QAC9B,MAAMxH,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,MAAMC,KAAAA,GAAQ,IAAI,CAAC6H,WAAW;QAC9B,MAAMovD,KAAAA,GAAQj3D,KAASA,IAAAA,KAAAA,CAAMgJ,CAAC;QAC9B,MAAMkuD,KAAAA,GAAQl3D,KAASA,IAAAA,KAAAA,CAAMiJ,CAAC;AAC9B,YAAIguD,SAASC,KAAO;AAClB,kBAAMptC,WAAWglC,WAAW,CAACvnD,OAAQuiB,CAAAA,QAAQ,CAAC,CAAC9oB,IAAI,CAAC,IAAI,EAAE,IAAI,CAACY,OAAO,EAAE,IAAI,CAACgyD,cAAc;AAC3F,gBAAI,CAAC9pC,QAAU;AACb;aACD;AACD,kBAAM5hB,OAAO,IAAI,CAAC2rD,KAAK,GAAG/D,cAAAA,CAAe,IAAI,EAAEvoD,OAAAA,CAAAA,CAAAA;YAC/C,MAAMwtD,eAAAA,GAAkBruD,OAAOyB,MAAM,CAAC,EAAI2hB,EAAAA,QAAAA,EAAU,IAAI,CAAC+pC,KAAK;YAC9D,MAAMzB,SAAAA,GAAYL,kBAAmBhyD,CAAAA,KAAAA,EAAOwH,OAASwtD,EAAAA,eAAAA,CAAAA,CAAAA;AACrD,kBAAM51C,KAAQgzC,GAAAA,kBAAAA,CAAmB5qD,OAASwtD,EAAAA,eAAAA,EAAiB3C,SAAWryD,EAAAA,KAAAA,CAAAA,CAAAA;YACtE,IAAIk3D,KAAAA,CAAM3xD,GAAG,KAAK6Z,KAAMnW,CAAAA,CAAC,IAAIkuD,KAAAA,CAAM5xD,GAAG,KAAK6Z,KAAMlW,CAAAA,CAAC,EAAE;AAClD,oBAAI,CAACuoD,MAAM,GAAGY,SAAAA,CAAUZ,MAAM;AAC9B,oBAAI,CAACK,MAAM,GAAGO,SAAAA,CAAUP,MAAM;AAC9B,oBAAI,CAACv0C,KAAK,GAAGpV,IAAAA,CAAKoV,KAAK;AACvB,oBAAI,CAACD,MAAM,GAAGnV,IAAAA,CAAKmV,MAAM;AACzB,oBAAI,CAAC42C,MAAM,GAAGnqC,QAAAA,CAAS9gB,CAAC;AACxB,oBAAI,CAACkrD,MAAM,GAAGpqC,QAAAA,CAAS7gB,CAAC;AACxB,oBAAI,CAAC8M,kBAAkB,GAAGtQ,MAAM,CAAC,IAAI,EAAE0Z,KAAAA,CAAAA,CAAAA;aACxC;SACF;AACH;AAKC,CACDg4C,WAAc;AACZ,eAAO,CAAC,CAAC,IAAI,CAACxD,OAAO;AACvB;AAEAjyD,IAAAA,IAAAA,CAAKqN,GAAG,EAAE;QACR,MAAMxH,OAAAA,GAAU,IAAI,CAACA,OAAO,CAACu0B,UAAU,CAAC,IAAI,CAACrpB,UAAU;QACvD,IAAIkhD,OAAAA,GAAU,IAAI,CAACA,OAAO;AAE1B,YAAI,CAACA,OAAS;AACZ;SACD;QAED,IAAI,CAACqD,sBAAsB,CAACzvD,OAAAA,CAAAA,CAAAA;AAE5B,cAAMuvD,WAAc;YAClBx5C,KAAO,MAAI,CAACA,KAAK;YACjBD,MAAQ,MAAI,CAACA,MAAM;AACrB;AACA,cAAMq4C,EAAK;YACT1sD,CAAG,MAAI,CAACA,CAAC;YACTC,CAAG,MAAI,CAACA,CAAC;AACX;AAGA0qD,QAAAA,OAAAA,GAAUhzD,KAAKuY,GAAG,CAACy6C,OAAW,WAAO,IAAIA,OAAO;QAEhD,MAAM3jC,OAAAA,GAAUO,6DAAUhpB,CAAAA,OAAAA,CAAQyoB,OAAO;AAGzC,cAAMonC,iBAAoB,OAAI,CAAC73B,KAAK,CAAC/9B,MAAM,IAAI,IAAI,CAACmvD,UAAU,CAACnvD,MAAM,IAAI,IAAI,CAACwuD,IAAI,CAACxuD,MAAM,IAAI,IAAI,CAACovD,SAAS,CAACpvD,MAAM,IAAI,IAAI,CAACyuD,MAAM,CAACzuD,MAAM;QAExI,IAAI+F,OAAAA,CAAQ2vB,OAAO,IAAIkgC,iBAAmB;AACxCroD,YAAAA,GAAAA,CAAIq2B,IAAI;AACRr2B,YAAAA,GAAAA,CAAIsoD,WAAW,GAAG1D,OAAAA,CAAAA;AAGlB,gBAAI,CAACxuB,cAAc,CAACuwB,EAAAA,EAAI3mD,KAAK+nD,WAAavvD,EAAAA,OAAAA,CAAAA,CAAAA;YAE1ColD,8DAAsB59C,CAAAA,GAAAA,EAAKxH,QAAQqlD,aAAa;YAEhD8I,EAAGzsD,CAAAA,CAAC,IAAI+mB,OAAAA,CAAQ9mB,GAAG;AAGnB,gBAAI,CAACw9B,SAAS,CAACgvB,EAAAA,EAAI3mD,GAAKxH,EAAAA,OAAAA,CAAAA,CAAAA;AAGxB,gBAAI,CAAC8uD,QAAQ,CAACX,EAAAA,EAAI3mD,GAAKxH,EAAAA,OAAAA,CAAAA,CAAAA;AAGvB,gBAAI,CAACovD,UAAU,CAACjB,EAAAA,EAAI3mD,GAAKxH,EAAAA,OAAAA,CAAAA,CAAAA;YAEzB4lD,8DAAqBp+C,CAAAA,GAAAA,EAAKxH,QAAQqlD,aAAa;AAE/C79C,YAAAA,GAAAA,CAAIu2B,OAAO;SACZ;AACH;AAKA,CACA8R,iBAAoB;AAClB,eAAO,IAAI,CAACx1C,OAAO,IAAI,EAAE;AAC3B;AAMA,CACAy1C,iBAAkBC,CAAAA,cAAc,EAAE4X,aAAa,EAAE;QAC/C,MAAM3X,UAAAA,GAAa,IAAI,CAAC31C,OAAO;QAC/B,MAAM4D,MAAAA,GAAS8xC,cAAev1B,CAAAA,GAAG,CAAC,CAAC,EAACxX,YAAY,GAAEN,KAAK,GAAC,GAAK;AAC3D,kBAAMY,OAAO,IAAI,CAAC9K,KAAK,CAACuR,cAAc,CAAC/G,YAAAA,CAAAA,CAAAA;AAEvC,gBAAI,CAACM,IAAM;gBACT,MAAM,IAAIyd,KAAM,qCAAoC/d,YAAc;aACnE;YAED,OAAO;AACLA,gBAAAA,YAAAA;gBACAuD,OAASjD,EAAAA,IAAAA,CAAKD,IAAI,CAACX,KAAM;AACzBA,gBAAAA,KAAAA;AACF;AACF;QACA,MAAM2lB,OAAAA,GAAU,CAAC4nB,8DAAAA,CAAeD,UAAY/xC,EAAAA,MAAAA,CAAAA,CAAAA;AAC5C,cAAM8xD,eAAkB,OAAI,CAACC,gBAAgB,CAAC/xD,MAAQ0pD,EAAAA,aAAAA,CAAAA,CAAAA;AAEtD,YAAIt/B,WAAW0nC,eAAiB;YAC9B,IAAI,CAAC11D,OAAO,GAAG4D,MAAAA,CAAAA;YACf,IAAI,CAACouD,cAAc,GAAG1E,aAAAA,CAAAA;YACtB,IAAI,CAACsI,mBAAmB,GAAG,IAAI;YAC/B,IAAI,CAAC/xD,MAAM,CAAC,IAAI;SACjB;AACH;AAQA,CACAioD,YAAYhrC,CAAC,EAAEg1B,MAAM,EAAE7G,WAAAA,GAAc,IAAI,EAAE;AACzC,YAAI6G,MAAU,QAAI,CAAC8f,mBAAmB,EAAE;AACtC,mBAAO,KAAK;SACb;QACD,IAAI,CAACA,mBAAmB,GAAG,KAAK;QAEhC,MAAMjwD,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,cAAMgwC,UAAa,OAAI,CAAC31C,OAAO,IAAI,EAAE;AACrC,cAAM4D,SAAS,IAAI,CAACyyC,kBAAkB,CAACv1B,CAAAA,EAAG60B,YAAYG,MAAQ7G,EAAAA,WAAAA,CAAAA,CAAAA;AAK9D,cAAMymB,eAAkB,OAAI,CAACC,gBAAgB,CAAC/xD,MAAQkd,EAAAA,CAAAA,CAAAA,CAAAA;AAGtD,cAAMkN,OAAU8nB,GAAAA,MAAAA,IAAU,CAACF,8DAAAA,CAAehyC,QAAQ+xC,UAAe+f,CAAAA,IAAAA,eAAAA,CAAAA;AAGjE,YAAI1nC,OAAS;YACX,IAAI,CAAChuB,OAAO,GAAG4D,MAAAA,CAAAA;AAEf,gBAAI+B,OAAQ2vB,CAAAA,OAAO,IAAI3vB,OAAAA,CAAQ0tD,QAAQ,EAAE;gBACvC,IAAI,CAACrB,cAAc,GAAG;AACpB5qD,oBAAAA,CAAAA,EAAG0Z,EAAE1Z,CAAC;AACNC,oBAAAA,CAAAA,EAAGyZ,EAAEzZ,CAAC;AACR;AAEA,oBAAI,CAACxD,MAAM,CAAC,IAAI,EAAEiyC,MAAAA,CAAAA,CAAAA;aACnB;SACF;QAED,OAAO9nB,OAAAA,CAAAA;AACT;AAWAqoB,CAAAA,kBAAAA,CAAmBv1B,CAAC,EAAE60B,UAAU,EAAEG,MAAM,EAAE7G,WAAW,EAAE;QACrD,MAAMtpC,OAAAA,GAAU,IAAI,CAACA,OAAO;QAE5B,IAAImb,CAAAA,CAAExiB,IAAI,KAAK,UAAY;AACzB,mBAAO,EAAE;SACV;AAED,YAAI,CAAC2wC,WAAa;AAGhB,mBAAO0G,UAAWhqC,CAAAA,MAAM,CAAC9L,CAAAA,IACvB,IAAI,CAAC1B,KAAK,CAAC6K,IAAI,CAACyG,QAAQ,CAAC5P,EAAE8I,YAAY,CAAC,IACxC,IAAI,CAACxK,KAAK,CAACuR,cAAc,CAAC7P,CAAE8I,CAAAA,YAAY,CAAEmC,CAAAA,UAAU,CAACgH,SAAS,CAACjS,CAAAA,CAAEwI,KAAK,CAAMpK,KAAAA,SAAAA,CAAAA,CAAAA;SAE/E;QAGD,MAAM2F,MAAAA,GAAS,IAAI,CAACzF,KAAK,CAACo2C,yBAAyB,CAACzzB,CAAGnb,EAAAA,OAAAA,CAAQ+C,IAAI,EAAE/C,OAASmwC,EAAAA,MAAAA,CAAAA,CAAAA;QAE9E,IAAInwC,OAAAA,CAAQoB,OAAO,EAAE;AACnBnD,YAAAA,MAAAA,CAAOmD,OAAO;SACf;QAED,OAAOnD,MAAAA,CAAAA;AACT;AAQA,CACA+xD,gBAAiB/xD,CAAAA,MAAM,EAAEkd,CAAC,EAAE;QAC1B,MAAM,EAACuxC,SAAQC,MAAAA,GAAQ3sD,OAAO,GAAC,GAAG,IAAI;QACtC,MAAMuiB,QAAAA,GAAWglC,WAAW,CAACvnD,OAAQuiB,CAAAA,QAAQ,CAAC,CAAC9oB,IAAI,CAAC,IAAI,EAAEwE,MAAQkd,EAAAA,CAAAA,CAAAA,CAAAA;QAClE,OAAOoH,QAAAA,KAAa,KAAK,KAAKmqC,MAAAA,KAAWnqC,QAAS9gB,CAAAA,CAAC,IAAIkrD,MAAAA,KAAWpqC,QAAS7gB,CAAAA,CAAC,CAADA,CAAAA;AAC7E;AACF,CAAC;AAED,qBAAe;IACbyC,EAAI;IACJwiD,QAAUwF,EAAAA,OAAAA;AACV5E,IAAAA,WAAAA;AAEA2I,IAAAA,SAAAA,CAAAA,CAAU13D,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;AAC/B,YAAIA,OAAS;YACXxH,KAAMgwD,CAAAA,OAAO,GAAG,IAAI2D,OAAQ;AAAC3zD,gBAAAA,KAAAA;AAAOwH,gBAAAA,OAAAA;AAAO;SAC5C;AACH;AAEAi1B,IAAAA,YAAAA,CAAAA,CAAaz8B,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAClC,IAAIxH,KAAAA,CAAMgwD,OAAO,EAAE;YACjBhwD,KAAMgwD,CAAAA,OAAO,CAAClgD,UAAU,CAACtI,OAAAA,CAAAA,CAAAA;SAC1B;AACH;AAEAkK,IAAAA,KAAAA,CAAAA,CAAM1R,KAAK,EAAE2iD,KAAK,EAAEn7C,OAAO,EAAE;QAC3B,IAAIxH,KAAAA,CAAMgwD,OAAO,EAAE;YACjBhwD,KAAMgwD,CAAAA,OAAO,CAAClgD,UAAU,CAACtI,OAAAA,CAAAA,CAAAA;SAC1B;AACH;AAEAmwD,IAAAA,SAAAA,CAAAA,CAAU33D,KAAK,EAAE;QACf,MAAMgwD,OAAAA,GAAUhwD,MAAMgwD,OAAO;QAE7B,IAAIA,OAAAA,IAAWA,OAAQoH,CAAAA,WAAW,EAAI;AACpC,kBAAMt/C,IAAO;AACXk4C,gBAAAA,OAAAA;AACF;YAEA,IAAIhwD,KAAAA,CAAMs+B,aAAa,CAAC,mBAAqB;AAAC,mBAAGxmB,IAAI;AAAEgzB,gBAAAA,UAAAA,EAAY,IAAI;AAAA,mBAAO,KAAK,EAAE;AACnF;aACD;YAEDklB,OAAQruD,CAAAA,IAAI,CAAC3B,KAAAA,CAAMgP,GAAG;YAEtBhP,KAAMs+B,CAAAA,aAAa,CAAC,kBAAoBxmB,EAAAA,IAAAA,CAAAA,CAAAA;SACzC;AACH;IAEAs2C,UAAWpuD,CAAAA,CAAAA,KAAK,EAAE8X,IAAI,EAAE;QACtB,IAAI9X,KAAAA,CAAMgwD,OAAO,EAAE;YAEjB,MAAMnlC,gBAAAA,GAAmB/S,KAAK6/B,MAAM;YACpC,IAAI33C,KAAAA,CAAMgwD,OAAO,CAACrC,WAAW,CAAC71C,IAAKtV,CAAAA,KAAK,EAAEqoB,gBAAAA,EAAkB/S,IAAKg5B,CAAAA,WAAW,CAAG;gBAE7Eh5B,IAAK+X,CAAAA,OAAO,GAAG,IAAI;aACpB;SACF;AACH;IAEAhpB,QAAU;AACRswB,QAAAA,OAAAA,EAAS,IAAI;AACb+9B,QAAAA,QAAAA,EAAU,IAAI;QACdnrC,QAAU;QACV3H,eAAiB;QACjBwzC,UAAY;QACZvI,SAAW;YACTloC,MAAQ;AACV;QACA2rC,YAAc;QACdC,iBAAmB;QACnB12B,UAAY;QACZg5B,SAAW;QACXnC,WAAa;AACbf,QAAAA,QAAAA,EAAU,EACV;QACAoG,SAAW;QACXO,WAAa;QACb1F,aAAe;QACfD,eAAiB;QACjBf,UAAY;YACVjrC,MAAQ;AACV;QACA0xC,WAAa;QACb5mC,OAAS;QACT2hC,YAAc;QACdD,SAAW;QACXW,YAAc;AACd7I,QAAAA,SAAAA,EAAW,CAACz6C,GAAKrG,EAAAA,IAAAA,GAASA,IAAKwnD,CAAAA,QAAQ,CAAChoD,IAAI;AAC5CuhD,QAAAA,QAAAA,EAAU,CAAC16C,GAAKrG,EAAAA,IAAAA,GAASA,IAAKwnD,CAAAA,QAAQ,CAAChoD,IAAI;QAC3C+tD,kBAAoB;AACpBjF,QAAAA,aAAAA,EAAe,IAAI;QACnB3iC,UAAY;QACZhM,WAAa;QACbG,WAAa;QACb3b,SAAW;YACTvG,QAAU;YACVsE,MAAQ;AACV;QACA6C,UAAY;YACV2U,OAAS;gBACPlc,IAAM;gBACNiH,UAAY;AAAC;AAAK;AAAK;AAAS;AAAU;AAAU;AAAS;AAC/D;YACAwsD,OAAS;gBACP/uD,MAAQ;gBACRtE,QAAU;AACZ;AACF;QACAH,SAAWwyD,EAAAA,gBAAAA;AACb;IAEAt8B,aAAe;QACb65B,QAAU;QACVC,UAAY;QACZ/C,SAAW;AACb;IAEA9rC,WAAa;AACXC,QAAAA,WAAAA,EAAa,CAACxD,IAASA,GAAAA,IAAAA,KAAS,QAAYA,IAAAA,IAAAA,KAAS,cAAcA,IAAS;AAC5EyD,QAAAA,UAAAA,EAAY,KAAK;QACjBrhB,SAAW;AACTohB,YAAAA,WAAAA,EAAa,KAAK;AAClBC,YAAAA,UAAAA,EAAY,KAAK;AACnB;QACA3a,SAAW;AACT8wD,YAAAA,SAAAA,EAAW,KAAK;AAClB;QACAlwD,UAAY;YACVkwD,SAAW;AACb;AACF;IAGAppB,sBAAwB;AAAC;AAAc;AACzC,CAAE;;;;;;;;;;;;;AC7zCF,MAAMqpB,WAAc,IAACxkD,MAAQpF,EAAAA,GAAAA,EAAK/D,OAAO4tD,WAAgB;IACvD,IAAI,OAAO7pD,QAAQ,QAAU;QAC3B/D,KAAQmJ,GAAAA,MAAAA,CAAO3Q,IAAI,CAACuL,GAAO;AAC3B6pD,QAAAA,WAAAA,CAAYvQ,OAAO,CAAC;AAACr9C,YAAAA,KAAAA;YAAOuK,KAAOxG,EAAAA,GAAAA;AAAG;KACjC,UAAI2P,MAAM3P,GAAM;AACrB/D,QAAAA,KAAAA,GAAQ,IAAI;KACb;IACD,OAAOA,KAAAA,CAAAA;AACT;AAEA,SAAS6tD,cAAAA,CAAe1kD,MAAM,EAAEpF,GAAG,EAAE/D,KAAK,EAAE4tD,WAAW,EAAE;IACvD,MAAMxgC,KAAAA,GAAQjkB,MAAOwK,CAAAA,OAAO,CAAC5P,GAAAA,CAAAA,CAAAA;IAC7B,IAAIqpB,KAAAA,KAAU,CAAC,CAAG;QAChB,OAAOugC,WAAAA,CAAYxkD,MAAQpF,EAAAA,GAAAA,EAAK/D,KAAO4tD,EAAAA,WAAAA,CAAAA,CAAAA;KACxC;IACD,MAAMr6C,IAAAA,GAAOpK,MAAO2kD,CAAAA,WAAW,CAAC/pD,GAAAA,CAAAA,CAAAA;IAChC,OAAOqpB,KAAAA,KAAU7Z,IAAOvT,GAAAA,KAAAA,GAAQotB,KAAK;AACvC;AAEA,MAAM8B,UAAa,IAAClvB,KAAOlH,EAAAA,GAAAA,GAAQkH,UAAU,IAAI,GAAG,IAAI,GAAGq1B,6DAAWA,CAAC3+B,IAAK+2B,CAAAA,KAAK,CAACztB,KAAAA,CAAAA,EAAQ,GAAGlH,GAAI;AAEjG,SAASi1D,iBAAAA,CAAkB/vD,KAAK,EAAE;IAChC,MAAMmL,MAAAA,GAAS,IAAI,CAACC,SAAS;AAE7B,QAAIpL,KAAS,SAAKA,KAAQmL,GAAAA,MAAAA,CAAO5R,MAAM,EAAE;QACvC,OAAO4R,MAAM,CAACnL,KAAM;KACrB;IACD,OAAOA,KAAAA,CAAAA;AACT;AAEe,MAAMgwD,aAAsBt9B,SAAAA,KAAAA,CAAAA;AAEzC,WAAOjvB,KAAK,UAAW;AAItB,CACD,OAAO9E,QAAW;QAChBwS,KAAO;YACLolB,QAAUw5B,EAAAA,iBAAAA;AACZ;KACA;AAEFz4D,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;AACf,aAAK,CAACA,GAAAA,CAAAA,CAAAA;AAEN,SACA,IAAI,CAAC8zD,WAAW,GAAGr4D,SAAAA,CAAAA;QACnB,IAAI,CAACs4D,WAAW,GAAG;QACnB,IAAI,CAACC,YAAY,GAAG,EAAE;AACxB;AAEAzvC,IAAAA,IAAAA,CAAK0jB,YAAY,EAAE;QACjB,MAAMgsB,KAAAA,GAAQ,IAAI,CAACD,YAAY;QAC/B,IAAIC,KAAAA,CAAM72D,MAAM,EAAE;YAChB,MAAM4R,MAAAA,GAAS,IAAI,CAACC,SAAS;AAC7B,iBAAK,MAAM,EAACpJ,KAAAA,GAAOuK,KAAK,GAAC,IAAI6jD,KAAO;AAClC,oBAAIjlD,MAAM,CAACnJ,KAAM,MAAKuK,KAAO;oBAC3BpB,MAAOuE,CAAAA,MAAM,CAAC1N,KAAO;iBACtB;AACH;YACA,IAAI,CAACmuD,YAAY,GAAG,EAAE;SACvB;QACD,KAAK,CAACzvC,IAAI,CAAC0jB,YAAAA,CAAAA,CAAAA;AACb;IAEA15B,KAAM3E,CAAAA,GAAG,EAAE/D,KAAK,EAAE;AAChB,YAAI2P,6DAAaA,CAAC5L,GAAM;AACtB,mBAAO,IAAI;SACZ;QACD,MAAMoF,MAAAA,GAAS,IAAI,CAACC,SAAS;AAC7BpJ,QAAAA,KAAAA,GAAQQ,SAASR,KAAUmJ,CAAAA,IAAAA,MAAM,CAACnJ,KAAAA,CAAM,KAAK+D,GAAM/D,GAAAA,KAAAA,GAC/C6tD,cAAe1kD,CAAAA,MAAAA,EAAQpF,KAAKyC,6DAAexG,CAAAA,KAAAA,EAAO+D,MAAM,IAAI,CAACoqD,YAAY,CAAC;AAC9E,eAAOj/B,UAAWlvB,CAAAA,KAAAA,EAAOmJ,MAAO5R,CAAAA,MAAM,GAAG;AAC3C;IAEAw7B,mBAAsB;QACpB,MAAM,EAACpxB,aAAYC,UAAAA,GAAW,GAAG,IAAI,CAACF,aAAa;QACnD,IAAI,EAAC/K,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI,CAACiR,SAAS,CAAC,IAAI;AAEpC,YAAI,IAAI,CAACzM,OAAO,CAACw5C,MAAM,KAAK,OAAS;AACnC,gBAAI,CAACn1C,UAAY;gBACfhL,GAAM;aACP;AACD,gBAAI,CAACiL,UAAY;AACf9I,gBAAAA,GAAAA,GAAM,IAAI,CAACsQ,SAAS,GAAG7R,MAAM,GAAG;aACjC;SACF;QAED,IAAI,CAACZ,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACmC,GAAG,GAAGA,GAAAA,CAAAA;AACb;IAEAq6B,UAAa;QACX,MAAMx8B,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG;AACpB,cAAMwZ,MAAS,OAAI,CAAChV,OAAO,CAACgV,MAAM;AAClC,cAAMnD,QAAQ,EAAE;QAChB,IAAIhG,MAAAA,GAAS,IAAI,CAACC,SAAS;AAG3BD,QAAAA,MAAAA,GAAS,GAACxS,KAAQ,CAAKmC,IAAAA,GAAAA,KAAQqQ,OAAO5R,MAAM,GAAG,CAAK4R,GAAAA,MAAAA,GAASA,MAAO4gC,CAAAA,KAAK,CAACpzC,GAAAA,EAAKmC,MAAM,CAAE;AAEvF,YAAI,CAACo1D,WAAW,GAAGx3D,IAAAA,CAAKoC,GAAG,CAACqQ,MAAAA,CAAO5R,MAAM,IAAI+a,MAAAA,GAAS,CAAI,IAAC,CAAG;QAC9D,IAAI,CAAC27C,WAAW,GAAG,IAAI,CAACt3D,GAAG,IAAI2b,MAAAA,GAAS,GAAM,IAAC,CAAD;AAE9C,YAAK,IAAItU,KAAAA,GAAQrH,GAAKqH,EAAAA,KAAAA,IAASlF,KAAKkF,KAAS;AAC3CmR,YAAAA,KAAAA,CAAM3W,IAAI,CAAC;AAACwF,gBAAAA,KAAAA;AAAK;AACnB;QACA,OAAOmR,KAAAA,CAAAA;AACT;AAEA3E,IAAAA,gBAAAA,CAAiBxM,KAAK,EAAE;AACtB,eAAO+vD,iBAAkBh3D,CAAAA,IAAI,CAAC,IAAI,EAAEiH,KAAAA,CAAAA,CAAAA;AACtC;AAIA,CACA1B,SAAY;AACV,aAAK,CAACA,SAAS;AAEf,YAAI,CAAC,IAAI,CAAC0U,YAAY,EAAI;AAExB,gBAAI,CAACqO,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;SAC3C;AACH;AAGAnQ,IAAAA,gBAAAA,CAAiBlR,KAAK,EAAE;QACtB,IAAI,OAAOA,UAAU,QAAU;YAC7BA,KAAQ,OAAI,CAAC0K,KAAK,CAAC1K,KAAAA,CAAAA,CAAAA;SACpB;AAED,eAAOA,UAAU,IAAI,GAAG8L,MAAM,IAAI,CAACwK,kBAAkB,CAAEtW,CAAAA,KAAQ,OAAI,CAACiwD,WAAU,IAAK,IAAI,CAACC,WAAW,CAAC;AACtG;AAIA9+C,IAAAA,eAAAA,CAAgBpP,KAAK,EAAE;QACrB,MAAMmP,KAAAA,GAAQ,IAAI,CAACA,KAAK;AACxB,YAAInP,QAAQ,CAAKA,IAAAA,KAAAA,GAAQmP,KAAM5X,CAAAA,MAAM,GAAG,CAAG;AACzC,mBAAO,IAAI;SACZ;QACD,OAAO,IAAI,CAAC2X,gBAAgB,CAACC,KAAK,CAACnP,KAAAA,CAAM,CAAChC,KAAK;AACjD;AAEAwW,IAAAA,gBAAAA,CAAiB8iB,KAAK,EAAE;AACtB,eAAO5gC,IAAK+2B,CAAAA,KAAK,CAAC,IAAI,CAACwgC,WAAW,GAAG,IAAI,CAACv2B,kBAAkB,CAACJ,KAAS,QAAI,CAAC42B,WAAW;AACxF;IAEAt7C,YAAe;QACb,OAAO,IAAI,CAACzT,MAAM;AACpB;AACF;;ACrIA,SAASkvD,eAAAA,CAAcC,iBAAiB,EAAEC,SAAS,EAAE;AACnD,UAAMp/C,QAAQ,EAAE;AAKhB,UAAMq/C,WAAc;AACpB,UAAM,EAAC1X,MAAM,GAAE9d,OAAMriC,GAAAA,GAAKmC,GAAG,GAAE21D,YAAW9lD,KAAAA,GAAO+lD,QAAQ,GAAEC,YAAWC,aAAAA,GAAc,GAAGN,iBAAAA,CAAAA;AACvF,UAAMO,OAAO71B,IAAQ;AACrB,UAAM81B,YAAYJ,QAAW;AAC7B,UAAM,EAAC/3D,GAAKo4D,EAAAA,IAAAA,GAAMj2D,GAAKk2D,EAAAA,IAAAA,GAAK,GAAGT,SAAAA,CAAAA;IAC/B,MAAM5sD,UAAAA,GAAa,CAACgO,6DAAchZ,CAAAA,GAAAA,CAAAA,CAAAA;IAClC,MAAMiL,UAAAA,GAAa,CAAC+N,6DAAc7W,CAAAA,GAAAA,CAAAA,CAAAA;IAClC,MAAMm2D,YAAAA,GAAe,CAACt/C,6DAAchH,CAAAA,KAAAA,CAAAA,CAAAA;IACpC,MAAMumD,UAAAA,GAAa,CAACF,IAAAA,GAAOD,IAAG,KAAMJ,YAAY;IAChD,IAAIv3C,OAAAA,GAAU+3C,8DAAOA,CAAC,CAACH,OAAOD,IAAG,IAAKD,YAAYD,IAAQA,CAAAA,GAAAA,IAAAA,CAAAA;IAC1D,IAAIp1D,MAAAA,EAAQ21D,SAASC,OAASC,EAAAA,SAAAA,CAAAA;AAI9B,QAAIl4C,OAAUo3C,GAAAA,WAAAA,IAAe,CAAC7sD,UAAAA,IAAc,CAACC,UAAY;QACvD,OAAO;AAAC;gBAAC5D,KAAO+wD,EAAAA,IAAAA;AAAI;AAAG;gBAAC/wD,KAAOgxD,EAAAA,IAAAA;AAAI;AAAE;KACtC;IAEDM,SAAY54D,GAAAA,IAAAA,CAAK03B,IAAI,CAAC4gC,IAAAA,GAAO53C,WAAW1gB,IAAKoE,CAAAA,KAAK,CAACi0D,IAAO33C,GAAAA,OAAAA,CAAAA,CAAAA;AAC1D,QAAIk4C,YAAYR,SAAW;AAEzB13C,QAAAA,OAAAA,GAAU+3C,8DAAQG,CAAAA,SAAAA,GAAYl4C,OAAU03C,GAAAA,SAAAA,GAAYD,IAAQA,CAAAA,GAAAA,IAAAA,CAAAA;KAC7D;IAED,IAAI,CAACl/C,6DAAaA,CAAC8+C,SAAY;QAE7Bh1D,MAAS/C,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,EAAIguC,EAAAA,SAAAA,CAAAA,CAAAA;AACtBr3C,QAAAA,OAAAA,GAAU1gB,IAAK03B,CAAAA,IAAI,CAAChX,OAAAA,GAAU3d,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;KACzC;AAED,QAAIq9C,WAAW,OAAS;AACtBsY,QAAAA,OAAAA,GAAU14D,IAAKoE,CAAAA,KAAK,CAACi0D,IAAAA,GAAO33C,OAAWA,CAAAA,GAAAA,OAAAA,CAAAA;AACvCi4C,QAAAA,OAAAA,GAAU34D,IAAK03B,CAAAA,IAAI,CAAC4gC,IAAAA,GAAO53C,OAAWA,CAAAA,GAAAA,OAAAA,CAAAA;KACjC;QACLg4C,OAAUL,GAAAA,IAAAA,CAAAA;QACVM,OAAUL,GAAAA,IAAAA,CAAAA;KACX;IAED,IAAIrtD,UAAAA,IAAcC,UAAco3B,IAAAA,IAAAA,IAAQu2B,8DAAY,CAACz2D,CAAAA,GAAAA,GAAMnC,GAAE,IAAKqiC,IAAM5hB,EAAAA,OAAAA,GAAU,IAAO;QAKvFk4C,SAAY54D,GAAAA,IAAAA,CAAK+2B,KAAK,CAAC/2B,IAAKC,CAAAA,GAAG,CAAEmC,CAAAA,GAAAA,GAAMnC,GAAE,IAAKygB,OAASs3C,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AACvDt3C,QAAAA,OAAAA,GAAU,CAACte,GAAMnC,GAAAA,GAAE,IAAK24D,SAAAA,CAAAA;QACxBF,OAAUz4D,GAAAA,GAAAA,CAAAA;QACV04D,OAAUv2D,GAAAA,GAAAA,CAAAA;AACZ,WAAO,IAAIm2D,YAAc;QAIvBG,OAAUztD,GAAAA,UAAAA,GAAahL,MAAMy4D,OAAO;QACpCC,OAAUztD,GAAAA,UAAAA,GAAa9I,MAAMu2D,OAAO;AACpCC,QAAAA,SAAAA,GAAY3mD,KAAQ;AACpByO,QAAAA,OAAAA,GAAU,CAACi4C,OAAUD,GAAAA,OAAM,IAAKE,SAAAA,CAAAA;KAC3B;AAELA,QAAAA,SAAAA,GAAY,CAACD,OAAUD,GAAAA,OAAM,IAAKh4C,OAAAA,CAAAA;AAGlC,YAAIo4C,8DAAYA,CAACF,SAAW54D,EAAAA,IAAAA,CAAK+2B,KAAK,CAAC6hC,SAAAA,CAAAA,EAAYl4C,UAAU,IAAO;YAClEk4C,SAAY54D,GAAAA,IAAAA,CAAK+2B,KAAK,CAAC6hC,SAAAA,CAAAA,CAAAA;SAClB;YACLA,SAAY54D,GAAAA,IAAAA,CAAK03B,IAAI,CAACkhC,SAAAA,CAAAA,CAAAA;SACvB;KACF;AAID,UAAMG,gBAAgB/4D,IAAKoC,CAAAA,GAAG,CAC5B42D,8DAAAA,CAAet4C,UACfs4C,8DAAeN,CAAAA,OAAAA,CAAAA,CAAAA,CAAAA;AAEjB31D,IAAAA,MAAAA,GAAS/C,KAAK+pB,GAAG,CAAC,IAAI9Q,6DAAc8+C,CAAAA,SAAAA,CAAAA,GAAagB,gBAAgBhB,SAAS;AAC1EW,IAAAA,OAAAA,GAAU14D,IAAK+2B,CAAAA,KAAK,CAAC2hC,OAAAA,GAAU31D,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;AACzC41D,IAAAA,OAAAA,GAAU34D,IAAK+2B,CAAAA,KAAK,CAAC4hC,OAAAA,GAAU51D,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;AAEzC,QAAIumB,CAAI;AACR,QAAIre,UAAY;QACd,IAAIitD,aAAAA,IAAiBQ,YAAYz4D,GAAK;AACpCwY,YAAAA,KAAAA,CAAM3W,IAAI,CAAC;gBAACwF,KAAOrH,EAAAA,GAAAA;AAAG;AAEtB,gBAAIy4D,UAAUz4D,GAAK;AACjBqpB,gBAAAA,CAAAA,EAAAA,CAAAA;aACD;AAED,gBAAIwvC,8DAAYA,CAAC94D,IAAK+2B,CAAAA,KAAK,CAAE2hC,CAAAA,OAAUpvC,GAAAA,CAAAA,GAAI5I,OAAM,IAAK3d,UAAUA,MAAQ9C,EAAAA,GAAAA,EAAKg5D,iBAAkBh5D,CAAAA,GAAAA,EAAKu4D,YAAYZ,iBAAqB;AACnItuC,gBAAAA,CAAAA,EAAAA,CAAAA;aACD;SACI,UAAIovC,UAAUz4D,GAAK;AACxBqpB,YAAAA,CAAAA,EAAAA,CAAAA;SACD;KACF;IAED,MAAOA,CAAAA,GAAIsvC,SAAW,IAAEtvC,CAAG;QACzB,MAAM4vC,SAAAA,GAAYl5D,IAAK+2B,CAAAA,KAAK,CAAE2hC,CAAAA,OAAUpvC,GAAAA,CAAAA,GAAI5I,OAAM,IAAK3d,MAAUA,CAAAA,GAAAA,MAAAA,CAAAA;QACjE,IAAImI,UAAAA,IAAcguD,YAAY92D,GAAK;YACjC,MAAM;SACP;AACDqW,QAAAA,KAAAA,CAAM3W,IAAI,CAAC;YAACwF,KAAO4xD,EAAAA,SAAAA;AAAS;AAC9B;IAEA,IAAIhuD,UAAAA,IAAcgtD,aAAiBS,IAAAA,OAAAA,KAAYv2D,GAAK;AAElD,YAAIqW,MAAM5X,MAAM,IAAIi4D,8DAAargD,CAAAA,KAAK,CAACA,KAAM5X,CAAAA,MAAM,GAAG,EAAE,CAACyG,KAAK,EAAElF,KAAK62D,iBAAkB72D,CAAAA,GAAAA,EAAKo2D,YAAYZ,iBAAqB;AAC3Hn/C,YAAAA,KAAK,CAACA,KAAM5X,CAAAA,MAAM,GAAG,CAAE,EAACyG,KAAK,GAAGlF,GAAAA,CAAAA;SAC3B;AACLqW,YAAAA,KAAAA,CAAM3W,IAAI,CAAC;gBAACwF,KAAOlF,EAAAA,GAAAA;AAAG;SACvB;AACH,WAAO,IAAI,CAAC8I,UAAcytD,IAAAA,OAAAA,KAAYv2D,GAAK;AACzCqW,QAAAA,KAAAA,CAAM3W,IAAI,CAAC;YAACwF,KAAOqxD,EAAAA,OAAAA;AAAO;KAC3B;IAED,OAAOlgD,KAAAA,CAAAA;AACT;AAEA,SAASwgD,iBAAAA,CAAkB3xD,KAAK,EAAEkxD,UAAU,EAAE,EAACh+C,UAAU,GAAEwjB,WAAW,GAAC,EAAE;AACvE,UAAMm7B,MAAM72C,6DAAU0b,CAAAA,WAAAA,CAAAA,CAAAA;AACtB,UAAMhlB,KAAQ,GAACwB,CAAAA,UAAAA,GAAaxa,IAAK0f,CAAAA,GAAG,CAACy5C,GAAAA,CAAAA,GAAOn5D,IAAKwf,CAAAA,GAAG,CAAC25C,GAAAA,CAAI,KAAK;IAC9D,MAAMt4D,MAAAA,GAAS,OAAO23D,UAAa,GAAC,GAAKlxD,GAAAA,KAAI,EAAGzG,MAAM;AACtD,WAAOb,IAAKC,CAAAA,GAAG,CAACu4D,UAAAA,GAAax/C,KAAOnY,EAAAA,MAAAA,CAAAA,CAAAA;AACtC;AAEe,MAAMu4D,eAAwBp/B,SAAAA,KAAAA,CAAAA;AAE3Cp7B,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;AACf,aAAK,CAACA,GAAAA,CAAAA,CAAAA;AAEN,SACA,IAAI,CAACvD,KAAK,GAAGhB,SAAAA,CAAAA;AACb,SACA,IAAI,CAAC+I,GAAG,GAAG/I,SAAAA,CAAAA;AACX,SACA,IAAI,CAACq4D,WAAW,GAAGr4D,SAAAA,CAAAA;AACnB,SACA,IAAI,CAACm6D,SAAS,GAAGn6D,SAAAA,CAAAA;QACjB,IAAI,CAACs4D,WAAW,GAAG;AACrB;IAEAxlD,KAAM3E,CAAAA,GAAG,EAAE/D,KAAK,EAAE;AAChB,YAAI2P,6DAAaA,CAAC5L,GAAM;AACtB,mBAAO,IAAI;SACZ;QACD,IAAK,QAAOA,GAAQ,iBAAYA,GAAelC,YAAAA,MAAK,KAAM,CAACrB,QAAS,EAACuD,GAAM;AACzE,mBAAO,IAAI;SACZ;AAED,eAAO,CAACA,GAAAA,CAAAA;AACV;IAEAisD,sBAAyB;AACvB,cAAM,EAACv9C,WAAW,GAAC,GAAG,IAAI,CAACnV,OAAO;QAClC,MAAM,EAACqE,aAAYC,UAAAA,GAAW,GAAG,IAAI,CAACF,aAAa;AACnD,YAAI,EAAC/K,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI;AAErB,cAAMm3D,SAASn+C,CAAAA,CAAAA,GAAMnb,GAAMgL,GAAAA,UAAAA,GAAahL,MAAMmb,CAAC;AAC/C,cAAMo+C,SAASp+C,CAAAA,CAAAA,GAAMhZ,GAAM8I,GAAAA,UAAAA,GAAa9I,MAAMgZ,CAAC;AAE/C,YAAIW,WAAa;AACf,kBAAM09C,UAAU1vD,6DAAK9J,CAAAA,GAAAA,CAAAA,CAAAA;AACrB,kBAAMy5D,UAAU3vD,6DAAK3H,CAAAA,GAAAA,CAAAA,CAAAA;YAErB,IAAIq3D,OAAAA,GAAU,CAAKC,IAAAA,OAAAA,GAAU,CAAG;gBAC9BF,MAAO;AACT,mBAAO,IAAIC,OAAAA,GAAU,CAAKC,IAAAA,OAAAA,GAAU,CAAG;gBACrCH,MAAO;aACR;SACF;AAED,YAAIt5D,QAAQmC,GAAK;YACf,IAAIwZ,MAAAA,GAASxZ,QAAQ,CAAI,OAAIpC,KAAKuY,GAAG,CAACnW,MAAM,IAAK;AAEjDo3D,YAAAA,MAAAA,CAAOp3D,GAAMwZ,GAAAA,MAAAA,CAAAA,CAAAA;AAEb,gBAAI,CAACG,WAAa;AAChBw9C,gBAAAA,MAAAA,CAAOt5D,GAAM2b,GAAAA,MAAAA,CAAAA,CAAAA;aACd;SACF;QACD,IAAI,CAAC3b,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACmC,GAAG,GAAGA,GAAAA,CAAAA;AACb;IAEAu3D,YAAe;AACb,cAAM3jC,QAAW,OAAI,CAACpvB,OAAO,CAAC6R,KAAK;AAEnC,YAAI,EAAC2d,aAAAA,GAAewjC,QAAAA,GAAS,GAAG5jC,QAAAA,CAAAA;QAChC,IAAIgiC,QAAAA,CAAAA;AAEJ,YAAI4B,QAAU;AACZ5B,YAAAA,QAAAA,GAAWh4D,IAAK03B,CAAAA,IAAI,CAAC,IAAI,CAACt1B,GAAG,GAAGw3D,QAAY55D,CAAAA,GAAAA,IAAAA,CAAKoE,KAAK,CAAC,IAAI,CAACnE,GAAG,GAAG25D,QAAY;AAC9E,gBAAI5B,WAAW,IAAM;AACnBzoD,gBAAAA,OAAAA,CAAQC,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAACzE,EAAE,CAAC,iBAAiB,EAAE6uD,QAAS,gCAA+B,EAAE5B,QAAAA,CAAS,yBAAyB,CAAC;gBAC/HA,QAAW;aACZ;SACI;YACLA,QAAW,OAAI,CAAC6B,gBAAgB;AAChCzjC,YAAAA,aAAAA,GAAgBA,aAAiB;SAClC;AAED,YAAIA,aAAe;YACjB4hC,QAAWh4D,GAAAA,IAAAA,CAAKC,GAAG,CAACm2B,aAAe4hC,EAAAA,QAAAA,CAAAA,CAAAA;SACpC;QAED,OAAOA,QAAAA,CAAAA;AACT;AAIA,CACA6B,gBAAmB;AACjB,eAAO1uD,OAAOE,iBAAiB;AACjC;IAEAoxB,UAAa;QACX,MAAM10B,IAAAA,GAAO,IAAI,CAACnB,OAAO;QACzB,MAAMovB,QAAAA,GAAWjuB,KAAK0Q,KAAK;QAM3B,IAAIu/C,QAAAA,GAAW,IAAI,CAAC2B,YAAY;QAChC3B,QAAWh4D,GAAAA,IAAAA,CAAKoC,GAAG,CAAC,CAAG41D,EAAAA,QAAAA,CAAAA,CAAAA;AAEvB,cAAM8B,uBAA0B;AAC9B9B,YAAAA,QAAAA;AACA5X,YAAAA,MAAAA,EAAQr4C,KAAKq4C,MAAM;AACnBngD,YAAAA,GAAAA,EAAK8H,KAAK9H,GAAG;AACbmC,YAAAA,GAAAA,EAAK2F,KAAK3F,GAAG;AACb21D,YAAAA,SAAAA,EAAW/hC,SAAS+hC,SAAS;AAC7Bz1B,YAAAA,IAAAA,EAAMtM,SAAS4jC,QAAQ;AACvB3nD,YAAAA,KAAAA,EAAO+jB,SAAS/jB,KAAK;YACrBgmD,SAAW,MAAI,CAAC7xB,UAAU;YAC1B5rB,UAAY,MAAI,CAACF,YAAY;YAC7B0jB,WAAahI,EAAAA,QAAAA,CAASgI,WAAW,IAAI;YACrCk6B,aAAeliC,EAAAA,QAAAA,CAASkiC,aAAa,KAAK,KAAK;AACjD;AACA,cAAML,SAAY,OAAI,CAACt9B,MAAM,IAAI,IAAI;QACrC,MAAM9hB,KAAAA,GAAQk/C,gBAAcmC,uBAAyBjC,EAAAA,SAAAA,CAAAA,CAAAA;QAIrD,IAAI9vD,IAAAA,CAAKq4C,MAAM,KAAK,OAAS;YAC3B2Z,8DAAmBthD,CAAAA,KAAAA,EAAO,IAAI,EAAE;SACjC;QAED,IAAI1Q,IAAAA,CAAKC,OAAO,EAAE;AAChByQ,YAAAA,KAAAA,CAAMzQ,OAAO;AAEb,gBAAI,CAAC9H,KAAK,GAAG,IAAI,CAACkC,GAAG;AACrB,gBAAI,CAAC6F,GAAG,GAAG,IAAI,CAAChI,GAAG;SACd;AACL,gBAAI,CAACC,KAAK,GAAG,IAAI,CAACD,GAAG;AACrB,gBAAI,CAACgI,GAAG,GAAG,IAAI,CAAC7F,GAAG;SACpB;QAED,OAAOqW,KAAAA,CAAAA;AACT;AAIA,CACA7S,SAAY;QACV,MAAM6S,KAAAA,GAAQ,IAAI,CAACA,KAAK;QACxB,IAAIvY,KAAAA,GAAQ,IAAI,CAACD,GAAG;QACpB,IAAIgI,GAAAA,GAAM,IAAI,CAAC7F,GAAG;AAElB,aAAK,CAACwD,SAAS;QAEf,IAAI,IAAI,CAACgB,OAAO,CAACgV,MAAM,IAAInD,KAAAA,CAAM5X,MAAM,EAAE;AACvC,kBAAM+a,MAAS,GAAC3T,CAAAA,GAAAA,GAAM/H,KAAI,IAAKF,IAAKoC,CAAAA,GAAG,CAACqW,KAAAA,CAAM5X,MAAM,GAAG,GAAG,CAAK;YAC/DX,KAAS0b,IAAAA,MAAAA,CAAAA;YACT3T,GAAO2T,IAAAA,MAAAA,CAAAA;SACR;QACD,IAAI,CAAC27C,WAAW,GAAGr3D,KAAAA,CAAAA;QACnB,IAAI,CAACm5D,SAAS,GAAGpxD,GAAAA,CAAAA;QACjB,IAAI,CAACuvD,WAAW,GAAGvvD,GAAM/H,GAAAA,KAAAA,CAAAA;AAC3B;AAEA4T,IAAAA,gBAAAA,CAAiBxM,KAAK,EAAE;AACtB,eAAO2c,6DAAYA,CAAC3c,KAAO,MAAI,CAAClI,KAAK,CAACwH,OAAO,CAACsd,MAAM,EAAE,IAAI,CAACtd,OAAO,CAAC6R,KAAK,CAACyP,MAAM;AACjF;AACF;;ACnTe,MAAM8xC,WAAoBZ,SAAAA,eAAAA,CAAAA;AAEvC,WAAOruD,KAAK,QAAS;AAIpB,CACD,OAAO9E,QAAW;QAChBwS,KAAO;YACLolB,QAAUo8B,EAAAA,0DAAAA,CAAMC,UAAU,CAACC,OAAO;AACpC;KACA;IAGF99B,mBAAsB;QACpB,MAAM,EAACp8B,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI,CAACiR,SAAS,CAAC,IAAI;AAEtC,YAAI,CAACpT,GAAG,GAAG6J,6DAAS7J,CAAAA,GAAAA,CAAAA,GAAOA,MAAM,CAAC;AAClC,YAAI,CAACmC,GAAG,GAAG0H,6DAAS1H,CAAAA,GAAAA,CAAAA,GAAOA,MAAM,CAAC;AAGlC,YAAI,CAACk3D,sBAAsB;AAC7B;AAKC,CACDO,gBAAmB;QACjB,MAAMr/C,UAAAA,GAAa,IAAI,CAACF,YAAY;QACpC,MAAMzZ,MAAAA,GAAS2Z,aAAa,IAAI,CAACmC,KAAK,GAAG,IAAI,CAACD,MAAM;QACpD,MAAMshB,WAAAA,GAAc1b,6DAASA,CAAC,IAAI,CAAC1b,OAAO,CAAC6R,KAAK,CAACulB,WAAW;AAC5D,cAAMhlB,KAAQ,GAACwB,CAAAA,UAAAA,GAAaxa,IAAK0f,CAAAA,GAAG,CAACse,WAAAA,CAAAA,GAAeh+B,IAAKwf,CAAAA,GAAG,CAACwe,WAAAA,CAAY,KAAK;AAC9E,cAAMoC,QAAW,OAAI,CAACG,uBAAuB,CAAC;QAC9C,OAAOvgC,IAAAA,CAAK03B,IAAI,CAAC72B,MAASb,GAAAA,IAAAA,CAAKC,GAAG,CAAC,IAAImgC,QAAS9G,CAAAA,UAAU,GAAGtgB,KAAAA,CAAAA,CAAAA,CAAAA;AAC/D;AAGAR,IAAAA,gBAAAA,CAAiBlR,KAAK,EAAE;AACtB,eAAOA,UAAU,IAAI,GAAG8L,MAAM,IAAI,CAACwK,kBAAkB,CAAEtW,CAAAA,KAAQ,OAAI,CAACiwD,WAAU,IAAK,IAAI,CAACC,WAAW,CAAC;AACtG;AAEA15C,IAAAA,gBAAAA,CAAiB8iB,KAAK,EAAE;QACtB,OAAO,IAAI,CAAC22B,WAAW,GAAG,IAAI,CAACv2B,kBAAkB,CAACJ,KAAAA,CAAAA,GAAS,IAAI,CAAC42B,WAAW;AAC7E;AACF;;AC3CA,MAAM4C,aAAah/C,CAAAA,CAAAA,GAAKpb,IAAKoE,CAAAA,KAAK,CAACi2D,8DAAMj/C,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACzC,MAAMk/C,cAAAA,GAAiB,CAACl/C,CAAGm/C,EAAAA,CAAAA,GAAMv6D,KAAK+pB,GAAG,CAAC,EAAIqwC,EAAAA,UAAAA,CAAWh/C,CAAKm/C,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAE9D,SAASC,OAAAA,CAAQC,OAAO,EAAE;AACxB,UAAMz1D,SAASy1D,OAAWz6D,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,IAAIqwC,UAAWK,CAAAA,OAAAA,CAAAA,CAAAA,CAAAA;AAClD,WAAOz1D,MAAW;AACpB;AAEA,SAAS01D,MAAMz6D,GAAG,EAAEmC,GAAG,EAAEu4D,QAAQ,EAAE;AACjC,UAAMC,SAAY56D,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,EAAI4wC,EAAAA,QAAAA,CAAAA,CAAAA;AAC/B,UAAMz6D,KAAQF,GAAAA,IAAAA,CAAKoE,KAAK,CAACnE,GAAM26D,GAAAA,SAAAA,CAAAA,CAAAA;AAC/B,UAAM3yD,GAAMjI,GAAAA,IAAAA,CAAK03B,IAAI,CAACt1B,GAAMw4D,GAAAA,SAAAA,CAAAA,CAAAA;AAC5B,WAAO3yD,GAAM/H,GAAAA,KAAAA,CAAAA;AACf;AAEA,SAAS26D,QAAS56D,CAAAA,GAAG,EAAEmC,GAAG,EAAE;AAC1B,UAAM8Q,QAAQ9Q,GAAMnC,GAAAA,GAAAA,CAAAA;AACpB,QAAI06D,WAAWP,UAAWlnD,CAAAA,KAAAA,CAAAA,CAAAA;AAC1B,UAAOwnD,KAAMz6D,CAAAA,GAAAA,EAAKmC,GAAKu4D,EAAAA,QAAAA,CAAAA,GAAY,EAAI;AACrCA,QAAAA,QAAAA,EAAAA,CAAAA;AACF;AACA,UAAOD,KAAMz6D,CAAAA,GAAAA,EAAKmC,GAAKu4D,EAAAA,QAAAA,CAAAA,GAAY,EAAI;AACrCA,QAAAA,QAAAA,EAAAA,CAAAA;AACF;AACA,WAAO36D,IAAKC,CAAAA,GAAG,CAAC06D,QAAAA,EAAUP,UAAWn6D,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AACvC;AASA,UAAS03D,cAAcC,iBAAiB,EAAE,EAAC33D,GAAG,GAAEmC,GAAG,GAAC,EAAE;IACpDnC,GAAMq7B,GAAAA,6DAAAA,CAAgBs8B,iBAAkB33D,CAAAA,GAAG,EAAEA,GAAAA,CAAAA,CAAAA;AAC7C,UAAMwY,QAAQ,EAAE;AAChB,UAAMqiD,SAASV,UAAWn6D,CAAAA,GAAAA,CAAAA,CAAAA;IAC1B,IAAI86D,GAAAA,GAAMF,SAAS56D,GAAKmC,EAAAA,GAAAA,CAAAA,CAAAA;IACxB,IAAI21D,SAAAA,GAAYgD,GAAM,OAAI/6D,IAAK+pB,CAAAA,GAAG,CAAC,IAAI/pB,IAAKuY,CAAAA,GAAG,CAACwiD,GAAAA,CAAAA,CAAAA,GAAQ,CAAC;AACzD,UAAMnB,QAAW55D,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,EAAIgxC,EAAAA,GAAAA,CAAAA,CAAAA;IAC9B,MAAMtgD,IAAAA,GAAOqgD,SAASC,GAAM/6D,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,IAAI+wC,UAAU,CAAC;IACpD,MAAM56D,KAAAA,GAAQF,KAAK+2B,KAAK,CAAC,CAAC92B,GAAAA,GAAMwa,IAAG,IAAKs9C,SAAaA,CAAAA,GAAAA,SAAAA,CAAAA;IACrD,MAAMn8C,MAAAA,GAAS5b,IAAKoE,CAAAA,KAAK,CAAEnE,CAAAA,GAAAA,GAAMwa,IAAG,IAAKm/C,QAAW,SAAMA,QAAW;AACrE,QAAIoB,WAAch7D,GAAAA,IAAAA,CAAKoE,KAAK,CAAC,CAAClE,KAAQ0b,GAAAA,MAAK,IAAK5b,IAAAA,CAAK+pB,GAAG,CAAC,EAAIgxC,EAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAC7D,QAAIzzD,QAAQg0B,6DAAgBs8B,CAAAA,iBAAAA,CAAkB33D,GAAG,EAAED,IAAAA,CAAK+2B,KAAK,CAAEtc,CAAAA,IAAOmB,GAAAA,MAAAA,GAASo/C,cAAch7D,IAAK+pB,CAAAA,GAAG,CAAC,EAAIgxC,EAAAA,GAAAA,CAAG,IAAKhD,SAAaA,CAAAA,GAAAA,SAAAA,CAAAA,CAAAA;AAC/H,UAAOzwD,QAAQlF,GAAK;AAClBqW,QAAAA,KAAAA,CAAM3W,IAAI,CAAC;AAACwF,YAAAA,KAAAA;AAAOgvB,YAAAA,KAAAA,EAAOkkC,OAAQlzD,CAAAA,KAAAA,CAAAA;AAAQ0zD,YAAAA,WAAAA;AAAW;AACrD,YAAIA,eAAe,EAAI;YACrBA,WAAcA,GAAAA,WAAAA,GAAc,EAAK,QAAK,EAAE;SACnC;AACLA,YAAAA,WAAAA,EAAAA,CAAAA;SACD;AACD,YAAIA,eAAe,EAAI;AACrBD,YAAAA,GAAAA,EAAAA,CAAAA;YACAC,WAAc;YACdjD,SAAYgD,GAAAA,GAAAA,IAAO,CAAI,OAAIhD,SAAS;SACrC;AACDzwD,QAAAA,KAAAA,GAAQtH,IAAK+2B,CAAAA,KAAK,CAAEtc,CAAAA,IAAOmB,GAAAA,MAAAA,GAASo/C,WAAch7D,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,EAAIgxC,EAAAA,GAAAA,CAAG,IAAKhD,SAAaA,CAAAA,GAAAA,SAAAA,CAAAA;AACtF;AACA,UAAMkD,QAAW3/B,GAAAA,6DAAAA,CAAgBs8B,iBAAkBx1D,CAAAA,GAAG,EAAEkF,KAAAA,CAAAA,CAAAA;AACxDmR,IAAAA,KAAAA,CAAM3W,IAAI,CAAC;QAACwF,KAAO2zD,EAAAA,QAAAA;AAAU3kC,QAAAA,KAAAA,EAAOkkC,OAAQS,CAAAA,QAAAA,CAAAA;AAAWD,QAAAA,WAAAA;AAAW;IAElE,OAAOviD,KAAAA,CAAAA;AACT;AAEe,MAAMyiD,gBAAyBlhC,SAAAA,KAAAA,CAAAA;AAE5C,WAAOjvB,KAAK,aAAc;AAIzB,CACD,OAAO9E,QAAW;QAChBwS,KAAO;YACLolB,QAAUo8B,EAAAA,0DAAAA,CAAMC,UAAU,CAACiB,WAAW;YACtC7kC,KAAO;AACLC,gBAAAA,OAAAA,EAAS,IAAI;AACf;AACF;KACA;AAGF33B,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;AACf,aAAK,CAACA,GAAAA,CAAAA,CAAAA;AAEN,SACA,IAAI,CAACvD,KAAK,GAAGhB,SAAAA,CAAAA;AACb,SACA,IAAI,CAAC+I,GAAG,GAAG/I,SAAAA,CAAAA;AACX,SACA,IAAI,CAACq4D,WAAW,GAAGr4D,SAAAA,CAAAA;QACnB,IAAI,CAACs4D,WAAW,GAAG;AACrB;IAEAxlD,KAAM3E,CAAAA,GAAG,EAAE/D,KAAK,EAAE;QAChB,MAAMhC,KAAAA,GAAQ8xD,gBAAgBrxC,SAAS,CAAC/V,KAAK,CAAC68C,KAAK,CAAC,IAAI,EAAE;AAACxhD,YAAAA,GAAAA;AAAK/D,YAAAA,KAAAA;AAAM;AACtE,YAAIhC,UAAU,CAAG;YACf,IAAI,CAAC8zD,KAAK,GAAG,IAAI;YACjB,OAAOl8D,SAAAA,CAAAA;SACR;AACD,eAAO4K,6DAASxC,CAAAA,KAAAA,CAAAA,IAAUA,KAAQ,OAAIA,QAAQ,IAAI;AACpD;IAEA+0B,mBAAsB;QACpB,MAAM,EAACp8B,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI,CAACiR,SAAS,CAAC,IAAI;QAEtC,IAAI,CAACpT,GAAG,GAAG6J,6DAAS7J,CAAAA,GAAAA,CAAAA,GAAOD,KAAKoC,GAAG,CAAC,CAAGnC,EAAAA,GAAAA,CAAAA,GAAO,IAAI;QAClD,IAAI,CAACmC,GAAG,GAAG0H,6DAAS1H,CAAAA,GAAAA,CAAAA,GAAOpC,KAAKoC,GAAG,CAAC,CAAGA,EAAAA,GAAAA,CAAAA,GAAO,IAAI;AAElD,YAAI,IAAI,CAACwE,OAAO,CAACmV,WAAW,EAAE;YAC5B,IAAI,CAACq/C,KAAK,GAAG,IAAI;SAClB;AAID,YAAI,IAAI,CAACA,KAAK,IAAI,IAAI,CAACn7D,GAAG,KAAK,IAAI,CAAC86B,aAAa,IAAI,CAACjxB,6DAAAA,CAAS,IAAI,CAAC+wB,QAAQ,CAAG;YAC7E,IAAI,CAAC56B,GAAG,GAAGA,GAAAA,KAAQq6D,eAAe,IAAI,CAACr6D,GAAG,EAAE,CAAKq6D,CAAAA,GAAAA,cAAAA,CAAe,IAAI,CAACr6D,GAAG,EAAE,CAAC,KAAKq6D,eAAe,IAAI,CAACr6D,GAAG,EAAE,CAAE;SAC5G;AAED,YAAI,CAACq5D,sBAAsB;AAC7B;IAEAA,sBAAyB;QACvB,MAAM,EAACruD,aAAYC,UAAAA,GAAW,GAAG,IAAI,CAACF,aAAa;QACnD,IAAI/K,GAAAA,GAAM,IAAI,CAACA,GAAG;QAClB,IAAImC,GAAAA,GAAM,IAAI,CAACA,GAAG;AAElB,cAAMm3D,SAASn+C,CAAAA,CAAAA,GAAMnb,GAAMgL,GAAAA,UAAAA,GAAahL,MAAMmb,CAAC;AAC/C,cAAMo+C,SAASp+C,CAAAA,CAAAA,GAAMhZ,GAAM8I,GAAAA,UAAAA,GAAa9I,MAAMgZ,CAAC;AAE/C,YAAInb,QAAQmC,GAAK;AACf,gBAAInC,OAAO,CAAG;gBACZs5D,MAAO;gBACPC,MAAO;aACF;gBACLD,MAAOe,CAAAA,cAAAA,CAAer6D,KAAK,CAAC;gBAC5Bu5D,MAAOc,CAAAA,cAAAA,CAAel4D,KAAK,CAAC;aAC7B;SACF;AACD,YAAInC,OAAO,CAAG;YACZs5D,MAAOe,CAAAA,cAAAA,CAAel4D,KAAK,CAAC;SAC7B;AACD,YAAIA,OAAO,CAAG;YAEZo3D,MAAOc,CAAAA,cAAAA,CAAer6D,KAAK,CAAC;SAC7B;QAED,IAAI,CAACA,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACmC,GAAG,GAAGA,GAAAA,CAAAA;AACb;IAEAq6B,UAAa;QACX,MAAM10B,IAAAA,GAAO,IAAI,CAACnB,OAAO;AAEzB,cAAMgxD,iBAAoB;YACxB33D,GAAK,MAAI,CAAC46B,QAAQ;YAClBz4B,GAAK,MAAI,CAACw4B,QAAQ;AACpB;QACA,MAAMniB,KAAAA,GAAQk/C,aAAcC,CAAAA,iBAAAA,EAAmB,IAAI;QAInD,IAAI7vD,IAAAA,CAAKq4C,MAAM,KAAK,OAAS;YAC3B2Z,8DAAmBthD,CAAAA,KAAAA,EAAO,IAAI,EAAE;SACjC;QAED,IAAI1Q,IAAAA,CAAKC,OAAO,EAAE;AAChByQ,YAAAA,KAAAA,CAAMzQ,OAAO;AAEb,gBAAI,CAAC9H,KAAK,GAAG,IAAI,CAACkC,GAAG;AACrB,gBAAI,CAAC6F,GAAG,GAAG,IAAI,CAAChI,GAAG;SACd;AACL,gBAAI,CAACC,KAAK,GAAG,IAAI,CAACD,GAAG;AACrB,gBAAI,CAACgI,GAAG,GAAG,IAAI,CAAC7F,GAAG;SACpB;QAED,OAAOqW,KAAAA,CAAAA;AACT;AAMA3E,CAAAA,gBAAAA,CAAiBxM,KAAK,EAAE;QACtB,OAAOA,KAAAA,KAAUpI,YACb,GACA+kB,GAAAA,6DAAAA,CAAa3c,OAAO,IAAI,CAAClI,KAAK,CAACwH,OAAO,CAACsd,MAAM,EAAE,IAAI,CAACtd,OAAO,CAAC6R,KAAK,CAACyP,MAAM,CAAC;AAC/E;AAIA,CACAtiB,SAAY;QACV,MAAM1F,KAAAA,GAAQ,IAAI,CAACD,GAAG;AAEtB,aAAK,CAAC2F,SAAS;QAEf,IAAI,CAAC2xD,WAAW,GAAG8C,8DAAMn6D,CAAAA,KAAAA,CAAAA,CAAAA;QACzB,IAAI,CAACs3D,WAAW,GAAG6C,8DAAAA,CAAM,IAAI,CAACj4D,GAAG,IAAIi4D,8DAAMn6D,CAAAA,KAAAA,CAAAA,CAAAA;AAC7C;AAEAsY,IAAAA,gBAAAA,CAAiBlR,KAAK,EAAE;QACtB,IAAIA,KAAAA,KAAUpI,SAAaoI,IAAAA,KAAAA,KAAU,CAAG;YACtCA,KAAQ,OAAI,CAACrH,GAAG;SACjB;AACD,YAAIqH,KAAU,SAAI,IAAI0V,KAAAA,CAAM1V,KAAQ;YAClC,OAAO8L,GAAAA,CAAAA;SACR;QACD,OAAO,IAAI,CAACwK,kBAAkB,CAACtW,UAAU,IAAI,CAACrH,GAAG,GAC7C,IACA,CAACo6D,8DAAAA,CAAM/yD,SAAS,IAAI,CAACiwD,WAAW,IAAI,IAAI,CAACC,WAAW;AAC1D;AAEA15C,IAAAA,gBAAAA,CAAiB8iB,KAAK,EAAE;AACtB,cAAMC,OAAU,OAAI,CAACG,kBAAkB,CAACJ,KAAAA,CAAAA,CAAAA;QACxC,OAAO5gC,IAAAA,CAAK+pB,GAAG,CAAC,EAAI,MAAI,CAACwtC,WAAW,GAAG12B,OAAAA,GAAU,IAAI,CAAC22B,WAAW;AACnE;AACF;;ACzNA,SAAS6D,qBAAAA,CAAsBtzD,IAAI,EAAE;IACnC,MAAMiuB,QAAAA,GAAWjuB,KAAK0Q,KAAK;AAE3B,QAAIud,QAAShQ,CAAAA,OAAO,IAAIje,IAAAA,CAAKie,OAAO,EAAE;QACpC,MAAMqJ,OAAAA,GAAUO,6DAAUoG,CAAAA,QAAAA,CAASoO,eAAe;AAClD,eAAOt0B,6DAAekmB,CAAAA,QAAAA,CAASmD,IAAI,IAAInD,SAASmD,IAAI,CAAC5xB,IAAI,EAAEtB,yDAAQA,CAACkzB,IAAI,CAAC5xB,IAAI,IAAI8nB,QAAQ3S,MAAM;KAChG;IACD,OAAO;AACT;AAEA,SAAS4+C,iBAAiBltD,GAAG,EAAE+qB,IAAI,EAAEtlB,KAAK,EAAE;IAC1CA,KAAQtN,GAAAA,6DAAAA,CAAQsN,SAASA,KAAQ;AAACA,QAAAA,KAAAA;AAAM;IACxC,OAAO;AACLqa,QAAAA,CAAAA,EAAGqtC,8DAAantD,CAAAA,GAAAA,EAAK+qB,IAAKqH,CAAAA,MAAM,EAAE3sB,KAAAA,CAAAA;AAClCua,QAAAA,CAAAA,EAAGva,KAAMhT,CAAAA,MAAM,GAAGs4B,IAAAA,CAAKG,UAAU;AACnC;AACF;AAEA,SAASkiC,eAAAA,CAAgB17C,KAAK,EAAE4L,GAAG,EAAEnkB,IAAI,EAAEtH,GAAG,EAAEmC,GAAG,EAAE;IACnD,IAAI0d,KAAAA,KAAU7f,GAAO6f,IAAAA,KAAAA,KAAU1d,GAAK;QAClC,OAAO;AACLlC,YAAAA,KAAAA,EAAOwrB,MAAOnkB,IAAO;AACrBU,YAAAA,GAAAA,EAAKyjB,MAAOnkB,IAAO;AACrB;AACF,WAAO,IAAIuY,KAAAA,GAAQ7f,GAAO6f,IAAAA,KAAAA,GAAQ1d,GAAK;QACrC,OAAO;AACLlC,YAAAA,KAAAA,EAAOwrB,GAAMnkB,GAAAA,IAAAA;YACbU,GAAKyjB,EAAAA,GAAAA;AACP;KACD;IAED,OAAO;QACLxrB,KAAOwrB,EAAAA,GAAAA;AACPzjB,QAAAA,GAAAA,EAAKyjB,GAAMnkB,GAAAA,IAAAA;AACb;AACF;AAKA,UAASk0D,kBAAmB5zD,CAAAA,KAAK,EAAE;AA8BjC,UAAMoT,IAAO;AACXlS,QAAAA,CAAAA,EAAGlB,MAAMa,IAAI,GAAGb,KAAM+lD,CAAAA,QAAQ,CAACllD,IAAI;AACnCG,QAAAA,CAAAA,EAAGhB,MAAMW,KAAK,GAAGX,KAAM+lD,CAAAA,QAAQ,CAACplD,KAAK;AACrCI,QAAAA,CAAAA,EAAGf,MAAMU,GAAG,GAAGV,KAAM+lD,CAAAA,QAAQ,CAACrlD,GAAG;AACjCO,QAAAA,CAAAA,EAAGjB,MAAMY,MAAM,GAAGZ,KAAM+lD,CAAAA,QAAQ,CAACnlD,MAAM;AACzC;AACA,UAAMizD,MAAS31D,GAAAA,MAAAA,CAAOyB,MAAM,CAAC,EAAIyT,EAAAA,IAAAA,CAAAA,CAAAA;AACjC,UAAMojB,aAAa,EAAE;AACrB,UAAMhP,UAAU,EAAE;AAClB,UAAMssC,UAAa9zD,GAAAA,KAAAA,CAAM+zD,YAAY,CAAC/6D,MAAM;AAC5C,UAAMg7D,cAAiBh0D,GAAAA,KAAAA,CAAMjB,OAAO,CAACsf,WAAW;AAChD,UAAM41C,kBAAkBD,cAAeE,CAAAA,iBAAiB,GAAG17C,yDAAAA,GAAKs7C,aAAa,CAAC;AAE9E,QAAK,IAAI76D,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI66D,YAAY76D,CAAK;AACnC,cAAMiH,OAAO8zD,cAAe1gC,CAAAA,UAAU,CAACtzB,KAAAA,CAAMm0D,oBAAoB,CAACl7D,CAAAA,CAAAA,CAAAA,CAAAA;AAClEuuB,QAAAA,OAAO,CAACvuB,CAAAA,CAAE,GAAGiH,IAAAA,CAAKsnB,OAAO;QACzB,MAAMjI,aAAAA,GAAgBvf,KAAMo0D,CAAAA,gBAAgB,CAACn7D,CAAAA,EAAG+G,KAAMq0D,CAAAA,WAAW,GAAG7sC,OAAO,CAACvuB,CAAAA,CAAE,EAAEg7D,eAAAA,CAAAA,CAAAA;QAChF,MAAMK,MAAAA,GAAS/iC,8DAAOrxB,CAAAA,IAAAA,CAAKoxB,IAAI;QAC/B,MAAM00B,QAAAA,GAAWyN,iBAAiBzzD,KAAMuG,CAAAA,GAAG,EAAE+tD,MAAQt0D,EAAAA,KAAAA,CAAM+zD,YAAY,CAAC96D,CAAE;QAC1Eu9B,UAAU,CAACv9B,EAAE,GAAG+sD,QAAAA,CAAAA;AAEhB,cAAM1uB,YAAegmB,GAAAA,8DAAAA,CAAgBt9C,KAAM+e,CAAAA,aAAa,CAAC9lB,CAAKg7D,CAAAA,GAAAA,eAAAA,CAAAA,CAAAA;AAC9D,cAAMh8C,KAAQ9f,GAAAA,IAAAA,CAAK+2B,KAAK,CAAC8H,6DAAUM,CAAAA,YAAAA,CAAAA,CAAAA,CAAAA;QACnC,MAAMi9B,OAAAA,GAAUZ,gBAAgB17C,KAAOsH,EAAAA,aAAAA,CAAc/e,CAAC,EAAEwlD,QAAAA,CAAS3/B,CAAC,EAAE,CAAG;QACvE,MAAMmuC,OAAAA,GAAUb,gBAAgB17C,KAAOsH,EAAAA,aAAAA,CAAc9e,CAAC,EAAEulD,QAAAA,CAASz/B,CAAC,EAAE,EAAI;QACxEkuC,YAAaZ,CAAAA,MAAAA,EAAQzgD,IAAMkkB,EAAAA,YAAAA,EAAci9B,OAASC,EAAAA,OAAAA,CAAAA,CAAAA;AACpD;IAEAx0D,KAAM00D,CAAAA,cAAc,CAClBthD,IAAAA,CAAKlS,CAAC,GAAG2yD,OAAO3yD,CAAC,EACjB2yD,MAAO7yD,CAAAA,CAAC,GAAGoS,IAAAA,CAAKpS,CAAC,EACjBoS,IAAAA,CAAKrS,CAAC,GAAG8yD,MAAO9yD,CAAAA,CAAC,EACjB8yD,MAAO5yD,CAAAA,CAAC,GAAGmS,IAAAA,CAAKnS,CAAC;AAInBjB,IAAAA,KAAAA,CAAM20D,gBAAgB,GAAGC,oBAAqB50D,CAAAA,KAAAA,EAAOw2B,UAAYhP,EAAAA,OAAAA,CAAAA,CAAAA;AACnE;AAEA,SAASitC,YAAAA,CAAaZ,MAAM,EAAEzgD,IAAI,EAAE6E,KAAK,EAAEs8C,OAAO,EAAEC,OAAO,EAAE;AAC3D,UAAM38C,MAAM1f,IAAKuY,CAAAA,GAAG,CAACvY,IAAAA,CAAK0f,GAAG,CAACI,KAAAA,CAAAA,CAAAA,CAAAA;AAC9B,UAAMN,MAAMxf,IAAKuY,CAAAA,GAAG,CAACvY,IAAAA,CAAKwf,GAAG,CAACM,KAAAA,CAAAA,CAAAA,CAAAA;AAC9B,QAAIzX,CAAI;AACR,QAAIC,CAAI;AACR,QAAI8zD,OAAQl8D,CAAAA,KAAK,GAAG+a,IAAAA,CAAKlS,CAAC,EAAE;QAC1BV,CAAI,GAAC4S,CAAAA,IAAKlS,CAAAA,CAAC,GAAGqzD,OAAQl8D,CAAAA,KAAK,IAAIwf,GAAAA,CAAAA;QAC/Bg8C,MAAO3yD,CAAAA,CAAC,GAAG/I,IAAAA,CAAKC,GAAG,CAACy7D,OAAO3yD,CAAC,EAAEkS,IAAKlS,CAAAA,CAAC,GAAGV,CAAAA,CAAAA,CAAAA;AACzC,WAAO,IAAI+zD,OAAQn0D,CAAAA,GAAG,GAAGgT,IAAAA,CAAKpS,CAAC,EAAE;QAC/BR,CAAI,GAAC+zD,CAAAA,OAAQn0D,CAAAA,GAAG,GAAGgT,IAAKpS,CAAAA,CAAC,IAAI6W,GAAAA,CAAAA;QAC7Bg8C,MAAO7yD,CAAAA,CAAC,GAAG7I,IAAAA,CAAKoC,GAAG,CAACs5D,OAAO7yD,CAAC,EAAEoS,IAAKpS,CAAAA,CAAC,GAAGR,CAAAA,CAAAA,CAAAA;KACxC;AACD,QAAIg0D,OAAQn8D,CAAAA,KAAK,GAAG+a,IAAAA,CAAKrS,CAAC,EAAE;QAC1BN,CAAI,GAAC2S,CAAAA,IAAKrS,CAAAA,CAAC,GAAGyzD,OAAQn8D,CAAAA,KAAK,IAAIsf,GAAAA,CAAAA;QAC/Bk8C,MAAO9yD,CAAAA,CAAC,GAAG5I,IAAAA,CAAKC,GAAG,CAACy7D,OAAO9yD,CAAC,EAAEqS,IAAKrS,CAAAA,CAAC,GAAGN,CAAAA,CAAAA,CAAAA;AACzC,WAAO,IAAI+zD,OAAQp0D,CAAAA,GAAG,GAAGgT,IAAAA,CAAKnS,CAAC,EAAE;QAC/BR,CAAI,GAAC+zD,CAAAA,OAAQp0D,CAAAA,GAAG,GAAGgT,IAAKnS,CAAAA,CAAC,IAAI0W,GAAAA,CAAAA;QAC7Bk8C,MAAO5yD,CAAAA,CAAC,GAAG9I,IAAAA,CAAKoC,GAAG,CAACs5D,OAAO5yD,CAAC,EAAEmS,IAAKnS,CAAAA,CAAC,GAAGR,CAAAA,CAAAA,CAAAA;KACxC;AACH;AAEA,SAASo0D,qBAAqB70D,KAAK,EAAEyB,KAAK,EAAEqzD,QAAQ,EAAE;IACpD,MAAMC,aAAAA,GAAgB/0D,MAAMq0D,WAAW;IACvC,MAAM,EAACW,QAAOf,eAAAA,GAAiBzsC,OAAO,GAAE9nB,IAAI,GAAC,GAAGo1D,QAAAA,CAAAA;AAChD,UAAMG,qBAAqBj1D,KAAMo0D,CAAAA,gBAAgB,CAAC3yD,KAAOszD,EAAAA,aAAAA,GAAgBC,QAAQxtC,OAASysC,EAAAA,eAAAA,CAAAA,CAAAA;IAC1F,MAAMh8C,KAAAA,GAAQ9f,KAAK+2B,KAAK,CAAC8H,6DAASA,CAACsmB,8DAAgB2X,CAAAA,kBAAAA,CAAmBh9C,KAAK,GAAGK,yDAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC9E,UAAM7X,IAAIy0D,SAAUD,CAAAA,kBAAAA,CAAmBx0D,CAAC,EAAEf,IAAAA,CAAK6mB,CAAC,EAAEtO,KAAAA,CAAAA,CAAAA;AAClD,UAAMsjB,YAAY45B,oBAAqBl9C,CAAAA,KAAAA,CAAAA,CAAAA;AACvC,UAAMpX,OAAOu0D,gBAAiBH,CAAAA,kBAAAA,CAAmBz0D,CAAC,EAAEd,IAAAA,CAAK2mB,CAAC,EAAEkV,SAAAA,CAAAA,CAAAA;IAC5D,OAAO;AAELsQ,QAAAA,OAAAA,EAAS,IAAI;AAGbrrC,QAAAA,CAAAA,EAAGy0D,mBAAmBz0D,CAAC;AACvBC,QAAAA,CAAAA;AAGA86B,QAAAA,SAAAA;AAGA16B,QAAAA,IAAAA;QACAH,GAAKD,EAAAA,CAAAA;QACLE,KAAOE,EAAAA,IAAAA,GAAOnB,KAAK2mB,CAAC;QACpBzlB,MAAQH,EAAAA,CAAAA,GAAIf,KAAK6mB,CAAC;AACpB;AACF;AAEA,SAAS8uC,eAAgBl8D,CAAAA,IAAI,EAAEkT,IAAI,EAAE;AACnC,QAAI,CAACA,IAAM;AACT,eAAO,IAAI;KACZ;IACD,MAAM,EAACxL,OAAMH,GAAAA,GAAKC,KAAK,GAAEC,MAAM,GAAC,GAAGzH,IAAAA,CAAAA;AACnC,UAAMm8D,eAAe9yC,6DAAe;QAAChiB,CAAGK,EAAAA,IAAAA;QAAMJ,CAAGC,EAAAA,GAAAA;AAAG,OAAG2L,SAASmW,6DAAe;QAAChiB,CAAGK,EAAAA,IAAAA;QAAMJ,CAAGG,EAAAA,MAAAA;AAAM,OAAGyL,SACnGmW,6DAAe;QAAChiB,CAAGG,EAAAA,KAAAA;QAAOF,CAAGC,EAAAA,GAAAA;AAAG,OAAG2L,SAASmW,6DAAe;QAAChiB,CAAGG,EAAAA,KAAAA;QAAOF,CAAGG,EAAAA,MAAAA;KAASyL,EAAAA,IAAAA,CAAAA,CAAAA;AACpF,WAAO,CAACipD,YAAAA,CAAAA;AACV;AAEA,SAASV,qBAAqB50D,KAAK,EAAEw2B,UAAU,EAAEhP,OAAO,EAAE;AACxD,UAAMzuB,QAAQ,EAAE;AAChB,UAAM+6D,UAAa9zD,GAAAA,KAAAA,CAAM+zD,YAAY,CAAC/6D,MAAM;IAC5C,MAAMkH,IAAAA,GAAOF,MAAMjB,OAAO;AAC1B,UAAM,EAACm1D,iBAAiB,GAAE/1C,UAAQ,GAAGje,KAAKme,WAAW;AACrD,UAAMy2C,QAAW;AACfE,QAAAA,KAAAA,EAAOxB,sBAAsBtzD,IAAQ;QACrC+zD,eAAiBC,EAAAA,iBAAAA,GAAoB17C,yDAAKs7C,GAAAA,UAAAA,GAAa,CAAC;AAC1D;IACA,IAAIznD,IAAAA,CAAAA;AAEJ,QAAK,IAAIpT,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI66D,YAAY76D,CAAK;AACnC67D,QAAAA,QAAAA,CAASttC,OAAO,GAAGA,OAAO,CAACvuB,CAAE;AAC7B67D,QAAAA,QAAAA,CAASp1D,IAAI,GAAG82B,UAAU,CAACv9B,CAAE;QAE7B,MAAME,IAAAA,GAAO07D,oBAAqB70D,CAAAA,KAAAA,EAAO/G,CAAG67D,EAAAA,QAAAA,CAAAA,CAAAA;AAC5C/7D,QAAAA,KAAAA,CAAMkB,IAAI,CAACd,IAAAA,CAAAA,CAAAA;AACX,YAAIglB,YAAY,MAAQ;YACtBhlB,IAAK0yC,CAAAA,OAAO,GAAGwpB,eAAAA,CAAgBl8D,IAAMkT,EAAAA,IAAAA,CAAAA,CAAAA;YACrC,IAAIlT,IAAAA,CAAK0yC,OAAO,EAAE;gBAChBx/B,IAAOlT,GAAAA,IAAAA,CAAAA;aACR;SACF;AACH;IACA,OAAOJ,KAAAA,CAAAA;AACT;AAEA,SAASo8D,oBAAAA,CAAqBl9C,KAAK,EAAE;IACnC,IAAIA,KAAAA,KAAU,CAAKA,IAAAA,KAAAA,KAAU,GAAK;QAChC,OAAO;KACF,UAAIA,QAAQ,GAAK;QACtB,OAAO;KACR;IAED,OAAO;AACT;AAEA,SAASm9C,iBAAiB50D,CAAC,EAAE6lB,CAAC,EAAE6J,KAAK,EAAE;AACrC,QAAIA,UAAU,OAAS;QACrB1vB,CAAK6lB,IAAAA,CAAAA,CAAAA;KACA,UAAI6J,UAAU,QAAU;AAC7B1vB,QAAAA,CAAAA,IAAM6lB,CAAI;KACX;IACD,OAAO7lB,CAAAA,CAAAA;AACT;AAEA,SAAS00D,UAAUz0D,CAAC,EAAE8lB,CAAC,EAAEtO,KAAK,EAAE;IAC9B,IAAIA,KAAAA,KAAU,EAAMA,IAAAA,KAAAA,KAAU,GAAK;AACjCxX,QAAAA,CAAAA,IAAM8lB,CAAI;AACZ,WAAO,IAAItO,KAAAA,GAAQ,GAAOA,IAAAA,KAAAA,GAAQ,EAAI;QACpCxX,CAAK8lB,IAAAA,CAAAA,CAAAA;KACN;IACD,OAAO9lB,CAAAA,CAAAA;AACT;AAEA,SAAS80D,kBAAkBhvD,GAAG,EAAErG,IAAI,EAAE/G,IAAI,EAAE;IAC1C,MAAM,EAAC0H,OAAMH,GAAAA,GAAKC,KAAK,GAAEC,MAAM,GAAC,GAAGzH,IAAAA,CAAAA;IACnC,MAAM,EAACqjC,aAAa,GAAC,GAAGt8B,IAAAA,CAAAA;IAExB,IAAI,CAACkR,6DAAaA,CAACorB,aAAgB;QACjC,MAAM6T,YAAAA,GAAe0H,8DAAc73C,CAAAA,IAAAA,CAAKmwC,YAAY;QACpD,MAAM7oB,OAAAA,GAAUO,6DAAU7nB,CAAAA,IAAAA,CAAKq8B,eAAe;AAC9Ch2B,QAAAA,GAAAA,CAAImT,SAAS,GAAG8iB,aAAAA,CAAAA;QAEhB,MAAMg5B,YAAAA,GAAe30D,IAAO2mB,GAAAA,OAAAA,CAAQ3mB,IAAI;QACxC,MAAM40D,WAAAA,GAAc/0D,GAAM8mB,GAAAA,OAAAA,CAAQ9mB,GAAG;AACrC,cAAMg1D,aAAgB/0D,GAAAA,KAAAA,GAAQE,IAAO2mB,GAAAA,OAAAA,CAAQ1S,KAAK;AAClD,cAAM6gD,cAAiB/0D,GAAAA,MAAAA,GAASF,GAAM8mB,GAAAA,OAAAA,CAAQ3S,MAAM;QAEpD,IAAI3W,MAAAA,CAAOW,MAAM,CAACwxC,YAAAA,CAAAA,CAAczN,IAAI,CAACrvB,CAAAA,CAAKA,GAAAA,CAAAA,KAAM,CAAI;AAClDhN,YAAAA,GAAAA,CAAI+2B,SAAS;AACb8b,YAAAA,8DAAAA,CAAmB7yC,GAAK;gBACtB/F,CAAGg1D,EAAAA,YAAAA;gBACH/0D,CAAGg1D,EAAAA,WAAAA;gBACHpvC,CAAGqvC,EAAAA,aAAAA;gBACHnvC,CAAGovC,EAAAA,cAAAA;gBACHl/C,MAAQ45B,EAAAA,YAAAA;AACV;AACA9pC,YAAAA,GAAAA,CAAIiB,IAAI;SACH;AACLjB,YAAAA,GAAAA,CAAIs2B,QAAQ,CAAC24B,YAAcC,EAAAA,WAAAA,EAAaC,aAAeC,EAAAA,cAAAA,CAAAA,CAAAA;SACxD;KACF;AACH;AAEA,SAASC,eAAgB51D,CAAAA,KAAK,EAAEsqD,UAAU,EAAE;IAC1C,MAAM,EAAC/jD,MAAKxH,OAAAA,EAAS,EAACsf,WAAW,GAAC,GAAC,GAAGre,KAAAA,CAAAA;AAEtC,QAAK,IAAI/G,CAAIqxD,GAAAA,UAAAA,GAAa,CAAGrxD,EAAAA,CAAAA,IAAK,GAAGA,CAAK;AACxC,cAAME,IAAO6G,GAAAA,KAAAA,CAAM20D,gBAAgB,CAAC17D,CAAE;QACtC,IAAI,CAACE,IAAK0yC,CAAAA,OAAO,EAAE;YAEjB,SAAS;SACV;AACD,cAAMnR,cAAcrc,WAAYiV,CAAAA,UAAU,CAACtzB,KAAAA,CAAMm0D,oBAAoB,CAACl7D,CAAAA,CAAAA,CAAAA,CAAAA;AACtEs8D,QAAAA,iBAAAA,CAAkBhvD,KAAKm0B,WAAavhC,EAAAA,IAAAA,CAAAA,CAAAA;QACpC,MAAMm7D,MAAAA,GAAS/iC,8DAAOmJ,CAAAA,WAAAA,CAAYpJ,IAAI;AACtC,cAAM,EAAC9wB,CAAC,GAAEC,IAAG86B,SAAAA,GAAU,GAAGpiC,IAAAA,CAAAA;AAE1B6kC,QAAAA,6DAAAA,CACEz3B,GACAvG,EAAAA,KAAAA,CAAM+zD,YAAY,CAAC96D,CAAE,GACrBuH,CACAC,EAAAA,CAAAA,GAAK6zD,MAAO7iC,CAAAA,UAAU,GAAG,GACzB6iC,MACA;AACEn5D,YAAAA,KAAAA,EAAOu/B,YAAYv/B,KAAK;YACxBogC,SAAWA,EAAAA,SAAAA;YACXG,YAAc;AAChB;AAEJ;AACF;AAEA,SAASm6B,cAAAA,CAAe71D,KAAK,EAAEyW,MAAM,EAAE2H,QAAQ,EAAEksC,UAAU,EAAE;IAC3D,MAAM,EAAC/jD,GAAG,GAAC,GAAGvG,KAAAA,CAAAA;AACd,QAAIoe,QAAU;QAEZ7X,GAAI2V,CAAAA,GAAG,CAAClc,KAAM4e,CAAAA,OAAO,EAAE5e,KAAM6e,CAAAA,OAAO,EAAEpI,MAAAA,EAAQ,CAAGc,EAAAA,yDAAAA,CAAAA,CAAAA;KAC5C;AAEL,YAAIgI,aAAgBvf,GAAAA,KAAAA,CAAMo0D,gBAAgB,CAAC,CAAG39C,EAAAA,MAAAA,CAAAA,CAAAA;AAC9ClQ,QAAAA,GAAAA,CAAIg3B,MAAM,CAAChe,aAAAA,CAAc/e,CAAC,EAAE+e,cAAc9e,CAAC;AAE3C,YAAK,IAAIxH,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIqxD,YAAYrxD,CAAK;YACnCsmB,aAAgBvf,GAAAA,KAAAA,CAAMo0D,gBAAgB,CAACn7D,CAAGwd,EAAAA,MAAAA,CAAAA,CAAAA;AAC1ClQ,YAAAA,GAAAA,CAAIi3B,MAAM,CAACje,aAAAA,CAAc/e,CAAC,EAAE+e,cAAc9e,CAAC;AAC7C;KACD;AACH;AAEA,SAASq1D,cAAAA,CAAe91D,KAAK,EAAE+1D,YAAY,EAAEt/C,MAAM,EAAE6zC,UAAU,EAAE5wB,UAAU,EAAE;IAC3E,MAAMnzB,GAAAA,GAAMvG,MAAMuG,GAAG;IACrB,MAAM6X,QAAAA,GAAW23C,aAAa33C,QAAQ;AAEtC,UAAM,EAACjjB,KAAAA,GAAO4e,SAAAA,GAAU,GAAGg8C,YAAAA,CAAAA;IAE3B,IAAK,CAAC33C,QAAAA,IAAY,CAACksC,UAAAA,IAAe,CAACnvD,KAAS,KAAC4e,SAAatD,IAAAA,MAAAA,GAAS,CAAG;AACpE;KACD;AAEDlQ,IAAAA,GAAAA,CAAIq2B,IAAI;AACRr2B,IAAAA,GAAAA,CAAIqT,WAAW,GAAGze,KAAAA,CAAAA;AAClBoL,IAAAA,GAAAA,CAAIwT,SAAS,GAAGA,SAAAA,CAAAA;IAChBxT,GAAI62B,CAAAA,WAAW,CAAC1D,UAAAA,CAAWoB,IAAI;IAC/Bv0B,GAAI82B,CAAAA,cAAc,GAAG3D,UAAAA,CAAWsB,UAAU;AAE1Cz0B,IAAAA,GAAAA,CAAI+2B,SAAS;IACbu4B,cAAe71D,CAAAA,KAAAA,EAAOyW,QAAQ2H,QAAUksC,EAAAA,UAAAA,CAAAA,CAAAA;AACxC/jD,IAAAA,GAAAA,CAAIwpC,SAAS;AACbxpC,IAAAA,GAAAA,CAAIk3B,MAAM;AACVl3B,IAAAA,GAAAA,CAAIu2B,OAAO;AACb;AAEA,SAASk5B,wBAAwB9wD,MAAM,EAAEzD,KAAK,EAAEuK,KAAK,EAAE;AACrD,WAAO7G,6DAAaA,CAACD,MAAQ;AAC3B8G,QAAAA,KAAAA;AACAvK,QAAAA,KAAAA;QACA/J,IAAM;AACR;AACF;AAEe,MAAMu+D,iBAA0B1E,SAAAA,eAAAA,CAAAA;AAE7C,WAAOruD,KAAK,cAAe;AAI1B,CACD,OAAO9E,QAAW;AAChB+f,QAAAA,OAAAA,EAAS,IAAI;AAGb+3C,QAAAA,OAAAA,EAAS,IAAI;QACb50C,QAAU;QAEVpD,UAAY;AACVC,YAAAA,OAAAA,EAAS,IAAI;YACbpE,SAAW;AACX8gB,YAAAA,UAAAA,EAAY,EAAE;YACdE,gBAAkB;AACpB;QAEA/mB,IAAM;AACJoK,YAAAA,QAAAA,EAAU,KAAK;AACjB;QAEA5G,UAAY;QAGZ5G,KAAO;AAELwrB,YAAAA,iBAAAA,EAAmB,IAAI;YAEvBpG,QAAUo8B,EAAAA,0DAAAA,CAAMC,UAAU,CAACC,OAAO;AACpC;QAEAj0C,WAAa;YACXme,aAAenlC,EAAAA,SAAAA;YAGfklC,eAAiB;AAGjBpe,YAAAA,OAAAA,EAAS,IAAI;YAGbmT,IAAM;gBACJ5xB,IAAM;AACR;AAGAs2B,YAAAA,QAAAA,CAAAA,CAAShqB,KAAK,EAAE;gBACd,OAAOA,KAAAA,CAAAA;AACT;YAGAwb,OAAS;AAGT0sC,YAAAA,iBAAAA,EAAmB,KAAK;AAC1B;KACA;AAEF,WAAOrmC,aAAgB;QACrB,kBAAoB;QACpB,mBAAqB;QACrB,aAAe;KACf;AAEF,WAAO/U,WAAc;QACnBoF,UAAY;YACVixC,SAAW;AACb;KACA;AAEFp4D,IAAAA,WAAAA,CAAY6E,GAAG,CAAE;AACf,aAAK,CAACA,GAAAA,CAAAA,CAAAA;AAEN,SACA,IAAI,CAACgjB,OAAO,GAAGvnB,SAAAA,CAAAA;AACf,SACA,IAAI,CAACwnB,OAAO,GAAGxnB,SAAAA,CAAAA;AACf,SACA,IAAI,CAACg9D,WAAW,GAAGh9D,SAAAA,CAAAA;AACnB,SACA,IAAI,CAAC08D,YAAY,GAAG,EAAE;QACtB,IAAI,CAACY,gBAAgB,GAAG,EAAE;AAC5B;IAEAtgC,aAAgB;QAEd,MAAM7M,OAAAA,GAAU,IAAI,CAACu+B,QAAQ,GAAGh+B,6DAASA,CAACyrC,qBAAsB,KAAI,CAACz0D,OAAO,CAAI;QAChF,MAAMsnB,CAAAA,GAAI,IAAI,CAACvR,KAAK,GAAG,IAAI,CAACsG,QAAQ,GAAGoM,OAAAA,CAAQ1S,KAAK;QACpD,MAAMyR,CAAAA,GAAI,IAAI,CAAC1R,MAAM,GAAG,IAAI,CAACwG,SAAS,GAAGmM,OAAAA,CAAQ3S,MAAM;AACvD,YAAI,CAAC+J,OAAO,GAAGzmB,IAAAA,CAAKoE,KAAK,CAAC,IAAI,CAACsE,IAAI,GAAGwlB,CAAI,OAAImB,QAAQ3mB,IAAI;AAC1D,YAAI,CAACge,OAAO,GAAG1mB,IAAAA,CAAKoE,KAAK,CAAC,IAAI,CAACmE,GAAG,GAAG6lB,CAAI,OAAIiB,QAAQ9mB,GAAG;QACxD,IAAI,CAAC2zD,WAAW,GAAGl8D,IAAKoE,CAAAA,KAAK,CAACpE,IAAKC,CAAAA,GAAG,CAACiuB,CAAAA,EAAGE,CAAK;AACjD;IAEAiO,mBAAsB;QACpB,MAAM,EAACp8B,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI,CAACiR,SAAS,CAAC,KAAK;QAEvC,IAAI,CAACpT,GAAG,GAAG6J,6DAAAA,CAAS7J,QAAQ,CAAC+c,KAAAA,CAAM/c,GAAOA,CAAAA,GAAAA,GAAAA,GAAM,CAAC;QACjD,IAAI,CAACmC,GAAG,GAAG0H,6DAAAA,CAAS1H,QAAQ,CAAC4a,KAAAA,CAAM5a,GAAOA,CAAAA,GAAAA,GAAAA,GAAM,CAAC;AAGjD,YAAI,CAACk3D,sBAAsB;AAC7B;AAKA,CACAO,gBAAmB;QACjB,OAAO75D,IAAAA,CAAK03B,IAAI,CAAC,IAAI,CAACwkC,WAAW,GAAGb,qBAAAA,CAAsB,IAAI,CAACz0D,OAAO;AACxE;AAEAg3B,IAAAA,kBAAAA,CAAmBnlB,KAAK,EAAE;AACxB2gD,QAAAA,eAAAA,CAAgBrxC,SAAS,CAAC6V,kBAAkB,CAACv9B,IAAI,CAAC,IAAI,EAAEoY,KAAAA,CAAAA,CAAAA;QAGxD,IAAI,CAACmjD,YAAY,GAAG,IAAI,CAAClpD,SAAS,GAC/B0O,GAAG,CAAC,CAAC9Z,KAAAA,EAAOgC,KAAU;YACrB,MAAMuK,KAAAA,GAAQo2B,6DAAAA,CAAa,IAAI,CAACrjC,OAAO,CAACsf,WAAW,CAAC2X,QAAQ,EAAE;AAACv2B,gBAAAA,KAAAA;AAAOgC,gBAAAA,KAAAA;AAAM,eAAE,IAAI;AAClF,mBAAOuK,KAASA,IAAAA,KAAAA,KAAU,CAAIA,GAAAA,KAAAA,GAAQ,EAAE;SAEzCjH,CAAAA,CAAAA,MAAM,CAAC,CAACwO,CAAGta,EAAAA,CAAAA,GAAM,IAAI,CAAC1B,KAAK,CAACse,iBAAiB,CAAC5c,CAAAA,CAAAA,CAAAA,CAAAA;AACnD;IAEAq8B,GAAM;QACJ,MAAMp1B,IAAAA,GAAO,IAAI,CAACnB,OAAO;AAEzB,YAAImB,KAAKie,OAAO,IAAIje,KAAKme,WAAW,CAACF,OAAO,EAAE;AAC5Cy1C,YAAAA,kBAAAA,CAAmB,IAAI;SAClB;AACL,gBAAI,CAACc,cAAc,CAAC,GAAG,GAAG,CAAG;SAC9B;AACH;AAEAA,IAAAA,cAAAA,CAAeyB,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;QACvE,IAAI,CAAC13C,OAAO,IAAIzmB,IAAKoE,CAAAA,KAAK,CAAC,CAAC45D,YAAeC,GAAAA,aAAY,IAAK;QAC5D,IAAI,CAACv3C,OAAO,IAAI1mB,IAAKoE,CAAAA,KAAK,CAAC,CAAC85D,WAAcC,GAAAA,cAAa,IAAK;AAC5D,YAAI,CAACjC,WAAW,IAAIl8D,IAAKC,CAAAA,GAAG,CAAC,IAAI,CAACi8D,WAAW,GAAG,GAAGl8D,IAAKoC,CAAAA,GAAG,CAAC47D,YAAAA,EAAcC,eAAeC,WAAaC,EAAAA,cAAAA,CAAAA,CAAAA,CAAAA;AACxG;AAEAv3C,IAAAA,aAAAA,CAActd,KAAK,EAAE;QACnB,MAAM80D,eAAAA,GAAkBh/C,yDAAGA,IAAI,IAAI,CAACw8C,YAAY,CAAC/6D,MAAM,IAAI;AAC3D,cAAMwe,aAAa,IAAI,CAACzY,OAAO,CAACyY,UAAU,IAAI;QAE9C,OAAO8lC,8DAAAA,CAAgB77C,KAAQ80D,GAAAA,eAAAA,GAAkB97C,6DAAUjD,CAAAA,UAAAA,CAAAA,CAAAA,CAAAA;AAC7D;AAEA2H,IAAAA,6BAAAA,CAA8B1f,KAAK,EAAE;AACnC,YAAI2R,6DAAaA,CAAC3R,KAAQ;YACxB,OAAO8L,GAAAA,CAAAA;SACR;AAGD,cAAMirD,aAAgB,OAAI,CAACnC,WAAW,IAAI,IAAI,CAAC95D,GAAG,GAAG,IAAI,CAACnC,GAAG,CAAD;AAC5D,YAAI,IAAI,CAAC2G,OAAO,CAACoB,OAAO,EAAE;AACxB,mBAAO,CAAC,IAAI,CAAC5F,GAAG,GAAGkF,KAAI,IAAK+2D,aAAAA,CAAAA;SAC7B;AACD,eAAO,CAAC/2D,KAAAA,GAAQ,IAAI,CAACrH,GAAG,IAAIo+D,aAAAA,CAAAA;AAC9B;AAEAC,IAAAA,6BAAAA,CAA8BvzC,QAAQ,EAAE;AACtC,YAAI9R,6DAAaA,CAAC8R,QAAW;YAC3B,OAAO3X,GAAAA,CAAAA;SACR;AAED,cAAMmrD,iBAAiBxzC,QAAY,QAAI,CAACmxC,WAAW,IAAI,IAAI,CAAC95D,GAAG,GAAG,IAAI,CAACnC,GAAG;AAC1E,eAAO,IAAI,CAAC2G,OAAO,CAACoB,OAAO,GAAG,IAAI,CAAC5F,GAAG,GAAGm8D,cAAiB,OAAI,CAACt+D,GAAG,GAAGs+D,cAAc;AACrF;AAEAvC,IAAAA,oBAAAA,CAAqB1yD,KAAK,EAAE;AAC1B,cAAM4c,WAAc,OAAI,CAAC01C,YAAY,IAAI,EAAE;AAE3C,YAAItyD,KAAS,SAAKA,KAAQ4c,GAAAA,WAAAA,CAAYrlB,MAAM,EAAE;YAC5C,MAAM29D,UAAAA,GAAat4C,WAAW,CAAC5c,KAAM;AACrC,mBAAOu0D,uBAAwB,KAAI,CAAC/rD,UAAU,IAAIxI,KAAOk1D,EAAAA,UAAAA,CAAAA,CAAAA;SAC1D;AACH;AAEAvC,IAAAA,gBAAAA,CAAiB3yD,KAAK,EAAEm1D,kBAAkB,EAAE3C,eAAAA,GAAkB,CAAC,EAAE;AAC/D,cAAMh8C,QAAQ,IAAI,CAAC8G,aAAa,CAACtd,SAAS6W,yDAAU27C,GAAAA,eAAAA,CAAAA;QACpD,OAAO;AACLzzD,YAAAA,CAAAA,EAAGrI,KAAKwf,GAAG,CAACM,SAAS2+C,kBAAqB,OAAI,CAACh4C,OAAO;AACtDne,YAAAA,CAAAA,EAAGtI,KAAK0f,GAAG,CAACI,SAAS2+C,kBAAqB,OAAI,CAAC/3C,OAAO;AACtD5G,YAAAA,KAAAA;AACF;AACF;IAEAuH,wBAAyB/d,CAAAA,KAAK,EAAEhC,KAAK,EAAE;QACrC,OAAO,IAAI,CAAC20D,gBAAgB,CAAC3yD,OAAO,IAAI,CAAC0d,6BAA6B,CAAC1f,KAAAA,CAAAA,CAAAA,CAAAA;AACzE;AAEAo3D,IAAAA,eAAAA,CAAgBp1D,KAAK,EAAE;QACrB,OAAO,IAAI,CAAC+d,wBAAwB,CAAC/d,SAAS,CAAG,MAAI,CAAC23B,YAAY;AACpE;AAEA09B,IAAAA,qBAAAA,CAAsBr1D,KAAK,EAAE;AAC3B,cAAM,EAACZ,IAAAA,GAAMH,GAAAA,GAAKC,KAAK,GAAEC,MAAM,GAAC,GAAG,IAAI,CAAC+zD,gBAAgB,CAAClzD,KAAM;QAC/D,OAAO;AACLZ,YAAAA,IAAAA;AACAH,YAAAA,GAAAA;AACAC,YAAAA,KAAAA;AACAC,YAAAA,MAAAA;AACF;AACF;AAIA,CACA+7B,cAAiB;AACf,cAAM,EAAChjB,eAAAA,GAAiB3F,IAAAA,EAAM,EAACoK,QAAAA,GAAS,GAAC,GAAG,IAAI,CAACrf,OAAO;AACxD,YAAI4a,eAAiB;YACnB,MAAMpT,GAAAA,GAAM,IAAI,CAACA,GAAG;AACpBA,YAAAA,GAAAA,CAAIq2B,IAAI;AACRr2B,YAAAA,GAAAA,CAAI+2B,SAAS;AACbu4B,YAAAA,cAAAA,CAAe,IAAI,EAAE,IAAI,CAAC12C,6BAA6B,CAAC,IAAI,CAACqyC,SAAS,GAAGpzC,QAAU,MAAI,CAAC21C,YAAY,CAAC/6D,MAAM;AAC3GuN,YAAAA,GAAAA,CAAIwpC,SAAS;AACbxpC,YAAAA,GAAAA,CAAImT,SAAS,GAAGC,eAAAA,CAAAA;AAChBpT,YAAAA,GAAAA,CAAIiB,IAAI;AACRjB,YAAAA,GAAAA,CAAIu2B,OAAO;SACZ;AACH;AAIA,CACAE,QAAW;QACT,MAAMz2B,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMrG,IAAAA,GAAO,IAAI,CAACnB,OAAO;AACzB,cAAM,EAACmf,UAAU,GAAElK,OAAM6J,MAAAA,GAAO,GAAG3d,IAAAA,CAAAA;AACnC,cAAMoqD,UAAa,OAAI,CAACyJ,YAAY,CAAC/6D,MAAM;AAE3C,YAAIC,GAAG8a,MAAQuN,EAAAA,QAAAA,CAAAA;AAEf,YAAIphB,IAAKme,CAAAA,WAAW,CAACF,OAAO,EAAE;AAC5By3C,YAAAA,eAAAA,CAAgB,IAAI,EAAEtL,UAAAA,CAAAA,CAAAA;SACvB;QAED,IAAIt2C,IAAAA,CAAKmK,OAAO,EAAE;AAChB,gBAAI,CAACvN,KAAK,CAAC7Y,OAAO,CAAC,CAACuB,MAAMmI,KAAU;gBAClC,IAAIA,KAAAA,KAAU,KAAMA,KAAU,UAAK,IAAI,CAACrJ,GAAG,GAAG,CAAI;AAChD2b,oBAAAA,MAAAA,GAAS,IAAI,CAACoL,6BAA6B,CAAC7lB,KAAKmG,KAAK;AACtD,0BAAMkN,OAAU,OAAI,CAAC1C,UAAU,CAACxI,KAAAA,CAAAA,CAAAA;oBAChC,MAAMi5B,WAAAA,GAAc1mB,IAAKsf,CAAAA,UAAU,CAAC3mB,OAAAA,CAAAA,CAAAA;oBACpC,MAAMguB,iBAAAA,GAAoB9c,MAAOyV,CAAAA,UAAU,CAAC3mB,OAAAA,CAAAA,CAAAA;AAE5CmpD,oBAAAA,cAAAA,CAAe,IAAI,EAAEp7B,WAAa3mB,EAAAA,MAAAA,EAAQu2C,UAAY3vB,EAAAA,iBAAAA,CAAAA,CAAAA;iBACvD;AACH;SACD;QAED,IAAIzc,UAAAA,CAAWC,OAAO,EAAE;AACtB5X,YAAAA,GAAAA,CAAIq2B,IAAI;AAER,gBAAK3jC,CAAIqxD,GAAAA,UAAAA,GAAa,CAAGrxD,EAAAA,CAAAA,IAAK,GAAGA,CAAK;AACpC,sBAAMyhC,cAAcxc,UAAWoV,CAAAA,UAAU,CAAC,IAAI,CAAC6gC,oBAAoB,CAACl7D,CAAAA,CAAAA,CAAAA,CAAAA;AACpE,sBAAM,EAACkC,KAAAA,GAAO4e,SAAAA,GAAU,GAAG2gB,WAAAA,CAAAA;gBAE3B,IAAI,CAAC3gB,SAAa,KAAC5e,KAAO;oBACxB,SAAS;iBACV;AAEDoL,gBAAAA,GAAAA,CAAIwT,SAAS,GAAGA,SAAAA,CAAAA;AAChBxT,gBAAAA,GAAAA,CAAIqT,WAAW,GAAGze,KAAAA,CAAAA;gBAElBoL,GAAI62B,CAAAA,WAAW,CAAC1C,WAAAA,CAAYG,UAAU;gBACtCt0B,GAAI82B,CAAAA,cAAc,GAAG3C,WAAAA,CAAYK,gBAAgB;AAEjDhnB,gBAAAA,MAAAA,GAAS,IAAI,CAACoL,6BAA6B,CAACjf,KAAK0Q,KAAK,CAACzQ,OAAO,GAAG,IAAI,CAAC/H,GAAG,GAAG,IAAI,CAACmC,GAAG;AACpF+mB,gBAAAA,QAAAA,GAAW,IAAI,CAAC8yC,gBAAgB,CAACn7D,CAAG8a,EAAAA,MAAAA,CAAAA,CAAAA;AACpCxN,gBAAAA,GAAAA,CAAI+2B,SAAS;gBACb/2B,GAAIg3B,CAAAA,MAAM,CAAC,IAAI,CAAC3e,OAAO,EAAE,IAAI,CAACC,OAAO;AACrCtY,gBAAAA,GAAAA,CAAIi3B,MAAM,CAAClc,QAAAA,CAAS9gB,CAAC,EAAE8gB,SAAS7gB,CAAC;AACjC8F,gBAAAA,GAAAA,CAAIk3B,MAAM;AACZ;AAEAl3B,YAAAA,GAAAA,CAAIu2B,OAAO;SACZ;AACH;AAIA,CACAa,aAAa,EAAC;AAId,CACAE,UAAa;QACX,MAAMt3B,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMrG,IAAAA,GAAO,IAAI,CAACnB,OAAO;QACzB,MAAMovB,QAAAA,GAAWjuB,KAAK0Q,KAAK;QAE3B,IAAI,CAACud,QAAShQ,CAAAA,OAAO,EAAE;AACrB;SACD;AAED,cAAM3G,UAAa,OAAI,CAACuH,aAAa,CAAC;AACtC,YAAIhL,MAAQe,EAAAA,KAAAA,CAAAA;AAEZvO,QAAAA,GAAAA,CAAIq2B,IAAI;QACRr2B,GAAIktC,CAAAA,SAAS,CAAC,IAAI,CAAC70B,OAAO,EAAE,IAAI,CAACC,OAAO;AACxCtY,QAAAA,GAAAA,CAAIwwD,MAAM,CAACv/C,UAAAA,CAAAA,CAAAA;AACXjR,QAAAA,GAAAA,CAAIg1B,SAAS,GAAG;AAChBh1B,QAAAA,GAAAA,CAAIm1B,YAAY,GAAG;AAEnB,YAAI,CAAC9qB,KAAK,CAAC7Y,OAAO,CAAC,CAACuB,MAAMmI,KAAU;YAClC,IAAKA,KAAU,UAAK,IAAI,CAACrJ,GAAG,IAAI,CAAM,KAAC8H,IAAKC,CAAAA,OAAO,EAAE;AACnD;aACD;AAED,kBAAMu6B,cAAcvM,QAASmF,CAAAA,UAAU,CAAC,IAAI,CAACrpB,UAAU,CAACxI,KAAAA,CAAAA,CAAAA,CAAAA;YACxD,MAAM82B,QAAAA,GAAWhH,8DAAOmJ,CAAAA,WAAAA,CAAYpJ,IAAI;YACxCvd,MAAS,OAAI,CAACoL,6BAA6B,CAAC,IAAI,CAACvO,KAAK,CAACnP,KAAM,EAAChC,KAAK;YAEnE,IAAIi7B,WAAAA,CAAY0B,iBAAiB,EAAE;gBACjC71B,GAAI+qB,CAAAA,IAAI,GAAGiH,QAAAA,CAASI,MAAM;AAC1B7jB,gBAAAA,KAAAA,GAAQvO,IAAIg8C,WAAW,CAACjpD,IAAK0S,CAAAA,KAAK,EAAE8I,KAAK;gBACzCvO,GAAImT,CAAAA,SAAS,GAAGghB,WAAAA,CAAY8B,aAAa;gBAEzC,MAAMhV,OAAAA,GAAUO,6DAAU2S,CAAAA,WAAAA,CAAY6B,eAAe;gBACrDh2B,GAAIs2B,CAAAA,QAAQ,CACV,CAAC/nB,KAAQ,OAAI0S,QAAQ3mB,IAAI,EACzB,CAACkT,MAAAA,GAASwkB,QAAS74B,CAAAA,IAAI,GAAG,CAAI8nB,GAAAA,OAAAA,CAAQ9mB,GAAG,EACzCoU,KAAQ0S,GAAAA,OAAAA,CAAQ1S,KAAK,EACrByjB,QAAS74B,CAAAA,IAAI,GAAG8nB,OAAAA,CAAQ3S,MAAM;aAEjC;AAEDmpB,YAAAA,6DAAAA,CAAWz3B,KAAKjN,IAAK0S,CAAAA,KAAK,EAAE,CAAG,GAAC+H,QAAQwkB,QAAU;AAChDp9B,gBAAAA,KAAAA,EAAOu/B,YAAYv/B,KAAK;AACxB4gC,gBAAAA,WAAAA,EAAarB,YAAYsB,eAAe;AACxCC,gBAAAA,WAAAA,EAAavB,YAAYwB,eAAe;AAC1C;AACF;AAEA31B,QAAAA,GAAAA,CAAIu2B,OAAO;AACb;AAIA,CACAoB,YAAY,EAAC;AACf;;AC5pBA,MAAM84B,SAAY;IAChBC,WAAa;AAACC,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;QAAGmzD,KAAO;AAAI;IAChDsE,MAAQ;AAACD,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;QAAMmzD,KAAO;AAAE;IAC5CuE,MAAQ;AAACF,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;QAAOmzD,KAAO;AAAE;IAC7CwE,IAAM;AAACH,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;QAASmzD,KAAO;AAAE;IAC7CyE,GAAK;AAACJ,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;QAAUmzD,KAAO;AAAE;IAC7C0E,IAAM;AAACL,QAAAA,MAAAA,EAAQ,KAAK;QAAEx3D,IAAM;QAAWmzD,KAAO;AAAC;IAC/C2E,KAAO;AAACN,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;QAASmzD,KAAO;AAAE;IAC9C4E,OAAS;AAACP,QAAAA,MAAAA,EAAQ,KAAK;QAAEx3D,IAAM;QAASmzD,KAAO;AAAC;IAChD6E,IAAM;AAACR,QAAAA,MAAAA,EAAQ,IAAI;QAAEx3D,IAAM;AAAQ;AACrC;AAKA,OAAMi4D,yBAA6Cz5D,MAAAA,CAAOC,IAAI,CAAC64D,SAAAA,CAAAA,CAAAA;AAK9D,CACD,SAASY,MAAAA,CAAOvnD,CAAC,EAAEpP,CAAC,EAAE;AACpB,WAAOoP,CAAIpP,GAAAA,CAAAA,CAAAA;AACb;AAMC,CACD,SAASkJ,KAAAA,CAAMnK,KAAK,EAAE63D,KAAK,EAAE;AAC3B,QAAIzmD,6DAAaA,CAACymD,KAAQ;AACxB,eAAO,IAAI;KACZ;IAED,MAAMC,OAAAA,GAAU93D,MAAM+3D,QAAQ;IAC9B,MAAM,EAACC,SAAQ9oC,KAAAA,GAAO+oC,UAAU,GAAC,GAAGj4D,KAAAA,CAAMk4D,UAAU;AACpD,QAAIz4D,KAAQo4D,GAAAA,KAAAA,CAAAA;IAEZ,IAAI,OAAOG,WAAW,UAAY;AAChCv4D,QAAAA,KAAAA,GAAQu4D,MAAOv4D,CAAAA,KAAAA,CAAAA,CAAAA;KAChB;IAGD,IAAI,CAACwC,6DAAAA,CAASxC,KAAQ;AACpBA,QAAAA,KAAAA,GAAQ,OAAOu4D,MAAAA,KAAW,QACtBF,GAAAA,OAAAA,CAAQ3tD,KAAK,CAAC1K,KAAO,GAAqBu4D,MAAAA,CAAAA,GAC1CF,OAAQ3tD,CAAAA,KAAK,CAAC1K,KAAM;KACzB;IAED,IAAIA,KAAAA,KAAU,IAAI,EAAE;AAClB,eAAO,IAAI;KACZ;AAED,QAAIyvB,KAAO;AACTzvB,QAAAA,KAAAA,GAAQyvB,UAAU,MAAW1R,KAAAA,6DAAQA,CAACy6C,UAAeA,CAAAA,IAAAA,UAAAA,KAAe,IAAI,CAAD,GACnEH,QAAQv3C,OAAO,CAAC9gB,OAAO,SAAWw4D,EAAAA,UAAAA,CAAAA,GAClCH,QAAQv3C,OAAO,CAAC9gB,OAAOyvB,KAAM;KAClC;AAED,WAAO,CAACzvB,KAAAA,CAAAA;AACV;AAUA,UAAS04D,0BAA0BC,OAAO,EAAEhgE,GAAG,EAAEmC,GAAG,EAAE89D,QAAQ,EAAE;IAC9D,MAAM72D,IAAAA,GAAOm2D,MAAM3+D,MAAM;IAEzB,IAAK,IAAIC,CAAI0+D,GAAAA,KAAAA,CAAMviD,OAAO,CAACgjD,UAAUn/D,CAAIuI,GAAAA,IAAAA,GAAO,CAAG,IAAEvI,CAAG;AACtD,cAAMq/D,WAAWtB,SAAS,CAACW,KAAK,CAAC1+D,EAAE,CAAC;QACpC,MAAMiC,MAAAA,GAASo9D,SAASzF,KAAK,GAAGyF,SAASzF,KAAK,GAAGvvD,OAAOi1D,gBAAgB;AAExE,YAAID,SAASpB,MAAM,IAAI/+D,IAAK03B,CAAAA,IAAI,CAAC,CAACt1B,GAAMnC,GAAAA,GAAE,KAAM8C,MAAAA,GAASo9D,SAAS54D,IAAG,MAAO24D,QAAU;YACpF,OAAOV,KAAK,CAAC1+D,CAAE;SAChB;AACH;IAEA,OAAO0+D,KAAK,CAACn2D,IAAAA,GAAO,CAAE;AACxB;AAWA,UAASg3D,0BAA2Bx4D,CAAAA,KAAK,EAAEk2B,QAAQ,EAAEkiC,OAAO,EAAEhgE,GAAG,EAAEmC,GAAG,EAAE;IACtE,IAAK,IAAItB,CAAI0+D,GAAAA,KAAAA,CAAM3+D,MAAM,GAAG,CAAGC,EAAAA,CAAAA,IAAK0+D,KAAMviD,CAAAA,OAAO,CAACgjD,OAAAA,CAAAA,EAAUn/D,CAAK;QAC/D,MAAMq3D,IAAAA,GAAOqH,KAAK,CAAC1+D,CAAE;AACrB,YAAI+9D,SAAS,CAAC1G,IAAK,EAAC4G,MAAM,IAAIl3D,KAAAA,CAAM+3D,QAAQ,CAACz3C,IAAI,CAAC/lB,GAAAA,EAAKnC,GAAKk4D,EAAAA,IAAAA,CAAAA,IAASp6B,WAAW,CAAG;YACjF,OAAOo6B,IAAAA,CAAAA;SACR;AACH;IAEA,OAAOqH,KAAK,CAACS,OAAUT,GAAAA,KAAAA,CAAMviD,OAAO,CAACgjD,OAAAA,CAAAA,GAAW,CAAC,CAAC;AACpD;AAMA,UAASK,kBAAmBnI,CAAAA,IAAI,EAAE;AAChC,QAAK,IAAIr3D,CAAAA,GAAI0+D,KAAMviD,CAAAA,OAAO,CAACk7C,IAAQ,OAAG9uD,IAAOm2D,GAAAA,KAAAA,CAAM3+D,MAAM,EAAEC,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;QACxE,IAAI+9D,SAAS,CAACW,KAAK,CAAC1+D,EAAE,CAAC,CAACi+D,MAAM,EAAE;YAC9B,OAAOS,KAAK,CAAC1+D,CAAE;SAChB;AACH;AACF;AAMC,CACD,SAASy/D,OAAQ9nD,CAAAA,KAAK,EAAE+nD,IAAI,EAAEC,UAAU,EAAE;AACxC,QAAI,CAACA,UAAY;QACfhoD,KAAK,CAAC+nD,IAAK,IAAG,IAAI;KACb,UAAIC,UAAW5/D,CAAAA,MAAM,EAAE;AAC5B,cAAM,EAACmoB,EAAE,GAAEC,KAAG,GAAGy3C,8DAAOA,CAACD,UAAYD,EAAAA,IAAAA,CAAAA,CAAAA;AACrC,cAAMG,SAAYF,GAAAA,UAAU,CAACz3C,EAAAA,CAAG,IAAIw3C,IAAAA,GAAOC,UAAU,CAACz3C,EAAG,IAAGy3C,UAAU,CAACx3C,EAAG;QAC1ExQ,KAAK,CAACkoD,SAAU,IAAG,IAAI;KACxB;AACH;AASA,UAASC,cAAc/4D,KAAK,EAAE4Q,KAAK,EAAE2I,GAAG,EAAEy/C,SAAS,EAAE;IACnD,MAAMlB,OAAAA,GAAU93D,MAAM+3D,QAAQ;IAC9B,MAAMlpC,KAAAA,GAAQ,CAACipC,OAAAA,CAAQv3C,OAAO,CAAC3P,KAAK,CAAC,EAAE,CAACnR,KAAK,EAAEu5D,SAAAA,CAAAA,CAAAA;IAC/C,MAAMhkD,IAAAA,GAAOpE,KAAK,CAACA,KAAAA,CAAM5X,MAAM,GAAG,EAAE,CAACyG,KAAK;AAC1C,QAAIgvB,KAAOhtB,EAAAA,KAAAA,CAAAA;IAEX,IAAKgtB,KAAAA,GAAQI,KAAOJ,EAAAA,KAAAA,IAASzZ,IAAMyZ,EAAAA,KAAAA,GAAQ,CAACqpC,OAAAA,CAAQ59D,GAAG,CAACu0B,KAAO,KAAGuqC,SAAY;QAC5Ev3D,KAAQ8X,GAAAA,GAAG,CAACkV,KAAM;AAClB,YAAIhtB,SAAS,CAAG;AACdmP,YAAAA,KAAK,CAACnP,KAAAA,CAAM,CAACgtB,KAAK,GAAG,IAAI;SAC1B;AACH;IACA,OAAO7d,KAAAA,CAAAA;AACT;AAOC,CACD,SAASqoD,mBAAoBj5D,CAAAA,KAAK,EAAEnB,MAAM,EAAEm6D,SAAS,EAAE;AACrD,UAAMpoD,QAAQ,EAAE;KAEhB,MAAM2I,GAAAA,GAAM,EAAC;IACb,MAAM/X,IAAAA,GAAO3C,OAAO7F,MAAM;AAC1B,QAAIC,CAAGwG,EAAAA,KAAAA,CAAAA;AAEP,QAAKxG,CAAI,MAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;QACzBwG,KAAQZ,GAAAA,MAAM,CAAC5F,CAAE;QACjBsgB,GAAG,CAAC9Z,MAAM,GAAGxG,CAAAA,CAAAA;AAEb2X,QAAAA,KAAAA,CAAM3W,IAAI,CAAC;AACTwF,YAAAA,KAAAA;AACAgvB,YAAAA,KAAAA,EAAO,KAAK;AACd;AACF;IAIA,OAAQjtB,IAAS,UAAK,CAACw3D,SAAAA,GAAapoD,QAAQmoD,aAAc/4D,CAAAA,KAAAA,EAAO4Q,KAAO2I,EAAAA,GAAAA,EAAKy/C,SAAU;AACzF;AAEe,MAAME,SAAkB/mC,SAAAA,KAAAA,CAAAA;AAErC,WAAOjvB,KAAK,MAAO;AAIlB,CACD,OAAO9E,QAAW;AAOf,CACDm6C,MAAQ;AAER4gB,QAAAA,QAAAA,EAAU,EAAC;QACXR,IAAM;AACJX,YAAAA,MAAAA,EAAQ,KAAK;AACb1H,YAAAA,IAAAA,EAAM,KAAK;AACXphC,YAAAA,KAAAA,EAAO,KAAK;AACZ+oC,YAAAA,UAAAA,EAAY,KAAK;YACjBG,OAAS;AACTgB,YAAAA,cAAAA,EAAgB,EAAC;AACnB;QACAxoD,KAAO;AAQJ,CACDukB,MAAQ;AAERa,YAAAA,QAAAA,EAAU,KAAK;YAEfvH,KAAO;AACLC,gBAAAA,OAAAA,EAAS,KAAK;AAChB;AACF;KACA;AAKF33B,CAAAA,WAAAA,CAAYwI,KAAK,CAAE;AACjB,aAAK,CAACA,KAAAA,CAAAA,CAAAA;AAEN,SACA,IAAI,CAACwQ,MAAM,GAAG;AACZ3N,YAAAA,IAAAA,EAAM,EAAE;AACRwI,YAAAA,MAAAA,EAAQ,EAAE;AACV9K,YAAAA,GAAAA,EAAK,EAAE;AACT;AAEA,SACA,IAAI,CAACu5D,KAAK,GAAG;AACb,SACA,IAAI,CAACC,UAAU,GAAGjiE,SAAAA,CAAAA;QAClB,IAAI,CAACkiE,QAAQ,GAAG,EAAC;QACjB,IAAI,CAACC,WAAW,GAAG,KAAK;QACxB,IAAI,CAACtB,UAAU,GAAG7gE,SAAAA,CAAAA;AACpB;AAEA8oB,IAAAA,IAAAA,CAAK2qB,SAAS,EAAE5qC,IAAO,KAAE,EAAE;QACzB,MAAMy4D,IAAAA,GAAO7tB,UAAU6tB,IAAI,KAAK7tB,SAAU6tB,CAAAA,IAAI,GAAG,EAAC;AAClD,SACA,MAAMb,OAAU,OAAI,CAACC,QAAQ,GAAG,IAAIoB,QAAAA,CAAS14C,KAAK,CAACqqB,SAAUquB,CAAAA,QAAQ,CAAC1hE,IAAI;AAE1EqgE,QAAAA,OAAAA,CAAQ33C,IAAI,CAACjgB,IAAAA,CAAAA,CAAAA;AAMb0kC,QAAAA,8DAAAA,CAAQ+zB,IAAKS,CAAAA,cAAc,EAAEtB,OAAAA,CAAQ13C,OAAO;QAE5C,IAAI,CAAC83C,UAAU,GAAG;AAChBF,YAAAA,MAAAA,EAAQW,KAAKX,MAAM;AACnB9oC,YAAAA,KAAAA,EAAOypC,KAAKzpC,KAAK;AACjB+oC,YAAAA,UAAAA,EAAYU,KAAKV,UAAU;AAC7B;QAEA,KAAK,CAAC93C,IAAI,CAAC2qB,SAAAA,CAAAA,CAAAA;AAEX,YAAI,CAAC0uB,WAAW,GAAGt5D,IAAAA,CAAKu5D,UAAU;AACpC;AAMA,CACAtvD,KAAM3E,CAAAA,GAAG,EAAE/D,KAAK,EAAE;AAChB,YAAI+D,QAAQnO,SAAW;AACrB,mBAAO,IAAI;SACZ;QACD,OAAO8S,KAAAA,CAAM,IAAI,EAAE3E,GAAAA,CAAAA,CAAAA;AACrB;IAEA2iB,YAAe;AACb,aAAK,CAACA,YAAY;QAClB,IAAI,CAACpY,MAAM,GAAG;AACZ3N,YAAAA,IAAAA,EAAM,EAAE;AACRwI,YAAAA,MAAAA,EAAQ,EAAE;AACV9K,YAAAA,GAAAA,EAAK,EAAE;AACT;AACF;IAEA00B,mBAAsB;QACpB,MAAMz1B,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAM+4D,OAAAA,GAAU,IAAI,CAACC,QAAQ;AAC7B,cAAMzH,IAAOvxD,GAAAA,OAAAA,CAAQ45D,IAAI,CAACrI,IAAI,IAAI;AAElC,YAAI,EAACl4D,GAAAA,GAAKmC,GAAAA,GAAK6I,UAAAA,GAAYC,UAAAA,GAAW,GAAG,IAAI,CAACF,aAAa;AAK3D,UAASu2D,YAAanhB,CAAAA,MAAM,EAAE;AAC5B,gBAAI,CAACn1C,UAAc,KAAC+R,KAAMojC,CAAAA,MAAAA,CAAOngD,GAAG,CAAG;AACrCA,gBAAAA,GAAAA,GAAMD,IAAKC,CAAAA,GAAG,CAACA,GAAAA,EAAKmgD,OAAOngD,GAAG;aAC/B;AACD,gBAAI,CAACiL,UAAc,KAAC8R,KAAMojC,CAAAA,MAAAA,CAAOh+C,GAAG,CAAG;AACrCA,gBAAAA,GAAAA,GAAMpC,IAAKoC,CAAAA,GAAG,CAACA,GAAAA,EAAKg+C,OAAOh+C,GAAG;aAC/B;AACH;QAGA,IAAI,CAAC6I,UAAc,KAACC,UAAY;YAE9Bq2D,YAAa,KAAI,CAACC,eAAe;YAIjC,IAAI56D,OAAAA,CAAQw5C,MAAM,KAAK,WAAWx5C,QAAQ6R,KAAK,CAACukB,MAAM,KAAK,QAAU;AACnEukC,gBAAAA,YAAAA,CAAa,IAAI,CAACluD,SAAS,CAAC,KAAK;aAClC;SACF;AAEDpT,QAAAA,GAAAA,GAAM6J,6DAAS7J,CAAAA,GAAAA,CAAAA,IAAQ,CAAC+c,KAAAA,CAAM/c,GAAOA,CAAAA,GAAAA,GAAAA,GAAM,CAAC0/D,OAAAA,CAAQv3C,OAAO,CAAC5nB,IAAKC,CAAAA,GAAG,IAAI03D,IAAK;AAC7E/1D,QAAAA,GAAAA,GAAM0H,6DAAS1H,CAAAA,GAAAA,CAAAA,IAAQ,CAAC4a,KAAAA,CAAM5a,OAAOA,GAAM,IAACu9D,OAAQt3C,CAAAA,KAAK,CAAC7nB,IAAAA,CAAKC,GAAG,IAAI03D,QAAQ,CAAC;AAG/E,YAAI,CAACl4D,GAAG,GAAGD,KAAKC,GAAG,CAACA,KAAKmC,GAAM;AAC/B,YAAI,CAACA,GAAG,GAAGpC,KAAKoC,GAAG,CAACnC,MAAM,CAAGmC,EAAAA,GAAAA,CAAAA,CAAAA;AAC/B;AAIA,CACAo/D,eAAkB;QAChB,MAAM3qD,GAAAA,GAAM,IAAI,CAAC4qD,kBAAkB;QACnC,IAAIxhE,GAAAA,GAAMkL,OAAOE,iBAAiB;QAClC,IAAIjJ,GAAAA,GAAM+I,OAAOC,iBAAiB;QAElC,IAAIyL,GAAAA,CAAIhW,MAAM,EAAE;YACdZ,GAAM4W,GAAAA,GAAG,CAAC,CAAE;AACZzU,YAAAA,GAAAA,GAAMyU,GAAG,CAACA,GAAIhW,CAAAA,MAAM,GAAG,CAAE;SAC1B;QACD,OAAO;AAACZ,YAAAA,GAAAA;AAAKmC,YAAAA,GAAAA;AAAG;AAClB;AAIA,CACAq6B,UAAa;QACX,MAAM71B,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAM86D,QAAAA,GAAW96D,QAAQ45D,IAAI;QAC7B,MAAMxqC,QAAAA,GAAWpvB,QAAQ6R,KAAK;AAC9B,cAAMgoD,UAAazqC,GAAAA,QAAAA,CAASgH,MAAM,KAAK,QAAW,OAAI,CAACykC,kBAAkB,EAAK,OAAI,CAACE,SAAS,EAAE;AAE9F,YAAI/6D,QAAQw5C,MAAM,KAAK,OAAWqgB,IAAAA,UAAAA,CAAW5/D,MAAM,EAAE;YACnD,IAAI,CAACZ,GAAG,GAAG,IAAI,CAAC46B,QAAQ,IAAI4lC,UAAU,CAAC,CAAE;AACzC,gBAAI,CAACr+D,GAAG,GAAG,IAAI,CAACw4B,QAAQ,IAAI6lC,UAAU,CAACA,UAAAA,CAAW5/D,MAAM,GAAG,CAAE;SAC9D;QAED,MAAMZ,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG;QAEpB,MAAMqW,KAAAA,GAAQmpD,8DAAenB,CAAAA,UAAAA,EAAYxgE,GAAKmC,EAAAA,GAAAA,CAAAA,CAAAA;QAK9C,IAAI,CAAC8+D,KAAK,GAAGQ,QAAAA,CAASvJ,IAAI,KAAKniC,SAASD,QAAQ,GAC5CiqC,0BAA0B0B,QAASzB,CAAAA,OAAO,EAAE,IAAI,CAAChgE,GAAG,EAAE,IAAI,CAACmC,GAAG,EAAE,IAAI,CAACy/D,iBAAiB,CAAC5hE,GACvFogE,CAAAA,CAAAA,GAAAA,0BAAAA,CAA2B,IAAI,EAAE5nD,KAAAA,CAAM5X,MAAM,EAAE6gE,QAAAA,CAASzB,OAAO,EAAE,IAAI,CAAChgE,GAAG,EAAE,IAAI,CAACmC,GAAG,CAAC,CAAD;AACvF,YAAI,CAAC++D,UAAU,GAAG,CAACnrC,QAASM,CAAAA,KAAK,CAACC,OAAO,IAAI,IAAI,CAAC2qC,KAAK,KAAK,MAAShiE,GAAAA,SAAAA,GACjEohE,mBAAmB,IAAI,CAACY,KAAK,CAAC;QAClC,IAAI,CAACY,WAAW,CAACrB,UAAAA,CAAAA,CAAAA;QAEjB,IAAI75D,OAAAA,CAAQoB,OAAO,EAAE;AACnByQ,YAAAA,KAAAA,CAAMzQ,OAAO;SACd;AAED,eAAO84D,oBAAoB,IAAI,EAAEroD,KAAO,MAAI,CAAC0oD,UAAU;AACzD;IAEAlkC,aAAgB;AAGd,YAAI,IAAI,CAACr2B,OAAO,CAACm7D,mBAAmB,EAAE;AACpC,gBAAI,CAACD,WAAW,CAAC,IAAI,CAACrpD,KAAK,CAAC2I,GAAG,CAACjgB,CAAAA,IAAQ,IAACA,KAAKmG,KAAK;SACpD;AACH;AAUAw6D,CAAAA,WAAAA,CAAYrB,UAAa,KAAE,EAAE;AAC3B,YAAIvgE,KAAQ;AACZ,YAAI+H,GAAM;AACV,YAAIyuB,KAAO7Z,EAAAA,IAAAA,CAAAA;QAEX,IAAI,IAAI,CAACjW,OAAO,CAACgV,MAAM,IAAI6kD,UAAAA,CAAW5/D,MAAM,EAAE;AAC5C61B,YAAAA,KAAAA,GAAQ,IAAI,CAACsrC,kBAAkB,CAACvB,UAAU,CAAC,CAAE;YAC7C,IAAIA,UAAAA,CAAW5/D,MAAM,KAAK,CAAG;AAC3BX,gBAAAA,KAAAA,GAAQ,CAAIw2B,GAAAA,KAAAA,CAAAA;aACP;gBACLx2B,KAAQ,GAAC,KAAI,CAAC8hE,kBAAkB,CAACvB,UAAU,CAAC,EAAE,CAAI/pC,GAAAA,KAAI,IAAK;aAC5D;YACD7Z,IAAO,OAAI,CAACmlD,kBAAkB,CAACvB,UAAU,CAACA,UAAAA,CAAW5/D,MAAM,GAAG,CAAE;YAChE,IAAI4/D,UAAAA,CAAW5/D,MAAM,KAAK,CAAG;gBAC3BoH,GAAM4U,GAAAA,IAAAA,CAAAA;aACD;AACL5U,gBAAAA,GAAAA,GAAM,CAAC4U,IAAO,OAAI,CAACmlD,kBAAkB,CAACvB,UAAU,CAACA,UAAW5/D,CAAAA,MAAM,GAAG,EAAE,KAAK;aAC7E;SACF;AACD,cAAMwhC,QAAQo+B,UAAW5/D,CAAAA,MAAM,GAAG,IAAI,MAAM,IAAI;QAChDX,KAAQy+B,GAAAA,6DAAAA,CAAYz+B,OAAO,CAAGmiC,EAAAA,KAAAA,CAAAA,CAAAA;QAC9Bp6B,GAAM02B,GAAAA,6DAAAA,CAAY12B,KAAK,CAAGo6B,EAAAA,KAAAA,CAAAA,CAAAA;QAE1B,IAAI,CAAC++B,QAAQ,GAAG;AAAClhE,YAAAA,KAAAA;AAAO+H,YAAAA,GAAAA;AAAKlF,YAAAA,MAAAA,EAAQ,CAAK7C,IAAAA,KAAQ,OAAI+H,GAAE;AAAE;AAC5D;AAQA,CACA05D,SAAY;QACV,MAAMhC,OAAAA,GAAU,IAAI,CAACC,QAAQ;QAC7B,MAAM3/D,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMwE,OAAAA,GAAU,IAAI,CAACA,OAAO;QAC5B,MAAM86D,QAAAA,GAAW96D,QAAQ45D,IAAI;AAE7B,cAAMyB,KAAQP,GAAAA,QAAAA,CAASvJ,IAAI,IAAI6H,yBAA0B0B,CAAAA,QAAAA,CAASzB,OAAO,EAAEhgE,GAAKmC,EAAAA,GAAAA,EAAK,IAAI,CAACy/D,iBAAiB,CAAC5hE,GAAAA,CAAAA,CAAAA,CAAAA;AAC5G,cAAM25D,WAAW9pD,6DAAelJ,CAAAA,OAAAA,CAAQ6R,KAAK,CAACmhD,QAAQ,EAAE;AACxD,cAAMsI,UAAUD,KAAU,cAASP,QAAS5B,CAAAA,UAAU,GAAG,KAAK;AAC9D,cAAMqC,UAAa98C,GAAAA,6DAAAA,CAAS68C,OAAYA,CAAAA,IAAAA,OAAAA,KAAY,IAAI;AACxD,cAAMzpD,QAAQ,EAAC;AACf,YAAIie,KAAQz2B,GAAAA,GAAAA,CAAAA;AACZ,YAAIugE,IAAMvuD,EAAAA,KAAAA,CAAAA;AAGV,YAAIkwD,UAAY;AACdzrC,YAAAA,KAAAA,GAAQ,CAACipC,OAAAA,CAAQv3C,OAAO,CAACsO,OAAO,SAAWwrC,EAAAA,OAAAA,CAAAA,CAAAA;SAC5C;AAGDxrC,QAAAA,KAAAA,GAAQ,CAACipC,OAAQv3C,CAAAA,OAAO,CAACsO,KAAOyrC,EAAAA,UAAAA,GAAa,QAAQF,KAAK;AAG1D,YAAItC,QAAQx3C,IAAI,CAAC/lB,KAAKnC,GAAKgiE,EAAAA,KAAAA,CAAAA,GAAS,SAASrI,QAAU;YACrD,MAAM,IAAIjyC,MAAM1nB,GAAM,aAAUmC,MAAM,sCAAyCw3D,GAAAA,QAAAA,GAAW,MAAMqI,KAAO;SACxG;QAED,MAAMxB,UAAAA,GAAa75D,QAAQ6R,KAAK,CAACukB,MAAM,KAAK,UAAU,IAAI,CAAColC,iBAAiB;AAC5E,YAAK5B,OAAO9pC,KAAOzkB,EAAAA,KAAAA,GAAQ,CAAC,EAAEuuD,OAAOp+D,GAAKo+D,EAAAA,IAAAA,GAAO,CAACb,OAAAA,CAAQ59D,GAAG,CAACy+D,IAAAA,EAAM5G,QAAUqI,EAAAA,KAAAA,CAAAA,EAAQhwD,OAAO,CAAE;AAC7FsuD,YAAAA,OAAAA,CAAQ9nD,OAAO+nD,IAAMC,EAAAA,UAAAA,CAAAA,CAAAA;AACvB;AAEA,YAAID,SAASp+D,GAAOwE,IAAAA,OAAAA,CAAQw5C,MAAM,KAAK,WAAWnuC,UAAU,CAAG;AAC7DsuD,YAAAA,OAAAA,CAAQ9nD,OAAO+nD,IAAMC,EAAAA,UAAAA,CAAAA,CAAAA;SACtB;QAGD,OAAO16D,MAAAA,CAAOC,IAAI,CAACyS,KAAOR,CAAAA,CAAAA,IAAI,CAACwnD,MAAAA,CAAAA,CAAQr+C,GAAG,CAAC/Y,CAAAA,CAAAA,GAAK,CAACA,CAAAA,CAAAA,CAAAA;AACnD;AAMAyL,CAAAA,gBAAAA,CAAiBxM,KAAK,EAAE;QACtB,MAAMq4D,OAAAA,GAAU,IAAI,CAACC,QAAQ;AAC7B,cAAM8B,QAAW,OAAI,CAAC96D,OAAO,CAAC45D,IAAI;QAElC,IAAIkB,QAAAA,CAASW,aAAa,EAAE;AAC1B,mBAAO1C,OAAQz3C,CAAAA,MAAM,CAAC5gB,KAAAA,EAAOo6D,SAASW,aAAa;SACpD;AACD,eAAO1C,QAAQz3C,MAAM,CAAC5gB,OAAOo6D,QAAST,CAAAA,cAAc,CAACqB,QAAQ;AAC/D;AAMA,CACAp6C,MAAO5gB,CAAAA,KAAK,EAAE4gB,MAAM,EAAE;QACpB,MAAMthB,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,cAAMqhB,OAAUrhB,GAAAA,OAAAA,CAAQ45D,IAAI,CAACS,cAAc;QAC3C,MAAM9I,IAAAA,GAAO,IAAI,CAAC+I,KAAK;AACvB,cAAMqB,GAAMr6C,GAAAA,MAAAA,IAAUD,OAAO,CAACkwC,IAAK;AACnC,eAAO,IAAI,CAACyH,QAAQ,CAAC13C,MAAM,CAAC5gB,KAAOi7D,EAAAA,GAAAA,CAAAA,CAAAA;AACrC;AAWAC,CAAAA,mBAAAA,CAAoBhC,IAAI,EAAEl3D,KAAK,EAAEmP,KAAK,EAAEyP,MAAM,EAAE;QAC9C,MAAMthB,OAAAA,GAAU,IAAI,CAACA,OAAO;AAC5B,cAAM67D,SAAY77D,GAAAA,OAAAA,CAAQ6R,KAAK,CAAColB,QAAQ;AAExC,YAAI4kC,SAAW;AACb,mBAAOpiE,6DAAAA,CAAKoiE,SAAW;AAACjC,gBAAAA,IAAAA;AAAMl3D,gBAAAA,KAAAA;AAAOmP,gBAAAA,KAAAA;AAAM,eAAE,IAAI;SAClD;AAED,cAAMwP,OAAUrhB,GAAAA,OAAAA,CAAQ45D,IAAI,CAACS,cAAc;QAC3C,MAAM9I,IAAAA,GAAO,IAAI,CAAC+I,KAAK;QACvB,MAAML,SAAAA,GAAY,IAAI,CAACM,UAAU;AACjC,cAAMuB,WAAcvK,GAAAA,IAAAA,IAAQlwC,OAAO,CAACkwC,IAAK;AACzC,cAAMwK,WAAc9B,GAAAA,SAAAA,IAAa54C,OAAO,CAAC44C,SAAU;QACnD,MAAM1/D,IAAAA,GAAOsX,KAAK,CAACnP,KAAM;AACzB,cAAMgtB,KAAQuqC,GAAAA,SAAAA,IAAa8B,WAAexhE,IAAAA,IAAAA,IAAQA,KAAKm1B,KAAK;AAE5D,eAAO,IAAI,CAACspC,QAAQ,CAAC13C,MAAM,CAACs4C,IAAMt4C,EAAAA,MAAAA,KAAWoO,KAAAA,GAAQqsC,WAAcD,GAAAA,WAAW,CAAD;AAC/E;AAKA9kC,CAAAA,kBAAAA,CAAmBnlB,KAAK,EAAE;AACxB,YAAI3X,GAAGuI,IAAMlI,EAAAA,IAAAA,CAAAA;QAEb,IAAKL,CAAAA,GAAI,GAAGuI,IAAOoP,GAAAA,KAAAA,CAAM5X,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC9CK,IAAOsX,GAAAA,KAAK,CAAC3X,CAAE;YACfK,IAAK0S,CAAAA,KAAK,GAAG,IAAI,CAAC2uD,mBAAmB,CAACrhE,IAAAA,CAAKmG,KAAK,EAAExG,CAAG2X,EAAAA,KAAAA,CAAAA,CAAAA;AACvD;AACF;AAMAupD,CAAAA,kBAAAA,CAAmB16D,KAAK,EAAE;QACxB,OAAOA,KAAAA,KAAU,IAAI,GAAG8L,GAAAA,GAAM,CAAC9L,KAAAA,GAAQ,IAAI,CAACrH,GAAG,KAAK,IAAI,CAACmC,GAAG,GAAG,IAAI,CAACnC,GAAE,CAAE;AAC1E;AAMAuY,CAAAA,gBAAAA,CAAiBlR,KAAK,EAAE;QACtB,MAAMs7D,OAAAA,GAAU,IAAI,CAACxB,QAAQ;AAC7B,cAAM11C,GAAM,OAAI,CAACs2C,kBAAkB,CAAC16D,KAAAA,CAAAA,CAAAA;AACpC,eAAO,IAAI,CAACsW,kBAAkB,CAAC,CAACglD,OAAQ1iE,CAAAA,KAAK,GAAGwrB,GAAE,IAAKk3C,OAAAA,CAAQ7/D,MAAM;AACvE;AAMA+a,CAAAA,gBAAAA,CAAiB8iB,KAAK,EAAE;QACtB,MAAMgiC,OAAAA,GAAU,IAAI,CAACxB,QAAQ;QAC7B,MAAM11C,GAAAA,GAAM,IAAI,CAACsV,kBAAkB,CAACJ,SAASgiC,OAAQ7/D,CAAAA,MAAM,GAAG6/D,OAAAA,CAAQ36D,GAAG;AACzE,eAAO,IAAI,CAAChI,GAAG,GAAGyrB,GAAO,QAAI,CAACtpB,GAAG,GAAG,IAAI,CAACnC,GAAG,CAAD;AAC7C;AAOA4iE,CAAAA,aAAAA,CAAchvD,KAAK,EAAE;AACnB,cAAMivD,SAAY,OAAI,CAACl8D,OAAO,CAAC6R,KAAK;QACpC,MAAMsqD,cAAAA,GAAiB,IAAI,CAAC30D,GAAG,CAACg8C,WAAW,CAACv2C,OAAO8I,KAAK;QACxD,MAAMmD,KAAAA,GAAQwC,6DAAU,KAAI,CAAChI,YAAY,KAAKwoD,SAAU7kC,CAAAA,WAAW,GAAG6kC,SAAAA,CAAU9kC,WAAW;QAC3F,MAAMglC,WAAAA,GAAchjE,IAAKwf,CAAAA,GAAG,CAACM,KAAAA,CAAAA,CAAAA;QAC7B,MAAMmjD,WAAAA,GAAcjjE,IAAK0f,CAAAA,GAAG,CAACI,KAAAA,CAAAA,CAAAA;AAC7B,cAAMojD,eAAe,IAAI,CAAC3iC,uBAAuB,CAAC,GAAGh5B,IAAI;QAEzD,OAAO;YACL2mB,CAAG,EAAC60C,cAAiBC,GAAAA,WAAAA,GAAgBE,YAAeD,GAAAA,WAAAA;YACpD70C,CAAG,EAAC20C,cAAiBE,GAAAA,WAAAA,GAAgBC,YAAeF,GAAAA,WAAAA;AACtD;AACF;AAOAnB,CAAAA,iBAAAA,CAAkBsB,WAAW,EAAE;AAC7B,cAAMzB,QAAW,OAAI,CAAC96D,OAAO,CAAC45D,IAAI;QAClC,MAAMS,cAAAA,GAAiBS,SAAST,cAAc;QAG9C,MAAM/4C,MAAAA,GAAS+4C,cAAc,CAACS,QAAAA,CAASvJ,IAAI,CAAC,IAAI8I,eAAenC,WAAW;QAC1E,MAAMsE,YAAAA,GAAe,IAAI,CAACZ,mBAAmB,CAACW,WAAa,KAAGrC,mBAAoB,KAAI,EAAE;AAACqC,YAAAA,WAAAA;SAAY,EAAE,IAAI,CAAChC,UAAU,CAAGj5C,EAAAA,MAAAA,CAAAA,CAAAA;AACzH,cAAM3gB,IAAO,OAAI,CAACs7D,aAAa,CAACO,YAAAA,CAAAA,CAAAA;QAGhC,MAAMlD,QAAAA,GAAWlgE,KAAKoE,KAAK,CAAC,IAAI,CAACkW,YAAY,KAAK,IAAI,CAACqC,KAAK,GAAGpV,IAAAA,CAAK2mB,CAAC,GAAG,IAAI,CAACxR,MAAM,GAAGnV,IAAK6mB,CAAAA,CAAC,CAAI;QAChG,OAAO8xC,QAAAA,GAAW,CAAIA,GAAAA,QAAAA,GAAW,CAAC;AACpC;AAIA,CACAkC,iBAAoB;AAClB,YAAI3B,aAAa,IAAI,CAAC7oD,MAAM,CAAC3N,IAAI,IAAI,EAAE;AACvC,YAAInJ,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAIo3D,UAAAA,CAAW5/D,MAAM,EAAE;YACrB,OAAO4/D,UAAAA,CAAAA;SACR;QAED,MAAMllC,KAAAA,GAAQ,IAAI,CAAC1vB,uBAAuB;AAE1C,YAAI,IAAI,CAACw1D,WAAW,IAAI9lC,KAAAA,CAAM16B,MAAM,EAAE;AACpC,mBAAQ,IAAI,CAAC+W,MAAM,CAAC3N,IAAI,GAAGsxB,KAAK,CAAC,EAAE,CAACxvB,UAAU,CAAC2H,kBAAkB,CAAC,IAAI;SACvE;QAED,IAAK5S,CAAAA,GAAI,GAAGuI,IAAOkyB,GAAAA,KAAAA,CAAM16B,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC9C2/D,UAAaA,GAAAA,UAAAA,CAAW1oD,MAAM,CAACwjB,KAAK,CAACz6B,CAAE,EAACiL,UAAU,CAAC2H,kBAAkB,CAAC,IAAI;AAC5E;QAEA,OAAQ,IAAI,CAACkE,MAAM,CAAC3N,IAAI,GAAG,IAAI,CAACo5D,SAAS,CAAC5C,UAAAA,CAAAA,CAAAA;AAC5C;AAIA,CACAgB,kBAAqB;AACnB,cAAMhB,aAAa,IAAI,CAAC7oD,MAAM,CAACnF,MAAM,IAAI,EAAE;AAC3C,YAAI3R,CAAGuI,EAAAA,IAAAA,CAAAA;QAEP,IAAIo3D,UAAAA,CAAW5/D,MAAM,EAAE;YACrB,OAAO4/D,UAAAA,CAAAA;SACR;QAED,MAAMhuD,MAAAA,GAAS,IAAI,CAACC,SAAS;QAC7B,IAAK5R,CAAAA,GAAI,GAAGuI,IAAOoJ,GAAAA,MAAAA,CAAO5R,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;AAC/C2/D,YAAAA,UAAAA,CAAW3+D,IAAI,CAACkQ,KAAAA,CAAM,IAAI,EAAES,MAAM,CAAC3R,CAAE;AACvC;AAEA,eAAQ,IAAI,CAAC8W,MAAM,CAACnF,MAAM,GAAG,IAAI,CAAC4uD,WAAW,GAAGZ,UAAa,OAAI,CAAC4C,SAAS,CAAC5C,UAAW;AACzF;AAMA4C,CAAAA,SAAAA,CAAU38D,MAAM,EAAE;QAEhB,OAAOsR,6DAAAA,CAAatR,MAAOuR,CAAAA,IAAI,CAACwnD,MAAAA,CAAAA,CAAAA,CAAAA;AAClC;AACF;;ACvpBA,SAASjhB,WAAY8kB,CAAAA,KAAK,EAAEvmD,GAAG,EAAE/U,OAAO,EAAE;AACxC,QAAIghB,EAAK;IACT,IAAIC,EAAAA,GAAKq6C,KAAMziE,CAAAA,MAAM,GAAG;IACxB,IAAI0iE,UAAAA,EAAYC,YAAYC,UAAYC,EAAAA,UAAAA,CAAAA;AACxC,QAAI17D,OAAS;AACX,YAAI+U,GAAOumD,IAAAA,KAAK,CAACt6C,EAAAA,CAAG,CAAC0C,GAAG,IAAI3O,GAAAA,IAAOumD,KAAK,CAACr6C,EAAG,EAACyC,GAAG,EAAE;YAC/C,GAAC1C,KAAIC,EAAAA,GAAG,GAAGJ,6DAAAA,CAAay6C,KAAO,SAAOvmD,GAAG;SAC3C;QACA,GAAC2O,GAAK63C,EAAAA,UAAAA,GAAY/C,IAAAA,EAAMiD,UAAU,GAAC,GAAGH,KAAK,CAACt6C,EAAAA,CAAG,EAAD;QAC9C,GAAC0C,GAAK83C,EAAAA,UAAAA,GAAYhD,IAAAA,EAAMkD,UAAU,GAAC,GAAGJ,KAAK,CAACr6C,EAAAA,CAAG,EAAD;KAC1C;AACL,YAAIlM,GAAOumD,IAAAA,KAAK,CAACt6C,EAAAA,CAAG,CAACw3C,IAAI,IAAIzjD,GAAAA,IAAOumD,KAAK,CAACr6C,EAAG,EAACu3C,IAAI,EAAE;YACjD,GAACx3C,KAAIC,EAAAA,GAAG,GAAGJ,6DAAAA,CAAay6C,KAAO,UAAQvmD,GAAG;SAC5C;QACA,GAACyjD,IAAM+C,EAAAA,UAAAA,GAAY73C,GAAAA,EAAK+3C,UAAU,GAAC,GAAGH,KAAK,CAACt6C,EAAAA,CAAG,EAAD;QAC9C,GAACw3C,IAAMgD,EAAAA,UAAAA,GAAY93C,GAAAA,EAAKg4C,UAAU,GAAC,GAAGJ,KAAK,CAACr6C,EAAAA,CAAG,EAAD;KAChD;AAED,UAAM06C,OAAOH,UAAaD,GAAAA,UAAAA,CAAAA;AAC1B,WAAOI,IAAOF,GAAAA,UAAAA,GAAa,CAACC,UAAaD,GAAAA,UAAS,KAAM1mD,GAAMwmD,GAAAA,UAAS,CAAKI,GAAAA,IAAAA,GAAOF,UAAU;AAC/F;AAEA,MAAMG,eAAwB7C,SAAAA,SAAAA,CAAAA;AAE5B,WAAOh2D,KAAK,YAAa;AAIxB,CACD,OAAO9E,QAAAA,GAAW86D,SAAU96D,CAAAA,QAAQ,CAAC;AAKrCrH,CAAAA,WAAAA,CAAYwI,KAAK,CAAE;AACjB,aAAK,CAACA,KAAAA,CAAAA,CAAAA;AAEN,SACA,IAAI,CAACy8D,MAAM,GAAG,EAAE;AAChB,SACA,IAAI,CAACC,OAAO,GAAG5kE,SAAAA,CAAAA;AACf,SACA,IAAI,CAAC6kE,WAAW,GAAG7kE,SAAAA,CAAAA;AACrB;AAIA,CACA4iE,WAAc;QACZ,MAAMrB,UAAAA,GAAa,IAAI,CAACuD,sBAAsB;QAC9C,MAAMV,KAAAA,GAAQ,IAAI,CAACO,MAAM,GAAG,IAAI,CAACI,gBAAgB,CAACxD,UAAAA,CAAAA,CAAAA;AAClD,YAAI,CAACqD,OAAO,GAAGtlB,YAAY8kB,KAAO,MAAI,CAACrjE,GAAG;QAC1C,IAAI,CAAC8jE,WAAW,GAAGvlB,WAAY8kB,CAAAA,KAAAA,EAAO,IAAI,CAAClhE,GAAG,IAAI,IAAI,CAAC0hE,OAAO;QAC9D,KAAK,CAAChC,WAAW,CAACrB,UAAAA,CAAAA,CAAAA;AACpB;AAaAwD,CAAAA,gBAAAA,CAAiBxD,UAAU,EAAE;AAC3B,cAAM,EAACxgE,GAAG,GAAEmC,GAAG,GAAC,GAAG,IAAI;AACvB,cAAMxB,QAAQ,EAAE;AAChB,cAAM0iE,QAAQ,EAAE;QAChB,IAAIxiE,CAAAA,EAAGuI,IAAM+I,EAAAA,IAAAA,EAAMiG,IAAMkB,EAAAA,IAAAA,CAAAA;QAEzB,IAAKzY,CAAAA,GAAI,GAAGuI,IAAOo3D,GAAAA,UAAAA,CAAW5/D,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YACnDuX,IAAOooD,GAAAA,UAAU,CAAC3/D,CAAE;YACpB,IAAIuX,IAAAA,IAAQpY,GAAOoY,IAAAA,IAAAA,IAAQjW,GAAK;AAC9BxB,gBAAAA,KAAAA,CAAMkB,IAAI,CAACuW,IAAAA,CAAAA,CAAAA;aACZ;AACH;QAEA,IAAIzX,KAAAA,CAAMC,MAAM,GAAG,CAAG;YAEpB,OAAO;AACL;oBAAC2/D,IAAMvgE,EAAAA,GAAAA;oBAAKyrB,GAAK;AAAC;AAClB;oBAAC80C,IAAMp+D,EAAAA,GAAAA;oBAAKspB,GAAK;AAAC;AACnB;SACF;QAED,IAAK5qB,CAAAA,GAAI,GAAGuI,IAAOzI,GAAAA,KAAAA,CAAMC,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC9CyY,IAAO3Y,GAAAA,KAAK,CAACE,CAAAA,GAAI,CAAE;YACnBsR,IAAOxR,GAAAA,KAAK,CAACE,CAAAA,GAAI,CAAE;YACnBuX,IAAOzX,GAAAA,KAAK,CAACE,CAAE;YAGf,IAAId,IAAAA,CAAK+2B,KAAK,CAAExd,CAAAA,IAAOnH,GAAAA,IAAG,IAAK,OAAOiG,IAAM;AAC1CirD,gBAAAA,KAAAA,CAAMxhE,IAAI,CAAC;oBAAC0+D,IAAMnoD,EAAAA,IAAAA;oBAAMqT,GAAK5qB,EAAAA,CAAAA,IAAKuI,IAAAA,GAAO;AAAE;aAC5C;AACH;QACA,OAAOi6D,KAAAA,CAAAA;AACT;AAOE,CACF3B,SAAY;QACV,MAAM1hE,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,MAAMmC,GAAAA,GAAM,IAAI,CAACA,GAAG;QACpB,IAAIq+D,UAAAA,GAAa,KAAK,CAAC2B,iBAAiB;QACxC,IAAI,CAAC3B,WAAWn0C,QAAQ,CAACrsB,QAAQ,CAACwgE,UAAAA,CAAW5/D,MAAM,EAAE;YACnD4/D,UAAWzpD,CAAAA,MAAM,CAAC,GAAG,CAAG/W,EAAAA,GAAAA,CAAAA,CAAAA;SACzB;QACD,IAAI,CAACwgE,WAAWn0C,QAAQ,CAAClqB,QAAQq+D,UAAW5/D,CAAAA,MAAM,KAAK,CAAG;AACxD4/D,YAAAA,UAAAA,CAAW3+D,IAAI,CAACM,GAAAA,CAAAA,CAAAA;SACjB;AACD,eAAOq+D,WAAWxoD,IAAI,CAAC,CAACC,CAAAA,EAAGpP,IAAMoP,CAAIpP,GAAAA,CAAAA,CAAAA,CAAAA;AACvC;AAMA,CACAk7D,sBAAyB;AACvB,YAAIvD,aAAa,IAAI,CAAC7oD,MAAM,CAACjQ,GAAG,IAAI,EAAE;QAEtC,IAAI84D,UAAAA,CAAW5/D,MAAM,EAAE;YACrB,OAAO4/D,UAAAA,CAAAA;SACR;QAED,MAAMx2D,IAAAA,GAAO,IAAI,CAACm4D,iBAAiB;QACnC,MAAMvuD,KAAAA,GAAQ,IAAI,CAAC4tD,kBAAkB;AACrC,YAAIx3D,IAAKpJ,CAAAA,MAAM,IAAIgT,KAAAA,CAAMhT,MAAM,EAAE;AAG/B4/D,YAAAA,UAAAA,GAAa,IAAI,CAAC4C,SAAS,CAACp5D,IAAAA,CAAK8N,MAAM,CAAClE,KAAAA,CAAAA,CAAAA,CAAAA;SACnC;AACL4sD,YAAAA,UAAAA,GAAax2D,IAAKpJ,CAAAA,MAAM,GAAGoJ,IAAAA,GAAO4J,KAAK;SACxC;AACD4sD,QAAAA,UAAAA,GAAa,IAAI,CAAC7oD,MAAM,CAACjQ,GAAG,GAAG84D,UAAAA,CAAAA;QAE/B,OAAOA,UAAAA,CAAAA;AACT;AAMAuB,CAAAA,kBAAAA,CAAmB16D,KAAK,EAAE;AACxB,eAAO,CAACk3C,WAAY,KAAI,CAACqlB,MAAM,EAAEv8D,KAAS,QAAI,CAACw8D,OAAM,IAAK,IAAI,CAACC,WAAW;AAC5E;AAMAjmD,CAAAA,gBAAAA,CAAiB8iB,KAAK,EAAE;QACtB,MAAMgiC,OAAAA,GAAU,IAAI,CAACxB,QAAQ;QAC7B,MAAMvgC,OAAAA,GAAU,IAAI,CAACG,kBAAkB,CAACJ,SAASgiC,OAAQ7/D,CAAAA,MAAM,GAAG6/D,OAAAA,CAAQ36D,GAAG;AAC7E,eAAOu2C,WAAY,KAAI,CAACqlB,MAAM,EAAEhjC,OAAU,OAAI,CAACkjC,WAAW,GAAG,IAAI,CAACD,OAAO,EAAE,IAAI;AACjF;AACF;;;;;;;;;;;;MC3JaI,aAAgB;AAC3Bh8B,IAAAA,WAAAA;AACAj0B,IAAAA,QAAAA;AACA+M,IAAAA,OAAAA;AACArU,IAAAA,MAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBF;;;;IAUO,SAASulD,IAAO;AACrB,YACD;AAED;;AAEC,IACM,MAAMrhB,GAAM,GAAC,KAAM;AACxB,QAAI9lC,EAAK;AACT,WAAO,IAAMA,EAAAA,EAAAA,CAAAA;AACf,KAAK;AAEL;;;;AAIC,IACM,SAASkO,aAAc3R,CAAAA,KAAc,EAA6B;AACvE,WAAOA,KAAU,SAAI,IAAI,OAAOA,KAAU;AAC5C,CAAC;AAED;;;;AAIC,IACM,SAASf,OAAqBe,CAAAA,KAAc,EAAgB;AACjE,QAAImD,MAAMlE,OAAO,IAAIkE,KAAMlE,CAAAA,OAAO,CAACe,KAAQ;AACzC,eAAO,IAAI;KACZ;AACD,UAAM/H,OAAOwG,MAAOgiB,CAAAA,SAAS,CAACo8C,QAAQ,CAAC9jE,IAAI,CAACiH,KAAAA,CAAAA,CAAAA;IAC5C,IAAI/H,IAAAA,CAAK8zC,KAAK,CAAC,CAAG,SAAO,SAAa9zC,IAAAA,IAAAA,CAAK8zC,KAAK,CAAC,CAAC,OAAO,QAAU;AACjE,eAAO,IAAI;KACZ;AACD,WAAO,KAAK;AACd,CAAC;AAED;;;;AAIC,IACM,SAASxtC,QAASyB,CAAAA,KAAc,EAAsB;IAC3D,OAAOA,KAAAA,KAAU,IAAI,IAAIvB,MAAOgiB,CAAAA,SAAS,CAACo8C,QAAQ,CAAC9jE,IAAI,CAACiH,KAAW;AACrE,CAAC;AAED;;;IAIA,SAAS88D,cAAe98D,CAAAA,KAAc,EAAmB;IACvD,OAAQ,QAAOA,KAAAA,KAAU,YAAYA,KAAiB6D,YAAAA,MAAK,KAAMrB,QAAAA,CAAS,CAACxC,KAAAA,CAAAA,CAAAA;AAC7E;AAKA;;;;AAIC,IACM,SAASg0B,eAAAA,CAAgBh0B,KAAc,EAAE+8D,YAAoB,EAAE;IACpE,OAAOD,cAAAA,CAAe98D,KAASA,CAAAA,GAAAA,KAAAA,GAAQ+8D,YAAY;AACrD,CAAC;AAED;;;;AAIC,IACM,SAASv0D,cAAAA,CAAkBxI,KAAoB,EAAE+8D,YAAe,EAAE;AACvE,WAAO,OAAO/8D,KAAAA,KAAU,WAAc+8D,GAAAA,YAAAA,GAAe/8D,KAAK;AAC5D,CAAC;MAEYwb,YAAe,IAACxb,OAAwBg9D,SACnD,UAAOh9D,UAAU,QAAYA,IAAAA,KAAAA,CAAMi9D,QAAQ,CAAC,OAC1Cxe,UAAWz+C,CAAAA,KAAAA,CAAAA,GAAS,MAClB,CAACA,KAAAA,GAAQg9D,UAAU;MAEZlhD,WAAc,IAAC9b,OAAwBg9D,SAClD,UAAOh9D,UAAU,QAAYA,IAAAA,KAAAA,CAAMi9D,QAAQ,CAAC,OAC1Cxe,UAAWz+C,CAAAA,KAAAA,CAAAA,GAAS,MAAMg9D,SACxB,IAACh9D,MAAM;AAEb;;;;;;IAOO,SAASu2B,QACdh+B,CAAAA,EAAiB,EACjBqX,IAAe,EACfstD,OAAY,EACG;AACf,QAAI3kE,EAAM,WAAOA,EAAGQ,CAAAA,IAAI,KAAK,UAAY;QACvC,OAAOR,EAAAA,CAAGgvD,KAAK,CAAC2V,OAASttD,EAAAA,IAAAA,CAAAA,CAAAA;KAC1B;AACH,CAAC;AAuBM,SAAS6Y,KACd00C,QAAiC,EACjC5kE,EAAoC,EACpC2kE,OAAY,EACZx8D,OAAiB,EACjB;AACA,QAAIlH,GAAW+2B,GAAa7xB,EAAAA,IAAAA,CAAAA;AAC5B,QAAIO,QAAQk+D,QAAW;AACrB5sC,QAAAA,GAAAA,GAAM4sC,SAAS5jE,MAAM;AACrB,YAAImH,OAAS;AACX,gBAAKlH,CAAI+2B,GAAAA,GAAAA,GAAM,CAAG/2B,EAAAA,CAAAA,IAAK,GAAGA,CAAK;AAC7BjB,gBAAAA,EAAAA,CAAGQ,IAAI,CAACmkE,OAAAA,EAASC,QAAQ,CAAC3jE,EAAE,EAAEA,CAAAA,CAAAA,CAAAA;AAChC;SACK;AACL,gBAAKA,CAAI,MAAGA,CAAI+2B,GAAAA,GAAAA,EAAK/2B,CAAK;AACxBjB,gBAAAA,EAAAA,CAAGQ,IAAI,CAACmkE,OAAAA,EAASC,QAAQ,CAAC3jE,EAAE,EAAEA,CAAAA,CAAAA,CAAAA;AAChC;SACD;KACI,UAAI+E,SAAS4+D,QAAW;QAC7Bz+D,IAAOD,GAAAA,MAAAA,CAAOC,IAAI,CAACy+D,QAAAA,CAAAA,CAAAA;AACnB5sC,QAAAA,GAAAA,GAAM7xB,KAAKnF,MAAM;AACjB,YAAKC,CAAI,MAAGA,CAAI+2B,GAAAA,GAAAA,EAAK/2B,CAAK;AACxBjB,YAAAA,EAAAA,CAAGQ,IAAI,CAACmkE,OAASC,EAAAA,QAAQ,CAACz+D,IAAI,CAAClF,CAAAA,CAAE,CAAC,EAAEkF,IAAI,CAAClF,CAAE;AAC7C;KACD;AACH,CAAC;AAED;;;;;AAKC,IACM,SAAS+1C,cAAAA,CAAe6tB,EAAqB,EAAEC,EAAqB,EAAE;IAC3E,IAAI7jE,CAAAA,EAAWuI,MAAcyiB,EAAqB5Q,EAAAA,EAAAA,CAAAA;IAElD,IAAI,CAACwpD,MAAM,CAACC,EAAAA,IAAMD,GAAG7jE,MAAM,KAAK8jE,EAAG9jE,CAAAA,MAAM,EAAE;AACzC,eAAO,KAAK;KACb;IAED,IAAKC,CAAAA,GAAI,GAAGuI,IAAOq7D,GAAAA,EAAAA,CAAG7jE,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QAC3CgrB,EAAK44C,GAAAA,EAAE,CAAC5jE,CAAE;QACVoa,EAAKypD,GAAAA,EAAE,CAAC7jE,CAAE;QAEV,IAAIgrB,EAAAA,CAAGliB,YAAY,KAAKsR,EAAGtR,CAAAA,YAAY,IAAIkiB,EAAAA,CAAGxiB,KAAK,KAAK4R,EAAG5R,CAAAA,KAAK,EAAE;AAChE,mBAAO,KAAK;SACb;AACH;AAEA,WAAO,IAAI;AACb,CAAC;AAED;;;AAGC,IACM,SAASs7D,KAAS5nC,CAAAA,MAAS,EAAK;AACrC,QAAIz2B,QAAQy2B,MAAS;QACnB,OAAOA,MAAAA,CAAO5b,GAAG,CAACwjD,KAAAA,CAAAA,CAAAA;KACnB;AAED,QAAI/+D,SAASm3B,MAAS;AACpB,cAAMt5B,MAASqC,GAAAA,MAAAA,CAAOygC,MAAM,CAAC,IAAI;QACjC,MAAMxgC,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACg3B,MAAAA,CAAAA,CAAAA;QACzB,MAAM6nC,IAAAA,GAAO7+D,KAAKnF,MAAM;AACxB,YAAI+gD,CAAI;QAER,MAAOA,CAAAA,GAAIijB,IAAM,IAAEjjB,CAAG;AACpBl+C,YAAAA,MAAM,CAACsC,IAAI,CAAC47C,CAAAA,CAAE,CAAC,GAAGgjB,KAAM5nC,CAAAA,MAAM,CAACh3B,IAAI,CAAC47C,CAAAA,CAAE,CAAC;AACzC;QAEA,OAAOl+C,MAAAA,CAAAA;KACR;IAED,OAAOs5B,MAAAA,CAAAA;AACT,CAAC;AAED,SAAS8nC,UAAAA,CAAWz+D,GAAW,EAAE;IAC/B,OAAO;AAAC;AAAa;AAAa;KAAc,CAAC4W,OAAO,CAAC5W,GAAAA,CAAAA,KAAS,CAAC;AACrE;AAEA;;;;IAKO,SAAS0+D,OAAAA,CAAQ1+D,GAAW,EAAE3C,MAAiB,EAAEs5B,MAAiB,EAAEp2B,OAAkB,EAAE;IAC7F,IAAI,CAACk+D,WAAWz+D,GAAM;AACpB;KACD;IAED,MAAM2+D,IAAAA,GAAOthE,MAAM,CAAC2C,GAAI;IACxB,MAAM4+D,IAAAA,GAAOjoC,MAAM,CAAC32B,GAAI;IAExB,IAAIR,QAAAA,CAASm/D,IAASn/D,CAAAA,IAAAA,QAAAA,CAASo/D,IAAO;;AAEpC99B,QAAAA,KAAAA,CAAM69B,MAAMC,IAAMr+D,EAAAA,OAAAA,CAAAA,CAAAA;KACb;QACLlD,MAAM,CAAC2C,GAAI,IAAGu+D,KAAMK,CAAAA,IAAAA,CAAAA,CAAAA;KACrB;AACH,CAAC;AA0BM,SAAS99B,KAASzjC,CAAAA,MAAS,EAAEs5B,MAAmB,EAAEp2B,OAAsB,EAAa;IAC1F,MAAM8+C,OAAAA,GAAUn/C,OAAQy2B,CAAAA,MAAAA,CAAAA,GAAUA,MAAS;AAACA,QAAAA,MAAAA;AAAO;IACnD,MAAM3zB,IAAAA,GAAOq8C,QAAQ7kD,MAAM;IAE3B,IAAI,CAACgF,SAASnC,MAAS;QACrB,OAAOA,MAAAA,CAAAA;KACR;AAEDkD,IAAAA,OAAAA,GAAUA,WAAW,EAAC;IACtB,MAAMs+D,MAAAA,GAASt+D,OAAQs+D,CAAAA,MAAM,IAAIH,OAAAA,CAAAA;IACjC,IAAII,OAAAA,CAAAA;AAEJ,QAAK,IAAIrkE,CAAI,MAAGA,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;QAC7BqkE,OAAUzf,GAAAA,OAAO,CAAC5kD,CAAE;QACpB,IAAI,CAAC+E,SAASs/D,OAAU;YACtB,SAAS;SACV;QAED,MAAMn/D,IAAAA,GAAOD,MAAOC,CAAAA,IAAI,CAACm/D,OAAAA,CAAAA,CAAAA;QACzB,IAAK,IAAIvjB,CAAI,MAAGijB,IAAO7+D,GAAAA,IAAAA,CAAKnF,MAAM,EAAE+gD,CAAAA,GAAIijB,IAAM,IAAEjjB,CAAG;AACjDsjB,YAAAA,MAAAA,CAAOl/D,IAAI,CAAC47C,CAAE,GAAEl+C,QAAQyhE,OAASv+D,EAAAA,OAAAA,CAAAA,CAAAA;AACnC;AACF;IAEA,OAAOlD,MAAAA,CAAAA;AACT,CAAC;AAgBM,SAAS+oC,OAAAA,CAAW/oC,MAAS,EAAEs5B,MAAmB,EAAa;;IAEpE,OAAOmK,KAAAA,CAASzjC,QAAQs5B,MAAQ;QAACkoC,MAAQE,EAAAA,SAAAA;AAAS;AACpD,CAAC;AAED;;;IAIO,SAASA,SAAU/+D,CAAAA,GAAW,EAAE3C,MAAiB,EAAEs5B,MAAiB,EAAE;IAC3E,IAAI,CAAC8nC,WAAWz+D,GAAM;AACpB;KACD;IAED,MAAM2+D,IAAAA,GAAOthE,MAAM,CAAC2C,GAAI;IACxB,MAAM4+D,IAAAA,GAAOjoC,MAAM,CAAC32B,GAAI;IAExB,IAAIR,QAAAA,CAASm/D,IAASn/D,CAAAA,IAAAA,QAAAA,CAASo/D,IAAO;AACpCx4B,QAAAA,OAAAA,CAAQu4B,IAAMC,EAAAA,IAAAA,CAAAA,CAAAA;KACT,UAAI,CAACl/D,MAAAA,CAAOgiB,SAAS,CAACs9C,cAAc,CAAChlE,IAAI,CAACqD,MAAAA,EAAQ2C,GAAM;QAC7D3C,MAAM,CAAC2C,GAAI,IAAGu+D,KAAMK,CAAAA,IAAAA,CAAAA,CAAAA;KACrB;AACH,CAAC;AAED;;IAGO,SAASK,WAAAA,CAAY/+B,KAAa,EAAEj/B,KAAc,EAAEs0C,QAAgB,EAAEupB,OAAe,EAAE;AAC5F,QAAI79D,UAAUpI,SAAW;AACvBqQ,QAAAA,OAAAA,CAAQC,IAAI,CAAC+2B,KAAAA,GAAQ,KAAQqV,GAAAA,QAAAA,GAC3B,kCAAkCupB,OAAU;KAC/C;AACH,CAAC;AAED;AACA,MAAMI,YAAe;;AAEnB,QAAInqD,CAAAA,CAAKA,GAAAA,CAAAA;;IAET/S,CAAG4vC,EAAAA,CAAAA,CAAKA,GAAAA,CAAAA,CAAE5vC,CAAC;IACXC,CAAG2vC,EAAAA,CAAAA,CAAKA,GAAAA,CAAAA,CAAE3vC,CAAC;AACb;AAEA;;AAEC,IACM,SAASk9D,SAAUn/D,CAAAA,GAAW,EAAE;IACrC,MAAMwhC,KAAAA,GAAQxhC,GAAIohC,CAAAA,KAAK,CAAC;AACxB,UAAMzhC,OAAiB,EAAE;AACzB,QAAIy/D,GAAM;IACV,KAAK,MAAMC,QAAQ79B,KAAO;QACxB49B,GAAOC,IAAAA,IAAAA,CAAAA;QACP,IAAID,GAAAA,CAAIlB,QAAQ,CAAC,IAAO;AACtBkB,YAAAA,GAAAA,GAAMA,GAAIpyB,CAAAA,KAAK,CAAC,GAAG,CAAC,CAAK;SACpB;AACLrtC,YAAAA,IAAAA,CAAKlE,IAAI,CAAC2jE,GAAAA,CAAAA,CAAAA;YACVA,GAAM;SACP;AACH;IACA,OAAOz/D,IAAAA,CAAAA;AACT,CAAC;AAED,SAAS2/D,eAAAA,CAAgBt/D,GAAW,EAAE;AACpC,UAAML,OAAOw/D,SAAUn/D,CAAAA,GAAAA,CAAAA,CAAAA;AACvB,WAAO2V,CAAAA,GAAO;QACZ,KAAK,MAAM4lC,KAAK57C,IAAM;AACpB,gBAAI47C,MAAM,EAAI;gBAGZ,MAAM;aACP;YACD5lC,GAAMA,GAAAA,GAAAA,IAAOA,GAAG,CAAC4lC,CAAE;AACrB;QACA,OAAO5lC,GAAAA,CAAAA;AACT;AACF;AAEO,SAASlJ,gBAAAA,CAAiBkJ,GAAc,EAAE3V,GAAW,EAAO;IACjE,MAAM6nC,QAAAA,GAAWq3B,YAAY,CAACl/D,GAAI,MAAKk/D,YAAY,CAACl/D,GAAAA,CAAI,GAAGs/D,eAAAA,CAAgBt/D,GAAG;AAC9E,WAAO6nC,QAASlyB,CAAAA,GAAAA,CAAAA,CAAAA;AAClB,CAAC;AAED;;AAEC,IACM,SAASwtB,WAAYulB,CAAAA,GAAW,EAAE;IACvC,OAAOA,GAAAA,CAAI1nD,MAAM,CAAC,GAAGu+D,WAAW,EAAK7W,GAAAA,GAAAA,CAAI1b,KAAK,CAAC;AACjD,CAAC;MAGYv+B,OAAU,IAACxN,KAAmB,UAAOA,UAAU,YAAY;MAE3DgnC,UAAa,IAAChnC,KAAqD,UAAOA,UAAU,WAAW;AAE5G;AACaotC,MAAAA,SAAAA,GAAY,CAAIx8B,CAAAA,EAAWpP,CAAc;AACpD,QAAIoP,CAAE3Q,CAAAA,IAAI,KAAKuB,CAAAA,CAAEvB,IAAI,EAAE;AACrB,eAAO,KAAK;KACb;IAED,KAAK,MAAMvG,QAAQkX,CAAG;AACpB,YAAI,CAACpP,CAAAA,CAAE9G,GAAG,CAAChB,IAAO;AAChB,mBAAO,KAAK;SACb;AACH;AAEA,WAAO,IAAI;AACb,EAAE;AAEF;;;AAGC,IACM,SAASu2C,aAAcx1B,CAAAA,CAAa,EAAE;IAC3C,OAAOA,CAAAA,CAAExiB,IAAI,KAAK,SAAawiB,IAAAA,CAAAA,CAAExiB,IAAI,KAAK,WAAWwiB,CAAExiB,CAAAA,IAAI,KAAK;AAClE;;AC5ZA;;;AAGC,IAEM,MAAM8gB,EAAKrgB,GAAAA,IAAAA,CAAKqgB,GAAG;AACnB,MAAMjB,GAAM,OAAIiB,GAAG;AACnB,MAAMwlD,KAAQzmD,GAAAA,GAAAA,GAAMiB,GAAG;AACjBylD,MAAAA,QAAAA,GAAW36D,MAAOE,CAAAA,kBAAkB;AAC1C,MAAM06D,WAAc1lD,GAAAA,EAAAA,GAAK,IAAI;AAC7B,MAAMF,OAAUE,GAAAA,EAAAA,GAAK,EAAE;AACvB,MAAM2lD,UAAa3lD,GAAAA,EAAAA,GAAK,EAAE;AACpB4lD,MAAAA,aAAAA,GAAgB5lD,EAAK,OAAI,EAAE;AAE3Bg6C,MAAAA,KAAAA,GAAQr6D,IAAKq6D,CAAAA,MAAM;AACnBtwD,MAAAA,IAAAA,GAAO/J,IAAK+J,CAAAA,KAAK;AAEvB,SAAS+uD,YAAazwD,CAAAA,CAAS,EAAEC,CAAS,EAAEmwB,OAAe,EAAE;AAClE,WAAOz4B,IAAKuY,CAAAA,GAAG,CAAClQ,CAAAA,GAAIC,CAAKmwB,CAAAA,GAAAA,OAAAA,CAAAA;AAC3B,CAAC;AAED;;AAEC,IACM,SAASggC,OAAQvlD,CAAAA,KAAa,EAAE;IACrC,MAAMgzD,YAAAA,GAAelmE,IAAK+2B,CAAAA,KAAK,CAAC7jB,KAAAA,CAAAA,CAAAA;AAChCA,IAAAA,KAAAA,GAAQ4lD,aAAa5lD,KAAOgzD,EAAAA,YAAAA,EAAchzD,KAAQ,WAAQgzD,eAAehzD,KAAK;IAC9E,MAAMizD,SAAAA,GAAYnmE,KAAK+pB,GAAG,CAAC,IAAI/pB,IAAKoE,CAAAA,KAAK,CAACi2D,KAAMnnD,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAChD,UAAMkzD,WAAWlzD,KAAQizD,GAAAA,SAAAA,CAAAA;IACzB,MAAME,YAAAA,GAAeD,QAAY,QAAI,CAAIA,GAAAA,QAAAA,IAAY,IAAI,CAAIA,GAAAA,QAAAA,IAAY,CAAI,OAAI,EAAE;AACnF,WAAOC,YAAeF,GAAAA,SAAAA,CAAAA;AACxB,CAAC;AAED;;;AAGC,IACM,SAAS3uC,UAAWlwB,CAAAA,KAAa,EAAE;AACxC,UAAMmwB,SAAmB,EAAE;IAC3B,MAAM3N,IAAAA,GAAO9pB,IAAK8pB,CAAAA,IAAI,CAACxiB,KAAAA,CAAAA,CAAAA;IACvB,IAAIxG,CAAAA,CAAAA;AAEJ,QAAKA,CAAI,MAAGA,CAAIgpB,GAAAA,IAAAA,EAAMhpB,CAAK;QACzB,IAAIwG,KAAAA,GAAQxG,MAAM,CAAG;AACnB22B,YAAAA,MAAAA,CAAO31B,IAAI,CAAChB,CAAAA,CAAAA,CAAAA;YACZ22B,MAAO31B,CAAAA,IAAI,CAACwF,KAAQxG,GAAAA,CAAAA,CAAAA,CAAAA;SACrB;AACH;AACA,QAAIgpB,IAAUA,MAAAA,IAAO,KAAI;AACvB2N,QAAAA,MAAAA,CAAO31B,IAAI,CAACgoB,IAAAA,CAAAA,CAAAA;KACb;AAED2N,IAAAA,MAAAA,CAAOxf,IAAI,CAAC,CAACC,GAAGpP,CAAMoP,GAAAA,CAAAA,GAAIpP,GAAG1H,GAAG;IAChC,OAAOq2B,MAAAA,CAAAA;AACT,CAAC;AAEM,SAASpS,QAASihD,CAAAA,CAAU,EAAe;AAChD,WAAO,CAACtpD,KAAAA,CAAM+oC,UAAWugB,CAAAA,CAAAA,CAAAA,CAAAA,IAAiBx8D,QAASw8D,CAAAA,CAAAA,CAAAA,CAAAA;AACrD,CAAC;AAEM,SAASzN,WAAAA,CAAYxwD,CAAS,EAAEowB,OAAe,EAAE;IACtD,MAAM8tC,OAAAA,GAAUvmE,IAAK+2B,CAAAA,KAAK,CAAC1uB,CAAAA,CAAAA,CAAAA;AAC3B,WAAO,OAAYowB,GAAAA,OAAAA,IAAYpwB,CAAO,IAACk+D,UAAU9tC,OAAYpwB,IAAAA,CAAAA,CAAAA;AAC/D,CAAC;AAED;;IAGO,SAAS0xD,kBACdtuC,CAAAA,KAA+B,EAC/B/nB,MAAoC,EACpC6jC,QAAgB,EAChB;AACA,QAAIzmC,GAAWuI,IAAc/B,EAAAA,KAAAA,CAAAA;IAE7B,IAAKxG,CAAAA,GAAI,GAAGuI,IAAOoiB,GAAAA,KAAAA,CAAM5qB,MAAM,EAAEC,CAAAA,GAAIuI,MAAMvI,CAAK;AAC9CwG,QAAAA,KAAAA,GAAQmkB,KAAK,CAAC3qB,CAAE,EAACymC,QAAS;QAC1B,IAAI,CAACvqB,MAAM1V,KAAQ;AACjB5D,YAAAA,MAAAA,CAAOzD,GAAG,GAAGD,IAAAA,CAAKC,GAAG,CAACyD,MAAAA,CAAOzD,GAAG,EAAEqH,KAAAA,CAAAA,CAAAA;AAClC5D,YAAAA,MAAAA,CAAOtB,GAAG,GAAGpC,IAAAA,CAAKoC,GAAG,CAACsB,MAAAA,CAAOtB,GAAG,EAAEkF,KAAAA,CAAAA,CAAAA;SACnC;AACH;AACF,CAAC;AAEM,SAASgb,SAAUkkD,CAAAA,OAAe,EAAE;IACzC,OAAOA,OAAAA,IAAWnmD,EAAAA,GAAK,GAAE;AAC3B,CAAC;AAEM,SAASwe,SAAU4nC,CAAAA,OAAe,EAAE;IACzC,OAAOA,OAAAA,IAAW,MAAMpmD,EAAC;AAC3B,CAAC;AAED;;;;;;AAMC,IACM,SAAS24C,cAAe3wD,CAAAA,CAAS,EAAE;IACxC,IAAI,CAACq+D,eAAer+D,CAAI;AACtB;KACD;AACD,QAAI0Z,CAAI;AACR,QAAI6sB,CAAI;AACR,UAAO5uC,KAAK+2B,KAAK,CAAC1uB,CAAI0Z,GAAAA,CAAAA,CAAAA,GAAKA,MAAM1Z,CAAG;QAClC0Z,CAAK;AACL6sB,QAAAA,CAAAA,EAAAA,CAAAA;AACF;IACA,OAAOA,CAAAA,CAAAA;AACT,CAAC;AAED;AACO,SAASnkB,iBAAAA,CACdk8C,WAAkB,EAClBC,UAAiB,EACjB;AACA,UAAMC,mBAAsBD,GAAAA,UAAAA,CAAWv+D,CAAC,GAAGs+D,YAAYt+D,CAAC;AACxD,UAAMy+D,mBAAsBF,GAAAA,UAAAA,CAAWt+D,CAAC,GAAGq+D,YAAYr+D,CAAC;AACxD,UAAMy+D,2BAA2B/mE,IAAK8pB,CAAAA,IAAI,CAAC+8C,mBAAAA,GAAsBA,sBAAsBC,mBAAsBA,GAAAA,mBAAAA,CAAAA,CAAAA;AAE7G,QAAIhnD,KAAQ9f,GAAAA,IAAAA,CAAKgnE,KAAK,CAACF,mBAAqBD,EAAAA,mBAAAA,CAAAA,CAAAA;IAE5C,IAAI/mD,KAAAA,GAAS,CAAC,MAAMO,EAAK;AACvBP,QAAAA,KAAAA,IAASV;KACV;IAED,OAAO;AACLU,QAAAA,KAAAA;QACAiL,QAAUg8C,EAAAA,wBAAAA;AACZ;AACF,CAAC;AAEM,SAAStY,qBAAAA,CAAsB/kC,GAAU,EAAEC,GAAU,EAAE;IAC5D,OAAO3pB,IAAAA,CAAK8pB,IAAI,CAAC9pB,IAAAA,CAAK+pB,GAAG,CAACJ,GAAAA,CAAIthB,CAAC,GAAGqhB,GAAAA,CAAIrhB,CAAC,EAAE,KAAKrI,KAAK+pB,GAAG,CAACJ,IAAIrhB,CAAC,GAAGohB,GAAIphB,CAAAA,CAAC,EAAE;AACxE,CAAC;AAED;;;AAGC,IACM,SAAS2+D,UAAAA,CAAW/uD,CAAS,EAAEpP,CAAS,EAAE;AAC/C,WAAO,CAACoP,CAAAA,GAAIpP,CAAI+8D,GAAAA,KAAI,IAAKzmD,GAAMiB,GAAAA,EAAAA,CAAAA;AACjC,CAAC;AAED;;;AAGC,IACM,SAAS8kC,eAAgBjtC,CAAAA,CAAS,EAAE;AACzC,WAAO,CAACA,CAAIkH,GAAAA,GAAAA,GAAMA,GAAE,IAAKA,GAAAA,CAAAA;AAC3B,CAAC;AAED;;IAGO,SAASW,aAAAA,CAAcD,KAAa,EAAE5f,KAAa,EAAE+H,GAAW,EAAEi/D,qBAA+B,EAAE;AACxG,UAAMhvD,IAAIitC,eAAgBrlC,CAAAA,KAAAA,CAAAA,CAAAA;AAC1B,UAAMqnD,IAAIhiB,eAAgBjlD,CAAAA,KAAAA,CAAAA,CAAAA;AAC1B,UAAM6hB,IAAIojC,eAAgBl9C,CAAAA,GAAAA,CAAAA,CAAAA;IAC1B,MAAMm/D,YAAAA,GAAejiB,gBAAgBgiB,CAAIjvD,GAAAA,CAAAA,CAAAA,CAAAA;IACzC,MAAMmvD,UAAAA,GAAaliB,gBAAgBpjC,CAAI7J,GAAAA,CAAAA,CAAAA,CAAAA;IACvC,MAAMovD,YAAAA,GAAeniB,gBAAgBjtC,CAAIivD,GAAAA,CAAAA,CAAAA,CAAAA;IACzC,MAAMI,UAAAA,GAAapiB,gBAAgBjtC,CAAI6J,GAAAA,CAAAA,CAAAA,CAAAA;IACvC,OAAO7J,CAAAA,KAAMivD,KAAKjvD,CAAM6J,KAAAA,CAAAA,IAAMmlD,yBAAyBC,CAAMplD,KAAAA,CAAAA,IACvDqlD,YAAeC,GAAAA,UAAAA,IAAcC,YAAeC,GAAAA,UAAAA,CAAAA;AACpD,CAAC;AAED;;;;;;IAOO,SAAS5oC,WAAYr3B,CAAAA,KAAa,EAAErH,GAAW,EAAEmC,GAAW,EAAE;AACnE,WAAOpC,KAAKoC,GAAG,CAACnC,KAAKD,IAAKC,CAAAA,GAAG,CAACmC,GAAKkF,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACrC,CAAC;AAED;;;AAGC,IACM,SAASw5B,WAAYx5B,CAAAA,KAAa,EAAE;IACzC,OAAOq3B,WAAAA,CAAYr3B,KAAO,GAAC,KAAO;AACpC,CAAC;AAED;;;;;;IAOO,SAAS6zC,UAAAA,CAAW7zC,KAAa,EAAEpH,KAAa,EAAE+H,GAAW,EAAEwwB,OAAU,OAAI,EAAE;AACpF,WAAOnxB,KAAStH,IAAAA,IAAAA,CAAKC,GAAG,CAACC,KAAO+H,EAAAA,GAAAA,CAAAA,GAAOwwB,OAAWnxB,IAAAA,KAAAA,IAAStH,IAAKoC,CAAAA,GAAG,CAAClC,KAAAA,EAAO+H,GAAOwwB,CAAAA,GAAAA,OAAAA,CAAAA;AACpF;;ACpLO,SAASioC,OACd4C,CAAAA,KAAgB,EAChBh8D,KAAa,EACbkgE,GAAgC,EAChC;IACAA,GAAMA,GAAAA,GAAAA,KAAQ,CAACl+D,KAAAA,GAAUg6D,KAAK,CAACh6D,KAAAA,CAAM,GAAGhC,KAAI;IAC5C,IAAI2hB,EAAAA,GAAKq6C,KAAMziE,CAAAA,MAAM,GAAG;AACxB,QAAImoB,EAAK;IACT,IAAIy+C,GAAAA,CAAAA;IAEJ,MAAOx+C,EAAAA,GAAKD,KAAK,CAAG;QAClBy+C,GAAM,GAACz+C,KAAKC,EAAO;AACnB,YAAIu+C,IAAIC,GAAM;YACZz+C,EAAKy+C,GAAAA,GAAAA,CAAAA;SACA;YACLx+C,EAAKw+C,GAAAA,GAAAA,CAAAA;SACN;AACH;IAEA,OAAO;AAACz+C,QAAAA,EAAAA;AAAIC,QAAAA,EAAAA;AAAE;AAChB,CAAC;AAED;;;;;;;AAOC,IACM,MAAMJ,YAAe,IAC1By6C,KACAj9D,EAAAA,GAAAA,EACAiB,KACAuV,EAAAA,IAAAA,GAEA6jD,OAAQ4C,CAAAA,KAAAA,EAAOh8D,KAAOuV,EAAAA,IAAAA,GAClBvT,CAAAA,KAAS;AACT,cAAMo+D,EAAKpE,GAAAA,KAAK,CAACh6D,KAAAA,CAAM,CAACjD,GAAI;QAC5B,OAAOqhE,EAAAA,GAAKpgE,KAASogE,IAAAA,EAAAA,KAAOpgE,KAASg8D,IAAAA,KAAK,CAACh6D,KAAQ,KAAE,CAACjD,GAAAA,CAAI,KAAKiB,KAAAA,CAAAA;KAE/DgC,GAAAA,CAAAA,QAASg6D,KAAK,CAACh6D,MAAM,CAACjD,GAAAA,CAAI,GAAGiB,KAAK,EAAE;AAE1C;;;;;;AAMC,IACYshB,MAAAA,aAAAA,GAAgB,CAC3B06C,KACAj9D,EAAAA,GAAAA,EACAiB,QAEAo5D,OAAQ4C,CAAAA,KAAAA,EAAOh8D,KAAOgC,EAAAA,CAAAA,QAASg6D,KAAK,CAACh6D,MAAM,CAACjD,GAAAA,CAAI,IAAIiB,KAAO;AAE7D;;;;;;IAOO,SAASs6D,cAAel7D,CAAAA,MAAgB,EAAEzG,GAAW,EAAEmC,GAAW,EAAE;AACzE,QAAIlC,KAAQ;IACZ,IAAI+H,GAAAA,GAAMvB,OAAO7F,MAAM;AAEvB,UAAOX,QAAQ+H,GAAOvB,IAAAA,MAAM,CAACxG,KAAAA,CAAM,GAAGD,GAAK;AACzCC,QAAAA,KAAAA,EAAAA,CAAAA;AACF;AACA,UAAO+H,MAAM/H,KAASwG,IAAAA,MAAM,CAACuB,GAAM,KAAE,GAAG7F,GAAK;AAC3C6F,QAAAA,GAAAA,EAAAA,CAAAA;AACF;IAEA,OAAO/H,KAAAA,GAAQ,CAAK+H,IAAAA,GAAAA,GAAMvB,MAAO7F,CAAAA,MAAM,GACnC6F,MAAAA,CAAO2sC,KAAK,CAACnzC,KAAO+H,EAAAA,GAAAA,CAAAA,GACpBvB,MAAM;AACZ,CAAC;AAED,MAAMihE,WAAc;AAAC;AAAQ;AAAO;AAAS;AAAU;AAAU;AAgB1D,SAASx2D,iBAAAA,CAAkBsa,KAAK,EAAE8E,QAAQ,EAAE;IACjD,IAAI9E,KAAAA,CAAMm8C,QAAQ,EAAE;AAClBn8C,QAAAA,KAAAA,CAAMm8C,QAAQ,CAACnoE,SAAS,CAACqC,IAAI,CAACyuB,QAAAA,CAAAA,CAAAA;AAC9B;KACD;IAEDxqB,MAAO+9C,CAAAA,cAAc,CAACr4B,KAAAA,EAAO,UAAY;AACvCs4B,QAAAA,YAAAA,EAAc,IAAI;AAClBC,QAAAA,UAAAA,EAAY,KAAK;QACjB18C,KAAO;YACL7H,SAAW;AAAC8wB,gBAAAA,QAAAA;AAAS;AACvB;AACF;IAEAo3C,WAAY/nE,CAAAA,OAAO,CAAC,CAACyG,GAAQ;QAC3B,MAAMd,MAAAA,GAAS,YAAYikC,WAAYnjC,CAAAA,GAAAA,CAAAA,CAAAA;QACvC,MAAMoU,IAAAA,GAAOgR,KAAK,CAACplB,GAAI;QAEvBN,MAAO+9C,CAAAA,cAAc,CAACr4B,KAAAA,EAAOplB,GAAK;AAChC09C,YAAAA,YAAAA,EAAc,IAAI;AAClBC,YAAAA,UAAAA,EAAY,KAAK;YACjB18C,KAAM,KAAG4P,IAAI,EAAE;AACb,sBAAM9R,GAAMqV,GAAAA,IAAAA,CAAKo0C,KAAK,CAAC,IAAI,EAAE33C,IAAAA,CAAAA,CAAAA;AAE7BuU,gBAAAA,KAAAA,CAAMm8C,QAAQ,CAACnoE,SAAS,CAACG,OAAO,CAAC,CAACioE,MAAW;AAC3C,wBAAI,OAAOA,MAAM,CAACtiE,MAAAA,CAAO,KAAK,UAAY;wBACxCsiE,MAAM,CAACtiE,OAAO,CAAI2R,GAAAA,IAAAA,CAAAA,CAAAA;qBACnB;AACH;gBAEA,OAAO9R,GAAAA,CAAAA;AACT;AACF;AACF;AACF,CAAC;AAQM,SAAS4L,mBAAAA,CAAoBya,KAAK,EAAE8E,QAAQ,EAAE;IACnD,MAAMu3C,IAAAA,GAAOr8C,MAAMm8C,QAAQ;AAC3B,QAAI,CAACE,IAAM;AACT;KACD;IAED,MAAMroE,SAAAA,GAAYqoE,KAAKroE,SAAS;IAChC,MAAM6J,KAAAA,GAAQ7J,SAAUwd,CAAAA,OAAO,CAACsT,QAAAA,CAAAA,CAAAA;IAChC,IAAIjnB,KAAAA,KAAU,CAAC,CAAG;QAChB7J,SAAUuX,CAAAA,MAAM,CAAC1N,KAAO;KACzB;IAED,IAAI7J,SAAAA,CAAUoB,MAAM,GAAG,CAAG;AACxB;KACD;IAED8mE,WAAY/nE,CAAAA,OAAO,CAAC,CAACyG,GAAQ;QAC3B,OAAOolB,KAAK,CAACplB,GAAI;AACnB;AAEA,WAAOolB,MAAMm8C,QAAQ;AACvB,CAAC;AAED;;AAEC,IACM,SAAS5vD,YAAgBpX,CAAAA,KAAU,EAAE;IAC1C,MAAMc,GAAAA,GAAM,IAAIsrC,GAAOpsC,CAAAA,KAAAA,CAAAA,CAAAA;AAEvB,QAAIc,GAAI6F,CAAAA,IAAI,KAAK3G,KAAAA,CAAMC,MAAM,EAAE;QAC7B,OAAOD,KAAAA,CAAAA;KACR;IAED,OAAO6J,KAAAA,CAAM5H,IAAI,CAACnB,GAAAA,CAAAA,CAAAA;AACpB;;AC1LO,SAAS2+B,UAAW0nC,CAAAA,SAAiB,EAAEC,SAAiB,EAAEC,UAAkB,EAAE;IACnF,OAAOD,SAAAA,GAAY,GAAMD,GAAAA,SAAAA,GAAY,KAAQE,GAAAA,UAAAA,CAAAA;AAC/C,CAAC;AAED;;AAEA,GACa7nE,MAAAA,gBAAAA,GAAoB,WAAW;IAC1C,IAAI,OAAOE,WAAW,WAAa;QACjC,OAAO,SAASu9B,QAAQ,EAAE;YACxB,OAAOA,QAAAA,EAAAA,CAAAA;AACT;KACD;AACD,WAAOv9B,OAAO4nE,qBAAqB;AACrC,CAAK;AAEL;;;AAGC,IACM,SAAS7zC,SAAAA,CACdx0B,EAA4B,EAC5B2kE,OAAY,EACZ;AACA,QAAI2D,YAAY,EAAE;AAClB,QAAIC,UAAU,KAAK;IAEnB,OAAO,SAAS,GAAGlxD,IAAW,EAAE;;QAE9BixD,SAAYjxD,GAAAA,IAAAA,CAAAA;AACZ,YAAI,CAACkxD,OAAS;AACZA,YAAAA,OAAAA,GAAU,IAAI;YACdhoE,gBAAiBC,CAAAA,IAAI,CAACC,MAAAA,EAAQ,IAAM;AAClC8nE,gBAAAA,OAAAA,GAAU,KAAK;gBACfvoE,EAAGgvD,CAAAA,KAAK,CAAC2V,OAAS2D,EAAAA,SAAAA,CAAAA,CAAAA;AACpB;SACD;AACH;AACF,CAAC;AAED;;AAEC,IACM,SAAS12B,QAAAA,CAAmC5xC,EAA4B,EAAEwE,KAAa,EAAE;IAC9F,IAAIgkE,OAAAA,CAAAA;IACJ,OAAO,SAAS,GAAGnxD,IAAW,EAAE;AAC9B,YAAI7S,KAAO;YACTikE,YAAaD,CAAAA,OAAAA,CAAAA,CAAAA;YACbA,OAAUE,GAAAA,UAAAA,CAAW1oE,IAAIwE,KAAO6S,EAAAA,IAAAA,CAAAA,CAAAA;SAC3B;YACLrX,EAAGgvD,CAAAA,KAAK,CAAC,IAAI,EAAE33C,IAAAA,CAAAA,CAAAA;SAChB;QACD,OAAO7S,KAAAA,CAAAA;AACT;AACF,CAAC;AAED;;;AAGC,IACM,MAAMq1B,kBAAqB,IAAC3B,KAAsCA,GAAAA,KAAAA,KAAU,OAAU,YAASA,KAAU,aAAQ,OAAU,YAAS;AAE3I;;;AAGC,IACY+B,MAAAA,cAAAA,GAAiB,CAAC/B,KAAmC73B,EAAAA,KAAAA,EAAe+H,MAAgB8vB,KAAU,eAAU73B,QAAQ63B,KAAU,aAAQ9vB,MAAM,CAAC/H,QAAQ+H,GAAE,IAAK,EAAE;AAEvK;;;AAGC,IACYokD,MAAAA,MAAAA,GAAS,CAACt0B,KAAoCrvB,EAAAA,IAAAA,EAAcF,OAAeqiD,GAAiB;IACvG,MAAM2d,KAAAA,GAAQ3d,GAAM,YAAS,OAAO;IACpC,OAAO9yB,KAAAA,KAAUywC,KAAQhgE,GAAAA,KAAAA,GAAQuvB,KAAU,gBAAW,CAACrvB,IAAOF,GAAAA,KAAI,IAAK,IAAIE,IAAI;AACjF,EAAE;AAEF;;;IAIO,SAASoc,gCAAiC5a,CAAAA,IAAmC,EAAEqU,MAAsB,EAAEsG,kBAA2B,EAAE;IACzI,MAAMu/B,UAAAA,GAAa7lC,OAAO1d,MAAM;AAEhC,QAAIX,KAAQ;AACZ,QAAI+R,KAAQmyC,GAAAA,UAAAA,CAAAA;IAEZ,IAAIl6C,IAAAA,CAAKiI,OAAO,EAAE;AAChB,cAAM,EAAChI,MAAAA,GAAQoD,OAAAA,GAAQ,GAAGrD,IAAAA,CAAAA;QAC1B,MAAMI,IAAAA,GAAOH,OAAOG,IAAI;QACxB,MAAM,EAACrK,GAAG,GAAEmC,GAAG,GAAE6I,UAAU,GAAEC,UAAU,GAAC,GAAGf,MAAAA,CAAOa,aAAa;AAE/D,YAAIC,UAAY;AACd/K,YAAAA,KAAAA,GAAQy+B,WAAY3+B,CAAAA,IAAAA,CAAKC,GAAG;AAE1B4oB,YAAAA,YAAAA,CAAatb,OAASjD,EAAAA,IAAAA,EAAMrK,GAAK+oB,CAAAA,CAAAA,EAAE;YAEnCnE,kBAAqBu/B,GAAAA,UAAAA,GAAav7B,YAAatK,CAAAA,MAAAA,EAAQjU,IAAMH,EAAAA,MAAAA,CAAOqO,gBAAgB,CAACvY,GAAM+oB,CAAAA,CAAAA,CAAAA,EAAE,CAC/F,KAAGo7B,UAAa;SACjB;AACD,YAAIl5C,UAAY;AACd+G,YAAAA,KAAAA,GAAQ0sB,WAAY3+B,CAAAA,IAAAA,CAAKoC,GAAG;YAE1BymB,YAAatb,CAAAA,OAAAA,EAASpD,MAAOG,CAAAA,IAAI,EAAElI,GAAAA,EAAK,IAAI,CAAE6mB,CAAAA,EAAE,GAAG;AAEnDpE,YAAAA,kBAAAA,GAAqB,CAAIgE,GAAAA,YAAAA,CAAatK,MAAQjU,EAAAA,IAAAA,EAAMH,OAAOqO,gBAAgB,CAACpW,GAAM,OAAI,EAAE6mB,EAAE,GAAG,CAAC,GAChG/oB,OAAOkkD,UAAclkD,CAAAA,GAAAA,KAAAA,CAAAA;SAChB;AACL+R,YAAAA,KAAAA,GAAQmyC,UAAalkD,GAAAA,KAAAA,CAAAA;SACtB;KACF;IAED,OAAO;AAACA,QAAAA,KAAAA;AAAO+R,QAAAA,KAAAA;AAAK;AACtB,CAAC;AAED;;;;;AAKC,IACM,SAAS8S,mBAAoB7a,CAAAA,IAAI,EAAE;AACxC,UAAM,EAAC/B,MAAM,GAAEC,SAAQqgE,YAAAA,GAAa,GAAGv+D,IAAAA,CAAAA;AACvC,UAAMw+D,SAAY;AAChBC,QAAAA,IAAAA,EAAMxgE,OAAOlI,GAAG;AAChB2oE,QAAAA,IAAAA,EAAMzgE,OAAO/F,GAAG;AAChBymE,QAAAA,IAAAA,EAAMzgE,OAAOnI,GAAG;AAChB6oE,QAAAA,IAAAA,EAAM1gE,OAAOhG,GAAG;AAClB;AACA,QAAI,CAACqmE,YAAc;AACjBv+D,QAAAA,IAAAA,CAAKu+D,YAAY,GAAGC,SAAAA,CAAAA;AACpB,eAAO,IAAI;KACZ;IACD,MAAMz5C,OAAAA,GAAUw5C,aAAaE,IAAI,KAAKxgE,OAAOlI,GAAG,IAC7CwoE,YAAaG,CAAAA,IAAI,KAAKzgE,MAAAA,CAAO/F,GAAG,IAChCqmE,YAAAA,CAAaI,IAAI,KAAKzgE,MAAOnI,CAAAA,GAAG,IAChCwoE,YAAaK,CAAAA,IAAI,KAAK1gE,MAAAA,CAAOhG,GAAG;IAEnC2D,MAAOyB,CAAAA,MAAM,CAACihE,YAAcC,EAAAA,SAAAA,CAAAA,CAAAA;IAC5B,OAAOz5C,OAAAA,CAAAA;AACT;;AC/IA,MAAM85C,MAAS,IAACngE,CAAcA,GAAAA,CAAAA,KAAM,KAAKA,CAAM;AAC/C,MAAMogE,SAAAA,GAAY,CAACpgE,CAAAA,EAAWu+D,CAAWv4B,EAAAA,CAAAA,GAAc,EAAE5uC,IAAAA,CAAK+pB,GAAG,CAAC,CAAG,QAAMnhB,CAAK,MAAM5I,CAAAA,GAAAA,IAAAA,CAAK0f,GAAG,CAAC,CAAC9W,CAAIu+D,GAAAA,CAAAA,IAAK/nD,GAAAA,GAAMwvB,CAAC;AAChH,MAAMq6B,UAAAA,GAAa,CAACrgE,CAAWu+D,EAAAA,CAAAA,EAAWv4B,IAAc5uC,IAAK+pB,CAAAA,GAAG,CAAC,CAAG,GAAC,KAAKnhB,CAAK5I,CAAAA,GAAAA,IAAAA,CAAK0f,GAAG,CAAE9W,CAAAA,CAAIu+D,GAAAA,CAAAA,IAAK/nD,GAAAA,GAAMwvB,CAAK;AAE7G;;;;AAIC,UACK5qC,OAAU;AACdE,IAAAA,MAAAA,EAAQ,CAAC0E,CAAcA,GAAAA,CAAAA;IAEvBsgE,UAAY,GAACtgE,IAAcA,CAAIA,GAAAA,CAAAA;AAE/BugE,IAAAA,WAAAA,EAAa,CAACvgE,CAAc,IAACA,CAAKA,IAAAA,IAAI;IAEtCwgE,aAAe,GAACxgE,IAAgBA,CAAAA,CAAK,OAAE,IAAK,IACxC,GAAMA,GAAAA,CAAAA,GAAIA,IACV,CAAC,OAAQ,EAAEA,CAAAA,IAAMA,CAAI,KAAK,KAAE;IAEhCygE,WAAa,GAACzgE,CAAcA,GAAAA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA;IAEpC0gE,YAAc,GAAC1gE,IAAc,CAACA,KAAK,KAAKA,IAAIA,CAAI;IAEhD2gE,cAAgB,GAAC3gE,IAAgBA,CAAAA,CAAK,OAAE,IAAK,IACzC,GAAMA,GAAAA,CAAAA,GAAIA,IAAIA,CACd,UAAQA,CAAAA,CAAAA,IAAK,KAAKA,CAAAA,GAAIA,CAAI,KAAE;AAEhC4gE,IAAAA,WAAAA,EAAa,CAAC5gE,CAAAA,GAAcA,CAAIA,GAAAA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA;AAExC6gE,IAAAA,YAAAA,EAAc,CAAC7gE,CAAAA,GAAc,EAAE,CAACA,CAAK,SAAKA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA,GAAI;IAEtD8gE,cAAgB,GAAC9gE,CAAc,GAAC,CAACA,CAAK,OAAE,IAAK,IACzC,GAAMA,GAAAA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA,GAAIA,IAClB,CAAC,OAAQA,CAAAA,CAAAA,IAAK,KAAKA,CAAIA,GAAAA,CAAAA,GAAIA,CAAI,KAAE;AAErC+gE,IAAAA,WAAAA,EAAa,CAAC/gE,CAAAA,GAAcA,CAAIA,GAAAA,CAAAA,GAAIA,IAAIA,CAAIA,GAAAA,CAAAA;IAE5CghE,YAAc,GAAChhE,CAAc,GAACA,CAAAA,CAAAA,IAAK,KAAKA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA,GAAIA,CAAI;IAExDihE,cAAgB,GAACjhE,CAAc,GAAC,CAACA,CAAK,OAAE,IAAK,IACzC,GAAMA,GAAAA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA,GACtB,GAAO,KAACA,CAAK,SAAKA,CAAAA,GAAIA,CAAIA,GAAAA,CAAAA,GAAIA,CAAI,KAAE;AAExCkhE,IAAAA,UAAAA,EAAY,CAAClhE,CAAc,IAAC5I,KAAKwf,GAAG,CAAC5W,IAAIuX,OAAW;AAEpD4pD,IAAAA,WAAAA,EAAa,CAACnhE,CAAAA,GAAc5I,IAAK0f,CAAAA,GAAG,CAAC9W,CAAIuX,GAAAA,OAAAA,CAAAA;IAEzC6pD,aAAe,GAACphE,CAAc,IAAC,GAAO5I,IAAAA,KAAKwf,GAAG,CAACa,EAAKzX,GAAAA,CAAAA,CAAAA,GAAK;AAEzDqhE,IAAAA,UAAAA,EAAY,CAACrhE,CAAAA,GAAc,CAACA,KAAM,IAAK,CAAI5I,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,CAAG,QAAMnhB,CAAAA,GAAI,EAAG;AAEpEshE,IAAAA,WAAAA,EAAa,CAACthE,CAAAA,GAAc,CAACA,KAAM,IAAK,CAAI,IAAC5I,IAAK+pB,CAAAA,GAAG,CAAC,GAAG,CAAC,KAAKnhB,KAAK,CAAC;AAErEuhE,IAAAA,aAAAA,EAAe,CAACvhE,CAAAA,GAAcmgE,MAAOngE,CAAAA,CAAAA,CAAAA,GAAKA,IAAIA,CAAI,SAC9C,GAAM5I,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,CAAG,QAAMnhB,CAAI,OAAI,MAChC,GAAO,KAAC5I,IAAAA,CAAK+pB,GAAG,CAAC,GAAG,CAAC,MAAMnhB,CAAI,OAAI,MAAM,EAAE;AAE/CwhE,IAAAA,UAAAA,EAAY,CAACxhE,CAAAA,GAAc,CAACA,IAAK,IAAKA,CAAI,KAAE5I,IAAAA,CAAK8pB,IAAI,CAAC,IAAIlhB,CAAIA,GAAAA,CAAAA,CAAAA,GAAK,EAAE;IAErEyhE,WAAa,GAACzhE,CAAc5I,GAAAA,IAAAA,CAAK8pB,IAAI,CAAC,IAAI,CAAClhB,CAAK,SAAKA,CAAAA,CAAAA;AAErD0hE,IAAAA,aAAAA,EAAe,CAAC1hE,CAAAA,GAAc,CAAEA,CAAK,OAAE,IAAK,IACxC,CAAC,OAAO5I,IAAAA,CAAK8pB,IAAI,CAAC,IAAIlhB,CAAIA,GAAAA,CAAAA,CAAAA,GAAK,KAC/B,GAAO5I,IAAAA,KAAK8pB,IAAI,CAAC,CAAI,GAAClhB,CAAAA,CAAK,SAAKA,CAAAA,CAAAA,GAAK,EAAE;IAE3C2hE,aAAe,GAAC3hE,IAAcmgE,MAAOngE,CAAAA,CAAAA,CAAAA,GAAKA,IAAIogE,SAAUpgE,CAAAA,CAAAA,EAAG,OAAO,GAAI;IAEtE4hE,cAAgB,GAAC5hE,IAAcmgE,MAAOngE,CAAAA,CAAAA,CAAAA,GAAKA,IAAIqgE,UAAWrgE,CAAAA,CAAAA,EAAG,OAAO,GAAI;AAExE6hE,IAAAA,gBAAAA,CAAAA,CAAiB7hE,CAAS,EAAE;AAC1B,cAAMu+D,CAAI;AACV,cAAMv4B,CAAI;AACV,eAAOm6B,OAAOngE,CAAKA,CAAAA,GAAAA,CAAAA,GACjBA,IAAI,GACA,SAAMogE,UAAUpgE,CAAI,MAAGu+D,CAAGv4B,EAAAA,CAAAA,CAAAA,GAC1B,MAAM,GAAMq6B,GAAAA,UAAAA,CAAWrgE,IAAI,CAAI,MAAGu+D,GAAGv4B,CAAE;AAC/C;AAEA87B,IAAAA,UAAAA,CAAAA,CAAW9hE,CAAS,EAAE;AACpB,cAAMu+D,CAAI;QACV,OAAOv+D,CAAAA,GAAIA,KAAMu+D,CAAAA,CAAI,QAAKv+D,CAAAA,GAAIu+D,CAAAA,CAAAA,CAAAA;AAChC;AAEAwD,IAAAA,WAAAA,CAAAA,CAAY/hE,CAAS,EAAE;AACrB,cAAMu+D,CAAI;AACV,eAAO,CAACv+D,CAAK,SAAKA,CAAK,KAACu+D,CAAI,QAAKv+D,CAAAA,GAAIu+D,CAAAA,CAAK;AAC5C;AAEAyD,IAAAA,aAAAA,CAAAA,CAAchiE,CAAS,EAAE;AACvB,YAAIu+D,CAAI;AACR,YAAI,CAACv+D,CAAK,OAAE,IAAK,CAAG;AAClB,mBAAO,OAAOA,CAAAA,GAAIA,CAAK,KAAEu+D,CAAAA,CAAAA,IAAM,KAAK,IAAK,KAAKv+D,CAAAA,GAAIu+D,CAAAA,CAAC;SACpD;QACD,OAAO,OAAO,CAACv+D,KAAK,KAAKA,KAAM,EAACu+D,KAAM,KAAK,IAAK,KAAKv+D,CAAAA,GAAIu+D,CAAAA,CAAAA,GAAK;AAChE;AAEA0D,IAAAA,YAAAA,EAAc,CAACjiE,CAAc,OAAI5E,OAAQ8mE,CAAAA,aAAa,CAAC,CAAIliE,GAAAA,CAAAA,CAAAA;AAE3DkiE,IAAAA,aAAAA,CAAAA,CAAcliE,CAAS,EAAE;AACvB,cAAM2xD,CAAI;AACV,cAAMxuB,CAAI;QACV,IAAInjC,CAAAA,GAAK,IAAImjC,CAAI;AACf,mBAAOwuB,IAAI3xD,CAAIA,GAAAA,CAAAA,CAAAA;SAChB;QACD,IAAIA,CAAAA,GAAK,IAAImjC,CAAI;AACf,mBAAOwuB,KAAK3xD,CAAAA,IAAM,GAAMmjC,GAAAA,CAAC,IAAKnjC,CAAI;SACnC;QACD,IAAIA,CAAAA,GAAK,MAAMmjC,CAAI;AACjB,mBAAOwuB,KAAK3xD,CAAAA,IAAM,IAAOmjC,GAAAA,CAAC,IAAKnjC,CAAI;SACpC;AACD,eAAO2xD,KAAK3xD,CAAAA,IAAM,KAAQmjC,GAAAA,CAAC,IAAKnjC,CAAI;AACtC;AAEAmiE,IAAAA,eAAAA,EAAiB,CAACniE,CAAc,GAACA,IAAI,GACjC5E,GAAAA,OAAAA,CAAQ6mE,YAAY,CAACjiE,CAAAA,GAAI,CAAK,UAC9B5E,QAAQ8mE,aAAa,CAACliE,IAAI,CAAI,QAAK,MAAM,GAAG;AAClD;;ACrHO,SAASoiE,mBAAoB1jE,CAAAA,KAAc,EAA2C;IAC3F,IAAIA,KAAAA,IAAS,OAAOA,KAAAA,KAAU,QAAU;QACtC,MAAM/H,IAAAA,GAAO+H,MAAM68D,QAAQ;QAC3B,OAAO5kE,IAAAA,KAAS,4BAA4BA,IAAS;KACtD;AAED,WAAO,KAAK;AACd,CAAC;AAWM,SAASyD,KAAMsE,CAAAA,KAAK,EAAE;AAC3B,WAAO0jE,mBAAoB1jE,CAAAA,KAAAA,CAAAA,GAASA,KAAQ,OAAI2jE,gDAAKA,CAAC3jE,KAAM;AAC9D,CAAC;AAKM,SAAS4jE,aAAc5jE,CAAAA,KAAK,EAAE;AACnC,WAAO0jE,mBAAoB1jE,CAAAA,KAAAA,CAAAA,GACvBA,KACA,OAAI2jE,gDAAM3jE,CAAAA,KAAAA,CAAAA,CAAO6jE,QAAQ,CAAC,GAAKC,CAAAA,CAAAA,MAAM,CAAC,KAAK9nE,SAAS,EAAE;AAC5D;;AC/BA,MAAMmY,OAAU;AAAC;AAAK;AAAK;AAAe;AAAU;AAAU;AAC9D,MAAM4vD,MAAS;AAAC;AAAS;AAAe;AAAkB;AAEnD,SAASC,uBAAwBrlE,CAAAA,QAAQ,EAAE;IAChDA,QAASvE,CAAAA,GAAG,CAAC,WAAa;QACxB2C,KAAOnF,EAAAA,SAAAA;QACPS,QAAU;QACVsE,MAAQ;QACRpE,EAAIX,EAAAA,SAAAA;QACJ2D,IAAM3D,EAAAA,SAAAA;QACNqF,IAAMrF,EAAAA,SAAAA;QACN4D,EAAI5D,EAAAA,SAAAA;QACJK,IAAML,EAAAA,SAAAA;AACR;IAEA+G,QAASohC,CAAAA,QAAQ,CAAC,WAAa;AAC7B2vB,QAAAA,SAAAA,EAAW,KAAK;AAChBn2C,QAAAA,UAAAA,EAAY,KAAK;AACjBD,QAAAA,WAAAA,EAAa,CAACxD,IAASA,GAAAA,IAAAA,KAAS,YAAgBA,IAAAA,IAAAA,KAAS,gBAAgBA,IAAS;AACpF;IAEAnX,QAASvE,CAAAA,GAAG,CAAC,YAAc;QACzB2pE,MAAQ;YACN9rE,IAAM;YACNiH,UAAY6kE,EAAAA,MAAAA;AACd;QACA5vD,OAAS;YACPlc,IAAM;YACNiH,UAAYiV,EAAAA,OAAAA;AACd;AACF;IAEAxV,QAASohC,CAAAA,QAAQ,CAAC,YAAc;QAC9B2vB,SAAW;AACb;IAEA/wD,QAASvE,CAAAA,GAAG,CAAC,aAAe;QAC1BmD,MAAQ;YACNqB,SAAW;gBACTvG,QAAU;AACZ;AACF;QACAm0B,MAAQ;YACN5tB,SAAW;gBACTvG,QAAU;AACZ;AACF;QACAk2C,IAAM;YACJ/uC,UAAY;gBACVukE,MAAQ;oBACNxoE,IAAM;AACR;gBACA6wC,OAAS;oBACPn0C,IAAM;AACNI,oBAAAA,QAAAA,EAAU;AACZ;AACF;AACF;QACAi2C,IAAM;YACJ9uC,UAAY;gBACVukE,MAAQ;oBACNvoE,EAAI;AACN;gBACA4wC,OAAS;oBACPn0C,IAAM;oBACN0E,MAAQ;AACRpE,oBAAAA,EAAAA,EAAIub,CAAAA,CAAAA,GAAKA,CAAI;AACf;AACF;AACF;AACF;AACF;;ACvEO,SAASmwD,oBAAqBtlE,CAAAA,QAAQ,EAAE;IAC7CA,QAASvE,CAAAA,GAAG,CAAC,QAAU;AACrBwyC,QAAAA,WAAAA,EAAa,IAAI;QACjB7kB,OAAS;YACP9mB,GAAK;YACLC,KAAO;YACPC,MAAQ;YACRC,IAAM;AACR;AACF;AACF;;ACTA,MAAM8iE,YAAY,IAAIzsE,GAAAA,EAAAA,CAAAA;AAEtB,SAAS0sE,eAAgBvnD,CAAAA,MAAc,EAAEtd,OAAkC,EAAE;AAC3EA,IAAAA,OAAAA,GAAUA,WAAW,EAAC;AACtB,UAAMgO,QAAWsP,GAAAA,MAAAA,GAASwnD,IAAKC,CAAAA,SAAS,CAAC/kE,OAAAA,CAAAA,CAAAA;IACzC,IAAI67D,SAAAA,GAAY+I,SAAUjqE,CAAAA,GAAG,CAACqT,QAAAA,CAAAA,CAAAA;AAC9B,QAAI,CAAC6tD,SAAW;AACdA,QAAAA,SAAAA,GAAY,IAAImJ,IAAAA,CAAKC,YAAY,CAAC3nD,MAAQtd,EAAAA,OAAAA,CAAAA,CAAAA;QAC1C4kE,SAAU9pE,CAAAA,GAAG,CAACkT,QAAU6tD,EAAAA,SAAAA,CAAAA,CAAAA;KACzB;IACD,OAAOA,SAAAA,CAAAA;AACT;AAEO,SAASx+C,YAAa6nD,CAAAA,GAAW,EAAE5nD,MAAc,EAAEtd,OAAkC,EAAE;AAC5F,WAAO6kE,eAAgBvnD,CAAAA,MAAAA,EAAQtd,OAASshB,CAAAA,CAAAA,MAAM,CAAC4jD,GAAAA,CAAAA,CAAAA;AACjD;;ACRA,MAAM5R,UAAa;AAOjBxzD,CAAAA,MAAAA,CAAAA,CAAOY,KAAK,EAAE;AACZ,eAAOf,QAAQe,KAAS,KAAyBA,KAAAA,GAAS,KAAKA,KAAK;AACtE;AASC,CACD6yD,SAAQjB,SAAS,EAAE5vD,KAAK,EAAEmP,KAAK,EAAE;AAC/B,YAAIygD,cAAc,CAAG;AACnB,mBAAO;SACR;AAED,cAAMh1C,SAAS,IAAI,CAAC9kB,KAAK,CAACwH,OAAO,CAACsd,MAAM;QACxC,IAAI6nD,QAAAA,CAAAA;QACJ,IAAIC,KAAAA,GAAQ9S;QAEZ,IAAIzgD,KAAAA,CAAM5X,MAAM,GAAG,CAAG;YAEpB,MAAMorE,OAAAA,GAAUjsE,KAAKoC,GAAG,CAACpC,KAAKuY,GAAG,CAACE,KAAK,CAAC,CAAE,EAACnR,KAAK,CAAGtH,EAAAA,IAAAA,CAAKuY,GAAG,CAACE,KAAK,CAACA,MAAM5X,MAAM,GAAG,CAAE,EAACyG,KAAK;YACzF,IAAI2kE,OAAAA,GAAU,IAAQA,IAAAA,OAAAA,GAAU,KAAO;gBACrCF,QAAW;aACZ;AAEDC,YAAAA,KAAAA,GAAQE,eAAehT,SAAWzgD,EAAAA,KAAAA,CAAAA,CAAAA;SACnC;AAED,cAAM0zD,QAAW9R,GAAAA,KAAAA,CAAMr6D,IAAKuY,CAAAA,GAAG,CAACyzD,KAAAA,CAAAA,CAAAA,CAAAA;AAOhC,cAAMI,aAAapvD,KAAMmvD,CAAAA,QAAAA,CAAAA,GAAY,CAAInsE,GAAAA,IAAAA,CAAKoC,GAAG,CAACpC,IAAAA,CAAKC,GAAG,CAAC,CAAC,CAAID,GAAAA,IAAAA,CAAKoE,KAAK,CAAC+nE,QAAAA,CAAAA,EAAW,KAAK,CAAE;AAE7F,cAAMvlE,OAAU;AAACmlE,YAAAA,QAAAA;YAAUM,qBAAuBD,EAAAA,UAAAA;YAAYE,qBAAuBF,EAAAA,UAAAA;AAAU;QAC/FrmE,MAAOyB,CAAAA,MAAM,CAACZ,OAAS,MAAI,CAACA,OAAO,CAAC6R,KAAK,CAACyP,MAAM;QAEhD,OAAOjE,YAAAA,CAAai1C,WAAWh1C,MAAQtd,EAAAA,OAAAA,CAAAA,CAAAA;AACzC;AAUC,CACDu0D,aAAYjC,SAAS,EAAE5vD,KAAK,EAAEmP,KAAK,EAAE;AACnC,YAAIygD,cAAc,CAAG;YACnB,OAAO;SACR;AACD,cAAMl0D,MAASyT,GAAAA,KAAK,CAACnP,KAAAA,CAAM,CAAC0xD,WAAW,IAAK9B,SAAal5D,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC,IAAI/pB,IAAKoE,CAAAA,KAAK,CAACi2D,KAAMnB,CAAAA,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA;QACvF,IAAI;AAAC;AAAG;AAAG;AAAG;AAAG;AAAI;AAAG,UAAC5sC,QAAQ,CAACtnB,MAAAA,CAAAA,IAAWsE,QAAQ,GAAMmP,GAAAA,KAAAA,CAAM5X,MAAM,EAAE;YACvE,OAAOq5D,UAAAA,CAAWC,OAAO,CAAC95D,IAAI,CAAC,IAAI,EAAE64D,WAAW5vD,KAAOmP,EAAAA,KAAAA,CAAAA,CAAAA;SACxD;QACD,OAAO;AACT;AAEF;AAGA,SAASyzD,cAAehT,CAAAA,SAAS,EAAEzgD,KAAK,EAAE;IAGxC,IAAIuzD,KAAAA,GAAQvzD,KAAM5X,CAAAA,MAAM,GAAG,IAAI4X,KAAK,CAAC,CAAE,EAACnR,KAAK,GAAGmR,KAAK,CAAC,CAAE,EAACnR,KAAK,GAAGmR,KAAK,CAAC,CAAE,EAACnR,KAAK,GAAGmR,KAAK,CAAC,CAAE,EAACnR,KAAK;IAGhG,IAAItH,IAAAA,CAAKuY,GAAG,CAACyzD,KAAAA,CAAAA,IAAU,KAAK9S,SAAcl5D,KAAAA,IAAAA,CAAKoE,KAAK,CAAC80D,SAAY;QAE/D8S,KAAQ9S,GAAAA,SAAAA,GAAYl5D,IAAKoE,CAAAA,KAAK,CAAC80D,SAAAA,CAAAA,CAAAA;KAChC;IACD,OAAO8S,KAAAA,CAAAA;AACT;AAKC,CACD,YAAe;AAAC9R,IAAAA,UAAAA;AAAU,CAAE;;ACnGrB,SAASqS,kBAAmBtmE,CAAAA,QAAQ,EAAE;IAC3CA,QAASvE,CAAAA,GAAG,CAAC,OAAS;AACpBskB,QAAAA,OAAAA,EAAS,IAAI;AACbpK,QAAAA,MAAAA,EAAQ,KAAK;AACb5T,QAAAA,OAAAA,EAAS,KAAK;AACd+T,QAAAA,WAAAA,EAAa,KAAK;AAQjB,CACDqkC,MAAQ;AAERpsC,QAAAA,IAAAA,EAAM,IAAI;AAKT,CACD+nB,KAAO;QAGPlgB,IAAM;AACJmK,YAAAA,OAAAA,EAAS,IAAI;YACbpE,SAAW;AACX2jB,YAAAA,eAAAA,EAAiB,IAAI;AACrBvM,YAAAA,SAAAA,EAAW,IAAI;YACfhC,UAAY;AACZkH,YAAAA,SAAAA,EAAW,CAAC/vB,IAAAA,EAAMvH,OAAYA,GAAAA,OAAAA,CAAQgb,SAAS;AAC/CkhB,YAAAA,SAAAA,EAAW,CAAC30B,IAAAA,EAAMvH,OAAYA,GAAAA,OAAAA,CAAQ5D,KAAK;AAC3C4Y,YAAAA,MAAAA,EAAQ,KAAK;AACf;QAEA8J,MAAQ;AACNM,YAAAA,OAAAA,EAAS,IAAI;AACb2c,YAAAA,IAAAA,EAAM,EAAE;YACRE,UAAY;YACZlmB,KAAO;AACT;QAGAiiB,KAAO;AAEL5Y,YAAAA,OAAAA,EAAS,KAAK;YAGd1E,IAAM;YAGN+N,OAAS;gBACP9mB,GAAK;gBACLE,MAAQ;AACV;AACF;QAGAgQ,KAAO;YACLulB,WAAa;YACbC,WAAa;AACboB,YAAAA,MAAAA,EAAQ,KAAK;YACb0E,eAAiB;YACjBF,eAAiB;YACjBxU,OAAS;AACTrJ,YAAAA,OAAAA,EAAS,IAAI;AACb+P,YAAAA,QAAAA,EAAU,IAAI;YACdqL,eAAiB;YACjBsC,WAAa;YAEb7F,QAAUo8B,EAAAA,KAAAA,CAAMC,UAAU,CAACxzD,MAAM;AACjCu7D,YAAAA,KAAAA,EAAO,EAAC;AACR3rC,YAAAA,KAAAA,EAAO,EAAC;YACRyB,KAAO;YACPkL,UAAY;AAEZgB,YAAAA,iBAAAA,EAAmB,KAAK;YACxBI,aAAe;YACfD,eAAiB;AACnB;AACF;AAEAn+B,IAAAA,QAAAA,CAAS+hC,KAAK,CAAC,aAAe,WAAS,EAAI;AAC3C/hC,IAAAA,QAAAA,CAAS+hC,KAAK,CAAC,YAAc,WAAS,EAAI;AAC1C/hC,IAAAA,QAAAA,CAAS+hC,KAAK,CAAC,cAAgB,WAAS,EAAI;AAC5C/hC,IAAAA,QAAAA,CAAS+hC,KAAK,CAAC,aAAe,WAAS,EAAI;IAE3C/hC,QAASohC,CAAAA,QAAQ,CAAC,OAAS;AACzB2vB,QAAAA,SAAAA,EAAW,KAAK;AAChBp2C,QAAAA,WAAAA,EAAa,CAACxD,IAAAA,GAAS,CAACA,IAAAA,CAAK0D,UAAU,CAAC,aAAa,CAAC1D,IAAAA,CAAK0D,UAAU,CAAC,OAAY1D,CAAAA,IAAAA,IAAAA,KAAS,cAAcA,IAAS;AAClHyD,QAAAA,UAAAA,EAAY,CAACzD,IAASA,GAAAA,IAAAA,KAAS,YAAgBA,IAAAA,IAAAA,KAAS,oBAAoBA,IAAS;AACvF;IAEAnX,QAASohC,CAAAA,QAAQ,CAAC,QAAU;QAC1B2vB,SAAW;AACb;IAEA/wD,QAASohC,CAAAA,QAAQ,CAAC,aAAe;AAC/BzmB,QAAAA,WAAAA,EAAa,CAACxD,IAAAA,GAASA,IAAS,0BAAqBA,IAAS;QAC9DyD,UAAY,GAACzD,OAASA,IAAS;AACjC;AACF;;MClGa1B,SAAY3V,GAAAA,MAAAA,CAAOygC,MAAM,CAAC,IAAI,EAAE;MAChC7lB,WAAc5a,GAAAA,MAAAA,CAAOygC,MAAM,CAAC,IAAI,EAAE;AAM9C,CACD,SAASgmC,UAAAA,CAASl6C,IAAI,EAAEjsB,GAAG,EAAE;AAC3B,QAAI,CAACA,GAAK;QACR,OAAOisB,IAAAA,CAAAA;KACR;IACD,MAAMtsB,IAAAA,GAAOK,GAAIohC,CAAAA,KAAK,CAAC;IACvB,IAAK,IAAI3mC,CAAI,MAAGwlE,CAAItgE,GAAAA,IAAAA,CAAKnF,MAAM,EAAEC,CAAAA,GAAIwlE,CAAG,IAAExlE,CAAG;QAC3C,MAAM8gD,CAAAA,GAAI57C,IAAI,CAAClF,CAAE;AACjBwxB,QAAAA,IAAAA,GAAOA,IAAI,CAACsvB,CAAE,MAAKtvB,IAAI,CAACsvB,CAAAA,CAAE,GAAG77C,MAAAA,CAAOygC,MAAM,CAAC,IAAI;AACjD;IACA,OAAOlU,IAAAA,CAAAA;AACT;AAEA,SAAS5wB,IAAI+qE,IAAI,EAAElmC,KAAK,EAAE7/B,MAAM,EAAE;IAChC,IAAI,OAAO6/B,UAAU,QAAU;QAC7B,OAAOY,KAAAA,CAAMqlC,UAASC,CAAAA,IAAAA,EAAMlmC,KAAQ7/B,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA;KACrC;IACD,OAAOygC,KAAAA,CAAMqlC,UAASC,CAAAA,IAAAA,EAAM,EAAKlmC,CAAAA,EAAAA,KAAAA,CAAAA,CAAAA;AACnC;AAKC,CACM,MAAMmmC,QAAAA,CAAAA;IACX9tE,WAAYkrC,CAAAA,YAAY,EAAE6iC,SAAS,CAAE;QACnC,IAAI,CAACzmE,SAAS,GAAGhH,SAAAA,CAAAA;QACjB,IAAI,CAACsiB,eAAe,GAAG;QACvB,IAAI,CAACE,WAAW,GAAG;QACnB,IAAI,CAAC1e,KAAK,GAAG;QACb,IAAI,CAAC0N,QAAQ,GAAG,EAAC;QACjB,IAAI,CAACmjB,gBAAgB,GAAG,CAACrf,OAAAA,GAAYA,QAAQpV,KAAK,CAACouC,QAAQ,CAAC/c,mBAAmB;QAC/E,IAAI,CAACxc,QAAQ,GAAG,EAAC;QACjB,IAAI,CAACwgC,MAAM,GAAG;AACZ;AACA;AACA;AACA;AACA;AACD;QACD,IAAI,CAACtb,IAAI,GAAG;YACVyzC,MAAQ;YACRrlE,IAAM;YACN8Z,KAAO;YACPiY,UAAY;AACZ/U,YAAAA,MAAAA,EAAQ,IAAI;AACd;QACA,IAAI,CAAC0yB,KAAK,GAAG,EAAC;QACd,IAAI,CAAC41B,oBAAoB,GAAG,CAACz+D,KAAKxH,OAAYskE,GAAAA,aAAAA,CAActkE,QAAQ4a,eAAe;QACnF,IAAI,CAACsrD,gBAAgB,GAAG,CAAC1+D,KAAKxH,OAAYskE,GAAAA,aAAAA,CAActkE,QAAQ8a,WAAW;QAC3E,IAAI,CAACqrD,UAAU,GAAG,CAAC3+D,KAAKxH,OAAYskE,GAAAA,aAAAA,CAActkE,QAAQ5D,KAAK;QAC/D,IAAI,CAACmN,SAAS,GAAG;QACjB,IAAI,CAACoX,WAAW,GAAG;YACjB5d,IAAM;AACN8e,YAAAA,SAAAA,EAAW,IAAI;AACfyB,YAAAA,gBAAAA,EAAkB,KAAK;AACzB;QACA,IAAI,CAAC0nB,mBAAmB,GAAG,IAAI;QAC/B,IAAI,CAAC4F,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC11B,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC/P,OAAO,GAAG,IAAI;QACnB,IAAI,CAACiP,OAAO,GAAG,EAAC;QAChB,IAAI,CAAC6wB,UAAU,GAAG,IAAI;QACtB,IAAI,CAAChqC,KAAK,GAAG3I,SAAAA,CAAAA;QACb,IAAI,CAACyN,MAAM,GAAG,EAAC;QACf,IAAI,CAAC8X,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACrQ,uBAAuB,GAAG,IAAI;QAEnC,IAAI,CAACizB,QAAQ,CAACyC,YAAAA,CAAAA,CAAAA;QACd,IAAI,CAAC+kB,KAAK,CAAC8d,SAAAA,CAAAA,CAAAA;AACb;AAKA,CACAjrE,GAAI6kC,CAAAA,KAAK,EAAE7/B,MAAM,EAAE;QACjB,OAAOhF,GAAAA,CAAI,IAAI,EAAE6kC,KAAO7/B,EAAAA,MAAAA,CAAAA,CAAAA;AAC1B;AAKAnF,CAAAA,GAAAA,CAAIglC,KAAK,EAAE;QACT,OAAOimC,UAAAA,CAAS,IAAI,EAAEjmC,KAAAA,CAAAA,CAAAA;AACxB;AAKA,CACAc,QAASd,CAAAA,KAAK,EAAE7/B,MAAM,EAAE;QACtB,OAAOhF,GAAAA,CAAIif,aAAa4lB,KAAO7/B,EAAAA,MAAAA,CAAAA,CAAAA;AACjC;IAEAmhB,QAAS0e,CAAAA,KAAK,EAAE7/B,MAAM,EAAE;QACtB,OAAOhF,GAAAA,CAAIga,WAAW6qB,KAAO7/B,EAAAA,MAAAA,CAAAA,CAAAA;AAC/B;AAmBAshC,CAAAA,KAAAA,CAAMzB,KAAK,EAAEnpB,IAAI,EAAE2qB,WAAW,EAAED,UAAU,EAAE;QAC1C,MAAMklC,WAAAA,GAAcR,UAAS,KAAI,EAAEjmC,KAAAA,CAAAA,CAAAA;QACnC,MAAM0mC,iBAAAA,GAAoBT,UAAS,KAAI,EAAEzkC,WAAAA,CAAAA,CAAAA;AACzC,cAAMmlC,cAAc,GAAM9vD,GAAAA,IAAAA,CAAAA;QAE1BrX,MAAOonE,CAAAA,gBAAgB,CAACH,WAAa;AAEnC,aAACE,cAAc;gBACb5lE,KAAO0lE,EAAAA,WAAW,CAAC5vD,IAAK;AACxB6mC,gBAAAA,QAAAA,EAAU,IAAI;AAChB;AAEA,aAAC7mC,OAAO;AACN4mC,gBAAAA,UAAAA,EAAY,IAAI;gBAChBziD,GAAM;oBACJ,MAAMopC,KAAAA,GAAQ,IAAI,CAACuiC,WAAY;oBAC/B,MAAMxpE,MAAAA,GAASupE,iBAAiB,CAACnlC,UAAW;AAC5C,wBAAIjiC,SAAS8kC,KAAQ;AACnB,+BAAO5kC,MAAOyB,CAAAA,MAAM,CAAC,IAAI9D,MAAQinC,EAAAA,KAAAA,CAAAA,CAAAA;qBAClC;AACD,2BAAO76B,eAAe66B,KAAOjnC,EAAAA,MAAAA,CAAAA,CAAAA;AAC/B;AACAhC,gBAAAA,GAAAA,CAAAA,CAAI4F,KAAK,EAAE;oBACT,IAAI,CAAC4lE,YAAY,GAAG5lE,KAAAA,CAAAA;AACtB;AACF;AACF;AACF;AAEAunD,IAAAA,KAAAA,CAAMue,QAAQ,EAAE;AACdA,QAAAA,QAAAA,CAASxtE,OAAO,CAAC,CAACivD,KAAAA,GAAUA,MAAM,IAAI;AACxC;AACF,CAAC;AAGD,eAAe,gBAAgB,IAAI6d,QAAS;AAC1C9rD,IAAAA,WAAAA,EAAa,CAACxD,IAAAA,GAAS,CAACA,IAAAA,CAAK0D,UAAU,CAAC;IACxCD,UAAY,GAACzD,OAASA,IAAS;IAC/B65B,KAAO;QACL+f,SAAW;AACb;IACAzvC,WAAa;AACX3G,QAAAA,WAAAA,EAAa,KAAK;AAClBC,QAAAA,UAAAA,EAAY,KAAK;AACnB;AACF,CAAG;AAACyqD,IAAAA,uBAAAA;AAAyBC,IAAAA,oBAAAA;AAAsBgB,IAAAA,kBAAAA;CAAmB,CAAE;;AC5JxE;;;;;AAKC,IACM,SAASc,YAAal0C,CAAAA,IAAc,EAAE;IAC3C,IAAI,CAACA,QAAQlgB,aAAckgB,CAAAA,IAAAA,CAAK5xB,IAAI,CAAK0R,IAAAA,aAAAA,CAAckgB,IAAKyzC,CAAAA,MAAM,CAAG;AACnE,eAAO,IAAI;KACZ;AAED,WAAO,CAACzzC,IAAK9X,CAAAA,KAAK,GAAG8X,IAAAA,CAAK9X,KAAK,GAAG,GAAM,KAAE,KACvC8X,IAAAA,CAAK5U,MAAM,GAAG4U,IAAK5U,CAAAA,MAAM,GAAG,MAAM,EAAC,CACpC4U,GAAAA,IAAAA,CAAK5xB,IAAI,GAAG,KACZ4xB,GAAAA,IAAAA,CAAKyzC,MAAM;AACf,CAAC;AAED;;AAEC,IACM,SAASnsC,YACdryB,CAAAA,GAA6B,EAC7BnE,IAA4B,EAC5B4uB,EAAY,EACZy0C,OAAe,EACf9sC,MAAc,EACd;IACA,IAAI0rB,SAAAA,GAAYjiD,IAAI,CAACu2B,MAAO;AAC5B,QAAI,CAAC0rB,SAAW;QACdA,SAAYjiD,GAAAA,IAAI,CAACu2B,MAAO,IAAGpyB,IAAIg8C,WAAW,CAAC5pB,QAAQ7jB,KAAK;AACxDkc,QAAAA,EAAAA,CAAG/2B,IAAI,CAAC0+B,MAAAA,CAAAA,CAAAA;KACT;AACD,QAAI0rB,YAAYohB,OAAS;QACvBA,OAAUphB,GAAAA,SAAAA,CAAAA;KACX;IACD,OAAOohB,OAAAA,CAAAA;AACT,CAAC;AAKD;;AAEC;AAEM,SAAS/R,aACdntD,GAA6B,EAC7B+qB,IAAY,EACZo0C,aAAqB,EACrB54D,KAAiF,EACjF;AACAA,IAAAA,KAAAA,GAAQA,SAAS,EAAC;AAClB,QAAI1K,OAAO0K,KAAM1K,CAAAA,IAAI,GAAG0K,KAAM1K,CAAAA,IAAI,IAAI,EAAC;AACvC,QAAI4uB,KAAKlkB,KAAMgkB,CAAAA,cAAc,GAAGhkB,KAAMgkB,CAAAA,cAAc,IAAI,EAAE;IAE1D,IAAIhkB,KAAAA,CAAMwkB,IAAI,KAAKA,IAAM;QACvBlvB,IAAO0K,GAAAA,KAAAA,CAAM1K,IAAI,GAAG,EAAC;QACrB4uB,EAAKlkB,GAAAA,KAAAA,CAAMgkB,cAAc,GAAG,EAAE;AAC9BhkB,QAAAA,KAAAA,CAAMwkB,IAAI,GAAGA,IAAAA,CAAAA;KACd;AAED/qB,IAAAA,GAAAA,CAAIq2B,IAAI;AAERr2B,IAAAA,GAAAA,CAAI+qB,IAAI,GAAGA,IAAAA,CAAAA;AACX,QAAIm0C,OAAU;IACd,MAAMjkE,IAAAA,GAAOkkE,cAAc1sE,MAAM;IACjC,IAAIC,CAAAA,EAAWwoB,CAAW6W,EAAAA,IAAAA,EAAcqtC,KAAwBC,EAAAA,WAAAA,CAAAA;AAChE,QAAK3sE,CAAI,MAAGA,CAAIuI,GAAAA,IAAAA,EAAMvI,CAAK;QACzB0sE,KAAQD,GAAAA,aAAa,CAACzsE,CAAE;;AAGxB,YAAI0sE,UAAUtuE,SAAasuE,IAAAA,KAAAA,KAAU,IAAI,IAAI,CAACjnE,QAAQinE,KAAQ;AAC5DF,YAAAA,OAAAA,GAAU7sC,YAAaryB,CAAAA,GAAAA,EAAKnE,IAAM4uB,EAAAA,EAAAA,EAAIy0C,OAASE,EAAAA,KAAAA,CAAAA,CAAAA;SAC1C,UAAIjnE,QAAQinE,KAAQ;;;YAGzB,IAAKlkD,CAAAA,GAAI,GAAG6W,IAAOqtC,GAAAA,KAAAA,CAAM3sE,MAAM,EAAEyoB,CAAAA,GAAI6W,MAAM7W,CAAK;gBAC9CmkD,WAAcD,GAAAA,KAAK,CAAClkD,CAAE;;AAEtB,oBAAImkD,gBAAgBvuE,SAAauuE,IAAAA,WAAAA,KAAgB,IAAI,IAAI,CAAClnE,QAAQknE,WAAc;AAC9EH,oBAAAA,OAAAA,GAAU7sC,YAAaryB,CAAAA,GAAAA,EAAKnE,IAAM4uB,EAAAA,EAAAA,EAAIy0C,OAASG,EAAAA,WAAAA,CAAAA,CAAAA;iBAChD;AACH;SACD;AACH;AAEAr/D,IAAAA,GAAAA,CAAIu2B,OAAO;IAEX,MAAM7L,KAAAA,GAAQD,EAAGh4B,CAAAA,MAAM,GAAG;IAC1B,IAAIi4B,KAAAA,GAAQy0C,aAAc1sE,CAAAA,MAAM,EAAE;AAChC,YAAKC,CAAI,MAAGA,CAAIg4B,GAAAA,KAAAA,EAAOh4B,CAAK;AAC1B,mBAAOmJ,IAAI,CAAC4uB,EAAE,CAAC/3B,EAAE,CAAC;AACpB;QACA+3B,EAAG7hB,CAAAA,MAAM,CAAC,CAAG8hB,EAAAA,KAAAA,CAAAA,CAAAA;KACd;IACD,OAAOw0C,OAAAA,CAAAA;AACT,CAAC;AAED;;;;;;;IAQO,SAASvsC,WAAY3hC,CAAAA,KAAY,EAAEwhC,KAAa,EAAEjkB,KAAa,EAAE;IACtE,MAAMkX,gBAAAA,GAAmBz0B,MAAM20B,uBAAuB;IACtD,MAAM25C,SAAAA,GAAY/wD,UAAU,CAAI3c,GAAAA,IAAAA,CAAKoC,GAAG,CAACua,KAAAA,GAAQ,CAAG,SAAO,CAAC;IAC5D,OAAO3c,IAAAA,CAAK+2B,KAAK,CAAE6J,CAAAA,KAAQ8sC,GAAAA,SAAQ,IAAK75C,gBAAAA,CAAAA,GAAoBA,gBAAmB65C,GAAAA,SAAAA,CAAAA;AACjF,CAAC;AAED;;AAEC,IACM,SAAS17B,WAAAA,CAAY5hB,MAA0B,EAAEhiB,GAA8B,EAAE;IACtF,IAAI,CAACA,GAAO,KAACgiB,MAAQ;AACnB;KACD;IAEDhiB,GAAMA,GAAAA,GAAAA,IAAOgiB,MAAOte,CAAAA,UAAU,CAAC;AAE/B1D,IAAAA,GAAAA,CAAIq2B,IAAI;;;AAGRr2B,IAAAA,GAAAA,CAAIu/D,cAAc;IAClBv/D,GAAIw/D,CAAAA,SAAS,CAAC,CAAG,KAAGx9C,OAAOzT,KAAK,EAAEyT,OAAO1T,MAAM;AAC/CtO,IAAAA,GAAAA,CAAIu2B,OAAO;AACb,CAAC;AASM,SAASwa,UACd/wC,GAA6B,EAC7BxH,OAAyB,EACzByB,CAAS,EACTC,CAAS,EACT;;AAEAqjD,IAAAA,eAAAA,CAAgBv9C,GAAKxH,EAAAA,OAAAA,EAASyB,CAAGC,EAAAA,CAAAA,EAAG,IAAI;AAC1C,CAAC;AAED;AACO,SAASqjD,eACdv9C,CAAAA,GAA6B,EAC7BxH,OAAyB,EACzByB,CAAS,EACTC,CAAS,EACT4lB,CAAS,EACT;AACA,QAAI3uB,MAAcsuE,OAAiBC,EAAAA,OAAAA,EAAiBvmE,IAAcmqD,EAAAA,YAAAA,EAAsB/0C,OAAeoxD,QAAkBC,EAAAA,QAAAA,CAAAA;IACzH,MAAM3sD,KAAAA,GAAQza,QAAQua,UAAU;IAChC,MAAMtC,QAAAA,GAAWjY,QAAQiY,QAAQ;IACjC,MAAMP,MAAAA,GAAS1X,QAAQ0X,MAAM;AAC7B,QAAI66C,GAAM,GAACt6C,CAAAA,QAAAA,IAAY,KAAKknD,WAAAA,CAAAA;IAE5B,IAAI1kD,KAAAA,IAAS,OAAOA,KAAAA,KAAU,QAAU;AACtC9hB,QAAAA,IAAAA,GAAO8hB,MAAM8iD,QAAQ;QACrB,IAAI5kE,IAAAA,KAAS,2BAA+BA,IAAAA,IAAAA,KAAS,4BAA8B;AACjF6O,YAAAA,GAAAA,CAAIq2B,IAAI;YACRr2B,GAAIktC,CAAAA,SAAS,CAACjzC,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AACjB8F,YAAAA,GAAAA,CAAIwwD,MAAM,CAACzF,GAAAA,CAAAA,CAAAA;AACX/qD,YAAAA,GAAAA,CAAI6/D,SAAS,CAAC5sD,KAAAA,EAAO,CAACA,KAAAA,CAAM1E,KAAK,GAAG,GAAG,CAAC0E,KAAAA,CAAM3E,MAAM,GAAG,GAAG2E,MAAM1E,KAAK,EAAE0E,MAAM3E,MAAM;AACnFtO,YAAAA,GAAAA,CAAIu2B,OAAO;AACX;SACD;KACF;IAED,IAAI3nB,KAAAA,CAAMsB,MAAWA,CAAAA,IAAAA,MAAAA,IAAU,CAAG;AAChC;KACD;AAEDlQ,IAAAA,GAAAA,CAAI+2B,SAAS;IAEb,OAAQ9jB,KAAAA;;AAEN;AACE,gBAAI6M,CAAG;gBACL9f,GAAI8/D,CAAAA,OAAO,CAAC7lE,CAAGC,EAAAA,CAAAA,EAAG4lB,IAAI,CAAG5P,EAAAA,MAAAA,EAAQ,GAAG,CAAGc,EAAAA,GAAAA,CAAAA,CAAAA;aAClC;AACLhR,gBAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAGC,EAAAA,CAAAA,EAAGgW,QAAQ,CAAGc,EAAAA,GAAAA,CAAAA,CAAAA;aAC1B;AACDhR,YAAAA,GAAAA,CAAIwpC,SAAS;YACb,MAAM;QACR,KAAK;YACHj7B,KAAQuR,GAAAA,CAAAA,GAAIA,CAAI,OAAI5P,MAAM;AAC1BlQ,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAIrI,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAOx8C,CAAAA,GAAAA,KAAAA,EAAOrU,CAAItI,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;YAC1D66C,GAAO8M,IAAAA,aAAAA,CAAAA;AACP73D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAIrI,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAOx8C,CAAAA,GAAAA,KAAAA,EAAOrU,CAAItI,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;YAC1D66C,GAAO8M,IAAAA,aAAAA,CAAAA;AACP73D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAIrI,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAOx8C,CAAAA,GAAAA,KAAAA,EAAOrU,CAAItI,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAC1DlQ,YAAAA,GAAAA,CAAIwpC,SAAS;YACb,MAAM;QACR,KAAK;;;;;;;;AAQH8Z,YAAAA,YAAAA,GAAepzC,MAAS;AACxB/W,YAAAA,IAAAA,GAAO+W,MAASozC,GAAAA,YAAAA,CAAAA;AAChBmc,YAAAA,OAAAA,GAAU7tE,IAAKwf,CAAAA,GAAG,CAAC25C,GAAAA,GAAM6M,UAAcz+D,CAAAA,GAAAA,IAAAA,CAAAA;YACvCwmE,QAAW/tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAM6M,GAAAA,UAAAA,CAAAA,IAAe93C,CAAAA,GAAIA,CAAI,OAAIwjC,YAAenqD,GAAAA,IAAI,CAAD;AACvEumE,YAAAA,OAAAA,GAAU9tE,IAAK0f,CAAAA,GAAG,CAACy5C,GAAAA,GAAM6M,UAAcz+D,CAAAA,GAAAA,IAAAA,CAAAA;YACvCymE,QAAWhuE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAM6M,GAAAA,UAAAA,CAAAA,IAAe93C,CAAAA,GAAIA,CAAI,OAAIwjC,YAAenqD,GAAAA,IAAI,CAAD;YACvE6G,GAAI2V,CAAAA,GAAG,CAAC1b,CAAI0lE,GAAAA,QAAAA,EAAUzlE,IAAIwlE,OAASpc,EAAAA,YAAAA,EAAcyH,GAAM94C,GAAAA,EAAAA,EAAI84C,GAAMh5C,GAAAA,OAAAA,CAAAA,CAAAA;YACjE/R,GAAI2V,CAAAA,GAAG,CAAC1b,CAAI2lE,GAAAA,QAAAA,EAAU1lE,IAAIulE,OAASnc,EAAAA,YAAAA,EAAcyH,MAAMh5C,OAASg5C,EAAAA,GAAAA,CAAAA,CAAAA;YAChE/qD,GAAI2V,CAAAA,GAAG,CAAC1b,CAAI0lE,GAAAA,QAAAA,EAAUzlE,IAAIwlE,OAASpc,EAAAA,YAAAA,EAAcyH,KAAKA,GAAMh5C,GAAAA,OAAAA,CAAAA,CAAAA;YAC5D/R,GAAI2V,CAAAA,GAAG,CAAC1b,CAAI2lE,GAAAA,QAAAA,EAAU1lE,IAAIulE,OAASnc,EAAAA,YAAAA,EAAcyH,GAAMh5C,GAAAA,OAAAA,EAASg5C,GAAM94C,GAAAA,EAAAA,CAAAA,CAAAA;AACtEjS,YAAAA,GAAAA,CAAIwpC,SAAS;YACb,MAAM;QACR,KAAK;AACH,gBAAI,CAAC/4B,QAAU;gBACbtX,IAAOvH,GAAAA,IAAAA,CAAKmuE,OAAO,GAAG7vD,MAAAA,CAAAA;gBACtB3B,KAAQuR,GAAAA,CAAAA,GAAIA,CAAI,OAAI3mB,IAAI;gBACxB6G,GAAIuyC,CAAAA,IAAI,CAACt4C,CAAIsU,GAAAA,KAAAA,EAAOrU,IAAIf,IAAM,MAAIoV,OAAO,CAAIpV,GAAAA,IAAAA,CAAAA,CAAAA;gBAC7C,MAAM;aACP;YACD4xD,GAAO6M,IAAAA,UAAAA,CAAAA;AACT,4BACA,KAAK;YACH+H,QAAW/tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;YAC7CuvD,OAAU7tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1BwvD,OAAU9tE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1B0vD,QAAWhuE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;AAC7ClQ,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7Bz/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7Bz/D,YAAAA,GAAAA,CAAIwpC,SAAS;YACb,MAAM;QACR,KAAK;YACHuhB,GAAO6M,IAAAA,UAAAA,CAAAA;AACT,4BACA,KAAK;YACH+H,QAAW/tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;YAC7CuvD,OAAU7tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1BwvD,OAAU9tE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1B0vD,QAAWhuE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;AAC7ClQ,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7Bz/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;YAC7B,MAAM;QACR,KAAK;YACHE,QAAW/tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;YAC7CuvD,OAAU7tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1BwvD,OAAU9tE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1B0vD,QAAWhuE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;AAC7ClQ,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7Bz/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;YAC7B1U,GAAO6M,IAAAA,UAAAA,CAAAA;YACP+H,QAAW/tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;YAC7CuvD,OAAU7tE,GAAAA,IAAAA,CAAKwf,GAAG,CAAC25C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1BwvD,OAAU9tE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;YAC1B0vD,QAAWhuE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAAA,CAAAA,IAAQjrC,CAAIA,GAAAA,CAAAA,GAAI,CAAI5P,GAAAA,MAAM,CAAD;AAC7ClQ,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI0lE,GAAAA,QAAAA,EAAUzlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7B1/D,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;AAC7Bz/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAI2lE,GAAAA,QAAAA,EAAU1lE,CAAIulE,GAAAA,OAAAA,CAAAA,CAAAA;YAC7B,MAAM;QACR,KAAK;AACHA,YAAAA,OAAAA,GAAU3/C,IAAIA,CAAI,OAAIluB,KAAKwf,GAAG,CAAC25C,OAAO76C,MAAM;YAC5CwvD,OAAU9tE,GAAAA,IAAAA,CAAK0f,GAAG,CAACy5C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA;AAC1BlQ,YAAAA,GAAAA,CAAIg3B,MAAM,CAAC/8B,CAAIwlE,GAAAA,OAAAA,EAASvlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;AAC5B1/D,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAIwlE,GAAAA,OAAAA,EAASvlE,CAAIwlE,GAAAA,OAAAA,CAAAA,CAAAA;YAC5B,MAAM;QACR,KAAK;YACH1/D,GAAIg3B,CAAAA,MAAM,CAAC/8B,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AACd8F,YAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAAA,GAAIrI,KAAKwf,GAAG,CAAC25C,QAAQjrC,CAAAA,GAAIA,CAAI,OAAI5P,MAAM,CAAD,EAAIhW,IAAItI,IAAK0f,CAAAA,GAAG,CAACy5C,GAAO76C,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;YACzE,MAAM;AACR,aAAK,KAAK;AACRlQ,YAAAA,GAAAA,CAAIwpC,SAAS;YACb,MAAM;AACV;AAEAxpC,IAAAA,GAAAA,CAAIiB,IAAI;IACR,IAAIzI,OAAAA,CAAQib,WAAW,GAAG,CAAG;AAC3BzT,QAAAA,GAAAA,CAAIk3B,MAAM;KACX;AACH,CAAC;AAED;;;;;;IAOO,SAASjb,cACd7L,CAAAA,KAAY,EACZtK,IAAU,EACV2a,MAAe,EACf;IACAA,MAASA,GAAAA,MAAAA,IAAU;AAEnB,WAAO,CAAC3a,IAAAA,IAASsK,KAASA,IAAAA,KAAAA,CAAMnW,CAAC,GAAG6L,IAAKxL,CAAAA,IAAI,GAAGmmB,MAAAA,IAAUrQ,KAAMnW,CAAAA,CAAC,GAAG6L,IAAAA,CAAK1L,KAAK,GAAGqmB,MACjFrQ,IAAAA,KAAAA,CAAMlW,CAAC,GAAG4L,IAAK3L,CAAAA,GAAG,GAAGsmB,MAAAA,IAAUrQ,KAAMlW,CAAAA,CAAC,GAAG4L,IAAAA,CAAKzL,MAAM,GAAGomB,MAAAA,CAAAA;AACzD,CAAC;AAEM,SAAS8W,QAAAA,CAASv3B,GAA6B,EAAE8F,IAAU,EAAE;AAClE9F,IAAAA,GAAAA,CAAIq2B,IAAI;AACRr2B,IAAAA,GAAAA,CAAI+2B,SAAS;AACb/2B,IAAAA,GAAAA,CAAIuyC,IAAI,CAACzsC,IAAAA,CAAKxL,IAAI,EAAEwL,IAAAA,CAAK3L,GAAG,EAAE2L,IAAAA,CAAK1L,KAAK,GAAG0L,KAAKxL,IAAI,EAAEwL,KAAKzL,MAAM,GAAGyL,KAAK3L,GAAG;AAC5E6F,IAAAA,GAAAA,CAAI4F,IAAI;AACV,CAAC;AAEM,SAAS8xB,UAAW13B,CAAAA,GAA6B,EAAE;AACxDA,IAAAA,GAAAA,CAAIu2B,OAAO;AACb,CAAC;AAED;;AAEC,IACM,SAASoX,cACd3tC,CAAAA,GAA6B,EAC7BwtC,QAAe,EACfl4C,MAAa,EACb0qE,IAAc,EACdzkE,IAAa,EACb;AACA,QAAI,CAACiyC,QAAU;AACb,eAAOxtC,IAAIi3B,MAAM,CAAC3hC,OAAO2E,CAAC,EAAE3E,OAAO4E,CAAC;KACrC;AACD,QAAIqB,SAAS,QAAU;QACrB,MAAM0kE,QAAAA,GAAW,CAACzyB,QAAAA,CAASvzC,CAAC,GAAG3E,MAAAA,CAAO2E,CAAAA,IAAK;AAC3C+F,QAAAA,GAAAA,CAAIi3B,MAAM,CAACgpC,QAAUzyB,EAAAA,QAAAA,CAAStzC,CAAC;AAC/B8F,QAAAA,GAAAA,CAAIi3B,MAAM,CAACgpC,QAAU3qE,EAAAA,MAAAA,CAAO4E,CAAC;AAC/B,WAAO,IAAIqB,IAAAA,KAAS,OAAY,MAAC,CAACykE,IAAM;AACtChgE,QAAAA,GAAAA,CAAIi3B,MAAM,CAACuW,QAAAA,CAASvzC,CAAC,EAAE3E,OAAO4E,CAAC;KAC1B;AACL8F,QAAAA,GAAAA,CAAIi3B,MAAM,CAAC3hC,MAAAA,CAAO2E,CAAC,EAAEuzC,SAAStzC,CAAC;KAChC;AACD8F,IAAAA,GAAAA,CAAIi3B,MAAM,CAAC3hC,MAAAA,CAAO2E,CAAC,EAAE3E,OAAO4E,CAAC;AAC/B,CAAC;AAED;;IAGO,SAAS4zC,cAAAA,CACd9tC,GAA6B,EAC7BwtC,QAAqB,EACrBl4C,MAAmB,EACnB0qE,IAAc,EACd;AACA,QAAI,CAACxyB,QAAU;AACb,eAAOxtC,IAAIi3B,MAAM,CAAC3hC,OAAO2E,CAAC,EAAE3E,OAAO4E,CAAC;KACrC;AACD8F,IAAAA,GAAAA,CAAIkgE,aAAa,CACfF,IAAOxyB,GAAAA,QAAAA,CAAS2yB,IAAI,GAAG3yB,QAAAA,CAAS4yB,IAAI,EACpCJ,OAAOxyB,QAAS6yB,CAAAA,IAAI,GAAG7yB,QAAAA,CAAS8yB,IAAI,EACpCN,IAAAA,GAAO1qE,MAAO8qE,CAAAA,IAAI,GAAG9qE,MAAAA,CAAO6qE,IAAI,EAChCH,OAAO1qE,MAAOgrE,CAAAA,IAAI,GAAGhrE,MAAAA,CAAO+qE,IAAI,EAChC/qE,MAAAA,CAAO2E,CAAC,EACR3E,OAAO4E,CAAC;AACZ,CAAC;AAED,SAASqmE,aAAcvgE,CAAAA,GAA6B,EAAErG,IAAoB,EAAE;IAC1E,IAAIA,IAAAA,CAAKu8B,WAAW,EAAE;QACpBl2B,GAAIktC,CAAAA,SAAS,CAACvzC,IAAAA,CAAKu8B,WAAW,CAAC,EAAE,EAAEv8B,IAAAA,CAAKu8B,WAAW,CAAC,CAAE;KACvD;AAED,QAAI,CAACrrB,aAAAA,CAAclR,IAAK8W,CAAAA,QAAQ,CAAG;QACjCzQ,GAAIwwD,CAAAA,MAAM,CAAC72D,IAAAA,CAAK8W,QAAQ;KACzB;IAED,IAAI9W,IAAAA,CAAK/E,KAAK,EAAE;QACdoL,GAAImT,CAAAA,SAAS,GAAGxZ,IAAAA,CAAK/E,KAAK;KAC3B;IAED,IAAI+E,IAAAA,CAAKq7B,SAAS,EAAE;QAClBh1B,GAAIg1B,CAAAA,SAAS,GAAGr7B,IAAAA,CAAKq7B,SAAS;KAC/B;IAED,IAAIr7B,IAAAA,CAAKw7B,YAAY,EAAE;QACrBn1B,GAAIm1B,CAAAA,YAAY,GAAGx7B,IAAAA,CAAKw7B,YAAY;KACrC;AACH;AAEA,SAASqrC,YAAAA,CACPxgE,GAA6B,EAC7B/F,CAAS,EACTC,CAAS,EACTqc,IAAY,EACZ5c,IAAoB,EACpB;AACA,QAAIA,IAAKgkD,CAAAA,aAAa,IAAIhkD,IAAAA,CAAK8mE,SAAS,EAAE;AACxC;;;;;;AAMC,QACD,MAAMC,OAAAA,GAAU1gE,GAAIg8C,CAAAA,WAAW,CAACzlC,IAAAA,CAAAA,CAAAA;QAChC,MAAMjc,IAAAA,GAAOL,CAAIymE,GAAAA,OAAAA,CAAQC,qBAAqB;QAC9C,MAAMvmE,KAAAA,GAAQH,CAAIymE,GAAAA,OAAAA,CAAQE,sBAAsB;QAChD,MAAMzmE,GAAAA,GAAMD,CAAIwmE,GAAAA,OAAAA,CAAQG,uBAAuB;QAC/C,MAAMxmE,MAAAA,GAASH,CAAIwmE,GAAAA,OAAAA,CAAQI,wBAAwB;QACnD,MAAMC,WAAAA,GAAcpnE,IAAKgkD,CAAAA,aAAa,GAAIxjD,CAAAA,GAAME,GAAAA,MAAK,IAAK,IAAIA,MAAM;QAEpE2F,GAAIqT,CAAAA,WAAW,GAAGrT,GAAAA,CAAImT,SAAS;AAC/BnT,QAAAA,GAAAA,CAAI+2B,SAAS;AACb/2B,QAAAA,GAAAA,CAAIwT,SAAS,GAAG7Z,IAAKqnE,CAAAA,eAAe,IAAI;QACxChhE,GAAIg3B,CAAAA,MAAM,CAAC18B,IAAMymE,EAAAA,WAAAA,CAAAA,CAAAA;QACjB/gE,GAAIi3B,CAAAA,MAAM,CAAC78B,KAAO2mE,EAAAA,WAAAA,CAAAA,CAAAA;AAClB/gE,QAAAA,GAAAA,CAAIk3B,MAAM;KACX;AACH;AAEA,SAAS+pC,YAAajhE,CAAAA,GAA6B,EAAErG,IAAqB,EAAE;IAC1E,MAAMunE,QAAAA,GAAWlhE,IAAImT,SAAS;IAE9BnT,GAAImT,CAAAA,SAAS,GAAGxZ,IAAAA,CAAK/E,KAAK;AAC1BoL,IAAAA,GAAAA,CAAIs2B,QAAQ,CAAC38B,IAAKW,CAAAA,IAAI,EAAEX,IAAAA,CAAKQ,GAAG,EAAER,IAAK4U,CAAAA,KAAK,EAAE5U,IAAAA,CAAK2U,MAAM;AACzDtO,IAAAA,GAAAA,CAAImT,SAAS,GAAG+tD,QAAAA,CAAAA;AAClB;AAEA;;AAEC,IACM,SAASzpC,UAAAA,CACdz3B,GAA6B,EAC7BkT,IAAuB,EACvBjZ,CAAS,EACTC,CAAS,EACT6wB,IAAoB,EACpBpxB,IAAuB,KAAE,EACzB;IACA,MAAMsxB,KAAAA,GAAQ9yB,OAAQ+a,CAAAA,IAAAA,CAAAA,GAAQA,IAAO;AAACA,QAAAA,IAAAA;AAAK;AAC3C,UAAMgkB,SAASv9B,IAAK+7B,CAAAA,WAAW,GAAG,CAAK/7B,IAAAA,IAAAA,CAAK67B,WAAW,KAAK;AAC5D,QAAI9iC,CAAW6jB,EAAAA,IAAAA,CAAAA;AAEfvW,IAAAA,GAAAA,CAAIq2B,IAAI;IACRr2B,GAAI+qB,CAAAA,IAAI,GAAGA,IAAAA,CAAKqH,MAAM;AACtBmuC,IAAAA,aAAAA,CAAcvgE,GAAKrG,EAAAA,IAAAA,CAAAA,CAAAA;AAEnB,QAAKjH,IAAI,CAAGA,EAAAA,CAAAA,GAAIu4B,MAAMx4B,MAAM,EAAE,EAAEC,CAAG;QACjC6jB,IAAO0U,GAAAA,KAAK,CAACv4B,CAAE;QAEf,IAAIiH,IAAAA,CAAKm8B,QAAQ,EAAE;YACjBmrC,YAAajhE,CAAAA,GAAAA,EAAKrG,KAAKm8B,QAAQ;SAChC;AAED,YAAIoB,MAAQ;YACV,IAAIv9B,IAAAA,CAAK67B,WAAW,EAAE;gBACpBx1B,GAAIqT,CAAAA,WAAW,GAAG1Z,IAAAA,CAAK67B,WAAW;aACnC;AAED,gBAAI,CAAC3qB,aAAAA,CAAclR,IAAK+7B,CAAAA,WAAW,CAAG;gBACpC11B,GAAIwT,CAAAA,SAAS,GAAG7Z,IAAAA,CAAK+7B,WAAW;aACjC;AAED11B,YAAAA,GAAAA,CAAImhE,UAAU,CAAC5qD,IAAAA,EAAMtc,CAAGC,EAAAA,CAAAA,EAAGP,KAAKkb,QAAQ;SACzC;AAED7U,QAAAA,GAAAA,CAAI09C,QAAQ,CAACnnC,IAAAA,EAAMtc,CAAGC,EAAAA,CAAAA,EAAGP,KAAKkb,QAAQ;QACtC2rD,YAAaxgE,CAAAA,GAAAA,EAAK/F,CAAGC,EAAAA,CAAAA,EAAGqc,IAAM5c,EAAAA,IAAAA,CAAAA,CAAAA;QAE9BO,CAAK6C,IAAAA,MAAAA,CAAOguB,KAAKG,UAAU;AAC7B;AAEAlrB,IAAAA,GAAAA,CAAIu2B,OAAO;AACb,CAAC;AAED;;;;AAIC,IACM,SAASsc,kBAAAA,CACd7yC,GAA6B,EAC7BuyC,IAA2C,EAC3C;IACA,MAAM,EAACt4C,CAAC,GAAEC,CAAC,GAAE4lB,CAAC,GAAEE,CAAC,GAAE9P,MAAM,GAAC,GAAGqiC,IAAAA,CAAAA;;AAG7BvyC,IAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAAA,GAAIiW,MAAOyhC,CAAAA,OAAO,EAAEz3C,CAAIgW,GAAAA,MAAAA,CAAOyhC,OAAO,EAAEzhC,OAAOyhC,OAAO,EAAE,GAAM1/B,GAAAA,EAAAA,EAAIA,IAAI,IAAI;;AAGlFjS,IAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAAA,EAAGC,CAAI8lB,GAAAA,CAAAA,GAAI9P,OAAO2hC,UAAU;;AAGvC7xC,IAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAAA,GAAIiW,MAAO2hC,CAAAA,UAAU,EAAE33C,CAAI8lB,GAAAA,CAAAA,GAAI9P,MAAO2hC,CAAAA,UAAU,EAAE3hC,MAAO2hC,CAAAA,UAAU,EAAE5/B,EAAAA,EAAIF,SAAS,IAAI;;AAG9F/R,IAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAAA,GAAI6lB,IAAI5P,MAAO4hC,CAAAA,WAAW,EAAE53C,CAAI8lB,GAAAA,CAAAA,CAAAA,CAAAA;;AAG3ChgB,IAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAAA,GAAI6lB,CAAI5P,GAAAA,MAAAA,CAAO4hC,WAAW,EAAE53C,CAAAA,GAAI8lB,CAAI9P,GAAAA,MAAAA,CAAO4hC,WAAW,EAAE5hC,MAAAA,CAAO4hC,WAAW,EAAE//B,OAAAA,EAAS,GAAG,IAAI;;AAGpG/R,IAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAAA,GAAI6lB,CAAG5lB,EAAAA,CAAAA,GAAIgW,OAAO0hC,QAAQ;;AAGrC5xC,IAAAA,GAAAA,CAAI2V,GAAG,CAAC1b,CAAAA,GAAI6lB,CAAI5P,GAAAA,MAAAA,CAAO0hC,QAAQ,EAAE13C,CAAAA,GAAIgW,MAAO0hC,CAAAA,QAAQ,EAAE1hC,MAAO0hC,CAAAA,QAAQ,EAAE,CAAG,GAAC7/B,SAAS,IAAI;;AAGxF/R,IAAAA,GAAAA,CAAIi3B,MAAM,CAACh9B,CAAIiW,GAAAA,MAAAA,CAAOyhC,OAAO,EAAEz3C,CAAAA,CAAAA,CAAAA;AACjC;;ACxgBA,MAAMknE,WAAc;AACpB,MAAMC,UAAa;AAEnB;;;;;;;;;;AAWC,IACM,SAASC,YAAAA,CAAapoE,KAAsB,EAAEC,IAAY,EAAU;AACzE,UAAMooE,UAAU,CAAC,KAAKroE,KAAI,EAAGsoE,KAAK,CAACJ,WAAAA,CAAAA,CAAAA;AACnC,QAAI,CAACG,OAAWA,IAAAA,OAAO,CAAC,EAAE,KAAK,QAAU;AACvC,eAAOpoE,IAAO;KACf;IAEDD,KAAQ,IAACqoE,OAAO,CAAC,CAAE;IAEnB,OAAQA,OAAO,CAAC,CAAE;QAChB,KAAK;YACH,OAAOroE,KAAAA,CAAAA;QACT,KAAK;YACHA,KAAS;YACT,MAAM;AAGV;AAEA,WAAOC,IAAOD,GAAAA,KAAAA,CAAAA;AAChB,CAAC;AAED,MAAMuoE,YAAe,IAACz0D,CAAe,IAACA,CAAK;AAQpC,SAAS08B,iBAAAA,CAAkBxwC,KAAsC,EAAEF,KAAwC,EAAE;AAClH,UAAM0uB,MAAM,EAAC;AACb,UAAMg6C,WAAWjqE,QAASuB,CAAAA,KAAAA,CAAAA,CAAAA;AAC1B,UAAMpB,OAAO8pE,QAAW/pE,GAAAA,MAAAA,CAAOC,IAAI,CAACoB,SAASA,KAAK;IAClD,MAAM2oE,IAAAA,GAAOlqE,QAASyB,CAAAA,KAAAA,CAAAA,GAClBwoE,QACEnsE,GAAAA,CAAAA,OAAQmM,cAAexI,CAAAA,KAAK,CAAC3D,IAAAA,CAAK,EAAE2D,KAAK,CAACF,KAAK,CAACzD,IAAK,EAAC,CACtDA,GAAAA,CAAAA,IAAQ2D,GAAAA,KAAK,CAAC3D,IAAAA,CAAK,GACrB,IAAM2D,KAAK;IAEf,KAAK,MAAM3D,QAAQqC,IAAM;AACvB8vB,QAAAA,GAAG,CAACnyB,IAAAA,CAAK,GAAGksE,YAAAA,CAAaE,IAAKpsE,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAChC;IACA,OAAOmyB,GAAAA,CAAAA;AACT,CAAC;AAED;;;;;;;AAOC,IACM,SAAS6pB,MAAOr4C,CAAAA,KAA4B,EAAE;AACnD,WAAOwwC,kBAAkBxwC,KAAO;QAACiB,GAAK;QAAKC,KAAO;QAAKC,MAAQ;QAAKC,IAAM;AAAG;AAC/E,CAAC;AAED;;;;;;AAMC,IACM,SAASk3C,aAAct4C,CAAAA,KAA2B,EAAE;AACzD,WAAOwwC,kBAAkBxwC,KAAO;AAAC;AAAW;AAAY;AAAc;AAAc;AACtF,CAAC;AAED;;;;;;;AAOC,IACM,SAASsoB,SAAUtoB,CAAAA,KAAqB,EAAa;AAC1D,UAAM0U,MAAM2jC,MAAOr4C,CAAAA,KAAAA,CAAAA,CAAAA;AAEnB0U,IAAAA,GAAAA,CAAIW,KAAK,GAAGX,GAAAA,CAAItT,IAAI,GAAGsT,IAAIxT,KAAK;AAChCwT,IAAAA,GAAAA,CAAIU,MAAM,GAAGV,GAAAA,CAAIzT,GAAG,GAAGyT,IAAIvT,MAAM;IAEjC,OAAOuT,GAAAA,CAAAA;AACT,CAAC;AAED;;;;;;AAMC,IAEM,SAASod,MAAAA,CAAOxyB,OAA0B,EAAEsyB,QAA4B,EAAE;AAC/EtyB,IAAAA,OAAAA,GAAUA,WAAW,EAAC;IACtBsyB,QAAWA,GAAAA,QAAAA,IAAYjzB,SAASkzB,IAAI;AAEpC,QAAI5xB,OAAOuI,cAAelJ,CAAAA,OAAAA,CAAQW,IAAI,EAAE2xB,SAAS3xB,IAAI;IAErD,IAAI,OAAOA,SAAS,QAAU;AAC5BA,QAAAA,IAAAA,GAAOyoE,SAASzoE,IAAM;KACvB;AACD,QAAI8Z,QAAQvR,cAAelJ,CAAAA,OAAAA,CAAQya,KAAK,EAAE6X,SAAS7X,KAAK;IACxD,IAAIA,KAAAA,IAAS,CAAC,CAAC,KAAKA,KAAI,EAAGuuD,KAAK,CAACH,UAAa;QAC5ClgE,OAAQC,CAAAA,IAAI,CAAC,oCAAoC6R,KAAQ;QACzDA,KAAQniB,GAAAA,SAAAA,CAAAA;KACT;AAED,UAAMi6B,IAAO;AACXyzC,QAAAA,MAAAA,EAAQ98D,cAAelJ,CAAAA,OAAAA,CAAQgmE,MAAM,EAAE1zC,SAAS0zC,MAAM;AACtDtzC,QAAAA,UAAAA,EAAYo2C,aAAa5/D,cAAelJ,CAAAA,OAAAA,CAAQ0yB,UAAU,EAAEJ,QAAAA,CAASI,UAAU,CAAG/xB,EAAAA,IAAAA,CAAAA;AAClFA,QAAAA,IAAAA;AACA8Z,QAAAA,KAAAA;AACAkD,QAAAA,MAAAA,EAAQzU,cAAelJ,CAAAA,OAAAA,CAAQ2d,MAAM,EAAE2U,SAAS3U,MAAM;QACtDic,MAAQ;AACV;IAEArH,IAAKqH,CAAAA,MAAM,GAAG6sC,YAAal0C,CAAAA,IAAAA,CAAAA,CAAAA;IAC3B,OAAOA,IAAAA,CAAAA;AACT,CAAC;AAED;;;;;;;;;;IAWO,SAASt1B,OAAAA,CAAQosE,MAAsB,EAAEz7D,OAAgB,EAAElL,KAAc,EAAE4mE,IAA6B,EAAE;AAC/G,QAAIC,YAAY,IAAI;AACpB,QAAIrvE,GAAWuI,IAAc/B,EAAAA,KAAAA,CAAAA;IAE7B,IAAKxG,CAAAA,GAAI,GAAGuI,IAAO4mE,GAAAA,MAAAA,CAAOpvE,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QAC/CwG,KAAQ2oE,GAAAA,MAAM,CAACnvE,CAAE;AACjB,YAAIwG,UAAUpI,SAAW;YACvB,SAAS;SACV;AACD,YAAIsV,OAAYtV,KAAAA,SAAAA,IAAa,OAAOoI,KAAAA,KAAU,UAAY;AACxDA,YAAAA,KAAAA,GAAQA,KAAMkN,CAAAA,OAAAA,CAAAA,CAAAA;AACd27D,YAAAA,SAAAA,GAAY,KAAK;SAClB;QACD,IAAI7mE,KAAAA,KAAUpK,SAAaqH,IAAAA,OAAAA,CAAQe,KAAQ;AACzCA,YAAAA,KAAAA,GAAQA,KAAK,CAACgC,KAAQhC,GAAAA,KAAAA,CAAMzG,MAAM,CAAC;AACnCsvE,YAAAA,SAAAA,GAAY,KAAK;SAClB;AACD,YAAI7oE,UAAUpI,SAAW;YACvB,IAAIgxE,IAAAA,IAAQ,CAACC,SAAW;gBACtBD,IAAKC,CAAAA,SAAS,GAAG,KAAK;aACvB;YACD,OAAO7oE,KAAAA,CAAAA;SACR;AACH;AACF,CAAC;AAED;;;;;IAMO,SAASi1B,SAAU6zC,CAAAA,MAAqC,EAAEr0C,KAAsB,EAAEhgB,WAAoB,EAAE;AAC7G,UAAM,EAAC9b,GAAAA,GAAKmC,GAAAA,GAAI,GAAGguE,MAAAA,CAAAA;AACnB,UAAM3hD,SAASrL,WAAY2Y,CAAAA,KAAAA,EAAO,CAAC35B,GAAAA,GAAMnC,GAAE,IAAK;IAChD,MAAMowE,QAAAA,GAAW,CAAC/oE,KAAevF,EAAAA,GAAAA,GAAgBga,eAAezU,KAAU,SAAI,CAAIA,GAAAA,KAAAA,GAAQvF,GAAG;IAC7F,OAAO;AACL9B,QAAAA,GAAAA,EAAKowE,QAASpwE,CAAAA,GAAAA,EAAK,CAACD,IAAAA,CAAKuY,GAAG,CAACkW,MAAAA,CAAAA,CAAAA;AAC7BrsB,QAAAA,GAAAA,EAAKiuE,SAASjuE,GAAKqsB,EAAAA,MAAAA,CAAAA;AACrB;AACF,CAAC;AAUM,SAASzhB,aAAAA,CAAcsjE,aAAqB,EAAE97D,OAAe,EAAE;AACpE,WAAOzO,OAAOyB,MAAM,CAACzB,MAAOygC,CAAAA,MAAM,CAAC8pC,aAAgB97D,CAAAA,EAAAA,OAAAA,CAAAA,CAAAA;AACrD;;AC7LA;;;;;;;;;AASC,IACM,SAASm6B,eAIdh9B,CAAAA,MAAS,EACTqD,QAAW;AAAC;CAAG,EACfu7D,UAAc,EACdr3C,QAA4B,EAC5Bs3C,YAAY,IAAM7+D,MAAM,CAAC,EAAE,EAC3B;AACA,UAAM8+D,kBAAkBF,UAAc5+D,IAAAA,MAAAA,CAAAA;IACtC,IAAI,OAAOunB,aAAa,WAAa;AACnCA,QAAAA,QAAAA,GAAWw3C,SAAS,WAAa/+D,EAAAA,MAAAA,CAAAA,CAAAA;KAClC;AACD,UAAMgD,KAA6B;QACjC,CAACg8D,MAAAA,CAAOC,WAAW,GAAG;AACtBr7D,QAAAA,UAAAA,EAAY,IAAI;QAChBs7D,OAASl/D,EAAAA,MAAAA;QACTm/D,WAAaL,EAAAA,eAAAA;QACbzZ,SAAW99B,EAAAA,QAAAA;QACXiuB,UAAYqpB,EAAAA,SAAAA;QACZ3oD,QAAU,GAAC0e,QAAqBoI,eAAgB;AAACpI,gBAAAA,KAAAA;AAAU50B,gBAAAA,GAAAA,MAAAA;AAAO,eAAEqD,UAAUy7D,eAAiBv3C,EAAAA,QAAAA,CAAAA;AACjG;IACA,OAAO,IAAI63C,MAAMp8D,KAAO;AACtB;;AAEC,QACDq8D,cAAettE,CAAAA,CAAAA,MAAM,EAAEC,IAAY,EAAE;AACnC,mBAAOD,MAAM,CAACC,IAAK;YACnB,OAAOD,MAAAA,CAAOutE,KAAK;AACnB,mBAAOt/D,MAAM,CAAC,EAAE,CAAChO,IAAAA,CAAK;AACtB,mBAAO,IAAI;AACb;AAEA;;AAEC,QACDpC,GAAImC,CAAAA,CAAAA,MAAM,EAAEC,IAAY,EAAE;AACxB,mBAAOutE,QAAQxtE,MAAQC,EAAAA,IAAAA,EACrB,IAAMwtE,oBAAqBxtE,CAAAA,IAAAA,EAAMqR,UAAUrD,MAAQjO,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AACvD;AAEA;;;AAGC,QACD0tE,wBAAyB1tE,CAAAA,CAAAA,MAAM,EAAEC,IAAI,EAAE;AACrC,mBAAO0tE,QAAQD,wBAAwB,CAAC1tE,OAAOmtE,OAAO,CAAC,EAAE,EAAEltE,IAAAA,CAAAA,CAAAA;AAC7D;AAEA;;AAEC,QACDkjC,cAAiB;AACf,mBAAOwqC,OAAQxqC,CAAAA,cAAc,CAACl1B,MAAM,CAAC,CAAE;AACzC;AAEA;;AAEC,QACD3P,GAAI0B,CAAAA,CAAAA,MAAM,EAAEC,IAAY,EAAE;YACxB,OAAO2tE,oBAAAA,CAAqB5tE,MAAQ4oB,CAAAA,CAAAA,QAAQ,CAAC3oB,IAAAA,CAAAA,CAAAA;AAC/C;AAEA;;QAGA4tE,OAAAA,CAAAA,CAAQ7tE,MAAM,EAAE;AACd,mBAAO4tE,oBAAqB5tE,CAAAA,MAAAA,CAAAA,CAAAA;AAC9B;AAEA;;AAEC,QACDhC,KAAIgC,MAAM,EAAEC,IAAY,EAAE2D,KAAK,EAAE;YAC/B,MAAMkqE,OAAAA,GAAU9tE,OAAO+tE,QAAQ,KAAK/tE,MAAO+tE,CAAAA,QAAQ,GAAGjB,SAAU;YAChE9sE,MAAM,CAACC,KAAK,GAAG6tE,OAAO,CAAC7tE,IAAK,IAAG2D;YAC/B,OAAO5D,MAAAA,CAAOutE,KAAK;AACnB,mBAAO,IAAI;AACb;AACF;AACF,CAAC;AAED;;;;;;;IAQO,SAASziC,cAAAA,CAId5Z,KAA0B,EAC1BpgB,OAAkB,EAClBk9D,QAA8B,EAC9BjjC,kBAAuC,EACvC;AACA,UAAM95B,KAA4B;AAChCY,QAAAA,UAAAA,EAAY,KAAK;QACjB+2B,MAAQ1X,EAAAA,KAAAA;QACR+8C,QAAUn9D,EAAAA,OAAAA;QACVo9D,SAAWF,EAAAA,QAAAA;AACXnlD,QAAAA,MAAAA,EAAQ,IAAIygB,GAAAA,EAAAA;AACZlD,QAAAA,YAAAA,EAAcA,aAAalV,KAAO6Z,EAAAA,kBAAAA,CAAAA;AAClCtT,QAAAA,UAAAA,EAAY,CAAC/sB,GAAAA,GAAmBogC,cAAe5Z,CAAAA,KAAAA,EAAOxmB,KAAKsjE,QAAUjjC,EAAAA,kBAAAA,CAAAA;QACrE5mB,QAAU,GAAC0e,QAAqBiI,cAAe5Z,CAAAA,KAAAA,CAAM/M,QAAQ,CAAC0e,KAAAA,CAAAA,EAAQ/xB,SAASk9D,QAAUjjC,EAAAA,kBAAAA,CAAAA;AAC3F;IACA,OAAO,IAAIsiC,MAAMp8D,KAAO;AACtB;;AAEC,QACDq8D,cAAettE,CAAAA,CAAAA,MAAM,EAAEC,IAAI,EAAE;AAC3B,mBAAOD,MAAM,CAACC,IAAK;AACnB,mBAAOixB,KAAK,CAACjxB,IAAK;AAClB,mBAAO,IAAI;AACb;AAEA;;AAEC,QACDpC,KAAImC,MAAM,EAAEC,IAAY,EAAEkuE,QAAQ,EAAE;AAClC,mBAAOX,QAAQxtE,MAAQC,EAAAA,IAAAA,EACrB,IAAMmuE,mBAAAA,CAAoBpuE,QAAQC,IAAMkuE,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AAC5C;AAEA;;;AAGC,QACDT,wBAAyB1tE,CAAAA,CAAAA,MAAM,EAAEC,IAAI,EAAE;YACrC,OAAOD,MAAAA,CAAOomC,YAAY,CAACmB,OAAO,GAC9BomC,OAAQrvE,CAAAA,GAAG,CAAC4yB,KAAAA,EAAOjxB,IAAQ;AAACqgD,gBAAAA,UAAAA,EAAY,IAAI;AAAED,gBAAAA,YAAAA,EAAc,IAAI;AAAA,gBAAI7kD,SAAS,GAC7EmyE,OAAAA,CAAQD,wBAAwB,CAACx8C,OAAOjxB,IAAK;AACnD;AAEA;;AAEC,QACDkjC,cAAiB;YACf,OAAOwqC,OAAAA,CAAQxqC,cAAc,CAACjS,KAAAA,CAAAA,CAAAA;AAChC;AAEA;;AAEC,QACD5yB,GAAI0B,CAAAA,CAAAA,MAAM,EAAEC,IAAI,EAAE;YAChB,OAAO0tE,OAAAA,CAAQrvE,GAAG,CAAC4yB,KAAOjxB,EAAAA,IAAAA,CAAAA,CAAAA;AAC5B;AAEA;;AAEC,QACD4tE,OAAU;YACR,OAAOF,OAAAA,CAAQE,OAAO,CAAC38C,KAAAA,CAAAA,CAAAA;AACzB;AAEA;;AAEC,QACDlzB,KAAIgC,MAAM,EAAEC,IAAI,EAAE2D,KAAK,EAAE;AACvBstB,YAAAA,KAAK,CAACjxB,IAAAA,CAAK,GAAG2D,KAAAA,CAAAA;AACd,mBAAO5D,MAAM,CAACC,IAAK;AACnB,mBAAO,IAAI;AACb;AACF;AACF,CAAC;AAED;;AAEC,IACM,SAASmmC,YACdlV,CAAAA,KAAoB,EACpB3uB,QAA+B;AAAC8kC,IAAAA,UAAAA,EAAY,IAAI;AAAEC,IAAAA,SAAAA,EAAW,IAAI;AAAA,CAAC,EACtD;AACZ,UAAM,EAACpqB,WAAc3a,EAAAA,QAAAA,CAAS8kC,UAAU,GAAElqB,UAAa5a,EAAAA,QAAAA,CAAS+kC,SAAS,GAAE+mC,QAAW9rE,EAAAA,QAAAA,CAASglC,OAAO,GAAC,GAAGrW,KAAAA,CAAAA;IAC1G,OAAO;QACLqW,OAAS8mC,EAAAA,QAAAA;QACThnC,UAAYnqB,EAAAA,WAAAA;QACZoqB,SAAWnqB,EAAAA,UAAAA;AACXiuB,QAAAA,YAAAA,EAAcR,UAAW1tB,CAAAA,WAAAA,CAAAA,GAAeA,WAAc,OAAMA,WAAW;AACvEmuB,QAAAA,WAAAA,EAAaT,UAAWztB,CAAAA,UAAAA,CAAAA,GAAcA,UAAa,OAAMA,UAAU;AACrE;AACF,CAAC;AAED,MAAMmxD,OAAAA,GAAU,CAACx7B,MAAgBp5B,EAAAA,IAAAA,GAAiBo5B,SAASA,MAAShN,GAAAA,WAAAA,CAAYpsB,QAAQA,IAAI;AAC5F,MAAM60D,mBAAmB,CAACtuE,IAAAA,EAAc2D,QAAmBzB,QAASyB,CAAAA,KAAAA,CAAAA,IAAU3D,SAAS,UACpFoC,KAAAA,MAAO8gC,CAAAA,cAAc,CAACv/B,KAAW,UAAI,IAAIA,KAAM1I,CAAAA,WAAW,KAAKmH,MAAK;AAEvE,SAASmrE,QACPxtE,MAAiB,EACjBC,IAAY,EACZE,OAAsB,EACtB;IACA,IAAIkC,MAAAA,CAAOgiB,SAAS,CAACs9C,cAAc,CAAChlE,IAAI,CAACqD,MAAAA,EAAQC,IAASA,CAAAA,IAAAA,IAAAA,KAAS,aAAe;QAChF,OAAOD,MAAM,CAACC,IAAK;KACpB;AAED,UAAM2D,KAAQzD,GAAAA,OAAAA,EAAAA,CAAAA;;IAEdH,MAAM,CAACC,KAAK,GAAG2D,KAAAA,CAAAA;IACf,OAAOA,KAAAA,CAAAA;AACT;AAEA,SAASwqE,oBACPpuE,MAAoB,EACpBC,IAAY,EACZkuE,QAAmB,EACnB;IACA,MAAM,EAACvlC,MAAM,GAAEqlC,QAAQ,GAAEC,YAAW9nC,YAAAA,EAAcnpB,WAAW,GAAC,GAAGjd,MAAAA,CAAAA;AACjE,QAAI4D,KAAQglC,GAAAA,MAAM,CAAC3oC,IAAAA,CAAK;;AAGxB,QAAI2qC,UAAWhnC,CAAAA,KAAAA,CAAAA,IAAUqZ,WAAYmuB,CAAAA,YAAY,CAACnrC,IAAO;QACvD2D,KAAQ4qE,GAAAA,kBAAAA,CAAmBvuE,IAAM2D,EAAAA,KAAAA,EAAO5D,MAAQmuE,EAAAA,QAAAA,CAAAA,CAAAA;KACjD;AACD,QAAItrE,OAAQe,CAAAA,KAAAA,CAAAA,IAAUA,KAAMzG,CAAAA,MAAM,EAAE;AAClCyG,QAAAA,KAAAA,GAAQ6qE,aAAcxuE,CAAAA,IAAAA,EAAM2D,KAAO5D,EAAAA,MAAAA,EAAQid,YAAYouB,WAAW;KACnE;IACD,IAAIkjC,gBAAAA,CAAiBtuE,MAAM2D,KAAQ;;AAEjCA,QAAAA,KAAAA,GAAQknC,eAAelnC,KAAOqqE,EAAAA,QAAAA,EAAUC,aAAaA,SAAS,CAACjuE,KAAK,EAAEgd,WAAAA,CAAAA,CAAAA;KACvE;IACD,OAAOrZ,KAAAA,CAAAA;AACT;AAEA,SAAS4qE,kBAAAA,CACPvuE,IAAY,EACZyuE,QAAqD,EACrD1uE,MAAoB,EACpBmuE,QAAmB,EACnB;IACA,MAAM,EAACvlC,SAAQqlC,QAAAA,GAAUC,SAAS,GAAErlD,MAAM,GAAC,GAAG7oB,MAAAA,CAAAA;IAC9C,IAAI6oB,MAAAA,CAAOvqB,GAAG,CAAC2B,IAAO;QACpB,MAAM,IAAIgkB,KAAM,0BAAyBld,KAAM5H,CAAAA,IAAI,CAAC0pB,MAAAA,CAAAA,CAAQqb,IAAI,CAAC,IAAQ,WAAOjkC,IAAM;KACvF;AACD4oB,IAAAA,MAAAA,CAAOxqB,GAAG,CAAC4B,IAAAA,CAAAA,CAAAA;IACX,IAAI2D,KAAAA,GAAQ8qE,QAAST,CAAAA,QAAAA,EAAUC,SAAaC,IAAAA,QAAAA,CAAAA,CAAAA;AAC5CtlD,IAAAA,MAAAA,CAAO9pB,MAAM,CAACkB,IAAAA,CAAAA,CAAAA;IACd,IAAIsuE,gBAAAA,CAAiBtuE,MAAM2D,KAAQ;;AAEjCA,QAAAA,KAAAA,GAAQ+qE,iBAAkB/lC,CAAAA,MAAAA,CAAOukC,OAAO,EAAEvkC,QAAQ3oC,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;KACzD;IACD,OAAOA,KAAAA,CAAAA;AACT;AAEA,SAAS6qE,aAAAA,CACPxuE,IAAY,EACZ2D,KAAgB,EAChB5D,MAAoB,EACpBqrC,WAAqC,EACrC;IACA,MAAM,EAACzC,MAAM,GAAEqlC,QAAQ,GAAEC,YAAW9nC,YAAAA,EAAcnpB,WAAW,GAAC,GAAGjd,MAAAA,CAAAA;AAEjE,QAAI,OAAOiuE,QAASroE,CAAAA,KAAK,KAAK,eAAeylC,YAAYprC,IAAO;AAC9D,eAAO2D,KAAK,CAACqqE,QAAAA,CAASroE,KAAK,GAAGhC,KAAAA,CAAMzG,MAAM,CAAC;AAC7C,WAAO,IAAIgF,QAAAA,CAASyB,KAAK,CAAC,EAAE,CAAG;;AAE7B,cAAMuP,GAAMvP,GAAAA,KAAAA,CAAAA;QACZ,MAAMqK,MAAAA,GAAS26B,OAAOukC,OAAO,CAACjkE,MAAM,CAACu6D,CAAAA,IAAKA,CAAMtwD,KAAAA,GAAAA,CAAAA,CAAAA;AAChDvP,QAAAA,KAAAA,GAAQ,EAAE;QACV,KAAK,MAAMtG,QAAQ6V,GAAK;AACtB,kBAAMq3B,QAAWmkC,GAAAA,iBAAAA,CAAkB1gE,MAAQ26B,EAAAA,MAAAA,EAAQ3oC,IAAM3C,EAAAA,IAAAA,CAAAA,CAAAA;YACzDsG,KAAMxF,CAAAA,IAAI,CAAC0sC,cAAeN,CAAAA,QAAAA,EAAUyjC,UAAUC,SAAaA,IAAAA,SAAS,CAACjuE,IAAAA,CAAK,EAAEgd,WAAAA,CAAAA,CAAAA,CAAAA;AAC9E;KACD;IACD,OAAOrZ,KAAAA,CAAAA;AACT;AAEA,SAASgrE,gBACPp5C,QAA8F,EAC9Fv1B,IAAuB,EACvB2D,KAAc,EACd;AACA,WAAOgnC,UAAWpV,CAAAA,QAAAA,CAAAA,GAAYA,QAASv1B,CAAAA,IAAAA,EAAM2D,SAAS4xB,QAAQ;AAChE;AAEA,MAAMszC,QAAW,IAACnmE,GAAwB0G,EAAAA,MAAAA,GAAsB1G,QAAQ,IAAI,GAAG0G,MAC3E,UAAO1G,GAAQ,gBAAWyM,gBAAiB/F,CAAAA,MAAAA,EAAQ1G,OAAOnH,SAAS;AAEvE,SAASqzE,SAAAA,CACP7wE,GAAmB,EACnB8wE,YAAyB,EACzBnsE,GAAsB,EACtBosE,cAAiC,EACjCnrE,KAAc,EACd;IACA,KAAK,MAAMyF,UAAUylE,YAAc;QACjC,MAAMjsC,KAAAA,GAAQimC,SAASnmE,GAAK0G,EAAAA,MAAAA,CAAAA,CAAAA;AAC5B,YAAIw5B,KAAO;AACT7kC,YAAAA,GAAAA,CAAIK,GAAG,CAACwkC,KAAAA,CAAAA,CAAAA;AACR,kBAAMrN,QAAWo5C,GAAAA,eAAAA,CAAgB/rC,KAAMywB,CAAAA,SAAS,EAAE3wD,GAAKiB,EAAAA,KAAAA,CAAAA,CAAAA;AACvD,gBAAI,OAAO4xB,QAAa,oBAAeA,QAAa7yB,KAAAA,GAAAA,IAAO6yB,aAAau5C,cAAgB;;;gBAGtF,OAAOv5C,QAAAA,CAAAA;aACR;SACI,UAAIqN,UAAU,KAAK,IAAI,OAAOksC,cAAmB,oBAAepsE,QAAQosE,cAAgB;;;AAG7F,mBAAO,IAAI;SACZ;AACH;AACA,WAAO,KAAK;AACd;AAEA,SAASJ,iBAAAA,CACPG,YAAyB,EACzBtkC,QAAuB,EACvBvqC,IAAuB,EACvB2D,KAAc,EACd;IACA,MAAMipE,UAAAA,GAAariC,SAAS4iC,WAAW;AACvC,UAAM53C,QAAWo5C,GAAAA,eAAAA,CAAgBpkC,QAAS8oB,CAAAA,SAAS,EAAErzD,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;AAC3D,UAAMorE,SAAY;AAAIF,QAAAA,GAAAA,YAAAA;AAAiBjC,QAAAA,GAAAA,UAAAA;AAAW;AAClD,UAAM7uE,MAAM,IAAIsrC,GAAAA,EAAAA,CAAAA;AAChBtrC,IAAAA,GAAAA,CAAIK,GAAG,CAACuF,KAAAA,CAAAA,CAAAA;AACR,QAAIjB,MAAMssE,gBAAiBjxE,CAAAA,GAAAA,EAAKgxE,SAAW/uE,EAAAA,IAAAA,EAAMu1B,YAAYv1B,IAAM2D,EAAAA,KAAAA,CAAAA,CAAAA;IACnE,IAAIjB,GAAAA,KAAQ,IAAI,EAAE;AAChB,eAAO,KAAK;KACb;AACD,QAAI,OAAO6yB,QAAAA,KAAa,WAAeA,IAAAA,QAAAA,KAAav1B,IAAM;AACxD0C,QAAAA,GAAAA,GAAMssE,gBAAiBjxE,CAAAA,GAAAA,EAAKgxE,SAAWx5C,EAAAA,QAAAA,EAAU7yB,GAAKiB,EAAAA,KAAAA,CAAAA,CAAAA;QACtD,IAAIjB,GAAAA,KAAQ,IAAI,EAAE;AAChB,mBAAO,KAAK;SACb;KACF;AACD,WAAOsoC,eAAgBlkC,CAAAA,KAAAA,CAAM5H,IAAI,CAACnB,GAAM;AAAC;AAAG,OAAE6uE,UAAYr3C,EAAAA,QAAAA,EACxD,IAAM05C,YAAAA,CAAa1kC,UAAUvqC,IAAgB2D,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACjD;AAEA,SAASqrE,gBAAAA,CACPjxE,GAAmB,EACnBgxE,SAAsB,EACtBrsE,GAAsB,EACtB6yB,QAA2B,EAC3Bl4B,IAAa,EACb;AACA,UAAOqF,GAAK;AACVA,QAAAA,GAAAA,GAAMksE,SAAU7wE,CAAAA,GAAAA,EAAKgxE,SAAWrsE,EAAAA,GAAAA,EAAK6yB,QAAUl4B,EAAAA,IAAAA,CAAAA,CAAAA;AACjD;IACA,OAAOqF,GAAAA,CAAAA;AACT;AAEA,SAASusE,aACP1kC,QAAuB,EACvBvqC,IAAY,EACZ2D,KAAc,EACd;IACA,MAAMyF,MAAAA,GAASmhC,SAASiZ,UAAU;AAClC,QAAI,EAAExjD,IAAQoJ,IAAAA,MAAK,CAAI;QACrBA,MAAM,CAACpJ,IAAK,IAAG,EAAC;KACjB;IACD,MAAMD,MAAAA,GAASqJ,MAAM,CAACpJ,IAAK;IAC3B,IAAI4C,OAAAA,CAAQ7C,MAAWmC,CAAAA,IAAAA,QAAAA,CAASyB,KAAQ;;QAEtC,OAAOA,KAAAA,CAAAA;KACR;AACD,WAAO5D,UAAU,EAAC;AACpB;AAEA,SAASytE,oBAAAA,CACPxtE,IAAY,EACZqR,QAAkB,EAClBrD,MAAmB,EACnBijB,KAAoB,EACpB;IACA,IAAIttB,KAAAA,CAAAA;IACJ,KAAK,MAAMkvC,UAAUxhC,QAAU;QAC7B1N,KAAQopE,GAAAA,QAAAA,CAASsB,OAAQx7B,CAAAA,MAAAA,EAAQ7yC,IAAOgO,CAAAA,EAAAA,MAAAA,CAAAA,CAAAA;QACxC,IAAI,OAAOrK,UAAU,WAAa;YAChC,OAAO2qE,gBAAAA,CAAiBtuE,MAAM2D,KAC1B+qE,CAAAA,GAAAA,iBAAAA,CAAkB1gE,QAAQijB,KAAOjxB,EAAAA,IAAAA,EAAM2D,SACvCA,KAAK;SACV;AACH;AACF;AAEA,SAASopE,QAASrqE,CAAAA,GAAW,EAAEsL,MAAmB,EAAE;IAClD,KAAK,MAAM40B,SAAS50B,MAAQ;AAC1B,YAAI,CAAC40B,KAAO;YACV,SAAS;SACV;QACD,MAAMj/B,KAAAA,GAAQi/B,KAAK,CAAClgC,GAAI;QACxB,IAAI,OAAOiB,UAAU,WAAa;YAChC,OAAOA,KAAAA,CAAAA;SACR;AACH;AACF;AAEA,SAASgqE,oBAAAA,CAAqB5tE,MAAqB,EAAE;IACnD,IAAIsC,IAAAA,GAAOtC,OAAOutE,KAAK;AACvB,QAAI,CAACjrE,IAAM;AACTA,QAAAA,IAAAA,GAAOtC,MAAOutE,CAAAA,KAAK,GAAG4B,wBAAAA,CAAyBnvE,OAAOmtE,OAAO;KAC9D;IACD,OAAO7qE,IAAAA,CAAAA;AACT;AAEA,SAAS6sE,wBAAAA,CAAyBlhE,MAAmB,EAAE;AACrD,UAAMjQ,MAAM,IAAIsrC,GAAAA,EAAAA,CAAAA;IAChB,KAAK,MAAMzG,SAAS50B,MAAQ;AAC1B,aAAK,MAAMtL,GAAAA,IAAON,MAAOC,CAAAA,IAAI,CAACugC,KAAO35B,CAAAA,CAAAA,MAAM,CAACg1C,CAAAA,CAAK,IAACA,CAAE9gC,CAAAA,UAAU,CAAC,GAAO;AACpEpf,YAAAA,GAAAA,CAAIK,GAAG,CAACsE,GAAAA,CAAAA,CAAAA;AACV;AACF;IACA,OAAOoE,KAAAA,CAAM5H,IAAI,CAACnB,GAAAA,CAAAA,CAAAA;AACpB;AAEO,SAASykB,4BACdjc,IAAmC,EACnCD,IAAiB,EACjB/J,KAAa,EACb+R,KAAa,EACb;IACA,MAAM,EAAC9H,MAAM,GAAC,GAAGD,IAAAA,CAAAA;AACjB,UAAM,EAAC7D,GAAM,QAAI,GAAG,IAAI,CAACmI,QAAQ;IACjC,MAAMxC,MAAAA,GAAS,IAAIvB,KAAoBwH,CAAAA,KAAAA,CAAAA,CAAAA;IACvC,IAAInR,CAAAA,EAAWuI,MAAcC,KAAetI,EAAAA,IAAAA,CAAAA;IAE5C,IAAKF,CAAAA,GAAI,GAAGuI,IAAO4I,GAAAA,KAAK,EAAEnR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;AACvCwI,QAAAA,KAAAA,GAAQxI,CAAIZ,GAAAA,KAAAA,CAAAA;QACZc,IAAOiJ,GAAAA,IAAI,CAACX,KAAM;QAClB0C,MAAM,CAAClL,EAAE,GAAG;AACV+H,YAAAA,CAAAA,EAAGsB,MAAO6H,CAAAA,KAAK,CAACc,gBAAAA,CAAiB9R,MAAMqF,GAAMiD,CAAAA,EAAAA,KAAAA,CAAAA;AAC/C;AACF;IACA,OAAO0C,MAAAA,CAAAA;AACT;;AClcA,MAAM8mE,OAAAA,GAAU3nE,MAAO2nE,CAAAA,OAAO,IAAI;AAGlC,MAAMC,WAAW,CAACx0D,MAAAA,EAAuBzd,CAAmCA,GAAAA,CAAAA,GAAIyd,OAAO1d,MAAM,IAAI,CAAC0d,MAAM,CAACzd,CAAE,EAAC6d,IAAI,IAAIJ,MAAM,CAACzd,CAAE;AAC7H,MAAMkyE,eAAe,CAAC7iE,SAAAA,GAAyBA,SAAc,WAAM,MAAM,GAAG;AAErE,SAAS8iE,YACdttD,UAAuB,EACvButD,WAAwB,EACxBC,UAAuB,EACvBvqE,CAAS,EAIP;;;;AAMF,UAAMgzC,QAAWj2B,GAAAA,UAAAA,CAAWhH,IAAI,GAAGu0D,cAAcvtD,UAAU;AAC3D,UAAMw/C,OAAU+N,GAAAA,WAAAA,CAAAA;AAChB,UAAM35D,IAAO45D,GAAAA,UAAAA,CAAWx0D,IAAI,GAAGu0D,cAAcC,UAAU;IACvD,MAAMC,GAAAA,GAAM3kB,sBAAsB0W,OAASvpB,EAAAA,QAAAA,CAAAA,CAAAA;IAC3C,MAAMy3B,GAAAA,GAAM5kB,sBAAsBl1C,IAAM4rD,EAAAA,OAAAA,CAAAA,CAAAA;AAExC,QAAImO,GAAMF,GAAAA,GAAAA,IAAOA,GAAAA,GAAMC,GAAE;AACzB,QAAIE,GAAMF,GAAAA,GAAAA,IAAOD,GAAAA,GAAMC,GAAE;;IAGzBC,GAAMt2D,GAAAA,KAAAA,CAAMs2D,GAAO,QAAIA,GAAG;IAC1BC,GAAMv2D,GAAAA,KAAAA,CAAMu2D,GAAO,QAAIA,GAAG;IAE1B,MAAMC,EAAAA,GAAK5qE,CAAI0qE,GAAAA,GAAAA,CAAAA;AACf,UAAMG,KAAK7qE,CAAI2qE,GAAAA,GAAAA,CAAAA;IAEf,OAAO;QACL33B,QAAU;YACRvzC,CAAG88D,EAAAA,OAAAA,CAAQ98D,CAAC,GAAGmrE,EAAMj6D,IAAAA,KAAKlR,CAAC,GAAGuzC,QAASvzC,CAAAA,CAAC,CAADA;YACvCC,CAAG68D,EAAAA,OAAAA,CAAQ78D,CAAC,GAAGkrE,EAAMj6D,IAAAA,KAAKjR,CAAC,GAAGszC,QAAStzC,CAAAA,CAAC,CAADA;AACzC;QACAiR,IAAM;YACJlR,CAAG88D,EAAAA,OAAAA,CAAQ98D,CAAC,GAAGorE,EAAMl6D,IAAAA,KAAKlR,CAAC,GAAGuzC,QAASvzC,CAAAA,CAAC,CAADA;YACvCC,CAAG68D,EAAAA,OAAAA,CAAQ78D,CAAC,GAAGmrE,EAAMl6D,IAAAA,KAAKjR,CAAC,GAAGszC,QAAStzC,CAAAA,CAAC,CAADA;AACzC;AACF;AACF,CAAC;AAED;;AAEC,IACD,SAASorE,cAAen1D,CAAAA,MAAqB,EAAEo1D,MAAgB,EAAEC,EAAY,EAAE;IAC7E,MAAMC,SAAAA,GAAYt1D,OAAO1d,MAAM;IAE/B,IAAIizE,MAAAA,EAAgBC,KAAeC,EAAAA,IAAAA,EAAcC,gBAA0BC,EAAAA,YAAAA,CAAAA;IAC3E,IAAIC,UAAAA,GAAapB,SAASx0D,MAAQ;AAClC,QAAK,IAAIzd,CAAI,MAAGA,IAAI+yE,SAAY,MAAG,EAAE/yE,CAAG;QACtCozE,YAAeC,GAAAA,UAAAA,CAAAA;QACfA,UAAapB,GAAAA,QAAAA,CAASx0D,QAAQzd,CAAI;QAClC,IAAI,CAACozE,YAAgB,KAACC,UAAY;YAChC,SAAS;SACV;AAED,YAAIrb,aAAa6a,MAAM,CAAC7yE,CAAE,GAAE,GAAGgyE,OAAU;AACvCc,YAAAA,EAAE,CAAC9yE,CAAE,IAAG8yE,EAAE,CAAC9yE,CAAAA,GAAI,EAAE,GAAG;YACpB,SAAS;SACV;AAEDgzE,QAAAA,MAAAA,GAASF,EAAE,CAAC9yE,CAAAA,CAAE,GAAG6yE,MAAM,CAAC7yE,CAAE;AAC1BizE,QAAAA,KAAAA,GAAQH,EAAE,CAAC9yE,CAAAA,GAAI,EAAE,GAAG6yE,MAAM,CAAC7yE,CAAE;QAC7BmzE,gBAAmBj0E,GAAAA,IAAAA,CAAK+pB,GAAG,CAAC+pD,MAAAA,EAAQ,KAAK9zE,IAAK+pB,CAAAA,GAAG,CAACgqD,KAAO;AACzD,YAAIE,oBAAoB,CAAG;YACzB,SAAS;SACV;QAEDD,IAAO,OAAIh0E,IAAK8pB,CAAAA,IAAI,CAACmqD,gBAAAA,CAAAA,CAAAA;AACrBL,QAAAA,EAAE,CAAC9yE,CAAE,IAAGgzE,SAASE,IAAOL,GAAAA,MAAM,CAAC7yE,CAAE;QACjC8yE,EAAE,CAAC9yE,IAAI,CAAE,IAAGizE,QAAQC,IAAOL,GAAAA,MAAM,CAAC7yE,CAAE;AACtC;AACF;AAEA,SAASszE,gBAAgB71D,MAAqB,EAAEq1D,EAAY,EAAEzjE,SAAAA,GAAuB,GAAG,EAAE;AACxF,UAAMkkE,YAAYrB,YAAa7iE,CAAAA,SAAAA,CAAAA,CAAAA;IAC/B,MAAM0jE,SAAAA,GAAYt1D,OAAO1d,MAAM;AAC/B,QAAImrE,OAAesI,WAAkCJ,EAAAA,YAAAA,CAAAA;IACrD,IAAIC,UAAAA,GAAapB,SAASx0D,MAAQ;AAElC,QAAK,IAAIzd,CAAI,MAAGA,CAAI+yE,GAAAA,SAAAA,EAAW,EAAE/yE,CAAG;QAClCwzE,WAAcJ,GAAAA,YAAAA,CAAAA;QACdA,YAAeC,GAAAA,UAAAA,CAAAA;QACfA,UAAapB,GAAAA,QAAAA,CAASx0D,QAAQzd,CAAI;AAClC,YAAI,CAACozE,YAAc;YACjB,SAAS;SACV;QAED,MAAMz1D,MAAAA,GAASy1D,YAAY,CAAC/jE,SAAU;QACtC,MAAMuO,MAAAA,GAASw1D,YAAY,CAACG,SAAU;AACtC,YAAIC,WAAa;AACftI,YAAAA,KAAAA,GAAQ,CAACvtD,MAAAA,GAAS61D,WAAW,CAACnkE,SAAAA,CAAU,IAAI;YAC5C+jE,YAAY,CAAC,CAAC,GAAG,EAAE/jE,UAAU,CAAC,CAAC,GAAGsO,MAASutD,GAAAA,KAAAA,CAAAA;AAC3CkI,YAAAA,YAAY,CAAC,CAAC,GAAG,EAAEG,SAAU,EAAC,CAAC,GAAG31D,MAASstD,GAAAA,KAAAA,GAAQ4H,EAAE,CAAC9yE,CAAE;SACzD;AACD,YAAIqzE,UAAY;AACdnI,YAAAA,KAAAA,GAAQ,CAACmI,UAAU,CAAChkE,SAAU,IAAGsO,MAAK,IAAK;YAC3Cy1D,YAAY,CAAC,CAAC,GAAG,EAAE/jE,UAAU,CAAC,CAAC,GAAGsO,MAASutD,GAAAA,KAAAA,CAAAA;AAC3CkI,YAAAA,YAAY,CAAC,CAAC,GAAG,EAAEG,SAAU,EAAC,CAAC,GAAG31D,MAASstD,GAAAA,KAAAA,GAAQ4H,EAAE,CAAC9yE,CAAE;SACzD;AACH;AACF;AAEA;;;;;AAKC,IACM,SAASyzE,mBAAAA,CAAoBh2D,MAAqB,EAAEpO,SAAAA,GAAuB,GAAG,EAAE;AACrF,UAAMkkE,YAAYrB,YAAa7iE,CAAAA,SAAAA,CAAAA,CAAAA;IAC/B,MAAM0jE,SAAAA,GAAYt1D,OAAO1d,MAAM;AAC/B,UAAM8yE,MAAmBlpE,GAAAA,KAAAA,CAAMopE,SAAWxkE,CAAAA,CAAAA,IAAI,CAAC;AAC/C,UAAMukE,KAAenpE,KAAMopE,CAAAA,SAAAA,CAAAA,CAAAA;;AAG3B,QAAI/yE,GAAGwzE,WAAkCJ,EAAAA,YAAAA,CAAAA;IACzC,IAAIC,UAAAA,GAAapB,SAASx0D,MAAQ;AAElC,QAAKzd,CAAI,MAAGA,CAAI+yE,GAAAA,SAAAA,EAAW,EAAE/yE,CAAG;QAC9BwzE,WAAcJ,GAAAA,YAAAA,CAAAA;QACdA,YAAeC,GAAAA,UAAAA,CAAAA;QACfA,UAAapB,GAAAA,QAAAA,CAASx0D,QAAQzd,CAAI;AAClC,YAAI,CAACozE,YAAc;YACjB,SAAS;SACV;AAED,YAAIC,UAAY;AACd,kBAAMK,aAAaL,UAAU,CAAChkE,UAAU,GAAG+jE,YAAY,CAAC/jE,SAAU;;AAGlEwjE,YAAAA,MAAM,CAAC7yE,CAAE,IAAG0zE,UAAe,SAAI,CAACL,UAAU,CAACE,SAAAA,CAAU,GAAGH,YAAY,CAACG,UAAU,IAAIG,aAAa,CAAC;SAClG;AACDZ,QAAAA,EAAE,CAAC9yE,CAAE,IAAG,CAACwzE,WAAcX,GAAAA,MAAM,CAAC7yE,CAAE,IAC5B,CAACqzE,UAAAA,GAAaR,MAAM,CAAC7yE,CAAAA,GAAI,EAAE,GACxBiJ,KAAK4pE,MAAM,CAAC7yE,CAAI,KAAE,MAAMiJ,IAAK4pE,CAAAA,MAAM,CAAC7yE,CAAE,KAAK,IAC1C,CAAC6yE,MAAM,CAAC7yE,CAAAA,GAAI,EAAE,GAAG6yE,MAAM,CAAC7yE,CAAE,CAAD,IAAK,CAAC;AACzC;AAEA4yE,IAAAA,cAAAA,CAAen1D,QAAQo1D,MAAQC,EAAAA,EAAAA,CAAAA,CAAAA;AAE/BQ,IAAAA,eAAAA,CAAgB71D,QAAQq1D,EAAIzjE,EAAAA,SAAAA,CAAAA,CAAAA;AAC9B,CAAC;AAED,SAASskE,gBAAgB1f,EAAU,EAAE90D,GAAW,EAAEmC,GAAW,EAAE;AAC7D,WAAOpC,KAAKoC,GAAG,CAACpC,KAAKC,GAAG,CAAC80D,IAAI3yD,GAAMnC,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA;AACrC;AAEA,SAASi+C,eAAgB3/B,CAAAA,MAAqB,EAAErK,IAAe,EAAE;IAC/D,IAAIpT,CAAAA,EAAGuI,IAAMmV,EAAAA,KAAAA,EAAOk2D,MAAQC,EAAAA,UAAAA,CAAAA;AAC5B,QAAIC,UAAavqD,GAAAA,cAAAA,CAAe9L,MAAM,CAAC,EAAE,EAAErK,IAAAA,CAAAA,CAAAA;IAC3C,IAAKpT,CAAAA,GAAI,GAAGuI,IAAOkV,GAAAA,MAAAA,CAAO1d,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;QAC/C6zE,UAAaD,GAAAA,MAAAA,CAAAA;QACbA,MAASE,GAAAA,UAAAA,CAAAA;QACTA,UAAa9zE,GAAAA,CAAAA,GAAIuI,OAAO,CAAKghB,IAAAA,cAAAA,CAAe9L,MAAM,CAACzd,CAAAA,GAAI,EAAE,EAAEoT,IAAAA,CAAAA,CAAAA;AAC3D,YAAI,CAACwgE,MAAQ;YACX,SAAS;SACV;QACDl2D,KAAQD,GAAAA,MAAM,CAACzd,CAAE;AACjB,YAAI6zE,UAAY;YACdn2D,KAAM+vD,CAAAA,IAAI,GAAGkG,eAAAA,CAAgBj2D,KAAM+vD,CAAAA,IAAI,EAAEr6D,IAAKxL,CAAAA,IAAI,EAAEwL,IAAAA,CAAK1L,KAAK;YAC9DgW,KAAMiwD,CAAAA,IAAI,GAAGgG,eAAAA,CAAgBj2D,KAAMiwD,CAAAA,IAAI,EAAEv6D,IAAK3L,CAAAA,GAAG,EAAE2L,IAAAA,CAAKzL,MAAM;SAC/D;AACD,YAAImsE,UAAY;YACdp2D,KAAMgwD,CAAAA,IAAI,GAAGiG,eAAAA,CAAgBj2D,KAAMgwD,CAAAA,IAAI,EAAEt6D,IAAKxL,CAAAA,IAAI,EAAEwL,IAAAA,CAAK1L,KAAK;YAC9DgW,KAAMkwD,CAAAA,IAAI,GAAG+F,eAAAA,CAAgBj2D,KAAMkwD,CAAAA,IAAI,EAAEx6D,IAAK3L,CAAAA,GAAG,EAAE2L,IAAAA,CAAKzL,MAAM;SAC/D;AACH;AACF;AAEA;;AAEC,IACM,SAAS61C,0BACd//B,CAAAA,MAAqB,EACrB3X,OAAO,EACPsN,IAAe,EACf3P,IAAa,EACb4L,SAAoB,EACpB;IACA,IAAIrP,CAAAA,EAAWuI,MAAcmV,KAAoBq2D,EAAAA,aAAAA,CAAAA;;IAGjD,IAAIjuE,OAAAA,CAAQ8d,QAAQ,EAAE;AACpBnG,QAAAA,MAAAA,GAASA,OAAO3R,MAAM,CAAC,CAACmoD,EAAO,IAACA,GAAGp2C,IAAI;KACxC;IAED,IAAI/X,OAAAA,CAAQq1C,sBAAsB,KAAK,UAAY;AACjDs4B,QAAAA,mBAAAA,CAAoBh2D,MAAQpO,EAAAA,SAAAA,CAAAA,CAAAA;KACvB;QACL,IAAIiC,IAAAA,GAAO7N,IAAOga,GAAAA,MAAM,CAACA,MAAAA,CAAO1d,MAAM,GAAG,CAAE,IAAG0d,MAAM,CAAC,CAAE;QACvD,IAAKzd,CAAAA,GAAI,GAAGuI,IAAOkV,GAAAA,MAAAA,CAAO1d,MAAM,EAAEC,CAAAA,GAAIuI,IAAM,IAAEvI,CAAG;YAC/C0d,KAAQD,GAAAA,MAAM,CAACzd,CAAE;YACjB+zE,aAAgB5B,GAAAA,WAAAA,CACd7gE,MACAoM,KACAD,EAAAA,MAAM,CAACve,IAAKC,CAAAA,GAAG,CAACa,CAAI,MAAGuI,QAAQ9E,IAAAA,GAAO,IAAI,MAAM8E,IAAK,GACrDzC,QAAQo1C,OAAO;AAEjBx9B,YAAAA,KAAAA,CAAM+vD,IAAI,GAAGsG,aAAcj5B,CAAAA,QAAQ,CAACvzC,CAAC;AACrCmW,YAAAA,KAAAA,CAAMiwD,IAAI,GAAGoG,aAAcj5B,CAAAA,QAAQ,CAACtzC,CAAC;AACrCkW,YAAAA,KAAAA,CAAMgwD,IAAI,GAAGqG,aAAct7D,CAAAA,IAAI,CAAClR,CAAC;AACjCmW,YAAAA,KAAAA,CAAMkwD,IAAI,GAAGmG,aAAct7D,CAAAA,IAAI,CAACjR,CAAC;YACjC8J,IAAOoM,GAAAA,KAAAA,CAAAA;AACT;KACD;IAED,IAAI5X,OAAAA,CAAQs3C,eAAe,EAAE;AAC3BA,QAAAA,eAAAA,CAAgB3/B,MAAQrK,EAAAA,IAAAA,CAAAA,CAAAA;KACzB;AACH;;ACzNA;;;;;;;;IAWO,SAASqhB,eAA2B;AACzC,WAAO,OAAOj1B,MAAAA,KAAW,WAAe,WAAO+yB,QAAa;AAC9D,CAAC;AAED;;AAEC,IACM,SAASe,cAAe0gD,CAAAA,OAA0B,EAAqB;IAC5E,IAAI/nE,MAAAA,GAAS+nE,QAAQC,UAAU;AAC/B,QAAIhoE,MAAUA,IAAAA,MAAAA,CAAOo3D,QAAQ,OAAO,qBAAuB;QACzDp3D,MAAS,GAACA,OAAsBioE,IAAI;KACrC;IACD,OAAOjoE,MAAAA,CAAAA;AACT,CAAC;AAED;;;AAGC,IAED,SAASkoE,aAAcC,CAAAA,UAA2B,EAAE5iD,IAAiB,EAAE6iD,cAAsB,EAAE;IAC7F,IAAIC,aAAAA,CAAAA;IACJ,IAAI,OAAOF,eAAe,QAAU;AAClCE,QAAAA,aAAAA,GAAgBpF,SAASkF,UAAY;AAErC,YAAIA,UAAWj4D,CAAAA,OAAO,CAAC,SAAS,CAAC,CAAG;;AAElCm4D,YAAAA,aAAAA,GAAgB,aAAiB,SAAO9iD,IAAKyiD,CAAAA,UAAU,CAACI,cAAe;SACxE;KACI;QACLC,aAAgBF,GAAAA,UAAAA,CAAAA;KACjB;IAED,OAAOE,aAAAA,CAAAA;AACT;AAEA,MAAMC,gBAAAA,GAAmB,CAACloE,OAAAA,GACxBA,OAAQmoE,CAAAA,aAAa,CAACC,WAAW,CAACF,gBAAgB,CAACloE,OAAAA,EAAS,IAAI;AAE3D,SAASkH,QAAAA,CAASyU,EAAe,EAAEye,QAAgB,EAAU;IAClE,OAAO8tC,gBAAAA,CAAiBvsD,EAAI0sD,CAAAA,CAAAA,gBAAgB,CAACjuC,QAAAA,CAAAA,CAAAA;AAC/C,CAAC;AAED,MAAM3Y,SAAY;AAAC;AAAO;AAAS;AAAU;AAAO;AACpD,SAAS6mD,mBAAmBC,MAA2B,EAAEr0D,KAAa,EAAEs0D,MAAe,EAAa;AAClG,UAAMl+C,SAAS,EAAC;IAChBk+C,MAASA,GAAAA,MAAAA,GAAS,GAAMA,GAAAA,MAAAA,GAAS,EAAE;AACnC,QAAK,IAAI70E,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI,GAAGA,CAAK;QAC1B,MAAM4qB,GAAAA,GAAMkD,SAAS,CAAC9tB,CAAE;QACxB22B,MAAM,CAAC/L,GAAI,IAAGq6B,UAAW2vB,CAAAA,MAAM,CAACr0D,KAAQ,SAAMqK,GAAMiqD,GAAAA,MAAAA,CAAO,CAAK;AAClE;AACAl+C,IAAAA,MAAAA,CAAO9a,KAAK,GAAG8a,MAAAA,CAAO/uB,IAAI,GAAG+uB,OAAOjvB,KAAK;AACzCivB,IAAAA,MAAAA,CAAO/a,MAAM,GAAG+a,MAAAA,CAAOlvB,GAAG,GAAGkvB,OAAOhvB,MAAM;IAC1C,OAAOgvB,MAAAA,CAAAA;AACT;AAEA,MAAMm+C,eAAe,CAACvtE,CAAAA,EAAWC,GAAW5E,MAC1C,GAAC2E,CAAAA,CAAI,QAAKC,IAAI,OAAO,CAAC5E,MAAAA,IAAU,CAAC,MAACA,CAAuBmyE,UAAU,CAAD;AAEpE;;;;AAIC,IACD,SAASC,iBAAAA,CACP/zD,CAAkC,EAClCqO,MAAyB,EAKvB;IACF,MAAM2lD,OAAAA,GAAU,CAACh0D,CAAiBg0D,OAAO;IACzC,MAAM/4C,MAAAA,GAAU+4C,WAAWA,OAAQl1E,CAAAA,MAAM,GAAGk1E,OAAO,CAAC,CAAE,IAAGh0D,CAAC;AAC1D,UAAM,EAAC7C,OAAAA,GAASC,OAAAA,GAAQ,GAAG6d,MAAAA,CAAAA;AAC3B,QAAIpR,MAAM,KAAK;AACf,QAAIvjB,CAAGC,EAAAA,CAAAA,CAAAA;AACP,QAAIstE,YAAa12D,CAAAA,OAAAA,EAASC,OAAS4C,EAAAA,CAAAA,CAAEre,MAAM,CAAG;QAC5C2E,CAAI6W,GAAAA,OAAAA,CAAAA;QACJ5W,CAAI6W,GAAAA,OAAAA,CAAAA;KACC;QACL,MAAMwhC,IAAAA,GAAOvwB,OAAO4lD,qBAAqB;AACzC3tE,QAAAA,CAAAA,GAAI20B,MAAOi5C,CAAAA,OAAO,GAAGt1B,IAAAA,CAAKj4C,IAAI;AAC9BJ,QAAAA,CAAAA,GAAI00B,MAAOk5C,CAAAA,OAAO,GAAGv1B,IAAAA,CAAKp4C,GAAG;AAC7BqjB,QAAAA,GAAAA,GAAM,IAAI;KACX;IACD,OAAO;AAACvjB,QAAAA,CAAAA;AAAGC,QAAAA,CAAAA;AAAGsjB,QAAAA,GAAAA;AAAG;AACnB;AAEA;;;;;AAKC,IAEM,SAASP,mBAAAA,CACdzpB,KAAmD,EACnDxC,KAAY,EACc;AAC1B,QAAI,YAAYwC,KAAO;QACrB,OAAOA,KAAAA,CAAAA;KACR;AAED,UAAM,EAACwuB,MAAAA,GAAQ2D,uBAAAA,GAAwB,GAAG30B,KAAAA,CAAAA;AAC1C,UAAMiiB,QAAQg0D,gBAAiBjlD,CAAAA,MAAAA,CAAAA,CAAAA;IAC/B,MAAM+lD,SAAAA,GAAY90D,KAAMyQ,CAAAA,SAAS,KAAK;IACtC,MAAMskD,QAAAA,GAAWX,mBAAmBp0D,KAAO;IAC3C,MAAMg1D,OAAAA,GAAUZ,kBAAmBp0D,CAAAA,KAAAA,EAAO,QAAU;IACpD,MAAM,EAAChZ,IAAGC,CAAAA,GAAGsjB,GAAG,GAAC,GAAGkqD,iBAAAA,CAAkBl0E,KAAOwuB,EAAAA,MAAAA,CAAAA,CAAAA;IAC7C,MAAMy9C,OAAAA,GAAUuI,SAAS1tE,IAAI,IAAIkjB,GAAOyqD,IAAAA,OAAAA,CAAQ3tE,IAAI,CAAD;IACnD,MAAMolE,OAAAA,GAAUsI,SAAS7tE,GAAG,IAAIqjB,GAAOyqD,IAAAA,OAAAA,CAAQ9tE,GAAG,CAAD;AAEjD,QAAI,EAACoU,KAAAA,GAAOD,MAAAA,GAAO,GAAGtd,KAAAA,CAAAA;AACtB,QAAI+2E,SAAW;AACbx5D,QAAAA,KAAAA,IAASy5D,QAASz5D,CAAAA,KAAK,GAAG05D,OAAAA,CAAQ15D,KAAK;AACvCD,QAAAA,MAAAA,IAAU05D,QAAS15D,CAAAA,MAAM,GAAG25D,OAAAA,CAAQ35D,MAAM;KAC3C;IACD,OAAO;QACLrU,CAAGrI,EAAAA,IAAAA,CAAK+2B,KAAK,CAAC,CAAC1uB,CAAIwlE,GAAAA,OAAM,IAAKlxD,KAAAA,GAAQyT,MAAOzT,CAAAA,KAAK,GAAGoX,uBAAAA,CAAAA;QACrDzrB,CAAGtI,EAAAA,IAAAA,CAAK+2B,KAAK,CAAC,CAACzuB,CAAIwlE,GAAAA,OAAM,IAAKpxD,MAAAA,GAAS0T,MAAO1T,CAAAA,MAAM,GAAGqX,uBAAAA,CAAAA;AACzD;AACF,CAAC;AAED,SAASuiD,iBAAiBlmD,MAAyB,EAAEzT,KAAa,EAAED,MAAc,EAAkB;AAClG,QAAIuG,QAAkBC,EAAAA,SAAAA,CAAAA;IAEtB,IAAIvG,KAAAA,KAAUzd,SAAawd,IAAAA,MAAAA,KAAWxd,SAAW;QAC/C,MAAMi1B,SAAAA,GAAY/D,UAAUgE,cAAehE,CAAAA,MAAAA,CAAAA,CAAAA;AAC3C,YAAI,CAAC+D,SAAW;AACdxX,YAAAA,KAAAA,GAAQyT,OAAOkE,WAAW;AAC1B5X,YAAAA,MAAAA,GAAS0T,OAAOmmD,YAAY;SACvB;AACL,kBAAM51B,IAAOxsB,GAAAA,SAAAA,CAAU6hD,qBAAqB;AAC5C,kBAAMQ,iBAAiBnB,gBAAiBlhD,CAAAA,SAAAA,CAAAA,CAAAA;YACxC,MAAMsiD,eAAAA,GAAkBhB,kBAAmBe,CAAAA,cAAAA,EAAgB,QAAU;YACrE,MAAME,gBAAAA,GAAmBjB,mBAAmBe,cAAgB;AAC5D75D,YAAAA,KAAAA,GAAQgkC,KAAKhkC,KAAK,GAAG+5D,iBAAiB/5D,KAAK,GAAG85D,gBAAgB95D,KAAK;AACnED,YAAAA,MAAAA,GAASikC,KAAKjkC,MAAM,GAAGg6D,iBAAiBh6D,MAAM,GAAG+5D,gBAAgB/5D,MAAM;AACvEuG,YAAAA,QAAAA,GAAWgyD,aAAcuB,CAAAA,cAAAA,CAAevzD,QAAQ,EAAEkR,SAAW;AAC7DjR,YAAAA,SAAAA,GAAY+xD,aAAcuB,CAAAA,cAAAA,CAAetzD,SAAS,EAAEiR,SAAW;SAChE;KACF;IACD,OAAO;AACLxX,QAAAA,KAAAA;AACAD,QAAAA,MAAAA;AACAuG,QAAAA,QAAAA,EAAUA,QAAY6iD,IAAAA,QAAAA;AACtB5iD,QAAAA,SAAAA,EAAWA,SAAa4iD,IAAAA,QAAAA;AAC1B;AACF;AAEA,MAAM6Q,SAAS,CAACv7D,CAAAA,GAAcpb,KAAK+2B,KAAK,CAAC3b,IAAI,EAAM;AAEnD;AACO,SAASsV,eACdN,MAAyB,EACzBwmD,OAAgB,EAChBC,QAAiB,EACjB91D,WAAoB,EACe;AACnC,UAAMM,QAAQg0D,gBAAiBjlD,CAAAA,MAAAA,CAAAA,CAAAA;IAC/B,MAAM0L,OAAAA,GAAU25C,mBAAmBp0D,KAAO;AAC1C,UAAM4B,WAAWgyD,aAAc5zD,CAAAA,KAAAA,CAAM4B,QAAQ,EAAEmN,QAAQ,aAAkB01C,CAAAA,IAAAA,QAAAA,CAAAA;AACzE,UAAM5iD,YAAY+xD,aAAc5zD,CAAAA,KAAAA,CAAM6B,SAAS,EAAEkN,QAAQ,cAAmB01C,CAAAA,IAAAA,QAAAA,CAAAA;IAC5E,MAAMgR,aAAAA,GAAgBR,gBAAiBlmD,CAAAA,MAAAA,EAAQwmD,OAASC,EAAAA,QAAAA,CAAAA,CAAAA;AACxD,QAAI,EAACl6D,KAAAA,GAAOD,MAAAA,GAAO,GAAGo6D,aAAAA,CAAAA;IAEtB,IAAIz1D,KAAAA,CAAMyQ,SAAS,KAAK,aAAe;QACrC,MAAMukD,OAAAA,GAAUZ,kBAAmBp0D,CAAAA,KAAAA,EAAO,QAAU;QACpD,MAAM+0D,QAAAA,GAAWX,mBAAmBp0D,KAAO;AAC3C1E,QAAAA,KAAAA,IAASy5D,QAASz5D,CAAAA,KAAK,GAAG05D,OAAAA,CAAQ15D,KAAK;AACvCD,QAAAA,MAAAA,IAAU05D,QAAS15D,CAAAA,MAAM,GAAG25D,OAAAA,CAAQ35D,MAAM;KAC3C;AACDC,IAAAA,KAAAA,GAAQ3c,KAAKoC,GAAG,CAAC,CAAGua,EAAAA,KAAAA,GAAQmf,QAAQnf,KAAK;IACzCD,MAAS1c,GAAAA,IAAAA,CAAKoC,GAAG,CAAC,GAAG2e,cAAcpE,KAAQoE,GAAAA,WAAAA,GAAcrE,MAASof,GAAAA,OAAAA,CAAQpf,MAAM;AAChFC,IAAAA,KAAAA,GAAQg6D,OAAO32E,IAAKC,CAAAA,GAAG,CAAC0c,KAAOsG,EAAAA,QAAAA,EAAU6zD,cAAc7zD,QAAQ;AAC/DvG,IAAAA,MAAAA,GAASi6D,OAAO32E,IAAKC,CAAAA,GAAG,CAACyc,MAAQwG,EAAAA,SAAAA,EAAW4zD,cAAc5zD,SAAS;IACnE,IAAIvG,KAAAA,IAAS,CAACD,MAAQ;;;AAGpBA,QAAAA,MAAAA,GAASi6D,OAAOh6D,KAAQ;KACzB;IAED,MAAMo6D,cAAAA,GAAiBH,OAAY13E,KAAAA,SAAAA,IAAa23E,QAAa33E,KAAAA,SAAAA,CAAAA;IAE7D,IAAI63E,cAAAA,IAAkBh2D,eAAe+1D,aAAcp6D,CAAAA,MAAM,IAAIA,MAASo6D,GAAAA,aAAAA,CAAcp6D,MAAM,EAAE;AAC1FA,QAAAA,MAAAA,GAASo6D,cAAcp6D,MAAM;AAC7BC,QAAAA,KAAAA,GAAQg6D,MAAO32E,CAAAA,IAAAA,CAAKoE,KAAK,CAACsY,MAASqE,GAAAA,WAAAA,CAAAA,CAAAA,CAAAA;KACpC;IAED,OAAO;AAACpE,QAAAA,KAAAA;AAAOD,QAAAA,MAAAA;AAAM;AACvB,CAAC;AAED;;;;;IAMO,SAASo1B,WACd1yC,CAAAA,KAAY,EACZ43E,UAAkB,EAClBC,UAAoB,EACJ;AAChB,UAAMC,aAAaF,UAAc;AACjC,UAAMG,eAAen3E,IAAKoE,CAAAA,KAAK,CAAChF,KAAAA,CAAMsd,MAAM,GAAGw6D,UAAAA,CAAAA,CAAAA;AAC/C,UAAME,cAAcp3E,IAAKoE,CAAAA,KAAK,CAAChF,KAAAA,CAAMud,KAAK,GAAGu6D,UAAAA,CAAAA,CAAAA;AAE7C93E,IAAAA,KAAAA,CAAMsd,MAAM,GAAG1c,IAAAA,CAAKoE,KAAK,CAAChF,MAAMsd,MAAM;AACtCtd,IAAAA,KAAAA,CAAMud,KAAK,GAAG3c,IAAAA,CAAKoE,KAAK,CAAChF,MAAMud,KAAK;IAEpC,MAAMyT,MAAAA,GAAShxB,MAAMgxB,MAAM;;;;AAK3B,QAAIA,OAAO/O,KAAK,KAAK41D,UAAAA,IAAe,CAAC7mD,MAAO/O,CAAAA,KAAK,CAAC3E,MAAM,IAAI,CAAC0T,MAAAA,CAAO/O,KAAK,CAAC1E,KAAK,CAAI;QACjFyT,MAAO/O,CAAAA,KAAK,CAAC3E,MAAM,GAAG,CAAC,EAAEtd,KAAMsd,CAAAA,MAAM,CAAC,EAAE,CAAC;QACzC0T,MAAO/O,CAAAA,KAAK,CAAC1E,KAAK,GAAG,CAAC,EAAEvd,KAAMud,CAAAA,KAAK,CAAC,EAAE,CAAC;KACxC;IAED,IAAIvd,KAAAA,CAAM20B,uBAAuB,KAAKmjD,UAC/B9mD,IAAAA,MAAAA,CAAO1T,MAAM,KAAKy6D,YAClB/mD,IAAAA,MAAAA,CAAOzT,KAAK,KAAKy6D,WAAa;AACnCh4E,QAAAA,KAAAA,CAAM20B,uBAAuB,GAAGmjD,UAAAA,CAAAA;AAChC9mD,QAAAA,MAAAA,CAAO1T,MAAM,GAAGy6D,YAAAA,CAAAA;AAChB/mD,QAAAA,MAAAA,CAAOzT,KAAK,GAAGy6D,WAAAA,CAAAA;QACfh4E,KAAMgP,CAAAA,GAAG,CAACipE,YAAY,CAACH,YAAY,CAAG,KAAGA,YAAY,CAAG;AACxD,eAAO,IAAI;KACZ;AACD,WAAO,KAAK;AACd,CAAC;AAED;;;;IAKa/kD,MAAAA,4BAAAA,GAAgC,WAAW;AACtD,QAAImlD,mBAAmB,KAAK;IAC5B,IAAI;AACF,cAAM1wE,OAAU;AACd,gBAAIwrB,OAAU;AACZklD,gBAAAA,gBAAAA,GAAmB,IAAI;AACvB,uBAAO,KAAK;AACd;AACF;AAEA,YAAI/hD,eAAmB;AACrBj1B,YAAAA,MAAAA,CAAOgwB,gBAAgB,CAAC,MAAQ,MAAI,EAAE1pB,OAAAA,CAAAA,CAAAA;AACtCtG,YAAAA,MAAAA,CAAOkwB,mBAAmB,CAAC,MAAQ,MAAI,EAAE5pB,OAAAA,CAAAA,CAAAA;SAC1C;AACH,MAAE,OAAOmb,CAAG;;AAEZ;IACA,OAAOu1D,gBAAAA,CAAAA;AACT,CAAK;AAEL;;;;;;;;AAQC,IAEM,SAAStlD,YAAAA,CACd7kB,OAAoB,EACpBo6B,QAA4B,EACR;IACpB,MAAMjgC,KAAAA,GAAQ+M,SAASlH,OAASo6B,EAAAA,QAAAA,CAAAA,CAAAA;AAChC,UAAMooC,OAAUroE,GAAAA,KAAAA,IAASA,KAAMsoE,CAAAA,KAAK,CAAC;AACrC,WAAOD,UAAU,CAACA,OAAO,CAAC,EAAE,GAAGzwE,SAAS;AAC1C;;ACjSA;;IAGO,SAASs+C,YAAAA,CAAazY,EAAS,EAAEC,EAAS,EAAEp8B,CAAS,EAAEe,IAAK,EAAE;IACnE,OAAO;QACLtB,CAAG08B,EAAAA,EAAAA,CAAG18B,CAAC,GAAGO,CAAKo8B,IAAAA,GAAG38B,CAAC,GAAG08B,EAAG18B,CAAAA,CAAC,CAADA;QACzBC,CAAGy8B,EAAAA,EAAAA,CAAGz8B,CAAC,GAAGM,CAAKo8B,IAAAA,GAAG18B,CAAC,GAAGy8B,EAAGz8B,CAAAA,CAAC,CAADA;AAC3B;AACF,CAAC;AAED;;IAGO,SAASg1C,qBAAAA,CACdvY,EAAS,EACTC,EAAS,EACTp8B,CAAS,EAAEe,IAAkC,EAC7C;IACA,OAAO;QACLtB,CAAG08B,EAAAA,EAAAA,CAAG18B,CAAC,GAAGO,CAAKo8B,IAAAA,GAAG38B,CAAC,GAAG08B,EAAG18B,CAAAA,CAAC,CAADA;QACzBC,CAAGqB,EAAAA,IAAAA,KAAS,QAAWf,GAAAA,CAAAA,GAAI,GAAMm8B,GAAAA,EAAAA,CAAGz8B,CAAC,GAAG08B,EAAG18B,CAAAA,CAAC,GACxCqB,IAAAA,KAAS,OAAUf,GAAAA,CAAAA,GAAI,IAAIm8B,EAAGz8B,CAAAA,CAAC,GAAG08B,EAAAA,CAAG18B,CAAC,GACpCM,CAAI,OAAIo8B,EAAG18B,CAAAA,CAAC,GAAGy8B,EAAAA,CAAGz8B,CAAC;AAC3B;AACF,CAAC;AAED;;IAGO,SAASi1C,oBAAAA,CAAqBxY,EAAe,EAAEC,EAAe,EAAEp8B,CAAS,EAAEe,IAAK,EAAE;AACvF,UAAM4tE,GAAM;AAAClvE,QAAAA,CAAAA,EAAG08B,GAAGypC,IAAI;AAAElmE,QAAAA,CAAAA,EAAGy8B,GAAG2pC,IAAI;AAAA;AACnC,UAAM8I,GAAM;AAACnvE,QAAAA,CAAAA,EAAG28B,GAAGupC,IAAI;AAAEjmE,QAAAA,CAAAA,EAAG08B,GAAGypC,IAAI;AAAA;IACnC,MAAMv2D,CAAAA,GAAIslC,YAAazY,CAAAA,EAAAA,EAAIwyC,GAAK3uE,EAAAA,CAAAA,CAAAA,CAAAA;IAChC,MAAME,CAAAA,GAAI00C,YAAa+5B,CAAAA,GAAAA,EAAKC,GAAK5uE,EAAAA,CAAAA,CAAAA,CAAAA;IACjC,MAAMinC,CAAAA,GAAI2N,YAAag6B,CAAAA,GAAAA,EAAKxyC,EAAIp8B,EAAAA,CAAAA,CAAAA,CAAAA;IAChC,MAAMmjC,CAAAA,GAAIyR,YAAatlC,CAAAA,CAAAA,EAAGpP,CAAGF,EAAAA,CAAAA,CAAAA,CAAAA;IAC7B,MAAMmZ,CAAAA,GAAIy7B,YAAa10C,CAAAA,CAAAA,EAAG+mC,CAAGjnC,EAAAA,CAAAA,CAAAA,CAAAA;IAC7B,OAAO40C,YAAAA,CAAazR,GAAGhqB,CAAGnZ,EAAAA,CAAAA,CAAAA,CAAAA;AAC5B;;AChCA,MAAM6uE,qBAAwB,YAASC,KAAa,EAAE/6D,KAAa,EAAc;IAC/E,OAAO;AACLtU,QAAAA,CAAAA,CAAAA,CAAEA,CAAC,EAAE;YACH,OAAOqvE,KAAAA,GAAQA,QAAQ/6D,KAAQtU,GAAAA,CAAAA,CAAAA;AACjC;AACA8jD,QAAAA,QAAAA,CAAAA,CAASj+B,CAAC,EAAE;YACVvR,KAAQuR,GAAAA,CAAAA,CAAAA;AACV;AACAkV,QAAAA,SAAAA,CAAAA,CAAUrL,KAAK,EAAE;AACf,gBAAIA,UAAU,QAAU;gBACtB,OAAOA,KAAAA,CAAAA;aACR;YACD,OAAOA,KAAAA,KAAU,OAAU,YAAS,OAAO;AAC7C;QACA2zB,KAAMrjD,CAAAA,CAAAA,CAAC,EAAEf,KAAK,EAAE;AACd,mBAAOe,CAAIf,GAAAA,KAAAA,CAAAA;AACb;QACA2jD,UAAW5iD,CAAAA,CAAAA,CAAC,EAAE8hD,SAAS,EAAE;AACvB,mBAAO9hD,CAAI8hD,GAAAA,SAAAA,CAAAA;AACb;AACF;AACF;AAEA,MAAMwtB,wBAAwB,WAAuB;IACnD,OAAO;AACLtvE,QAAAA,CAAAA,CAAAA,CAAEA,CAAC,EAAE;YACH,OAAOA,CAAAA,CAAAA;AACT;QACA8jD,QAASj+B,CAAAA,CAAAA,CAAC,EAAE,EACZ;AACAkV,QAAAA,SAAAA,CAAAA,CAAUrL,KAAK,EAAE;YACf,OAAOA,KAAAA,CAAAA;AACT;QACA2zB,KAAMrjD,CAAAA,CAAAA,CAAC,EAAEf,KAAK,EAAE;AACd,mBAAOe,CAAIf,GAAAA,KAAAA,CAAAA;AACb;QACA2jD,UAAW5iD,CAAAA,CAAAA,CAAC,EAAEuvE,UAAU,EAAE;YACxB,OAAOvvE,CAAAA,CAAAA;AACT;AACF;AACF;AAEO,SAAS0iD,aAAcF,CAAAA,GAAY,EAAE6sB,KAAa,EAAE/6D,KAAa,EAAE;AACxE,WAAOkuC,GAAM4sB,GAAAA,qBAAAA,CAAsBC,KAAO/6D,EAAAA,KAAAA,CAAAA,GAASg7D,qBAAuB;AAC5E,CAAC;AAEM,SAAS3rB,qBAAAA,CAAsB59C,GAA6B,EAAEypE,SAAwB,EAAE;AAC7F,QAAIx2D,KAA4By2D,EAAAA,QAAAA,CAAAA;IAChC,IAAID,SAAAA,KAAc,KAASA,IAAAA,SAAAA,KAAc,KAAO;QAC9Cx2D,KAAQjT,GAAAA,GAAAA,CAAIgiB,MAAM,CAAC/O,KAAK;QACxBy2D,QAAW;AACTz2D,YAAAA,KAAAA,CAAMm0D,gBAAgB,CAAC;AACvBn0D,YAAAA,KAAAA,CAAM02D,mBAAmB,CAAC;AAC3B;QAED12D,KAAM22D,CAAAA,WAAW,CAAC,aAAaH,SAAW;AACzCzpE,QAAAA,GAAAA,CAAiD6pE,iBAAiB,GAAGH,QAAAA,CAAAA;KACvE;AACH,CAAC;AAEM,SAAStrB,oBAAAA,CAAqBp+C,GAA6B,EAAE0pE,QAA2B,EAAE;AAC/F,QAAIA,aAAa54E,SAAW;QAC1B,OAAQkP,IAAiD6pE,iBAAiB;AAC1E7pE,QAAAA,GAAAA,CAAIgiB,MAAM,CAAC/O,KAAK,CAAC22D,WAAW,CAAC,WAAaF,EAAAA,QAAQ,CAAC,EAAE,EAAEA,QAAQ,CAAC,CAAE;KACnE;AACH;;AC/DA,SAASI,UAAW3wC,CAAAA,QAAQ,EAAE;AAC5B,QAAIA,aAAa,OAAS;QACxB,OAAO;YACL4wC,OAASp4D,EAAAA,aAAAA;YACTq4D,OAASnR,EAAAA,UAAAA;YACT5D,SAAWle,EAAAA,eAAAA;AACb;KACD;IACD,OAAO;QACLgzB,OAASh9B,EAAAA,UAAAA;QACTi9B,OAAS,GAAClgE,CAAGpP,EAAAA,CAAAA,GAAMoP,CAAIpP,GAAAA,CAAAA;AACvBu6D,QAAAA,SAAAA,EAAWh7D,CAAAA,CAAKA,GAAAA,CAAAA;AAClB;AACF;AAEA,SAASgwE,gBAAiB,GAACn4E,KAAK,GAAE+H,GAAG,GAAEgK,KAAK,GAAE1N,IAAI,GAAE8c,KAAK,GAAC,EAAE;IAC1D,OAAO;AACLnhB,QAAAA,KAAAA,EAAOA,KAAQ+R,GAAAA,KAAAA;AACfhK,QAAAA,GAAAA,EAAKA,GAAMgK,GAAAA,KAAAA;AACX1N,QAAAA,IAAAA,EAAMA,QAAQ,CAAC0D,MAAM/H,KAAQ,QAAK+R,KAAU;AAC5CoP,QAAAA,KAAAA;AACF;AACF;AAEA,SAASi3D,WAAWpzD,OAAO,EAAE3G,MAAM,EAAE6hC,MAAM,EAAE;IAC3C,MAAM,EAAC7Y,WAAUrnC,KAAAA,EAAOq4E,aAAYtwE,GAAAA,EAAKuwE,QAAQ,GAAC,GAAGp4B,MAAAA,CAAAA;AACrD,UAAM,EAAC+3B,OAAO,GAAE9U,SAAS,GAAC,GAAG6U,UAAW3wC,CAAAA,QAAAA,CAAAA,CAAAA;IACxC,MAAMt1B,KAAAA,GAAQsM,OAAO1d,MAAM;AAE3B,QAAI,EAACX,KAAK,GAAE+H,MAAK1D,IAAAA,GAAK,GAAG2gB,OAAAA,CAAAA;AACzB,QAAIpkB,CAAGuI,EAAAA,IAAAA,CAAAA;AAEP,QAAI9E,IAAM;QACRrE,KAAS+R,IAAAA,KAAAA,CAAAA;QACThK,GAAOgK,IAAAA,KAAAA,CAAAA;QACP,IAAKnR,CAAAA,GAAI,GAAGuI,IAAO4I,GAAAA,KAAK,EAAEnR,CAAIuI,GAAAA,IAAAA,EAAM,EAAEvI,CAAG;YACvC,IAAI,CAACq3E,OAAQ9U,CAAAA,SAAAA,CAAU9kD,MAAM,CAACre,KAAQ+R,GAAAA,KAAAA,CAAM,CAACs1B,QAAAA,CAAS,CAAGgxC,EAAAA,UAAAA,EAAYC,QAAW;gBAC9E,MAAM;aACP;AACDt4E,YAAAA,KAAAA,EAAAA,CAAAA;AACA+H,YAAAA,GAAAA,EAAAA,CAAAA;AACF;QACA/H,KAAS+R,IAAAA,KAAAA,CAAAA;QACThK,GAAOgK,IAAAA,KAAAA,CAAAA;KACR;AAED,QAAIhK,MAAM/H,KAAO;QACf+H,GAAOgK,IAAAA,KAAAA,CAAAA;KACR;IACD,OAAO;AAAC/R,QAAAA,KAAAA;AAAO+H,QAAAA,GAAAA;AAAK1D,QAAAA,IAAAA;AAAM8c,QAAAA,KAAAA,EAAO6D,QAAQ7D,KAAK;AAAA;AAChD;AAgBA,CAAO,SAAS2jC,aAAc9/B,CAAAA,OAAO,EAAE3G,MAAM,EAAE6hC,MAAM,EAAE;AACrD,QAAI,CAACA,MAAQ;QACX,OAAO;AAACl7B,YAAAA,OAAAA;AAAQ;KACjB;IAED,MAAM,EAACqiB,WAAUrnC,KAAAA,EAAOq4E,aAAYtwE,GAAAA,EAAKuwE,QAAQ,GAAC,GAAGp4B,MAAAA,CAAAA;IACrD,MAAMnuC,KAAAA,GAAQsM,OAAO1d,MAAM;IAC3B,MAAM,EAACu3E,UAASD,OAAAA,GAAS9U,SAAS,GAAC,GAAG6U,UAAW3wC,CAAAA,QAAAA,CAAAA,CAAAA;AACjD,UAAM,EAACrnC,KAAAA,GAAO+H,GAAAA,GAAK1D,IAAAA,GAAM8c,KAAAA,GAAM,GAAGi3D,UAAWpzD,CAAAA,OAAAA,EAAS3G,MAAQ6hC,EAAAA,MAAAA,CAAAA,CAAAA;AAE9D,UAAM3oB,SAAS,EAAE;AACjB,QAAIghD,SAAS,KAAK;AAClB,QAAIC,WAAW,IAAI;AACnB,QAAIpxE,OAAOkX,KAAOm6D,EAAAA,SAAAA,CAAAA;IAElB,MAAMC,aAAAA,GAAgB,IAAMT,OAAQI,CAAAA,UAAAA,EAAYI,WAAWrxE,KAAU8wE,CAAAA,IAAAA,OAAAA,CAAQG,YAAYI,SAAe;IACxG,MAAME,WAAAA,GAAc,IAAMT,OAAQI,CAAAA,QAAAA,EAAUlxE,WAAW,CAAK6wE,IAAAA,OAAAA,CAAQK,UAAUG,SAAWrxE,EAAAA,KAAAA,CAAAA,CAAAA;IACzF,MAAMwxE,WAAAA,GAAc,IAAML,MAAUG,IAAAA,aAAAA,EAAAA,CAAAA;IACpC,MAAMG,UAAAA,GAAa,IAAM,CAACN,MAAUI,IAAAA,WAAAA,EAAAA,CAAAA;IAEpC,IAAK,IAAI/3E,IAAIZ,KAAOkS,EAAAA,IAAAA,GAAOlS,OAAOY,CAAKmH,IAAAA,GAAAA,EAAK,EAAEnH,CAAG;QAC/C0d,KAAQD,GAAAA,MAAM,CAACzd,CAAAA,GAAImR,KAAM;QAEzB,IAAIuM,KAAAA,CAAMG,IAAI,EAAE;YACd,SAAS;SACV;QAEDrX,KAAQ+7D,GAAAA,SAAAA,CAAU7kD,KAAK,CAAC+oB,QAAS;AAEjC,YAAIjgC,UAAUqxE,SAAW;YACvB,SAAS;SACV;QAEDF,MAASN,GAAAA,OAAAA,CAAQ7wE,OAAOixE,UAAYC,EAAAA,QAAAA,CAAAA,CAAAA;QAEpC,IAAIE,QAAAA,KAAa,IAAI,IAAII,WAAe;AACtCJ,YAAAA,QAAAA,GAAWN,OAAQ9wE,CAAAA,KAAAA,EAAOixE,UAAgB,UAAIz3E,IAAIsR,IAAI;SACvD;QAED,IAAIsmE,QAAAA,KAAa,IAAI,IAAIK,UAAc;YACrCthD,MAAO31B,CAAAA,IAAI,CAACu2E,gBAAiB;gBAACn4E,KAAOw4E,EAAAA,QAAAA;gBAAUzwE,GAAKnH,EAAAA,CAAAA;AAAGyD,gBAAAA,IAAAA;AAAM0N,gBAAAA,KAAAA;AAAOoP,gBAAAA,KAAAA;AAAK;AACzEq3D,YAAAA,QAAAA,GAAW,IAAI;SAChB;QACDtmE,IAAOtR,GAAAA,CAAAA,CAAAA;QACP63E,SAAYrxE,GAAAA,KAAAA,CAAAA;AACd;IAEA,IAAIoxE,QAAAA,KAAa,IAAI,EAAE;QACrBjhD,MAAO31B,CAAAA,IAAI,CAACu2E,gBAAiB;YAACn4E,KAAOw4E,EAAAA,QAAAA;AAAUzwE,YAAAA,GAAAA;AAAK1D,YAAAA,IAAAA;AAAM0N,YAAAA,KAAAA;AAAOoP,YAAAA,KAAAA;AAAK;KACvE;IAED,OAAOoW,MAAAA,CAAAA;AACT,CAAC;AAWA,CACM,SAASgnB,cAAAA,CAAe95B,IAAI,EAAEy7B,MAAM,EAAE;AAC3C,UAAM3oB,SAAS,EAAE;IACjB,MAAMqmB,QAAAA,GAAWn5B,KAAKm5B,QAAQ;AAE9B,QAAK,IAAIh9C,CAAI,MAAGA,IAAIg9C,QAASj9C,CAAAA,MAAM,EAAEC,CAAK;QACxC,MAAMk4E,GAAAA,GAAMh0B,cAAclH,QAAQ,CAACh9C,EAAE,EAAE6jB,IAAAA,CAAKpG,MAAM,EAAE6hC,MAAAA,CAAAA,CAAAA;QACpD,IAAI44B,GAAAA,CAAIn4E,MAAM,EAAE;AACd42B,YAAAA,MAAAA,CAAO31B,IAAI,CAAIk3E,GAAAA,GAAAA,CAAAA,CAAAA;SAChB;AACH;IACA,OAAOvhD,MAAAA,CAAAA;AACT,CAAC;AAKD,UAASwhD,gBAAgB16D,MAAM,EAAEtM,KAAK,EAAE1N,IAAI,EAAEmgB,QAAQ,EAAE;AACtD,QAAIxkB,KAAQ;AACZ,QAAI+H,MAAMgK,KAAQ;IAElB,IAAI1N,IAAAA,IAAQ,CAACmgB,QAAU;QAErB,MAAOxkB,KAAAA,GAAQ+R,SAAS,CAACsM,MAAM,CAACre,KAAM,EAACye,IAAI,CAAE;AAC3Cze,YAAAA,KAAAA,EAAAA,CAAAA;AACF;KACD;AAGD,UAAOA,QAAQ+R,KAASsM,IAAAA,MAAM,CAACre,KAAM,EAACye,IAAI,CAAE;AAC1Cze,QAAAA,KAAAA,EAAAA,CAAAA;AACF;IAGAA,KAAS+R,IAAAA,KAAAA,CAAAA;AAET,QAAI1N,IAAM;QAER0D,GAAO/H,IAAAA,KAAAA,CAAAA;KACR;IAED,MAAO+H,GAAAA,GAAM/H,SAASqe,MAAM,CAACtW,MAAMgK,KAAM,EAAC0M,IAAI,CAAE;AAC9C1W,QAAAA,GAAAA,EAAAA,CAAAA;AACF;IAGAA,GAAOgK,IAAAA,KAAAA,CAAAA;IAEP,OAAO;AAAC/R,QAAAA,KAAAA;AAAO+H,QAAAA,GAAAA;AAAG;AACpB;AASA,UAASixE,cAAc36D,MAAM,EAAEre,KAAK,EAAEkC,GAAG,EAAEmC,IAAI,EAAE;IAC/C,MAAM0N,KAAAA,GAAQsM,OAAO1d,MAAM;AAC3B,UAAM42B,SAAS,EAAE;AACjB,QAAI5a,IAAO3c,GAAAA,KAAAA,CAAAA;IACX,IAAIkS,IAAAA,GAAOmM,MAAM,CAACre,KAAM;IACxB,IAAI+H,GAAAA,CAAAA;AAEJ,QAAKA,MAAM/H,KAAQ,MAAG+H,GAAO7F,IAAAA,GAAAA,EAAK,EAAE6F,GAAK;AACvC,cAAM9F,GAAMoc,GAAAA,MAAM,CAACtW,GAAAA,GAAMgK,KAAM;AAC/B,YAAI9P,GAAIwc,CAAAA,IAAI,IAAIxc,GAAAA,CAAIG,IAAI,EAAE;YACxB,IAAI,CAAC8P,IAAKuM,CAAAA,IAAI,EAAE;AACdpa,gBAAAA,IAAAA,GAAO,KAAK;AACZkzB,gBAAAA,MAAAA,CAAO31B,IAAI,CAAC;AAAC5B,oBAAAA,KAAAA,EAAOA,KAAQ+R,GAAAA,KAAAA;AAAOhK,oBAAAA,GAAAA,EAAK,CAACA,GAAM,QAAKgK,KAAAA;AAAO1N,oBAAAA,IAAAA;AAAI;AAE/DrE,gBAAAA,KAAAA,GAAQ2c,IAAO1a,GAAAA,GAAAA,CAAIG,IAAI,GAAG2F,MAAM,IAAI;aACrC;SACI;YACL4U,IAAO5U,GAAAA,GAAAA,CAAAA;YACP,IAAImK,IAAAA,CAAKuM,IAAI,EAAE;gBACbze,KAAQ+H,GAAAA,GAAAA,CAAAA;aACT;SACF;QACDmK,IAAOjQ,GAAAA,GAAAA,CAAAA;AACT;IAEA,IAAI0a,IAAAA,KAAS,IAAI,EAAE;AACjB4a,QAAAA,MAAAA,CAAO31B,IAAI,CAAC;AAAC5B,YAAAA,KAAAA,EAAOA,KAAQ+R,GAAAA,KAAAA;AAAOhK,YAAAA,GAAAA,EAAK4U,IAAO5K,GAAAA,KAAAA;AAAO1N,YAAAA,IAAAA;AAAI;KAC3D;IAED,OAAOkzB,MAAAA,CAAAA;AACT;AASC,CACM,SAAS8mB,gBAAAA,CAAiB55B,IAAI,EAAEw0D,cAAc,EAAE;IACrD,MAAM56D,MAAAA,GAASoG,KAAKpG,MAAM;AAC1B,UAAMmG,QAAWC,GAAAA,IAAAA,CAAK/d,OAAO,CAAC8d,QAAQ;IACtC,MAAMzS,KAAAA,GAAQsM,OAAO1d,MAAM;AAE3B,QAAI,CAACoR,KAAO;AACV,eAAO,EAAE;KACV;AAED,UAAM1N,IAAO,IAAC,CAACogB,IAAAA,CAAKrgB,KAAK;IACzB,MAAM,EAACpE,QAAO+H,GAAAA,GAAI,GAAGgxE,eAAAA,CAAgB16D,MAAQtM,EAAAA,KAAAA,EAAO1N,IAAMmgB,EAAAA,QAAAA,CAAAA,CAAAA;IAE1D,IAAIA,QAAAA,KAAa,IAAI,EAAE;AACrB,eAAO00D,cAAcz0D,IAAM;AAAC;AAACzkB,gBAAAA,KAAAA;AAAO+H,gBAAAA,GAAAA;AAAK1D,gBAAAA,IAAAA;AAAI;AAAE,WAAEga,MAAQ46D,EAAAA,cAAAA,CAAAA,CAAAA;KAC1D;AAED,UAAM/2E,GAAM6F,GAAAA,GAAAA,GAAM/H,KAAQ+H,GAAAA,GAAAA,GAAMgK,QAAQhK,GAAG;IAC3C,MAAMoxE,YAAAA,GAAe,CAAC,CAAC10D,IAAAA,CAAKwC,SAAS,IAAIjnB,KAAAA,KAAU,CAAK+H,IAAAA,GAAAA,KAAQgK,KAAQ;AACxE,WAAOmnE,cAAcz0D,IAAMu0D,EAAAA,aAAAA,CAAc36D,QAAQre,KAAOkC,EAAAA,GAAAA,EAAKi3E,eAAe96D,MAAQ46D,EAAAA,cAAAA,CAAAA,CAAAA;AACtF,CAAC;AAQD,UAASC,cAAcz0D,IAAI,EAAEm5B,QAAQ,EAAEv/B,MAAM,EAAE46D,cAAc,EAAE;AAC7D,QAAI,CAACA,cAAkB,KAACA,eAAeh+C,UAAU,IAAI,CAAC5c,MAAQ;QAC5D,OAAOu/B,QAAAA,CAAAA;KACR;IACD,OAAOw7B,eAAAA,CAAgB30D,IAAMm5B,EAAAA,QAAAA,EAAUv/B,MAAQ46D,EAAAA,cAAAA,CAAAA,CAAAA;AACjD;AASA,UAASG,gBAAgB30D,IAAI,EAAEm5B,QAAQ,EAAEv/B,MAAM,EAAE46D,cAAc,EAAE;AAC/D,UAAMI,YAAe50D,GAAAA,IAAAA,CAAKjf,MAAM,CAACoM,UAAU;IAC3C,MAAM0nE,SAAAA,GAAYC,SAAU90D,CAAAA,IAAAA,CAAK/d,OAAO;IACxC,MAAM,EAACoe,aAAepb,EAAAA,YAAAA,GAAchD,OAAAA,EAAS,EAAC8d,QAAQ,GAAC,GAAC,GAAGC,IAAAA,CAAAA;IAC3D,MAAM1S,KAAAA,GAAQsM,OAAO1d,MAAM;AAC3B,UAAM42B,SAAS,EAAE;AACjB,QAAIiiD,SAAYF,GAAAA,SAAAA,CAAAA;AAChB,QAAIt5E,KAAQ49C,GAAAA,QAAQ,CAAC,EAAE,CAAC59C,KAAK;AAC7B,QAAIY,CAAIZ,GAAAA,KAAAA,CAAAA;IAER,SAASy5E,QAAAA,CAASxS,CAAC,EAAEplD,CAAC,EAAEhZ,CAAC,EAAE6wE,EAAE,EAAE;AAC7B,cAAMC,GAAMn1D,GAAAA,QAAAA,GAAW,CAAC,IAAI,CAAC;AAC7B,YAAIyiD,MAAMplD,CAAG;AACX;SACD;QAEDolD,CAAKl1D,IAAAA,KAAAA,CAAAA;AACL,cAAOsM,MAAM,CAAC4oD,CAAAA,GAAIl1D,KAAM,EAAC0M,IAAI,CAAE;YAC7BwoD,CAAK0S,IAAAA,GAAAA,CAAAA;AACP;AACA,cAAOt7D,MAAM,CAACwD,CAAAA,GAAI9P,KAAM,EAAC0M,IAAI,CAAE;YAC7BoD,CAAK83D,IAAAA,GAAAA,CAAAA;AACP;QACA,IAAI1S,CAAAA,GAAIl1D,KAAU8P,KAAAA,CAAAA,GAAI9P,KAAO;AAC3BwlB,YAAAA,MAAAA,CAAO31B,IAAI,CAAC;AAAC5B,gBAAAA,KAAAA,EAAOinE,CAAIl1D,GAAAA,KAAAA;AAAOhK,gBAAAA,GAAAA,EAAK8Z,CAAI9P,GAAAA,KAAAA;gBAAO1N,IAAMwE,EAAAA,CAAAA;gBAAGsY,KAAOu4D,EAAAA,EAAAA;AAAE;YACjEF,SAAYE,GAAAA,EAAAA,CAAAA;AACZ15E,YAAAA,KAAAA,GAAQ6hB,CAAI9P,GAAAA,KAAAA,CAAAA;SACb;AACH;IAEA,KAAK,MAAMiT,WAAW44B,QAAU;QAC9B59C,KAAQwkB,GAAAA,QAAAA,GAAWxkB,KAAQglB,GAAAA,OAAAA,CAAQhlB,KAAK;AACxC,YAAIkS,IAAOmM,GAAAA,MAAM,CAACre,KAAAA,GAAQ+R,KAAM;QAChC,IAAIoP,KAAAA,CAAAA;AACJ,YAAKvgB,IAAIZ,KAAQ,MAAGY,KAAKokB,OAAQjd,CAAAA,GAAG,EAAEnH,CAAK;AACzC,kBAAMi0D,EAAKx2C,GAAAA,MAAM,CAACzd,CAAAA,GAAImR,KAAM;AAC5BoP,YAAAA,KAAAA,GAAQo4D,SAAUN,CAAAA,cAAAA,CAAeh+C,UAAU,CAACnuB,cAAcusE,YAAc;gBACtEh6E,IAAM;gBACNu6E,EAAI1nE,EAAAA,IAAAA;gBACJ2yB,EAAIgwB,EAAAA,EAAAA;AACJglB,gBAAAA,WAAAA,EAAa,CAACj5E,CAAI,QAAKmR,KAAAA;AACvB+nE,gBAAAA,WAAAA,EAAal5E,CAAImR,GAAAA,KAAAA;AACjBrI,gBAAAA,YAAAA;AACF;YACA,IAAIqwE,YAAAA,CAAa54D,OAAOq4D,SAAY;AAClCC,gBAAAA,QAAAA,CAASz5E,KAAOY,EAAAA,CAAAA,GAAI,CAAGokB,EAAAA,OAAAA,CAAQ3gB,IAAI,EAAEm1E,SAAAA,CAAAA,CAAAA;aACtC;YACDtnE,IAAO2iD,GAAAA,EAAAA,CAAAA;YACP2kB,SAAYr4D,GAAAA,KAAAA,CAAAA;AACd;QACA,IAAInhB,KAAAA,GAAQY,IAAI,CAAG;AACjB64E,YAAAA,QAAAA,CAASz5E,KAAOY,EAAAA,CAAAA,GAAI,CAAGokB,EAAAA,OAAAA,CAAQ3gB,IAAI,EAAEm1E,SAAAA,CAAAA,CAAAA;SACtC;AACH;IAEA,OAAOjiD,MAAAA,CAAAA;AACT;AAEA,SAASgiD,SAAAA,CAAU7yE,OAAO,EAAE;IAC1B,OAAO;AACL4a,QAAAA,eAAAA,EAAiB5a,QAAQ4a,eAAe;AACxCm6B,QAAAA,cAAAA,EAAgB/0C,QAAQ+0C,cAAc;AACtCjZ,QAAAA,UAAAA,EAAY97B,QAAQ87B,UAAU;AAC9BE,QAAAA,gBAAAA,EAAkBh8B,QAAQg8B,gBAAgB;AAC1C8X,QAAAA,eAAAA,EAAiB9zC,QAAQ8zC,eAAe;AACxC74B,QAAAA,WAAAA,EAAajb,QAAQib,WAAW;AAChCH,QAAAA,WAAAA,EAAa9a,QAAQ8a,WAAW;AAClC;AACF;AAEA,SAASu4D,YAAa54D,CAAAA,KAAK,EAAEq4D,SAAS,EAAE;AACtC,QAAI,CAACA,SAAW;AACd,eAAO,KAAK;KACb;AACD,UAAM/kE,QAAQ,EAAE;AAChB,UAAMulE,QAAW,YAAS7zE,GAAG,EAAEiB,KAAK,EAAE;QACpC,IAAI,CAAC0jE,oBAAoB1jE,KAAQ;YAC/B,OAAOA,KAAAA,CAAAA;SACR;AACD,YAAI,CAACqN,KAAAA,CAAM2X,QAAQ,CAAChlB,KAAQ;AAC1BqN,YAAAA,KAAAA,CAAM7S,IAAI,CAACwF,KAAAA,CAAAA,CAAAA;SACZ;QACD,OAAOqN,KAAAA,CAAMsI,OAAO,CAAC3V,KAAAA,CAAAA,CAAAA;AACvB;IACA,OAAOokE,IAAAA,CAAKC,SAAS,CAACtqD,KAAAA,EAAO64D,cAAcxO,IAAKC,CAAAA,SAAS,CAAC+N,SAAWQ,EAAAA,QAAAA,CAAAA,CAAAA;AACvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3WmC;;;;;;;UCAnC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNsB;AACA","sources":["webpack://datetracker/./node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","webpack://datetracker/./src/exports.ts","webpack://datetracker/./src/scripts.ts","webpack://datetracker/./node_modules/@kurkle/color/dist/color.esm.js","webpack://datetracker/./node_modules/chart.js/src/core/core.animator.js","webpack://datetracker/./node_modules/chart.js/src/core/core.animation.js","webpack://datetracker/./node_modules/chart.js/src/core/core.animations.js","webpack://datetracker/./node_modules/chart.js/src/core/core.datasetController.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.bar.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.bubble.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.line.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.pie.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.radar.js","webpack://datetracker/./node_modules/chart.js/src/controllers/controller.scatter.js","webpack://datetracker/./node_modules/chart.js/src/core/core.adapters.ts","webpack://datetracker/./node_modules/chart.js/src/core/core.interaction.js","webpack://datetracker/./node_modules/chart.js/src/core/core.layouts.js","webpack://datetracker/./node_modules/chart.js/src/platform/platform.base.js","webpack://datetracker/./node_modules/chart.js/src/platform/platform.basic.js","webpack://datetracker/./node_modules/chart.js/src/platform/platform.dom.js","webpack://datetracker/./node_modules/chart.js/src/platform/index.js","webpack://datetracker/./node_modules/chart.js/src/core/core.element.ts","webpack://datetracker/./node_modules/chart.js/src/core/core.scale.autoskip.js","webpack://datetracker/./node_modules/chart.js/src/core/core.scale.js","webpack://datetracker/./node_modules/chart.js/src/core/core.typedRegistry.js","webpack://datetracker/./node_modules/chart.js/src/core/core.registry.js","webpack://datetracker/./node_modules/chart.js/src/core/core.plugins.js","webpack://datetracker/./node_modules/chart.js/src/core/core.config.js","webpack://datetracker/./node_modules/chart.js/src/core/core.controller.js","webpack://datetracker/./node_modules/chart.js/src/elements/element.arc.ts","webpack://datetracker/./node_modules/chart.js/src/elements/element.line.js","webpack://datetracker/./node_modules/chart.js/src/elements/element.point.ts","webpack://datetracker/./node_modules/chart.js/src/elements/element.bar.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.colors.ts","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.decimation.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.filler/index.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.legend.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.title.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.subtitle.js","webpack://datetracker/./node_modules/chart.js/src/plugins/plugin.tooltip.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.category.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.linearbase.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.linear.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.time.js","webpack://datetracker/./node_modules/chart.js/src/scales/scale.timeseries.js","webpack://datetracker/./node_modules/chart.js/src/index.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.core.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.math.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.collection.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.extras.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.easing.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.color.ts","webpack://datetracker/./node_modules/chart.js/src/core/core.animations.defaults.js","webpack://datetracker/./node_modules/chart.js/src/core/core.layouts.defaults.js","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.intl.ts","webpack://datetracker/./node_modules/chart.js/src/core/core.ticks.js","webpack://datetracker/./node_modules/chart.js/src/core/core.scale.defaults.js","webpack://datetracker/./node_modules/chart.js/src/core/core.defaults.js","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.canvas.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.options.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.config.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.curve.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.dom.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.interpolation.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.rtl.ts","webpack://datetracker/./node_modules/chart.js/src/helpers/helpers.segment.js","webpack://datetracker/./node_modules/chart.js/helpers/helpers.js","webpack://datetracker/webpack/bootstrap","webpack://datetracker/webpack/runtime/compat get default export","webpack://datetracker/webpack/runtime/define property getters","webpack://datetracker/webpack/runtime/hasOwnProperty shorthand","webpack://datetracker/webpack/runtime/make namespace object","webpack://datetracker/./src/index.ts"],"sourcesContent":["/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","import ChartLib, { ChartConfiguration, ChartItem, Chart, BarController, PieController, CategoryScale, LinearScale, BarElement, LineController, PointElement, LineElement, ArcElement, Colors, Title, Tooltip } from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nChart.register(ChartDataLabels, BarController, PieController, CategoryScale, LinearScale, BarElement, LineController, PointElement, LineElement, ArcElement, Colors, Title, Tooltip);\nChart.defaults.set('plugins.datalabels', {\n  anchor: 'end',\n  align: 'top'\n})\n\nconst tooltipDollar = (tooltipItem: any) => {\n  const item = tooltipItem.raw;\n  if (item === \"0\") return item;\n  return \"$\" + tooltipItem.raw;\n}\n\nconst MONTHS: Month[] = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst getPrevMonths = (\n  numberOfMonths: number = 12,\n  startingDate: Date = new Date()\n): [Month, Year][] => {\n  let out: [Month, Year][] = [];\n  let month: number = startingDate.getMonth();\n  let year: number = startingDate.getFullYear();\n  for (let i = 0; i < numberOfMonths; i++) {\n    out.push([MONTHS[month], year]);\n    month--;\n    if (month < 0) {\n      month = 11;\n      year--;\n    }\n  }\n  return out.reverse();\n};\n\nconst renderChart = async function (\n  el: HTMLElement,\n  cfg: ChartConfiguration\n): Promise<Chart<any>> {\n  return new Chart(el as ChartItem, cfg);\n};\n\nString.prototype.capitalize = function (): string {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nconst getDates = async (user: string = ''): Promise<Object[]> => {\n  const dates = await fetch(`/api/dates/${user}`);\n  const jsonDates = await dates.json();\n  return jsonDates;\n};\n\nconst aggDatesByMonth = (\n  dates: DateData[],\n  months: [Month, Year][]\n): number[] => {\n  const buckets: number[] = Array(months.length).fill(0);\n  for (let i = 0; i < months.length; i++) {\n    const [month, year] = months[i];\n    buckets[i] = dates.filter((dateData) => {\n      const occurrence: Date = new Date(dateData.date);\n      return (\n        occurrence.getFullYear() == year &&\n        occurrence.getMonth() == MONTHS.indexOf(month)\n      );\n    }).length;\n  }\n  return buckets;\n};\n\nconst aggCostByMonth = (\n  dates: DateData[],\n  months: [Month, Year][]\n): number[] => {\n  const buckets: number[] = Array(months.length).fill(0);\n  for (let i = 0; i < months.length; i++) {\n    const [month, year] = months[i];\n    buckets[i] = dates\n      .filter((dateData) => {\n        const occurrence: Date = new Date(dateData.date);\n        return (\n          occurrence.getFullYear() == year &&\n          occurrence.getMonth() == MONTHS.indexOf(month)\n        );\n      })\n      .reduce((acc, currentValue) => {\n        return acc + (currentValue.cost || 0);\n      }, 0);\n  }\n  return buckets;\n};\n\nconst avgCostPerDateByMonth = (\n  dates: DateData[],\n  months: [Month, Year][]\n): number[] => {\n  const buckets: number[] = Array(months.length).fill(0);\n  for (let i = 0; i < months.length; i++) {\n    const [month, year] = months[i];\n    const datesInMonth = dates.filter((dateData) => {\n      const occurrence: Date = new Date(dateData.date);\n      return (\n        occurrence.getFullYear() == year &&\n        occurrence.getMonth() == MONTHS.indexOf(month)\n      );\n    });\n    const costInMonth = datesInMonth.reduce((acc, currentValue) => {\n      return acc + (currentValue.cost || 0);\n    }, 0);\n    if (datesInMonth.length == 0) continue;\n    buckets[i] = parseFloat((costInMonth / datesInMonth.length).toFixed(2));\n  }\n  return buckets;\n};\n\nconst formatDollar = (value: number) => {\n  if (value === 0) return value;\n  return \"$\" + value.toFixed(2);\n};\n\nconst getSplitData = (dates: DateData[]): number[] => {\n  let numberSplit = dates.filter(date => date.split).length;\n  let numberNoSplit = dates.filter(date => !date.split).length;\n  // Label this [Split, NoSplit]\n  return [numberSplit, numberNoSplit];\n};\n\nwindow._dt = {\n  renderChart,\n  getDates,\n  getPrevMonths,\n  aggDatesByMonth,\n  aggCostByMonth,\n  avgCostPerDateByMonth,\n  formatDollar,\n  tooltipDollar,\n  getSplitData,\n};\n","document.addEventListener(\"DOMContentLoaded\", function () {\n  const tokenInput: HTMLInputElement | null = document.getElementById(\n    \"ethnicity-input\"\n  ) as HTMLInputElement;\n  const tokenList: HTMLElement = document.getElementById(\n    \"ethnicity-list\"\n  ) as HTMLElement;\n  const tokenField: HTMLInputElement | null = document.getElementById(\n    \"ethnicities\"\n  ) as HTMLInputElement;\n\n  if (tokenInput) {\n    tokenInput.addEventListener(\"keydown\", function (event) {\n      if (event.key === \"Enter\") {\n        event.preventDefault();\n        const tokenValue = tokenInput.value.trim().capitalize();\n        if (tokenField) {\n          tokenField.value += tokenValue + \",\";\n        }\n        if (tokenValue) {\n          const token = document.createElement(\"div\");\n          token.classList.add(\"token\");\n          const tokenLabel = document.createElement(\"div\");\n          tokenLabel.textContent = tokenValue;\n          tokenLabel.classList.add(\"token-label\");\n          token.appendChild(tokenLabel);\n          const closeToken = document.createElement(\"div\");\n          closeToken.innerHTML = `<i class='bx bx-x-circle align-middle'></i>`;\n          token.appendChild(closeToken);\n          closeToken.classList.add(\"token-close\");\n          tokenList.appendChild(token);\n          tokenInput.value = \"\";\n          closeToken.addEventListener(\"click\", function () {\n            tokenList.removeChild(token);\n          });\n        }\n      }\n    });\n  }\n});","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","export * from '../dist/helpers.js';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './exports.ts';\nimport './scripts.ts';"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","niceFraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","check","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","JSON","stringify","Intl","NumberFormat","num","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","applyScaleDefaults","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveWithContext","_allKeys","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","splineCurveMonotone","slopeDelta","capControlPoint","inArea","inAreaPrev","inAreaNext","controlPoints","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","borderBox","paddings","borders","getContainerSize","clientHeight","containerStyle","containerBorder","containerPadding","round1","bbWidth","bbHeight","containerSize","maintainHeight","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","startBound","endBound","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","sub","findStartAndEnd","solidSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","replacer"],"sourceRoot":""}